---
################### Get workshop nodes info ###################

- name: grab facts for Gitlab
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_gitlab": "{{ec2_name_prefix}}-gitlab"
  register: gitlab_node_facts

################### Create inventories ###################

- name: GitLab | Add new instance to host group
  add_host:
    hostname: 'gitlab'
    short_name: "{{ item.tags.short_name }}"
    username: "{{ item.tags.username }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem"
    ansible_host: "{{ item.public_ip_address }}"
    private_ip: "{{ item.private_ip_address }}"
    groups:
      - rhel
      - gitlab
  with_items: "{{ gitlab_node_facts.instances }}"

- name: Ensure group automation_hub is removed
  group:
    name: automation_hub
    state: absent

- name: grab facts for hub host
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_automation-hub": "{{ec2_name_prefix}}-automation-hub"
  register: generic_hub_host_facts

- name: grab facts for hub host
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_automation-hub": "{{ec2_name_prefix}}-automationhub"
  register: automation_hub_host_facts

- name: destroy EC2 instances for generic hub node
  amazon.aws.ec2_instance:
    region: "{{ ec2_region }}"
    state: absent
    instance_ids: "{{ generic_hub_host_facts.instances | map(attribute='instance_id') | list }}"
    wait: true
    wait_timeout: "{{ student_total * 300 | int}}"
  register: result_ec2_destroy

- name: Add automation hub instance to host group
  add_host:
    hostname: "{{ item.tags.Name }}"
    student: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    username: "{{ student_user }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem"
    ansible_host: "{{ item.public_ip_address }}"
    private_ip: "{{ item.private_ip_address }}"
    groups: automation_hub
  with_items: "{{ automation_hub_host_facts.instances }}"

- name: debug facts for hub
  debug:
    msg: "{{ automation_hub_host_facts }}"
