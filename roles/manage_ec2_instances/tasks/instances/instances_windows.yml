---
- name: WINDOWS | GitLab | Launch Instance
  amazon.aws.ec2_instance:
    key_name: "{{ ec2_name_prefix }}-key"
    security_group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_info['skylight_rhel8_gitlab']['size'] }}"
    image_id: "{{ win_gitlab_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: 1
    state: running
    network:
      assign_public_ip: true
    filters:
      instance-state-name: running
      "tag:Workshop_gitlab": "{{ ec2_name_prefix }}-gitlab"
    tags:
      Workshop_gitlab: "{{ ec2_name_prefix }}-gitlab"
      Name: "{{ ec2_name_prefix }}-gitlab"
      App: AnsibleWorkshop
      Workshop: "{{ ec2_name_prefix }}"
      uuid: "{{ ec2_name_prefix }}"
      guid: "{{ ec2_name_prefix }}"
      Workshop_type: "{{ workshop_type }}"
      AWS_USERNAME: "{{ aws_user }}"
      owner: "{{ aws_user }}"
      Info: "Username that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{ student_total }}"
      short_name: 'gitlab'
      long_name: "gitlab.{{ ec2_name_prefix }}.{{ workshop_dns_zone | default('') }}"
      username: "{{ ec2_info['skylight_rhel8_gitlab']['username'] }}"
      ansible-workshops: "true"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_type: "{{ ec2_info['skylight_rhel8_gitlab'].disk_volume_type }}"
          volume_size: "{{ ec2_info['skylight_rhel8_gitlab'].disk_space }}"
          iops: "{{ ec2_info['skylight_rhel8_gitlab'].disk_iops }}"
          throughput: "{{ ec2_info['skylight_rhel8_gitlab'].disk_throughput }}"
          delete_on_termination: true
    user_data: "{{ lookup('template', 'skylight_gitlab_userdata.j2') }}"
  register: gitlab_output

- debug:
    msg: "{{ gitlab_output }}"

- name: WINDOWS | Create instance 1
  amazon.aws.ec2_instance:
    key_name: "{{ ec2_name_prefix }}-key"
    security_group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_info['skylight_windows_instance']['size'] }}"
    image_id: "{{ win_instance_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    state: running
    network:
      assign_public_ip: true
    filters:
      instance-state-name: running
      "tag:Workshop_instance1": "{{ ec2_name_prefix }}-instance1"
    tags:
      Workshop_instance1: "{{ ec2_name_prefix }}-instance1"
      App: AnsibleWorkshop
      Workshop: "{{ ec2_name_prefix }}"
      uuid: "{{ ec2_name_prefix }}"
      guid: "{{ ec2_name_prefix }}"
      Workshop_type: "{{ workshop_type }}"
      AWS_USERNAME: "{{ aws_user }}"
      owner: "{{ aws_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{ student_total }}"
      short_name: "instance1"
      ansible-workshops: "true"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_type: "{{ ec2_info['skylight_windows_instance'].disk_volume_type }}"
          volume_size: "{{ ec2_info['skylight_windows_instance'].disk_space }}"
          iops: "{{ ec2_info['skylight_windows_instance'].disk_iops }}"
          throughput: "{{ ec2_info['skylight_windows_instance'].disk_throughput }}"
          delete_on_termination: true
    user_data: "{{ lookup('template', 'skylight_windows_userdata.j2', template_vars=dict(vm_name='instance1')) }}"
  register: instance1_output

- name: WINDOWS | Create instance 2
  amazon.aws.ec2_instance:
    key_name: "{{ ec2_name_prefix }}-key"
    security_group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_info['skylight_windows_instance']['size'] }}"
    image_id: "{{ win_instance_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    state: running
    network:
      assign_public_ip: true
    filters:
      instance-state-name: running
      "tag:Workshop_instance2": "{{ ec2_name_prefix }}-instance2"
    tags:
      Workshop_instance2: "{{ ec2_name_prefix }}-instance2"
      App: AnsibleWorkshop
      Workshop: "{{ ec2_name_prefix }}"
      uuid: "{{ ec2_name_prefix }}"
      guid: "{{ ec2_name_prefix }}"
      Workshop_type: "{{ workshop_type }}"
      AWS_USERNAME: "{{ aws_user }}"
      owner: "{{ aws_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{ student_total }}"
      short_name: "instance2"
      ansible-workshops: "true"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_type: "{{ ec2_info['skylight_windows_instance'].disk_volume_type }}"
          volume_size: "{{ ec2_info['skylight_windows_instance'].disk_space }}"
          iops: "{{ ec2_info['skylight_windows_instance'].disk_iops }}"
          throughput: "{{ ec2_info['skylight_windows_instance'].disk_throughput }}"
          delete_on_termination: true
    user_data: "{{ lookup('template', 'skylight_windows_userdata.j2', template_vars=dict(vm_name='instance2')) }}"
  register: instance2_output
  when: doubleup|bool

### tag student workbench
- name: instance1 info gathering
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_instance1": "{{ ec2_name_prefix }}-instance1"
  register: instance1_info

- name: WINDOWS | Ensure tags are present for instance 1
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item.1.instance_id }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item.0 + 1 }}-instance1"
      Index: "{{ item[0] }}"
      Student: "student{{ item.0 + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
  with_indexed_items:
    - "{{ instance1_info.instances }}"
  when: instance1_info.instances|length > 0

- name: instance2 info gathering
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_instance2": "{{ ec2_name_prefix }}-instance2"
  register: instance2_info

- name: WINDOWS | Ensure tags are present for instance 2
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item.1.instance_id }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item.0 + 1 }}-instance2"
      Index: "{{ item[0] }}"
      Student: "student{{ item.0 + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
  with_indexed_items:
    - "{{ instance2_info.instances }}"
  when:
    - doubleup|bool
    - instance2_info.instance_ids is not none
