---
- name: grab instance ids for splunk
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_splunk": "{{ ec2_name_prefix }}-splunk"
  register: splunk_instances
  when:
    - (security_console == 'splunk')

- name: Ensure tags are present for splunk
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item[1]['instance_id'] }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item[0] + 1 }}-splunk"
      Index: "{{ item[0] }}"
      Student: "student{{ item[0] + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
      ansible-workshops: "true"
  with_indexed_items:
    - "{{ splunk_instances.instances }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ensure_tags_splunk_async
  when:
    - (security_console == 'splunk') and (splunk_instances.instances|length > 0)

- name: grab instance ids for qradar
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_qradar": "{{ ec2_name_prefix }}-qradar"
  register: qradar_instances
  when:
    - (security_console == 'qradar')

- name: Ensure tags are present for qradar
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item.1.instance_id }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item.0 + 1 }}-qradar"
      Index: "{{ item[0] }}"
      Student: "student{{ item.0 + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
      ansible-workshops: "true"
  with_indexed_items:
    - "{{ qradar_instances.instances }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ensure_tags_qradar_async
  when:
    - (security_console == 'qradar') and (qradar_instances.instances|length > 0)

- set_fact:
    ensure_tags_siem_async: "{{ ensure_tags_splunk_async }}"
  when: security_console == 'splunk'
- set_fact:
    ensure_tags_siem_async: "{{ ensure_tags_qradar_async }}"
  when: security_console == 'qradar'

- name: grab instance ids for snort
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_snort": "{{ ec2_name_prefix }}-snort"
  register: snort_instances

- name: Ensure tags are present for snort
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item[1]['instance_id'] }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item[0] + 1 }}-snort"
      Index: "{{ item[0] }}"
      Student: "student{{ item[0] + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
      ansible-workshops: "true"
  with_indexed_items:
    - "{{ snort_instances.instances }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ensure_tags_snort_async
  when: snort_instances.instances|length > 0

- name: grab instance ids for attack simulation node
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_attacker": "{{ ec2_name_prefix }}-attacker"
  register: attacker_instances

- name: Ensure tags are present for attack simulation node
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item[1]['instance_id'] }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item[0] + 1 }}-attacker"
      Index: "{{ item[0] }}"
      Student: "student{{ item[0] + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
      ansible-workshops: "true"
  with_indexed_items:
    - "{{ attacker_instances.instances }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ensure_tags_attacker_async
  when: attacker_instances.instances|length > 0

############## Check Point CloudGuard IaaS Security Management ##############
- name: grab instance ids for checkpoint
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_checkpoint_mgmt": "{{ ec2_name_prefix }}-checkpoint"
  register: checkpoint_mgmt_instances

- name: Ensure tags are present for Check Point CloudGuard Security Management node (SECURITY MODE)
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item[1]['instance_id'] }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item[0] + 1 }}-checkpoint_mgmt"
      Index: "{{ item[0] }}"
      Student: "student{{ item[0] + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
      ansible-workshops: "true"
  with_indexed_items:
    - "{{ checkpoint_mgmt_instances.instances }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ensure_tags_checkpoint_mgmt_async
  when: checkpoint_mgmt_instances.instances|length > 0

############## Windows Workstation ##############
- name: grab instance ids for windows
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_windows": "{{ ec2_name_prefix }}-windows"
  register: windows_ws_instances

- name: Ensure tags are present for Windows Workstation (SECURITY MODE)
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item[1]['instance_id'] }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item[0] + 1 }}-windows_ws"
      Index: "{{ item[0] }}"
      Student: "student{{ item[0] + 1 }}"
      launch_time: "{{ item.1.launch_time }}"
      ansible-workshops: "true"
  with_indexed_items:
    - "{{ windows_ws_instances.instances }}"
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: ensure_tags_windows_async
  when: windows_ws_instances.instances|length > 0

# - name: debug this for sean
#   debug:
#     var: ensure_tags_siem_async

# - name: Wait for async tag instance creation to complete
#   async_status:
#     jid: "{{ item['ansible_job_id'] }}"
#   register: wait_for_ec2_tag_creation
#   when: "'ansible_job_id' in item"
#   until: wait_for_ec2_tag_creation.finished
#   retries: "{{ [async_wait_for_retries | int, 60] | max }}"
#   loop:
#     - "{{ ensure_tags_siem_async }}"
#     - "{{ ensure_tags_snort_async }}"
#     - "{{ ensure_tags_attacker_async }}"
#     - "{{ ensure_tags_checkpoint_mgmt_async }}"
#     - "{{ ensure_tags_windows_async }}"

# old async change... not sure why this is so complicated? - seanc
# - name: debug this for sean2
#   debug:
#     msg: "{{ ('results' in ensure_tags_siem_async) | ternary(ensure_tags_siem_async['results'], []) }}"
#
# - name: print out a loop
#   debug:
#     var: item
#   loop:
#     - "{{ ('results' in ensure_tags_siem_async) | ternary(ensure_tags_siem_async['results'], []) }}"
#
# - name: print out a loop2
#   debug:
#     var: item.ansible_job_id
#   loop:
#     - "{{ ('results' in ensure_tags_siem_async) | ternary(ensure_tags_siem_async['results'], []) }}"

# - name: print out a simple sean
#   debug:
#     var: item.results[0].ansible_job_id
#   loop:
#     - "{{ ensure_tags_siem_async }}"
#     - "{{ ensure_tags_snort_async }}"
#     - "{{ ensure_tags_attacker_async }}"
#     - "{{ ensure_tags_checkpoint_mgmt_async }}"
#     - "{{ ensure_tags_windows_async }}"

# new method by sean cavanaugh
- name: Wait for async tag instance creation to complete
  async_status:
    jid: "{{ item.results[0].ansible_job_id }}"
  register: wait_for_ec2_tag_creation
  when: "item.results[0].ansible_job_id is defined"
  until: wait_for_ec2_tag_creation.finished
  retries: "{{ [async_wait_for_retries | int, 60] | max }}"
  loop:
    - "{{ ensure_tags_siem_async }}"
    - "{{ ensure_tags_snort_async }}"
    - "{{ ensure_tags_attacker_async }}"
    - "{{ ensure_tags_checkpoint_mgmt_async }}"
    - "{{ ensure_tags_windows_async }}"


# This is old method from Adam Miller
# - name: Wait for async tag creation to complete (instance creation)
#   async_status:
#     jid: "{{ item['ansible_job_id'] }}"
#   register: wait_for_ec2_tag_creation
#   until: wait_for_ec2_tag_creation.finished
#   retries: "{{ async_wait_for_retries }}"
#   when: "item['ansible_job_id'] is defined"
#   loop:
#     - "{{ ('results' in ensure_tags_siem_async) | ternary(ensure_tags_siem_async['results'], []) }}"
#     - "{{ ('results' in ensure_tags_snort_async) | ternary(ensure_tags_snort_async['results'], []) }}"
#     - "{{ ('results' in ensure_tags_attacker_async) | ternary(ensure_tags_attacker_async['results'], []) }}"
#     - "{{ ('results' in ensure_tags_checkpoint_mgmt_async) | ternary(ensure_tags_checkpoint_mgmt_async['results'], []) }}"
#     - "{{ ('results' in ensure_tags_windows_async) | ternary(ensure_tags_windows_async['results'], []) }}"
