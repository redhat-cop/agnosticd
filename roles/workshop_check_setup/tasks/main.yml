---
- name: make sure we are running correct Ansible Version
  assert:
    that:
      - ansible_version.major >= 2
      - ansible_version.minor >= 11

- name: make sure workshop_type is set to a correct value
  assert:
    that:
      - workshop_type is defined
      - workshop_type in valid_workshop_types
    msg: "workshop_type must be defined and be one of: {{ valid_workshop_types }}"

- name: make sure dns_type is set to a correct value
  assert:
    that:
      - dns_type is defined
      - dns_type in valid_dns_type
    msg: "dns_type must be defined and be one of: {{ valid_dns_type }}"

- name: make sure network_type is set to a correct value
  assert:
    that:
      - network_type is defined
      - network_type in valid_network_types
    msg: "network_type must be defined and be one of: {{ valid_network_types }}"
  when: workshop_type == "networking"

- name: make sure DNS name is 65 characters or less
  vars:
    test_name: "studentXXX-code.{{ ec2_name_prefix|lower }}.{{ workshop_dns_zone }}"
  assert:
    that:
      - "{{ test_name|length }} <= 65"
    msg: "you must make sure your DNS name is shorter"

- name: make sure security_console is set to a correct value
  assert:
    that:
      - security_console is defined
      - security_console in valid_security_console_types
    msg: "network_type must be defined and be one of: {{ valid_security_console_types }}"
  when: workshop_type == "security"

- name: make sure we are not running with TESTWORKSHOP as the name so no overlap
  assert:
    that:
      - ec2_name_prefix != "TESTWORKSHOP"
    msg:
      - "ec2_name_prefix cannot be set to TESTWORKSHOP"
      - "please set a unique name for your workshop"

- name: make sure we are not using `ansible` as the password
  assert:
    that:
      - admin_password != "ansible"
    msg:
      - "admin_password cannot be set to ansible"
      - "please set a unique password for your workshop"

- name: automation controller checks
  include_tasks: "controller.yml"
  when:
    - controllerinstall

- name: check workshop specific information
  include_tasks: "{{item}}"
  with_first_found:
    - "{{ role_path }}/tasks/{{ workshop_type }}.yml"
    - "{{ role_path }}/tasks/unsupported_workshop.yml"
