# vim: set ft=ansible:
---
- name: remove satellite Cert
  yum: pkg=katello-ca-consumer-*.noarch state=absent

- name: Install Cert
  command: "/usr/bin/yum -y localinstall http://{{satellite_url}}/pub/katello-ca-consumer-latest.noarch.rpm"

# - name: force hostname on satellite
#   shell: 'echo "{\"network.hostname-override\":\"`hostname`\"}" > /etc/rhsm/facts/katello.facts'

- name: Register with activationkey
  redhat_subscription:
    state: present
    activationkey: "{{satellite_activationkey}}"
    org_id: "{{satellite_org}}"

- name: Enable Repositories
  command: subscription-manager repos --enable=rhel-7-server-satellite-tools-6.2-rpms

- name: Install Katello Agent
  yum: pkg=katello-agent state=latest
- name: Enable Katello Agent
  service: name=goferd enabled=yes
- name: Start Katello Agent
  service: name=goferd state=started

- name: enable repos for rhel
  command: subscription-manager repos --enable "{{ item }}"
  with_items:
    - '{{ rhel_repos }}'

# - name: Install Puppet
#   yum: pkg=puppet state=latest
#   when: registered is success
#   register: puppet_installed
#   notify:
#   - Enable Puppet
# - name: Configure Puppet Agent Server
#   command: "/usr/bin/puppet config set server sat.example.com --section agent"
#   when: puppet_installed is success
# - name: Configure Puppet Agent Client Name
#   command: "/usr/bin/puppet config --section main set certname {{ inventory_hostname }}"
#   when: puppet_installed is success
# - name: Configure Puppet Agent Environment
#   command: "/usr/bin/puppet config --section agent set environment KT_Default_Organization_Library_RHEL6_2"
#   when: puppet_installed is success
# - name: Run Puppet Test
#   command: "/usr/bin/puppet agent --test --noop --onetime --waitforcert 60"
#   when: puppet_installed is success
# - name: Apply Puppet
#   command: "/usr/bin/puppet agent -t --server sat.example.com"
#   when: puppet_installed is success
#   ignore_errors: yes
# - name: Enable Puppet
#   service: name=puppet enabled=yes
# - name: Start Puppet
#   service: name=puppet state=started
# - name: Update all packages
#   command: "/usr/bin/yum -y update"
