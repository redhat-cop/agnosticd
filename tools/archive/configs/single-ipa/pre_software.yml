- name: Step 000 Pre Software
  hosts: localhost
  connection: local
  become: False
  vars_files:
    - "./env_vars.yml"
    - "./env_secret_vars.yml"
  tags:
    - step003
    - pre_software
  tasks:
    - debug:
        msg: "Step 003 Pre Software - Dummy action"

    - set_fact:
        DNS_action: "CREATE"

    - name: create file for internal dns names
      template:
        src: "./files/{{cloud_provider}}_internal_dns.json.j2"
        dest: "{{ ANSIBLE_REPO_PATH | default('.') }}/workdir/internal_dns-{{ env_type }}-{{ guid }}.json"
      tags:
        - internal_dns_creation


    - set_fact:
        DNS_action: "DELETE"

    - name: create Delete file for internal dns names
      template:
        src: "./files/{{cloud_provider}}_internal_dns.json.j2"
        dest: "{{ ANSIBLE_REPO_PATH | default('.') }}/workdir/internal_dns-{{ env_type }}-{{ guid }}_DELETE.json"
      tags:
        - internal_dns_creation


    - name: get internal dns zone id if not provided
      environment:
        AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
        AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
        AWS_DEFAULT_REGION: "{{aws_region_final|d(aws_region)}}"
      shell: "aws route53 list-hosted-zones-by-name --region={{aws_region_final|d(aws_region)}} --dns-name={{guid}}.internal. --output text --query='HostedZones[*].Id' | awk -F'/' '{print $3}'"

      register: internal_zone_id_register

    - debug:
        var: internal_zone_id_register
    - name: Store internal route53 ID
      set_fact:
        internal_zone_id: "{{ internal_zone_id_register.stdout }}"
      when: 'internal_zone_id_register is defined'
    - name: create internal dns names
      environment:
        AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
        AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
        AWS_DEFAULT_REGION: "{{aws_region_final|d(aws_region)}}"
      shell: "aws route53 change-resource-record-sets --hosted-zone-id {{internal_zone_id}}  --change-batch file://{{ ANSIBLE_REPO_PATH | default('.') }}/workdir/internal_dns-{{ env_type }}-{{ guid }}.json --region={{aws_region_final|d(aws_region)}}"
      ignore_errors: true
      tags:
        - internal_dns_creation
      when: internal_zone_id is defined


- name: Install IPA role on server
  hosts: ipas
  gather_facts: False
  become: yes
  vars_files:
    - "{{ ANSIBLE_REPO_PATH | default('.') }}/configs/{{ env_type }}/env_vars.yml"
  run_once: true
  roles:
    - { role: "ipa-server", configure_firewalld: "false" }
  tags:
    - ipa_server_tasks
    - install_ipa
