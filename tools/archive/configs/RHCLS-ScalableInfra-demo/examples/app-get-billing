#!/usr/bin/env python
# A Ravello SDK example showing list of all applications and their cost in a specific month/year   
#
# Copyright 2011-2016 Ravello Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.

import ravello_sdk
import sys
import os
import datetime
import json
import datetime
from argparse import ArgumentParser
from common import *

def mkparser():
        parser = ArgumentParser()
        parser.add_argument("-m", dest="month",default=None,type=int,choices = range(1,13), help='month of billing')
        parser.add_argument("-y", dest="year",default=None,type=int,help='year of billing')
        parser.add_argument("-u", dest="username",default=None,help='Ravello user account name')
        return parser

def set_billing_period(args):

	month = args.month
	year = args.year
	now = datetime.datetime.now()

	if not month:
		month = now.month
 
	if not year:
		year = now.year

	return month, year

def print_billing_info(bi):
	for app in bi[1:]:
		price = 0
		for charge in app['charges']:
			price += charge['summaryPrice']

		print('Application name: {0:<50} Owner: {1:<25} Price: {2:8.2f}'.format(app['appName'].encode('utf-8'),app['owner'],price))
		
def main():
	parser = mkparser()
	args = parser.parse_args()

        #Set user credentials
	username, password  = get_user_credentials(args.username)
	if not username or not password:
		exit(1)

	#Connect to Ravello
	client = connect(username, password)
	if not client:
		exit (1)

	month,year = set_billing_period(args)

	#Get List of applications with billing info
	bi = client.get_billing_for_month(year,month)

		
	#Display billing info
	print_billing_info(bi)

if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        sys.stderr.write('Error: {!s}\n'.format(e))
