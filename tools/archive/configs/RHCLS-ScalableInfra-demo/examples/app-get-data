#!/usr/bin/env python
# A Ravello SDK example for getting application data
#
# Copyright 2011-2016 Ravello Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.

import ravello_sdk
import sys
import os
import json
from argparse import ArgumentParser
from common import *

def mkparser():
	parser = ArgumentParser()
	parser.add_argument("-i", dest="id",default=0,type=int,help='application ID')
	parser.add_argument("-a", dest="all",action="store_true", default=False,help='get extended application data')
	parser.add_argument("-o", dest="out_file",default=None,help='output file')
	parser.add_argument("-u", dest="username",default=None,help='Ravello user account name')
	parser.add_argument("name",nargs='?',default=None,help='application name')
	return parser

def validate_param(args):
        if args.id == 0 and not args.name: # Neither app ID nor app name are provided
                print("Error: Invalid parameters, either application name or ID must be provided")
                return False
        return True

def get_app_data(args,client):
	app_id = args.id
	app_name = args.name
	appx = None
	if app_id == 0: 		# If app ID is unknown look for the app name
		for app in client.get_applications():
			if app['name'].lower() == app_name.decode('utf-8').lower():
				appx = app
				break
	else: 
		for app in client.get_applications():
			if app['id'] == app_id:
				appx = app
				break
	return appx

def get_app_data_ex(app_id,client):
	app = None
	if app_id != 0:
		app = client.get_application(app_id, aspect="design")

	return app	

def print_app(app):
	if(app):
        	print ("name: ",app['name'])
        	print ("id: ",app['id'])
        	print ("owner: ",app['owner'])
        	print ("publishOptimization: ",app['deployment']['publishOptimization'])
        	print ("cloud: ",app['deployment']['cloud'])
        	print ("regionName: ",app['deployment']['regionName'])
        	print ("totalActiveVms: ",app['deployment']['totalActiveVms'])
        	print ("totalStoppedVms: ",app['deployment']['totalStoppedVms'])
        	print ("totalErrorVms: ",app['deployment']['totalErrorVms'])

def print_app_ex(app,out_file):
	if app:
		print (json.dumps(app, indent=5))
		if out_file:
			with open(out_file,'w') as f:
				f.write(json.dumps(app,indent=5))
#				json.dump(app,f)

def main():
	parser = mkparser()
	args = parser.parse_args()

	if not validate_param(args):
		parser.print_help()
		exit(1)


	#Get user credentials
	username, password  = get_user_credentials(args.username)
	if not username or not password:
		exit(1)

	#Connect to Ravello
	client = connect(username, password)
	if not client:
		exit (1)

	app = get_app_data(args,client)

	if args.all and app:  # Get all application data 
 
		appx = get_app_data_ex(app['id'],client)
		print_app_ex(appx,args.out_file)

	else:		      # Print application summary
		print_app(app)


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        sys.stderr.write('Error: {!s}\n'.format(e))
