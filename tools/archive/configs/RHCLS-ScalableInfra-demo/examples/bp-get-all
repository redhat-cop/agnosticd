#!/usr/bin/env python
# A Ravello SDK example showing all applications in a user account in format: 
# Application name, ID, Creation Time, Owner, If published, Cloud/Region
#
# Copyright 2011-2016 Ravello Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.

import ravello_sdk
import sys
import os
import datetime
import json
from argparse import ArgumentParser
from ravello_sdk import *
from common import *

def mkparser():
        parser = ArgumentParser()
        parser.add_argument("-u", dest="username",default=None,help='Ravello user account name')
        return parser

def print_apps(apps):
	for app in apps:
		creation_time = datetime.datetime.fromtimestamp(app['creationTime']/1000).strftime('%Y-%m-%d %H:%M')
		if app['published']:
			print('Application name: {0:<50} ID: {1:<10} Creation Date: {2:<20} Owner: {3:<25} Published: yes    Cloud: {4:<10}'.format(app['name'].encode('utf-8'),app['id'],creation_time,app['ownerDetails']['name'],app['deployment']['cloudId']))
		else:
			print('Application name: {0:<50} ID: {1:<10} Creation Date: {2:<20} Owner: {3:<25} Published: no'.format(app['name'].encode('utf-8'),app['id'],creation_time,app['ownerDetails']['name'],app['published']))
		
		
def main():
	parser = mkparser()
	args = parser.parse_args()

        #Set user credentials
	username, password  = get_user_credentials(args.username)
	if not username or not password:
		exit(1)

	#Connect to Ravello
	client = connect(username, password)
	if not client:
		exit (1)

	#Get List of application
	apps = client.get_blueprints()

	#Display application info
	print_apps(apps)

if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        sys.stderr.write('Error: {!s}\n'.format(e))
