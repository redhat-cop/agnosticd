#!/usr/bin/env python
# A Ravello SDK example for getting application VM data
#
# Copyright 2011-2016 Ravello Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.

import ravello_sdk
import sys
import os
import json
from argparse import ArgumentParser
from common import *

def mkparser():
	parser = ArgumentParser()
	parser.add_argument("-i", dest="app_id",default=0,type=int,help='application ID')
	parser.add_argument("-o", dest="out_file",default=None,help='output file')
	parser.add_argument("-u", dest="username",default=None,help='Ravello user account name')
	parser.add_argument("app_name",nargs='?',default=None,help='application name')
	return parser

def validate_param(args):
        if args.app_id == 0 and not args.app_name: # Neither app ID nor app name are provided
                print("Error: Invalid parameters, either application name or ID must be provided")
                return False
        return True

def get_vms(app_id, client):
	vms = client.get_vms(app_id,level='deployment')
	return vms

def print_vms(vms,out_file):
	if vms:
		for vm in vms:
			print('Name: {0:<40} ID: {1:<20} State: {2}'.format(vm['name'].encode('utf-8'),vm['id'], vm['state']))

#		print (json.dumps(vms, indent=5))

		if out_file:
			with open(out_file,'w') as f:
				for vm in vms:
					f.write(json.dumps(vms,indent=5))

def main():
	parser = mkparser()
	args = parser.parse_args()

	if not validate_param(args):
		parser.print_help()
		exit(1)


	#Get user credentials
	username, password  = get_user_credentials(args.username)
	if not username or not password:
		exit(1)

	#Connect to Ravello
	client = connect(username, password)
	if not client:
		exit (1)

	app_id = args.app_id

	if app_id == 0:
		app_id = get_app_id(args.app_name,client)

	if app_id:
		vms = get_vms(app_id,client)
		print_vms(vms,args.out_file)


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        sys.stderr.write('Error: {!s}\n'.format(e))
