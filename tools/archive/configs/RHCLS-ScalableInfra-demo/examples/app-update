#!/usr/bin/env python
# A Ravello SDK example for updating an application from a JSON file
#
# Copyright 2011-2016 Ravello Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.

import ravello_sdk
import sys
import os
import json
from argparse import ArgumentParser
from common import *

def mkparser():
	parser = ArgumentParser()
	parser.add_argument("-f", dest="inp_file",help='input file the application is created from')
	parser.add_argument("-p", dest="publish_updates",default=False,action="store_true", help='publish updates')
	parser.add_argument("-u", dest="username",default=None,help='Ravello user account name')
	return parser

def validate_param(args):
	if not args.inp_file: # input file with the application json file must be provided
		print("Error: input file must be provided")
		return False
	return True

def print_app(app):
	if(app):
        	print ("name: ",app['name'])
        	print ("id: ",app['id'])
        	print ("owner: ",app['owner'])
        	print ("publishOptimization: ",app['deployment']['publishOptimization'])
        	print ("cloud: ",app['deployment']['cloud'])
        	print ("regionName: ",app['deployment']['regionName'])
        	print ("totalActiveVms: ",app['deployment']['totalActiveVms'])
#        	print ("totalStoppedVms: ",app['deployment']['totalStoppedVms'])
        	print ("totalErrorVms: ",app['deployment']['totalErrorVms'])

def print_app_ex(app,out_file):
	if app:
		print (json.dumps(app, indent=5))
		if out_file:
			with open(out_file,'w') as f:
				f.write(json.dumps(app,indent=5))

def main():
	parser = mkparser()
	args = parser.parse_args()

	if not validate_param(args):
		parser.print_help()
		exit(1)

        #Get user credentials
	username, password  = get_user_credentials(args.username)
	if not username or not password:
		exit(1)

	#Connect to Ravello
	client = connect(username, password)
	if not client:
		exit (1)


	app = None

	if args.inp_file:
		with open(args.inp_file,'r') as f:
			app = json.load(f)

	if app:
		new_app = client.update_application(app)

		if new_app and args.publish_updates:
			client.publish_application_updates(new_app,False)

	if new_app:
		print_app(new_app)


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        sys.stderr.write('Error: {!s}\n'.format(e))
