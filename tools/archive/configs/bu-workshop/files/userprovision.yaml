# vim: set ft=ansible:
---
- name: Workshop users
  hosts: localhost
  become: yes
  vars_files: 
    - "bu-workshop_vars.yml"
  vars:
    - oc_path: "/usr/local/bin/oc"
  tasks:
    - name: 'Add user{{ user }} to htpasswd file'
      htpasswd:
        dest: "/etc/origin/master/htpasswd"
        name: "user{{ user }}"
        password: "openshift3"
        state: present

    - name: 'Check for user{{ user }} account'
      command: "{{ oc_path }} get user user{{ user }}"
      register: user_out
      ignore_errors: true

    - name: "Create user{{ user }} if account doesn't exist"
      command: "{{ oc_path }} create user user{{ user }}"
      when: user_out | failed

    - name: 'Check for explore-{{ user }} project'
      command: "{{ oc_path }} get project explore-{{user}}"
      register: project_out
      ignore_errors: true

    - name: 'Create explore-{{user}} project'
      command: "{{ oc_path }} new-project explore-{{user}} --as=user{{user}} --skip-config-write"
      when: project_out | failed

    - name: 'Check for user{{user}} in GitLab'
      uri:
        url: 'http://gitlab-ce.workshop-infra.svc.cluster.local/api/v3/users?username=user{{user}}'
        HEADER_PRIVATE-TOKEN: "{{ root_token }}"
        method: GET
        status_code: 200
        return_content: yes
      register: user_result
      ignore_errors: true

    - name: 'Create user{{user}} in GitLab'
      uri:
        url: 'http://{{ gitlab_hostname }}/api/v3/users'
        HEADER_PRIVATE-TOKEN: "{{ root_token }}"
        body: 'confirm=false&email=user{{user}}@example.com&username=user{{user}}&name=user{{user}}&password=openshift3'
        method: POST
        status_code: 201
        return_content: no
      register: result
      until: result is succeeded
      retries: 3
      delay: 60
      when: 'user_result.json == []'

    - name: 'Get user{{user}} token'
      uri:
        url: 'http://{{ gitlab_hostname }}/api/v3/session'
        body: 'login=user{{user}}&password=openshift3'
        method: POST
        status_code: 201
      register: token_out
      until: token_out is success
      retries: 3
      delay: 60

    - name: 'Check if user{{user}} project exists'
      uri:
        url: 'http://{{ gitlab_hostname }}/api/v3/projects/user{{user}}%2Fnationalparks'
        HEADER_PRIVATE-TOKEN: "{{token_out.json.private_token}}"
        method: GET
        status_code: 404
        return_content: no
      register: project_absent
      ignore_errors: true

    - name: 'Import nationalparks repository for user{{user}}'
      uri:
        url: 'http://{{ gitlab_hostname }}/api/v3/projects'
        HEADER_PRIVATE-TOKEN: "{{token_out.json.private_token}}"
        body: 'name=nationalparks&import_url=https://github.com/openshift-roadshow/nationalparks&public=true'
        method: POST
        status_code: 201
        return_content: no
      register: result
      until: result is succeeded
      retries: 3
      delay: 60
      when: project_absent is success
