[OSEv3:vars]

###########################################################################
### Ansible Vars
###########################################################################
timeout=60
ansible_become=yes
ansible_user={{ ansible_user }}


###########################################################################
### OpenShift Basic Vars
###########################################################################

openshift_image_tag=v{{ osrelease }}
openshift_pkg_version=-{{ osrelease }}
docker_version="{{ docker_version }}"
deployment_type=openshift-enterprise
containerized=true

# default project node selector
osm_default_node_selector='env=user'


###########################################################################
### OpenShift Optional Vars
###########################################################################


# Enable cockpit
osm_use_cockpit=true
osm_cockpit_plugins=['cockpit-kubernetes']

###########################################################################
### OpenShift Master Vars
###########################################################################

openshift_master_api_port={{ master_api_port }}
openshift_master_console_port={{ master_api_port }}

openshift_master_cluster_method=native
openshift_master_cluster_hostname={{ master_lb_dns }}
openshift_master_cluster_public_hostname={{ master_lb_dns }}
openshift_master_default_subdomain={{ cloudapps_suffix }}
openshift_master_overwrite_named_certificates={{ openshift_master_overwrite_named_certificates }}






###########################################################################
### OpenShift Network Vars
###########################################################################

osm_cluster_network_cidr=10.1.0.0/16
openshift_portal_net=172.30.0.0/16


#os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
{{ multi_tenant_setting }}


###########################################################################
### OpenShift Authentication Vars
###########################################################################
# htpasswd auth
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'mappingMethod': 'add', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]


###########################################################################
### OpenShift Metrics and Logging Vars
###########################################################################

# Enable cluster metrics
openshift_hosted_metrics_deploy={{ install_metrics }}
openshift_hosted_metrics_storage_kind=nfs
openshift_hosted_metrics_storage_access_modes=['ReadWriteOnce']
openshift_hosted_metrics_storage_host={{ hostvars[ groups[ ('tag_' + env_type + '-' + guid + '_support') | replace('-', '_') ].0 ]["ec2_private_dns_name"] }}
openshift_hosted_metrics_storage_nfs_directory=/srv/nfs
openshift_hosted_metrics_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_metrics_storage_volume_name=metrics
openshift_hosted_metrics_storage_volume_size=10Gi
openshift_hosted_metrics_public_url=https://metrics.{{ cloudapps_suffix }}/hawkular/metrics

# Enable cluster logging
openshift_hosted_logging_deploy={{ install_logging }}
openshift_hosted_logging_storage_kind=nfs
openshift_hosted_logging_storage_access_modes=['ReadWriteOnce']
openshift_hosted_logging_storage_nfs_directory=/srv/nfs
openshift_hosted_logging_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_logging_storage_volume_name=logging
openshift_hosted_logging_storage_volume_size=10Gi
openshift_hosted_logging_hostname=kibana.{{ cloudapps_suffix }}
openshift_hosted_logging_elasticsearch_cluster_size=1
openshift_master_logging_public_url=https://kibana.{{ cloudapps_suffix }}
openshift_hosted_logging_kibana_nodeselector='env=infra'
openshift_hosted_logging_elasticsearch_nodeselector='env=infra'


###########################################################################
### OpenShift Project Management Vars
###########################################################################

# Configure additional projects
#openshift_additional_projects={'my-project': {'default_node_selector': 'label=value'}}



###########################################################################
### OpenShift Router and Registry Vars
###########################################################################

openshift_hosted_router_selector='env=infra'
openshift_hosted_router_replicas=1
#openshift_hosted_router_certificate={"certfile": "/path/to/router.crt", "keyfile": "/path/to/router.key", "cafile": "/path/to/router-ca.crt"}


openshift_hosted_registry_selector='env=infra'
openshift_hosted_registry_replicas=1

# Registry AWS S3
# S3 bucket must already exist.
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_storage_provider=s3
openshift_hosted_registry_storage_s3_accesskey={{ aws_access_key_id }}
openshift_hosted_registry_storage_s3_secretkey={{ aws_secret_access_key }}
openshift_hosted_registry_storage_s3_bucket={{ env_type }}-{{ guid }}
openshift_hosted_registry_storage_s3_region={{ aws_region_final|d(aws_region) }}
openshift_hosted_registry_storage_s3_chunksize=26214400
openshift_hosted_registry_storage_s3_rootdirectory=/registry
openshift_hosted_registry_pullthrough=true
openshift_hosted_registry_acceptschema2=true
openshift_hosted_registry_enforcequota=true


#openshift_cloudprovider_aws_access_key="{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#openshift_cloudprovider_aws_secret_key="{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

# workshoppy stuff
openshift_master_admission_plugin_config={"ProjectRequestLimit":{"configuration":{"apiVersion":"v1","kind":"ProjectRequestLimitConfig","limits":[{"maxProjects":1}]}}}
osm_project_request_template="default/project-request"

[OSEv3:children]
masters
nodes
nfs

[masters]
{% for host in groups['masters'] %}
{{ hostvars[host]['ec2_private_dns_name'] }}
{% endfor %}

[nodes]
{% for host in groups['masters'] %}
{{ hostvars[host]['ec2_private_dns_name'] }} ansible_user={{ ansible_user }} ansible_ssh_private_key_file=~/.ssh/{{ key_name }} openshift_node_labels="{'openshift_schedulable':'False','region': 'primary', 'zone': '{{ hostvars[host]['ec2_placement'] }}'}"
{% endfor %}
{% for host in groups['infranodes'] %}
{{ hostvars[host]['ec2_private_dns_name'] }} ansible_user={{ ansible_user }} ansible_ssh_private_key_file=~/.ssh/{{ key_name }} openshift_node_labels="{'region': 'primary', 'zone': '{{ hostvars[host]['ec2_placement'] }}', 'env': 'infra'}"
{% endfor %}
{% for host in groups['nodes'] %}
{{ hostvars[host]['ec2_private_dns_name'] }} ansible_user={{ ansible_user }} ansible_ssh_private_key_file=~/.ssh/{{ key_name }} openshift_node_labels="{'region': 'primary', 'zone': '{{ hostvars[host]['ec2_placement'] }}', 'env': 'user'}"
{% endfor %}

[nfs]
{% for host in groups['support'] %}
{{ hostvars[host]['ec2_private_dns_name'] }} ansible_user={{ ansible_user }} ansible_ssh_private_key_file=~/.ssh/{{ key_name }}
{% endfor %}
