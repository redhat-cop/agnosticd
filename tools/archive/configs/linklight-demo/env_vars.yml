####### VARIABLES YOU SHOULD CONFIGURE FOR YOUR DEPLOYEMNT
####### OR PASS as "-e" args to ansible-playbook command
project_tag: "{{ env_type }}-{{ guid }}"

#
#      Linklight` comes with its OWN deployer which AAD simply wraps
#      Hence many of the variables typically used are redundant

###### Variables from the Ansible Lightbulb AWS Provisioner:

ec2_key_name: toktest           # SSH key in AWS to put in all the instances
ec2_region: us-east-1           # region where the nodes will live
ec2_az: us-east-1a              # the availability zone
ec2_name_prefix: "{{ guid }}"   # name prefix for all the VMs

student_total: 1                # amount of work benches to provision


## Optional Variables
#networking: true               # workshop is put into networking mode, uses two Cisco IOS-XE devices

admin_password: ansible         # password used for student account on control node
localsecurity: false            # skips firewalld installation and SE Linux when false
create_login_page: false

email: no                       # <OPTIONAL> Set this if you wish to disable email

users:
  - name: tony kay
    username: tok
    email: tok@redhat.com

### END OF ANSIBLE Lightbulb AWS Provisioner Variables    
#
#### If you want a Key Pair name created and injected into the hosts,
## set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
## you can use the key used to create the environment or use your own self generated key
## if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})

use_own_key: true
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true

##ansible_ssh_private_key_file: ~/.ssh/{{key_name}}.pem
#
#env_authorized_key: fookey
#=======
#use_own_key: true
#
#env_authorized_key: "{{guid}}key"
#ansible_ssh_private_key_file: ~/.ssh/{{key_name}}.pem
