---
- name: "Create {{ smartcity_edge_s3_bucket }} object bucket claims for {{ num_users }} users"
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'smartcity-object-bucket-claim.yaml.j2') }}"

- name: "Wait until each {{ smartcity_edge_s3_bucket }} bucket is bound"
  k8s_info:
    api_version: objectbucket.io/v1alpha1
    kind: ObjectBucketClaim
    namespace: "{{ __user }}-{{ smartcity_edge_project }}"
    name: "{{ __user }}-{{ smartcity_edge_s3_bucket }}"
  register: r_s3_bucket_claim
  retries: 60
  delay: 10
  until:
   - r_s3_bucket_claim.resources is defined
   - r_s3_bucket_claim.resources | length | int > 0
   - r_s3_bucket_claim.resources[0].status.phase is defined
   - r_s3_bucket_claim.resources[0].status.phase == "Bound"
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"

- name: "Create jobs for image-loader for {{ num_users }} users"
  k8s:
    state: present
    definition: "{{ lookup('template', 'smartcity-image-loader-job.yaml.j2') }}"

- name: "Create {{ kafka_cluster }} kafka clusters for {{ num_users }}"
  k8s:
    state: present
    definition: "{{ lookup('template', 'kafka-smartcity-edge.yaml.j2' ) }}"

- name: "Wait until kafka-cluster is ready"
  k8s_info:
    api_version: kafka.strimzi.io/v1beta2
    kind: Kafka
    namespace: "{{ __user }}-{{ smartcity_edge_project }}"
    name: "{{ kafka_cluster }}"
  register: r_kafka_cluster_entity_operator
  retries: 90
  delay: 30
  until:
  - r_kafka_cluster_entity_operator.resources is defined
  - r_kafka_cluster_entity_operator.resources | length | int > 0
  - r_kafka_cluster_entity_operator.resources[0].status is defined
  - r_kafka_cluster_entity_operator.resources[0].status.conditions is defined
  - r_kafka_cluster_entity_operator.resources[0].status.conditions | length | int > 0
  - r_kafka_cluster_entity_operator.resources | json_query('[0].status.conditions[?type==`Ready`].status | [0]') == "True"
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"

- name: "Create openshift resources for image generator application for {{ num_users }} users"
  k8s:
    state: present
    definition: "{{ lookup('template', 'image-generator-resources.yaml.j2' ) }}"
  vars:
    image_generator_application: image-generator
    image_generator_service_account: image-generator
    image_generator_configmap: image-generator
    kafka_topic_images: images
    image_generator_s3_path_style_access: 'true'
    image_generator_interval_seconds: 2
    image_generator_resources_requests_cpu: 100m
    image_generator_resources_requests_memory: 100Mi
    image_generator_resources_limits_cpu: 200m
    image_generator_resources_limits_memory: 256Mi

- name: "Create openshift resources for lpr service application"
  k8s:
    state: present
    definition: "{{ lookup('template', 'lpr-service-resources.yaml.j2' ) }}"
  vars:
    lpr_service_service_account: lpr-service

- name: "Create openshift resources for image processor application"
  k8s:
    state: present
    definition: "{{ lookup('template', 'image-processor-resources.yaml.j2' ) }}"
  vars:
    image_processor_application: image-processor
    image_processor_service_account: image-processor
    image_processor_configmap: image-processor
    kafka_topic_images: images
    kafka_topic_toll_station_events: toll-station-events
    image_processor_s3_path_style_access: 'true'
    image_processor_toll_station: station-a210
    image_processor_resources_requests_cpu: 100m
    image_processor_resources_requests_memory: 100Mi
    image_processor_resources_limits_cpu: 200m
    image_processor_resources_limits_memory: 256Mi
