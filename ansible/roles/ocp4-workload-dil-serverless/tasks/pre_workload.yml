---
# Implement your Pre Workload deployment tasks here
- name: usercount debug
  debug:
    msg: "Debugging num_users {{ num_users }}"

- name: create usernames
  set_fact:
    users: "{{ users | default([]) + ['user'+item | string] }}"
  loop: "{{ range(1,((num_users | int) + 1)) | list }}"

# Figure out paths
- name: Retrieve Ingress config
  k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
    name: cluster
  register: r_ingress_config

- name: Get OpenShift Apps Domain
  set_fact:
    route_subdomain: "{{ r_ingress_config | json_query('[0].spec.appsDomain') }}"

- name: Get OpenShift Domain
  set_fact:
    route_subdomain: "{{ r_ingress_config | json_query('[0].spec.domain') }}"
  when:
    - route_subdomain | length == 0

- name: Retrieve Console config
  k8s_info:
    api_version: config.openshift.io/v1
    kind: Console
    name: cluster
  register: r_console_config

- name: Get OpenShift Console
  set_fact:
    console_url: "{{ r_console_config | json_query('[0].status.consoleURL')  }}"

- name: Retrieve Infraestructure config
  k8s_info:
    api_version: config.openshift.io/v1
    kind: Console
    name: cluster
  register: r_console_config

- name: Get OpenShift API
  set_fact:
    api_url: "{{ r_console_config | json_query('[0].status.apiServerURL')  }}"

- name: debug
  debug:
    msg: 
    - "Console URL: {{ console_url }}"
    - "API URL: {{ api_url }}"
    - "Route Subdomain: {{ route_subdomain }}"
    - "Admin username: {{ ocp_username }}"

- name: Retrieve OpenShift API Server
  k8s_info:
    kind: ClusterOperator
    name: openshift-apiserver
  register: r_apiserver_config

- name: Fetch OpenShift cluster version
  set_fact:
    openshift_version: "{{ r_apiserver_config | json_query('[0].status.versions[?name==`operator`].version | [0]') | split('.') | slice(2) | first | join('.') }}"
  when: (openshift_version is not defined) or (openshift_version | length == 0)

- name: debug
  debug:
    msg: "Setting up for OpenShift version: {{ openshift_version }}"

# Leave this as the last task in the playbook.
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when: not silent|bool
