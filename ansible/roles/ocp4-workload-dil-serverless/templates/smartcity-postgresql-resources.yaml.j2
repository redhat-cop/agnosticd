{% for __user in users %}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: {{ smartcity_postgresql_service_account }}
  namespace: "{{ __user }}-{{ smartcity_central_project }}"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ smartcity_postgresql_pvc }}
  namespace: "{{ __user }}-{{ smartcity_central_project }}"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
kind: Secret
apiVersion: v1
metadata:
  name: {{ smartcity_postgresql_credentials_secret }}
  namespace: "{{ __user }}-{{ smartcity_central_project }}"
stringData:
  postgresql-username: {{ smartcity_postgresql_username }}
  postgresql-password: {{ smartcity_postgresql_password }}
  postgresql-database: {{ smartcity_postgresql_database }}
  postgresql-admin-password: {{ smartcity_postgresql_admin_password }}
type: Opaque

---
kind: Service
apiVersion: v1
metadata:
  name: {{ smartcity_postgresql_application }}
  namespace: "{{ __user }}-{{ smartcity_central_project }}"
  labels:
    app: {{ smartcity_postgresql_application }}
    app.kubernetes.io/component: {{ smartcity_postgresql_application }}
    app.kubernetes.io/instance: {{ smartcity_postgresql_application }}
spec:
  ports:
    - name: 5432-tcp
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: {{ smartcity_postgresql_application }}
    deployment: {{ smartcity_postgresql_application }}
  type: ClusterIP
  sessionAffinity: None

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ smartcity_postgresql_application }}
  namespace: "{{ __user }}-{{ smartcity_central_project }}"
  labels:
    app: {{ smartcity_postgresql_application }}
    app.kubernetes.io/component: {{ smartcity_postgresql_application }}
    app.kubernetes.io/instance: {{ smartcity_postgresql_application }}
    app.openshift.io/runtime: postgresql
spec:
  strategy:
    type: Recreate
  replicas: 1
  test: false
  selector:
    matchLabels:
      app: {{ smartcity_postgresql_application }}
      deployment: {{ smartcity_postgresql_application }}
  template:
    metadata:
      labels:
        app: {{ smartcity_postgresql_application }}
        deployment: {{ smartcity_postgresql_application }}
    spec:
      volumes:
        - name: {{ smartcity_postgresql_application }}-data
          persistentVolumeClaim:
            claimName: {{ smartcity_postgresql_pvc }}
      containers:
        - name: smartcity-postgresql
          image: {{ smartcity_postgresql_image }}
          resources:
            requests:
              cpu: "{{ smartcity_postgresql_resources_requests_cpu }}"
              memory: "{{ smartcity_postgresql_resources_requests_memory }}"
            limits:
              cpu: "{{ smartcity_postgresql_resources_limits_cpu }}"
              memory: "{{ smartcity_postgresql_resources_limits_memory }}"
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 120
            exec:
              command:
              - /usr/libexec/check-container
              - --live
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                    name: {{ smartcity_postgresql_credentials_secret }}
                    key: postgresql-username
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: {{ smartcity_postgresql_credentials_secret }}
                    key: postgresql-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                    name: {{ smartcity_postgresql_credentials_secret }}
                    key: postgresql-database
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: {{ smartcity_postgresql_credentials_secret }}
                    key: postgresql-admin-password  
            - name: POSTGRESQL_SERVICE
              value: {{ smartcity_postgresql_application }}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: "{{ smartcity_postgresql_max_prepared_transactions }}"
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: "{{ smartcity_postgresql_max_connections }}"
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: "{{ smartcity_postgresql_application }}-data"
              mountPath: "/var/lib/pgsql/data"
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      serviceAccount: {{ smartcity_postgresql_service_account }}
      serviceAccountName: {{ smartcity_postgresql_service_account }}      

{% endfor %}