{% for __user in users %}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: {{ lpr_service_service_account }}
  namespace: "{{ __user }}-{{ smartcity_edge_project }}"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ lpr_service_application }}
    app.kubernetes.io/component: {{ lpr_service_application }}
    app.kubernetes.io/instance: {{ lpr_service_application }}
  name: {{ lpr_service_application }}
  namespace: "{{ __user }}-{{ smartcity_edge_project }}"
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deployment: {{ lpr_service_application }}
  sessionAffinity: None
  type: ClusterIP

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: {{ lpr_service_application }}
    app.openshift.io/runtime: python
    app.kubernetes.io/component: {{ lpr_service_application }}
    app.kubernetes.io/instance: {{ lpr_service_application }}
  name: {{ lpr_service_application }}
  namespace: "{{ __user }}-{{ smartcity_edge_project }}"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      deployment: {{ lpr_service_application }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        deployment: {{ lpr_service_application }}
    spec:
      containers:
        - name: {{ lpr_service_application }}
          image: {{ lpr_service_image }}
          env:
            - name: MAX_WORKERS
              value: "1"
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ lpr_service_service_account }}
      serviceAccountName: {{ lpr_service_service_account }}
      schedulerName: default-scheduler

{% endfor %}