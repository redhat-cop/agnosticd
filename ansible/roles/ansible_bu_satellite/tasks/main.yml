---
- name: Configure satellite admin password
  command: "foreman-rake permissions:reset password={{ ansible_bu_satellite_user_password }}"

- name: Update hammer admin password in /root/.hammer/cli.modules.d/foreman.yml
  lineinfile:
    path: /root/.hammer/cli.modules.d/foreman.yml
    regexp: 'password'
    line: "  :password: '{{ ansible_bu_satellite_user_password }}'"

- name: Create letsencrypt subdirectories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - /etc/letsencrypt
    - /var/lib/letsencrypt

- name: Stop httpd
  service:
    name: httpd.service
    state: stopped
  register: stop_httpd
  until: stop_httpd is not failed
  retries: 5

# If this fails check out status of certbot: https://letsencrypt.status.io/
- name: Try to issue SSL certificate
  block:
    - name: Issue SSL cert
      shell: >
        podman run -it --rm --name certbot \
            -v "/etc/letsencrypt:/etc/letsencrypt" \
            -v "/var/lib/letsencrypt:/var/lib/letsencrypt" \
            -p 80:80 \
            -p 443:443 \
            docker.io/certbot/certbot:latest certonly \
            --key-type rsa \
            --rsa-key-size 4096 \
            --no-bootstrap \
            --standalone \
            -d "{{ ansible_bu_satellite_external_fqdn }}" \
            --email ansible-network@redhat.com \
            --noninteractive \
            --agree-tos
      register: _r_issue_sat_cert
      until: _r_issue_sat_cert is not failed
      retries: 5
  rescue:
    - name: Error with SSL cert
      debug:
        msg: "Unable to retrieve SSL cert, ERROR, continuing on without cert..."

    - name: Append dns_information failure
      set_fact:
        dns_information:
          - "{{ dns_information }}"
          - "The Lets Encrypt certbot failed for the satellite node, please check https://letsencrypt.status.io/ to make sure the service is running"

- name: Download LetsEncrypt CA certs
  get_url:
    url: "{{ item.url }}"
    dest: "/etc/letsencrypt/live/{{ ansible_bu_satellite_external_fqdn }}"
    mode: 0644
    checksum: "{{ item.checksum }}"
    group: root
    owner: root
  loop:
    - url: https://letsencrypt.org/certs/lets-encrypt-r3.pem
      checksum: sha256:177e1b8fc43b722b393f4200ff4d92e32deeffbb76fef5ee68d8f49c88cf9d32
    - url: https://letsencrypt.org/certs/isrgrootx1.pem
      checksum: sha256:22b557a27055b33606b6559f37703928d3e4ad79f110b407d04986e1843543d1

- name: Retrieve LetsEncrypt R3 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ ansible_bu_satellite_external_fqdn }}/lets-encrypt-r3.pem"
  register: intermediate_cert

- name: Retrieve LetsEncrypt root X1 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ ansible_bu_satellite_external_fqdn }}/isrgrootx1.pem"
  register: root_cert

- name: Combine R3 and root X1 certs to create Letsencrypt CA bundle
  copy:
    content: |
      {{ root_cert.content|b64decode }}
      {{ intermediate_cert.content | b64decode }}
    dest: "/etc/letsencrypt/live/{{ ansible_bu_satellite_external_fqdn }}/letsencrypt-ca-bundle.pem" 

- name: Start httpd
  service:
    name: httpd.service
    state: started
  register: start_httpd
  until: start_httpd is not failed
  retries: 5

- name: Set original gold image hostname via hostnamectl
  command: >-
    hostnamectl set-hostname {{ ansible_bu_satellite_internal_fqdn }}

- name: change satellite hostname
  shell: >-
    satellite-change-hostname {{ ansible_bu_satellite_external_fqdn }}
    -u {{ ansible_bu_satellite_user_name }} -p {{ ansible_bu_satellite_user_password }} --skip-dns --assumeyes
  register: satellite_change_hostname
  failed_when: '"Success!" not in satellite_change_hostname.stdout'

- name: Update satellite with LetsEncrypt cert
  shell: >-
    satellite-installer --scenario satellite
    --certs-server-cert "/etc/letsencrypt/live/{{ ansible_bu_satellite_external_fqdn }}/fullchain.pem"
    --certs-server-key "/etc/letsencrypt/live/{{ ansible_bu_satellite_external_fqdn }}/privkey.pem"
    --certs-server-ca-cert "/etc/letsencrypt/live/{{ ansible_bu_satellite_external_fqdn }}/letsencrypt-ca-bundle.pem"
    --certs-update-server --certs-update-server-ca
  register: satellite_update_cert
  failed_when: '"Success!" not in satellite_update_cert.stdout'


- name: print satellite user.info
  agnosticd_user_info:
    msg: |
      Satellite URL: https://{{ ansible_bu_satellite_external_fqdn }}
      Satellite User: {{ ansible_bu_satellite_user_name }}
      Satellite User Password: {{ ansible_bu_satellite_user_password }}

- name: Save user data
  agnosticd_user_info:
    data:
      workshop_satellite_url: "https://{{ ansible_bu_satellite_external_fqdn }}"
      workshop_satellite_user_name: "{{ ansible_bu_satellite_user_name }}"
      workshop_satellite_user_password: "{{ ansible_bu_satellite_user_password }}"
