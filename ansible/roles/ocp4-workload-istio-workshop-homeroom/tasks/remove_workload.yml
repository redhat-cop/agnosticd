# vim: set ft=ansible
---
# Implement your Workload removal tasks here
- name: create temp directory
  file:
    state: directory
    path: "/tmp/istio-install/{{ item }}"
  loop:
  -
  - jaegertracing
  - jaegertracing/jaeger-operator
  - jaegertracing/jaeger-operator/v1.13.1
  - jaegertracing/jaeger-operator/v1.13.1/deploy
  - jaegertracing/jaeger-operator/v1.13.1/deploy/crds

- name: get maistra-operator.yaml
  get_url:
    force: yes
    url: "https://raw.githubusercontent.com/Maistra/istio-operator/maistra-0.12/deploy/maistra-operator.yaml"
    dest: "/tmp/istio-install/maistra-operator.yaml"

- name: set fact jaegertracing
  set_fact:
      jaegertracing_list:
      - jaegertracing/jaeger-operator/v1.13.1/deploy/crds/jaegertracing_v1_jaeger_crd.yaml
      - jaegertracing/jaeger-operator/v1.13.1/deploy/service_account.yaml
      - jaegertracing/jaeger-operator/v1.13.1/deploy/role.yaml
      - jaegertracing/jaeger-operator/v1.13.1/deploy/role_binding.yaml
      - jaegertracing/jaeger-operator/v1.13.1/deploy/operator.yaml

- name: get remote yamls
  get_url:
    force: yes
    url: "https://raw.githubusercontent.com/{{ item }}"
    dest: "/tmp/istio-install/{{ item }}"
  loop: "{{ jaegertracing_list }}"

- name: deleting existing maistra-operator.yaml
  command: oc delete -n istio-operator -f /tmp/istio-install/maistra-operator.yaml

- name: unapply jaegertracing yamls
  k8s:
    state: absent
    namespace: observability
    src: "/tmp/istio-install/{{ item }}"
  register: result
  loop: "{{ jaegertracing_list }}"
- debug: var=result

- name: remove istio-system and istio-operator projects
  k8s:
    state: absent
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: "{{ item }}"
  with_items:
    - istio-operator
    - observability
    - kiali-operator

- name: remove temp directory
  file:
    state: absent
    path: "/tmp/istio-install"

- name: Ensure project istio-system istio-operator is done terminating if it was being terminated
  k8s_facts:
    api_version: project.openshift.io/v1
    kind: Project
    name: "{{ item }}"
  with_items:
    - istio-operator
    - observability
    - kiali-operator
  register: result
  failed_when: result.resources | length > 0
  retries: 60
  until: result.resources | length == 0

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
