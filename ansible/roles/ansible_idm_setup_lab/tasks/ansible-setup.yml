---
- name: Setup lab-user with python libraries and collections
  when: inventory_hostname in groups['bastions']
  become: true
  block:
  - name: Update python3 pip to latest
    ansible.builtin.pip:
      name: pip
      state: latest
      extra_args: '--prefix=/home/lab-user/.local'
    environment:
      HOME: /home/lab-user
      USER: lab-user

  - name: Install pywinrm using pip
    ansible.builtin.pip:
      name: pywinrm
      extra_args: '--prefix=/home/lab-user/.local'
    environment:
      HOME: /home/lab-user
      USER: lab-user

  - name: Ensure Ansible collections are installed
    community.general.ansible_galaxy_install:
      name: "{{ item }}"
      type: collection
      dest: /home/lab-user/.ansible/collections/
    loop: "{{ galaxy_collections }}"

  - name: Create the required directory structure
    ansible.builtin.file:
      path: /home/lab-user/.ansible/roles/redhat/
      state: directory
      mode: '0755'
      owner: lab-user
      group: users

  - name: Create the required directory structure
    ansible.builtin.file:
      path: "/home/lab-user/.ansible/roles/redhat/{{ item.collection_path }}"
      state: directory
      mode: '0755'
      owner: lab-user
      group: users
    loop: "{{ custom_collections }}"

  - name: Download collection tar file
    ansible.builtin.get_url:
      url: "{{ item.url }}"
      dest: "/home/lab-user/{{ item.name }}"
      mode: '0644'
    loop: "{{ custom_collections }}"

  - name: Extract collection
    ansible.builtin.unarchive:
      src: "/home/lab-user/{{ item.name }}"
      dest: "/home/lab-user/.ansible/roles/redhat/{{ item.collection_path }}"
      remote_src: yes
      extra_opts: ["--strip-components=2"]
      keep_newer: yes
      mode: '0755'
      owner: lab-user
      group: users
    loop: "{{ custom_collections }}"

  - name: Set ownership and permissions for lab-user
    ansible.builtin.file:
      path: "/home/lab-user"
      owner: lab-user
      group: users
      state: directory
      recurse: true

  - name: Locate all *.tar.gz files in /home/lab-user
    ansible.builtin.find:
      paths: "/home/lab-user/"
      patterns: "*.tar.gz"
    register: gz_files

  - name: Remove located *.tar.gz files
    ansible.builtin.file:
      path: "{{ item.path }}"
      state: absent
    loop: "{{ gz_files.files }}"
    when: gz_files.matched > 0
