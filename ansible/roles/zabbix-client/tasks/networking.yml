# vim: set ft=ansible:
---
- name: RPM | Determine if firewalld installed
  command: "rpm -q firewalld"
  register: firewalld
  changed_when: false
  failed_when: false

- name: Open the ports in the firewall
  firewalld:
    port: 10050/tcp
    permanent: true
    immediate: true
    state: enabled
  when: firewalld.rc == 0
  ignore_errors: true
#Sborenst: This line fails currently when firewall is installed but not running.  
- name: Reload the firewall configuration
  service:
    name: firewalld
    state: reloaded
  when: firewalld.rc == 0
  ignore_errors: true

- name: Determine if iptables-services installed
  command: "rpm -q iptables-services"
  register: iptables
  changed_when: false
  ignore_errors: true

- name: Make sure firewall has open port 10050 (persistent)
  lineinfile:
    dest: /etc/sysconfig/iptables
    insertbefore: '-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT'
    line: '-A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 10050 -j ACCEPT'
    state: present
  when: iptables.rc == 0

# Do not restart iptables services here: if the playbook is run against an already running
# openshift cluster, some specific rules can be set by openshift for containers or routes.
# Restarting iptables service will flush those rules.
# In other words, Stopping and starting iptables.service will destroy configuration that is
# required by OpenShift Container Platform and Docker. OpenShift Container Platform and
# Docker are not notified of the change.
# see https://docs.openshift.com/container-platform/3.5/admin_guide/iptables.html
#
# Instead, just insert the rule to current INPUT chain.
- name: Make sure firewall has open port 10050 (dynamic)
  iptables:
    chain: INPUT
    action: insert
    protocol: tcp
    match: tcp
    destination_port: 10050
    jump: ACCEPT
  when: iptables.rc == 0
