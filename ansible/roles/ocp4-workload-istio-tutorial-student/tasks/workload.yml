# vim: set ft=ansible
---

# Implement your Workload deployment tasks here
- name: set fact istio-tutorial per user project name
  set_fact:
    peruser_istio_tutorial_projectname: "{{ smcp_project_name }}"

- name: set SCCs for Istio (will be dropped in the future)
  shell: "oc adm policy add-scc-to-user {{ item }} -z default -n {{ smcp_project_name }}"
  with_items:
    - anyuid
    - privileged

- name: create the {{ smcp_project_name }} project
  k8s:
    state: present
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: "{{ smcp_project_name }}"

# not required - same project name as parent
# - name: Create smmr to specify that {{ smcp_project_name }} belongs to smcp at {{ smcp_project_name }}
#   k8s:
#     state: present
#     namespace: "{{ smcp_project_name }}"
#     definition:
#       apiVersion: maistra.io/v1
#       kind: ServiceMeshMemberRoll
#       metadata:
#         name: default
#       spec:
#         members:
#         # a list of projects that should be joined into the service mesh
#         # for example, to add the bookinfo project
#         - "{{ smcp_project_name }}"

- name: create the customer service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: "{{ smcp_project_name }}"
        name: customer
        labels:
          app: customer    
      spec:
        ports:
        - name: http
          port: 8080
        selector:
          app: customer

- name: create the preference service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: "{{ smcp_project_name }}"
        name: preference
        labels:
          app: preference    
      spec:
        ports:
        - name: http
          port: 8080
        selector:
          app: preference
  
- name: create the recommendation service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: "{{ smcp_project_name }}"
        name: recommendation
        labels:
          app: recommendation    
      spec:
        ports:
        - name: http
          port: 8080
        selector:
          app: recommendation

- name: create the customer gateway
  k8s:
    state: present
    definition:
      apiVersion: networking.istio.io/v1alpha3
      kind: Gateway
      metadata:
        namespace: "{{ smcp_project_name }}"
        name: customer-gateway
      spec:
        selector:
          istio: ingressgateway # use istio default controller
        servers:
        - port:
            number: 80
            name: http
            protocol: HTTP
          hosts:
          - "*"

- name: create the customer virtualservice
  k8s:
    state: present
    definition:
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        namespace: "{{ smcp_project_name }}"
        name: customer
      spec:
        hosts:
        - "*"
        gateways:
        - customer-gateway
        http:
        - match:
          - uri:
              exact: /
          route:
          - destination:
              host: customer
              port:
                number: 8080

- name: create the customer deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: "{{ smcp_project_name }}"
        labels:
          app: customer
          version: v1
        name: customer-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: customer
            version: v1
        template:
          metadata:
            labels:
              app: customer
              version: v1
            annotations:
              sidecar.istio.io/inject: "true"
              sidecar.istio.io/proxyCPU: "500m"
              sidecar.istio.io/proxyMemory: 400Mi
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true -Djava.security.egd=file:///dev/./urandom
              image: quay.io/maistra_demos/customer:v1
              imagePullPolicy: Always
              name: customer
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP

- name: create the preference deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: "{{ smcp_project_name }}"
        labels:
          app: preference
          version: v1
        name: preference-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: preference
            version: v1
        template:
          metadata:
            labels:
              app: preference
              version: v1
            annotations:
              sidecar.istio.io/inject: "true"
              sidecar.istio.io/proxyCPU: "500m"
              sidecar.istio.io/proxyMemory: 400Mi
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true -Djava.security.egd=file:///dev/./urandom
              image: quay.io/maistra_demos/preference:v1
              imagePullPolicy: Always
              name: preference
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP

- name: create the recommendation v1 deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: "{{ smcp_project_name }}"
        labels:
          app: recommendation
          version: v1
        name: recommendation-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: recommendation
            version: v1
        template:
          metadata:
            labels:
              app: recommendation
              version: v1
            annotations:
              sidecar.istio.io/inject: "true"
              sidecar.istio.io/proxyCPU: "500m"
              sidecar.istio.io/proxyMemory: 400Mi
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xmx256m
              image: quay.io/maistra_demos/recommendation:v1
              imagePullPolicy: Always
              name: recommendation
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP

- name: create the recommendation v2 deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: "{{ smcp_project_name }}"
        labels:
          app: recommendation
          version: v2
        name: recommendation-v2
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: recommendation
            version: v2
        template:
          metadata:
            labels:
              app: recommendation
              version: v2
            annotations:
              sidecar.istio.io/inject: "true"
              sidecar.istio.io/proxyCPU: "500m"
              sidecar.istio.io/proxyMemory: 400Mi
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xmx256m
              image: quay.io/maistra_demos/recommendation:v2
              imagePullPolicy: Always
              name: recommendation
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP

- name: create the recommendation v3 deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: "{{ smcp_project_name }}"
        labels:
          app: recommendation
          version: v3
        name: recommendation-v3
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: recommendation
            version: v3
        template:
          metadata:
            labels:
              app: recommendation
              version: v3
            annotations:
              sidecar.istio.io/inject: "true"
              sidecar.istio.io/proxyCPU: "500m"
              sidecar.istio.io/proxyMemory: 400Mi
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xmx256m
              image: quay.io/maistra_demos/recommendation:v3
              imagePullPolicy: Always
              name: recommendation
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP

- name: create the curl deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: "{{ smcp_project_name }}"
        labels:
          app: curl
          version: v1
        name: curl
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: curl
            version: v1
        template:
          metadata:
            labels:
              app: curl
              version: v1
            annotations:
              sidecar.istio.io/proxyCPU: "500m"
              sidecar.istio.io/proxyMemory: 400Mi
          spec:
            containers:
            - image: quay.io/maistra_demos/curl:latest
              command: ["/bin/sleep", "3650d"]
              imagePullPolicy: Always
              name: curl

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool

