---
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"
    
- environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
    PROJECT_NAME: "{{ project_name }}"
    NAMESPACE: "{{ project_name }}"
  block:
    - name: Make sure target project {{ project_name }} exists. If not, create it.
      command: "oc new-project {{ project_name }}"
      ignore_errors: yes

    - name: Set user project
      command: "oc project {{ project_name }}"

    - name: Enable ServiceCatalogApiServers
      command: "oc patch servicecatalogapiservers cluster --type=merge -p='{\"spec\": {\"managementState\": \"Managed\"}}'"

    - name: Enable ServiceCatalogControllerManagers
      command: "oc patch servicecatalogcontrollermanagers cluster --type=merge -p='{\"spec\": {\"managementState\": \"Managed\"}}'"

    - name: Enable Template Service Broker
      ignore_errors: yes
      retries: 5
      delay: 10
      until: r_objects is succeeded
      register: r_objects
      k8s:
        state: present
        merge_type:
        - strategic-merge
        - merge
        definition: "{{ lookup('file', item ) | from_yaml }}"
      loop:
      - ./files/tsb-namespace.yml
      - ./files/tsb-og.yml
      - ./files/tsb-sub.yml
      - ./files/tsb-instance.yml

    - name: Git clone the repo if it doesn't exist
      git:
        repo: "{{ lab_repo }}"
        version: "{{ lab_branch }}"
        dest: "{{ tmp_git_location }}"
        track_submodules: yes

    - name: Create deployment, chdir first
      command: "{{ tmp_git_location }}/.workshop/scripts/deploy-spawner.sh --override SERVER_LIMIT=0  --override PREPULL_IMAGES=true --override CLEAN_INSTALL=true"
      retries: 10
      delay: 30
      register: result
      until: result is not failed
      args:
        chdir: "{{ tmp_git_location }}"

    - name: Show deploy workshop regular output
      debug: 
        var: result.stdout_lines
      when: result.stdout_lines is defined and result.stdout_lines | length > 0

    - name: Show deploy workshop error output
      debug: 
        var: result.stderr_lines
      when: result.stderr_lines is defined and result.stderr_lines | length > 0
      
# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
