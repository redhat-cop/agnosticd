---

- name: Ansible tmp venv as it needs boto3 on the target host(s)
  block:

    - name: Create Python virtual environment
      ansible.builtin.command:
        cmd: "/bin/python -m venv {{ s3_asset_injector_venv_path }}"
        creates: "{{ s3_asset_injector_venv_path }}/bin/python"

    - name: Install boto3 in the virtual environment
      ansible.builtin.pip:
        name: boto3
        virtualenv: "{{ s3_asset_injector_venv_path }}"
        state: present

- name: Download asset
  amazon.aws.aws_s3:
    bucket: "{{ s3_asset_injector_bucket }}" #rhdp-private
    object: "{{ s3_asset_injector_path }}"
    dest: "{{ s3_asset_injector_dest }}"
    mode: "{{ s3_asset_injector_mode | default('get') }}"
    aws_access_key:  "{{ s3_asset_injector_aws_access_key }}"
    aws_secret_key: "{{ s3_asset_injector_aws_secret_key }}"
    region: "{{ s3_asset_injector_aws_region }}"
  vars:
    ansible_python_interpreter: "{{ s3_asset_injector_venv_path }}/bin/python"

- name: If tar archive eg LLM models etc unarchive
  when: s3_asset_injector_unarchive | bool
  ansible.builtin.unarchive:
    src: "{{ s3_asset_injector_dest }}"
    dest: "{{ s3_asset_injector_unarchive_path }}"
    remote_src: true

- name: Remove tmp boto3 venv directory
  ansible.builtin.file:
    path: "{{ s3_asset_injector_venv_path }}"
    state: absent
