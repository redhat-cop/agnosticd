# vim: set ft=ansible
---

# Implement your Workload deployment tasks here

- name: remove rook-ceph cluster finalizers
  k8s:
    state: present
    name: rook-ceph
    namespace: rook-ceph
    api_version: ceph.rook.io/v1
    kind: CephCluster
    definition:
      metadata:
        finalizers: null
    merge_type: merge
  ignore_errors: yes

- name: remove rook-ceph cluster
  k8s:
    state: absent
    name: rook-ceph
    namespace: rook-ceph
    api_version: ceph.rook.io/v1
    kind: CephCluster
  ignore_errors: yes

- name: Ensure rook-ceph cluster is done removing if it was being terminated
  k8s_facts:
    api_version: ceph.rook.io/v1
    kind: CephCluster
    name: rook-ceph
    namespace: rook-ceph
  register: result
  failed_when: result.resources | length > 0
  delay: 15
  retries: 60
  until: result.resources | length == 0

- name: remove rook operator
  k8s:
    state: absent
    name: rook-ceph-operator
    namespace: rook-ceph
    kind: Deployment
  ignore_errors: yes

- name: remove daemonsets discover, agent
  k8s:
    state: absent
    name: "{{ item }}"
    namespace: rook-ceph
    kind: daemonset
    api_version: apps/v1
  ignore_errors: yes
  loop:
  - rook-ceph-agent
  - rook-discover

- name: remove the rook-ceph rook-ceph-system project
  ignore_errors: yes
  k8s:
    state: absent
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: "{{ item }}"
  loop:
  - rook-ceph
  - rook-ceph-system

- name: remove SCC.yaml
  ignore_errors: yes
  k8s:
    state: absent
    definition:
      kind: SecurityContextConstraints
      apiVersion: security.openshift.io/v1
      metadata:
        name: rook-ceph

- name: Ensure project is done terminating if it was being terminated
  k8s_facts:
    api_version: project.openshift.io/v1
    kind: Project
    name: "{{ item }}"
  register: result
  failed_when: result.resources | length > 0
  delay: 15
  retries: 60
  until: result.resources | length == 0
  loop:
  - rook-ceph
  - rook-ceph-system

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
