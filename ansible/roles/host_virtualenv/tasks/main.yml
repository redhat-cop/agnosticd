---
- name: Check host_virtualenv_path is defined
  assert:
    that: host_virtualenv_path is defined
    fail_msg: host_virtualenv_path must be defined

- name: Install virtualenv package prerequisites
  when:
  - host_virtualenv_package_prereqs | length > 0
  # Skip when explicitly not operating as root.
  - become_override | default(true) | bool
  become: "{{ become_override | default(omit) }}"
  package:
    name: "{{ host_virtualenv_package_prereqs }}"
  register: r_package
  # Ignore failure when not executing as root.
  failed_when:
  - r_package is failed
  - r_package.msg != "This command has to be run under the root user."

- name: Make virtualenv path
  become: "{{ become_override | default(omit) }}"
  file:
    path: "{{ host_virtualenv_path }}"
    state: directory
    mode: u=rwx,go=rx
    owner: "{{ host_virtualenv_owner | default(omit)}}"
    group: "{{ host_virtualenv_group | default(omit)}}"

- name: Write {{ host_virtualenv_path }}/host_virtualenv-requirements.txt
  become: "{{ become_override | default(omit) }}"
  copy:
    content: >-
      {{ lookup('host_virtualenv_combined_requirements', host_virtualenv_requirements, override=host_virtualenv_requirements_override) }}
    dest: "{{ host_virtualenv_path }}/host_virtualenv-requirements.txt"
    mode: u=rw,go=r
    owner: "{{ host_virtualenv_owner | default(omit)}}"
    group: "{{ host_virtualenv_group | default(omit)}}"

- name: Set up Virtualenv
  become: "{{ become_override | default(omit) }}"
  become_user: "{{ host_virtualenv_owner | default(omit) }}"
  pip:
    requirements: "{{ host_virtualenv_path }}/host_virtualenv-requirements.txt"
    virtualenv: "{{ host_virtualenv_path }}"
    virtualenv_python: "{{ host_virtualenv_python }}"
