kind: Template
apiVersion: v1
metadata:
  name: guide
  annotations:
    description: Template to deploy a workshop guide with workshopper. Look into any of the workshops for the used variables that can be defined in the configMap.
parameters:
- name: CONTENT_URL_PREFIX
  description: Console url (e.g. https://raw.githubusercontent.com/openshift-labs/starter-guides/37)
  value: https://raw.githubusercontent.com/openshift-labs/starter-guides/master
  displayName: Content URL prefix
  required: true
- name: WORKSHOPS_URLS
  description: Workshop definition url (e.g. https://raw.githubusercontent.com/openshift-labs/starter-guides/36/_workshops/training.yml)
  value: file:///workshop/workshop.yml
  displayName: Workshop Url
  required: true
- name: CONSOLE_ADDRESS
  description: Console url (e.g. master.mycluster.openshiftworkshop.com or console.mycluster.gce.pixy.io:8443)
  value:
  displayName: Console url
  required: true
- name: ROUTER_ADDRESS
  description: Application subdomain (e.g. apps.mycluster.openshiftworkshop.com or apps.mycluster.gce.pixy.io)
  value:
  displayName: Application subdomain
  required: true
- name: GITLAB_URL_PREFIX
  value: gogs-ocp-workshop
- name: ETHERPAD_URL_PREFIX
  value: etherpad-ocp-workshop
- name: HOSTNAME
objects:
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: guides
    labels:
      app: guides
      role: config
  data:
    CONTENT_URL_PREFIX: ${CONTENT_URL_PREFIX}
    WORKSHOPS_URLS: ${WORKSHOPS_URLS}
    CONSOLE_ADDRESS: ${CONSOLE_ADDRESS}
    ROUTER_ADDRESS: ${ROUTER_ADDRESS}
    workshop.yml: |+
      ---
      id: starter-guides
      name: OpenShift Workshop
      revision: ocp_3_7

      content:
        url: ${CONTENT_URL_PREFIX}

      vars:
        ENVIRONMENT: "Amazon Web Services"
        OPENSHIFT_VERSION: "3.7"
        USE_MAVEN: false
        METRICS_ENABLED: true
        LOGGING_ENABLED: true
        NFS_ENABLED: true
        ETHERPAD_ENABLED: true
        ETHERPAD_URL_PREFIX: "${ETHERPAD_URL_PREFIX}"
        MASTERS: "1"
        INFRA: "1"
        NODES: "20"
        NUM_USERS: "{{ user_count }}"
        DOCS_URL: docs.openshift.com/container-platform/3.7
        SUFFIX: ""
        NO_USER_PROJECT: false
        KIBANA_URL_PREFIX: "kibana"
        USER_SUFFIX: "userXY"
        JAVA_BUILDER_PROPER: "JBoss EAP 7"
        JAVA_BUILDER_STRING: "jboss-eap70-openshift:1.6"
        USER_NAME: "userXY"
        USER_PASSWORD: "{{ user_password }}"
        GIT_SERVER: "gogs"
        GITLAB_URL_PREFIX: "${GITLAB_URL_PREFIX}"
        GITLAB_USER: "{{ gogs_user }}"
        GITLAB_PASSWORD: "{{ gogs_user_password }}"
        GITHUB_URL_PREFIX: "www.github.com"
        GITHUB_ORG: "openshift-roadshow"
        PARKSMAP_IMAGENAME: "parksmap"
        PARKSMAP_VERSION: "1.2.0"
        PARKSMAP_PY: false
        NATIONALPARKS_VERSION: "1.3.0"
        MLBPARKS_VERSION: "1.3.0"
        EXPLORE_PROJECT_NAME: ""
        DISABLE_NATIONALPARKS_DEPLOYMENT_PIPELINE: true
        MW_NAME: "eap"
        CONSOLE_ADDRESS: ${CONSOLE_ADDRESS}
        ROUTER_ADDRESS: ${ROUTER_ADDRESS}
        DOWNLOAD_CLIENT_WINDOWS: "https://github.com/openshift/origin/releases/download/v3.7.2/openshift-origin-client-tools-v3.7.2-282e43f-windows.zip"
        DOWNLOAD_CLIENT_MAC: "https://github.com/openshift/origin/releases/download/v3.7.2/openshift-origin-client-tools-v3.7.2-282e43f-mac.zip"
        DOWNLOAD_CLIENT_LIN64: "https://github.com/openshift/origin/releases/download/v3.7.2/openshift-origin-client-tools-v3.7.2-282e43f-linux-64bit.tar.gz"
        OC_VERSION: "oc v3.7.2+282e43f \nkubernetes v1.7.6+a08f5eeb62"

      modules:
        activate:
        - environment
        - parksmap-architecture
        - install
        - explore
        - docker
        - scaling
        - routes
        - logging
        - permissions
        - remote-ops
        - java
        - databases
      #  - configmap
        - application-health
      #  - pipelines
        - codechanges-gogs
        - templates
        - binary-build
        - debugging
        - clustering
        - further-resources
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: workshopper
    labels:
      app: guides
  spec:
    lookupPolicy:
      local: false
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: osevg/workshopper:latest
      importPolicy: {}
      referencePolicy:
        type: Source
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: guides
    labels:
      app: guides
  spec:
    replicas: 1
    selector:
      app: guides
      deploymentconfig: guides
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: guides
          deploymentconfig: guides
      spec:
        containers:
        - image: workshopper
          envFrom:
            - configMapRef:
                name: guides
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: guides
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /workshop
            name: volume-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: guides
          name: volume-config
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - guides
        from:
          kind: ImageStreamTag
          name: workshopper:latest
      type: ImageChange
- kind: Service
  apiVersion: v1
  metadata:
    name: guides
    labels:
      app: guides
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: guides
      deploymentconfig: guides
    sessionAffinity: None
    type: ClusterIP
- kind: Route
  apiVersion: v1
  metadata:
    name: guides
    labels:
      app: guides
  spec:
    host: ${HOSTNAME}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: guides
      weight: 100
    wildcardPolicy: None
