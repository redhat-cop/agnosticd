---

- name: check if gogs project {{ ocp4_dso_gogs_project_name }} exists
  shell: "{{ ocp4_dso_openshift_cli }} get project {{ ocp4_dso_gogs_project_name }}"
  register: gogs_project_result
  ignore_errors: true
  changed_when: false

- name: create gogs project {{ ocp4_dso_gogs_project_name }}
  shell: "{{ ocp4_dso_openshift_cli }} new-project {{ ocp4_dso_gogs_project_name }} --display-name='{{ ocp4_dso_gogs_project_display_name }}' --description='{{ ocp4_dso_gogs_project_desc }}'"
  when: gogs_project_result is failed

- name: assign user as project admin
  shell: "{{ ocp4_dso_openshift_cli }} adm policy add-role-to-user admin {{ project_admin }} -n {{ ocp4_dso_gogs_project_name }}"
  ignore_errors: true
  when:
    - gogs_project_result is failed
    - project_admin is defined
    - project_admin is not none
    - project_admin|trim() != ""

- name: annotate gogs project {{ ocp4_dso_gogs_project_name }}
  shell: "{{ ocp4_dso_openshift_cli }} annotate --overwrite namespace {{ ocp4_dso_gogs_project_name }} {{ project_annotations }}"
  ignore_errors: true
  when:
    - gogs_project_result is failed
    - project_annotations is defined
    - project_annotations is not none
    - project_annotations|trim() != ""

- name: check if gogs exists
  shell: "{{ ocp4_dso_openshift_cli }} get service {{ ocp4_dso_gogs_service_name }} -n {{ ocp4_dso_gogs_project_name }}"
  register: install_gogs
  ignore_errors: true
  changed_when: false

- name: remove existing gogs if clean deploy requested
  shell: |
    {{ ocp4_dso_openshift_cli }} delete all,cm,pvc -l app={{ ocp4_dso_gogs_service_name }} -n {{ gogs_ocp4_dso_gogs_project_name }}
    {{ ocp4_dso_openshift_cli }} delete sa {{ ocp4_dso_gogs_service_name }} -n {{ gogs_ocp4_dso_gogs_project_name }}
  when:
    - install_gogs is succeeded
    - ocp4_dso_gogs_clean_deploy|bool

- import_tasks: deploy_gogs.yml
  when: ocp4_dso_gogs_clean_deploy|bool or install_gogs is failed

- import_tasks: create_gogs_users.yml
