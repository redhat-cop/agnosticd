---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Generate Admin Password if it is not defined
  set_fact:
    admin_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters') }}"
  when:
  - admin_password is not defined or admin_password|length == 0

- name: Print out Admin Password to user.info
  debug:
    msg: "user.info: OpenShift Terminal is configured for users {{ _terminal_admin_users }} with password {{ admin_password }}"

- name: Generate an OAuthClient digest
  set_fact:
    _oauth_client_secret: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"

- name: Print out OAuthClient digest
  debug:
    msg: "user.info: OpenShift OAuthClient digest set to {{ _oauth_client_secret }}"

- name: Create Project {{ _terminal_project }}}}
  k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/project.j2

- name: Get apps route suffix
  block:
    - k8s:
        state: present
        definition:
          apiVersion: "route.openshift.io/v1"
          kind: Route
          metadata:
            name: dummy
            namespace: "{{ _terminal_project }}"
          spec:
            to:
              kind: Service
              name: dummy
            ports:
            - targetPort: 8080
    - k8s_facts:
        api_version: "route.openshift.io/v1"
        kind: Route
        name: dummy
        namespace: "{{ _terminal_project }}"
      register: dummy_route
    - set_fact:
        apps_hostname_suffix: "{{ dummy_route.resources[0].spec.host|regex_replace('^dummy-' + _terminal_project + '\\.(.*)$', '\\1') }}"
    - k8s:
        state: absent
        api_version: "route.openshift.io/v1"
        kind: Route
        name: dummy
        namespace: "{{ _terminal_project }}"

- name: Create OpenShift objects for Terminal workload
  k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/service.j2
  - ./templates/service_account_hub.j2
  - ./templates/service_account_user.j2
  - ./templates/oauth_client.j2
  - ./templates/role_binding.j2
  - ./templates/config_map_cfg.j2
  - ./templates/config_map_env.j2
  - ./templates/persistent_volume_claim.j2
  - ./templates/deployment.j2
  - ./templates/route.j2

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
