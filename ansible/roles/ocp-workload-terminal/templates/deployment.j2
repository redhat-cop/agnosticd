apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ _terminal_name }}"
  namespace: "{{ _terminal_project }}"
spec:
  strategy: 
    type: Recreate
  replicas: 1
  selector: 
    matchLabels:
      app: "{{ _terminal_name }}"
  template: 
    metadata: 
      labels: 
        app: "{{ _terminal_name }}"
    spec: 
      serviceAccountName: "{{ _terminal_name }}-hub"
      containers: 
      - name: spawner
        image: "{{ _terminal_jupyterhub_image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
        env: 
        - name: CONFIGURATION_TYPE
          value: "hosted-workshop"
        - name: APPLICATION_NAME
          value: "{{ _terminal_name }}"
        - name: TERMINAL_IMAGE
          value: "{{ _terminal_image }}"
        - name: WORKSHOP_MEMORY
          value: "{{ _terminal_workshop_memory }}"
        - name: CONSOLE_MEMORY
          value: "{{ _terminal_console_memory }}"
        - name: VOLUME_SIZE
          value: "{{ _terminal_volume_size }}"
        - name: ADMIN_USERS
          value: "{{ _terminal_admin_users }}"
        - name: IDLE_TIMEOUT
          value: "{{ _terminal_idle_timeout }}"
        - name: OC_VERSION
          value: "{{ _terminal_oc_version }}"
        - name: ODO_VERSION
          value: "{{ _terminal_odo_version }}"
        - name: KUBECTL_VERSION
          value: "{{ _terminal_kubectl_version }}"
        volumeMounts: 
        - mountPath: "/opt/app-root/data"
          name: data
        - name: config
          mountPath: "/opt/app-root/configs"
      volumes: 
      - name: data
        persistentVolumeClaim: 
          claimName: "{{ _terminal_name }}-hub-data"
      - name: config
        configMap: 
          name: "{{ _terminal_name}}-cfg"
          defaultMode: 420