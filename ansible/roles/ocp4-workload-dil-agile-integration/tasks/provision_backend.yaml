---

- name: Evaluate {{backend_project }} namespace if not exists 
  k8s:
    api_version: v1
    kind: Namespace
    name: '{{ backend_project }}'
    state: present

- name: Create S2I templates
  command: >-
    oc apply  -n openshift
    -f https://raw.githubusercontent.com/RedHat-Middleware-Workshops/dayinthelife-integration/master/support/templates/spring-boot-camel-template.json
  ignore_errors: true

- name: Create template for Integr8ly SSO Fuse 7.1
  command: >-
    oc create  -n openshift
    -f https://raw.githubusercontent.com/RedHat-Middleware-Workshops/dayinthelife-integration/master/support/templates/spring-boot-camel-template-SSO-integr8ly.json
  ignore_errors: true

- name: Create Backend Database
  command: >-
    oc new-app  -n {{ backend_project }}
    -f https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/postgresql-ephemeral-template.json
    --param=POSTGRESQL_USER=dbuser
    --param=POSTGRESQL_PASSWORD=password
    --param=POSTGRESQL_DATABASE=sampledb
    --param=POSTGRESQL_VERSION=latest
  register: create_backend_db
  failed_when: create_backend_db.stderr != '' and 'already exists' not in create_backend_db.stderr

- name: Create Backend Location API service
  command: >-
    oc new-app  -n {{ backend_project }}
    s2i-fuse71-spring-boot-camel
    --param=GIT_REPO=https://github.com/RedHat-Middleware-Workshops/dayinthelife-integration
    --param=CONTEXT_DIR=/projects/location-service
    --param=APP_NAME=location-service
    --param=GIT_REF=master
  register: create_location_api_service
  failed_when: create_location_api_service.stderr != '' and 'already exists' not in create_location_api_service.stderr

- name: Create Backend Location Detail SOAP service
  command: >-
    oc new-app  -n {{ backend_project }}
    s2i-fuse71-spring-boot-camel
    --param=GIT_REPO=https://github.com/RedHat-Middleware-Workshops/dayinthelife-integration
    --param=CONTEXT_DIR=/projects/location-soap
    --param=APP_NAME=location-soap
    --param=GIT_REF=master
  register: create_location_detail_soap_service
  failed_when: create_location_detail_soap_service.stderr != '' and 'already exists' not in create_location_detail_soap_service.stderr

- name: Create Backend Location Detail SOAP to REST service
  command: >-
    oc new-app  -n {{ backend_project }}
    s2i-fuse71-spring-boot-camel
    --param=GIT_REPO=https://github.com/RedHat-Middleware-Workshops/dayinthelife-integration
    --param=CONTEXT_DIR=/projects/location-soap2rest
    --param=APP_NAME=location-soap2rest
    --param=GIT_REF=master
  register: create_location_soap_rest_service
  failed_when: create_location_soap_rest_service.stderr != '' and 'already exists' not in create_location_soap_rest_service.stderr


- name: Extract key_cloak_admin_password
  k8s_info: 
    kind: Secret
    name: credential-sso
    namespace: '{{ sso_project }}'
  register: key_cloak_result

- set_fact:
    key_cloak_admin_password: "{{ key_cloak_result.resources[0].data.ADMIN_PASSWORD | b64decode }}"

- name: Create ThreeScale Automate service
  command: >-
    oc new-app  -n {{ backend_project }}
    s2i-fuse71-spring-boot-camel-integr8ly-sso
    --param=GIT_REPO=https://github.com/RedHat-Middleware-Workshops/dayinthelife-integration
    --param=CONTEXT_DIR=/projects/threescale-automate
    --param=APP_NAME=threescale-automate
    --param=GIT_REF=master
    --param=SSO_USERNAME=admin
    --param=SSO_PASSWORD={{ key_cloak_admin_password }}
  register: create_threescale_automate
  failed_when: create_threescale_automate.stderr != '' and 'already exists' not in create_threescale_automate.stderr
