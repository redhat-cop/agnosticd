---
- name: Process user namespace
  k8s:
    api_version: v1
    kind: Namespace
    name: 'user{{ item }}'
    state: present
  register: _user_namespace
  retries: 30
  delay: 5
  until:
   - _user_namespace is succeeded

- name: Process user che namespace
  k8s:
    api_version: v1
    kind: Namespace
    name: 'user{{ item }}-che'
    state: present

- name: Create Role to access Terminal
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'pod-exec-role.yaml.j2') }}"  
  when: item == "1"

- name: Give user{{ item }} access to projects
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'user-rolebinding.yaml.j2') }}"
  loop:
    - user: 'user{{ item }}'
      namespace: 'user{{ item }}'
      role: admin
    - user: 'user{{ item }}'
      namespace: 'user{{ item }}-che'
      role: admin
    - user: 'user{{ item }}'
      namespace: 'user{{ item }}-{{fuse_project}}'
      role: admin
    - user: 'user{{ item }}'
      namespace: '{{ shared_namespace }}'
      role: view
    - user: 'user{{ item }}'
      namespace: '{{ shared_namespace }}'
      role: pod-exec    
  loop_control:
    loop_var: item_project

- name: Create Camel Integration Platform for Each User project
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'camel_integration_platform.yaml.j2') }}"

- name: Create Webpage application for each user
  command: >-
    oc new-app  -n user{{ item }}
    nodejs:10 https://github.com/jbossdemocentral/3scaleworkshop-wwwpage#secured 
    --name www 
    --build-env API_BACKEND_URL=https://location-user{{ item }}-apicast-staging.{{ route_subdomain }}/locations 
    --build-env SSO_URL=https://keycloak-{{ sso_project }}.{{ route_subdomain }} 
    --build-env SSO_REALM=user{{ item }}-realm
    --build-env CLIENT_ID=CHANGE_ME
  register: create_webpage_application
  failed_when: create_webpage_application.stderr != '' and 'already exists' not in create_webpage_application.stderr

- name: Create webapp route
  command: oc expose svc/www -n user{{ item }}
  register: create_webapp_route
  failed_when: create_webapp_route.stderr != '' and 'already exists' not in create_webapp_route.stderr
