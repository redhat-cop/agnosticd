kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ gogs_app_name }}-postgresql
  namespace: {{ gogs_project }}
  labels:
    app: {{ gogs_app_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ gogs_app_name }}-postgresql
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ gogs_app_name }}-postgresql
    spec:
      restartPolicy: Always
      serviceAccountName: {{ gogs_app_name }}
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d
                  ${POSTGRESQL_DATABASE} -c 'SELECT 1'
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          env:
            - name: POSTGRESQL_USER
              value: {{ database_user }}
            - name: POSTGRESQL_PASSWORD
              value: {{ database_password }}
            - name: POSTGRESQL_DATABASE
              value: {{ database_name }}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: '{{ database_max_connections }}'
            - name: POSTGRESQL_SHARED_BUFFERS
              value: {{ database_shared_buffers }}
            - name: POSTGRESQL_ADMIN_PASSWORD
              value: {{ database_admin_password }}
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: gogs-postgres-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: 'registry.access.redhat.com/rhscl/postgresql-96-rhel7:latest'
      serviceAccount: gogs
      volumes:
        - name: gogs-postgres-data
          persistentVolumeClaim:
            claimName: {{ gogs_app_name }}-postgresql-data
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600