apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ gogs_app_name }}
  name: {{ gogs_app_name }}
  namespace: {{ gogs_project }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ gogs_app_name }}
  template:
    metadata:
      labels:
        app: {{ gogs_app_name }}
    spec:
      serviceAccount: {{ gogs_app_name }}
      containers:
      - image: docker.io/openshiftdemos/gogs:{{ gogs_version }}
        imagePullPolicy: Always
        name: {{ gogs_app_name }}
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - name: gogs-data
          mountPath: /opt/gogs/data
        - name: gogs-config
          mountPath: /etc/gogs/conf
        readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
        livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: gogs-data
        persistentVolumeClaim:
          claimName: {{ gogs_app_name }}-data
      - name: gogs-config
        configMap:
          name: {{ gogs_app_name }}-config
          items:
            - key: app.ini
              path: app.ini
      resources:
        limits:
          cpu: 1
          memory: 2Gi
        requests:
          cpu: 200m
          memory: 512Mi