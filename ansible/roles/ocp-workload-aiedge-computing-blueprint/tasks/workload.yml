---
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

# Set up the combined dictionary for the workload
- name: Set up ocp_workload_aiedge_computing_blueprint combined dictionary
  set_fact:
    ocp_workload_aiedge_computing_blueprint: >-
      {{ ocp_workload_aiedge_computing_blueprint_defaults
       | combine(ocp_workload_aiedge_computing_blueprint_vars   | default( {} ),
                 ocp_workload_aiedge_computing_blueprint_secrets| default( {} ),
                 recursive=true )
      }}

# Because now secrets are part of the combined dictionary use
# verbosity 2 to prevent printing the dictionary during every run.
- name: Print combined role variables
  debug:
    var: ocp_workload_aiedge_computing_blueprint
    verbosity: 2

- name: Get cluster ingress config
  k8s_info:
    api_version: config.openshift.io/v1
    kind: ingress
    name: cluster
  register: core_cluster_config_ingress_object
  until: core_cluster_config_ingress_object.resources | length > 0
  retries: 10
  delay: 20

# Wildcard domain is the base domain for all project routes in the cluster
- set_fact:
    core_cluster_wildcard_domain:
      "{{ core_cluster_config_ingress_object.resources[0].spec.domain }}"

# Expose internal registry for core cluster
- name: Expose the OpenShift internal registry
  k8s:
    state: present
    definition:
      apiVersion: imageregistry.operator.openshift.io/v1
      kind: Config
      metadata:
        name: cluster
      spec:
        defaultRoute: true

- name: Get the OpenShift registry route object
  k8s_info:
    name: default-route
    api_version: route.openshift.io/v1
    kind: route
    namespace: openshift-image-registry
  register: image_registry_object
  until: image_registry_object.resources | length > 0
  retries: 10
  delay: 20

- name: Set the url for the exposed image registry url
  set_fact:
    core_imageregistry_url: "{{ image_registry_object.resources[0].spec.host }}"

- name: Get the gitea route
  k8s_info:
    name: gitea
    api_version: route.openshift.io/v1
    kind: route
    namespace: gitea
    label_selectors:
      - "app = gitea"
  register: gitea_route_object
  until: gitea_route_object|length > 0
  retries: 10
  delay: 20

- name: Set the gitea server host
  set_fact:
    gitea_server_host: "{{ gitea_route_object.resources[0].spec.host }}"

- name: Set the url gitea server and organization
  set_fact:
    gitea_server_host_org: "{{ gitea_server_host }}/{{ gitea_user }}"
    gitea_repo_org_url: "https://{{ gitea_server_host }}/{{ gitea_user }}"
  vars:
    gitea_user: "{{ ocp_workload_aiedge_computing_blueprint.gitea_user }}"


####################################################################################################
# GIT REPO SETUP
####################################################################################################
- name: Set the temporary location directory where the repo will be saved
  tempfile:
    state: directory
    suffix: -redhat-edge-computing
  register: edge_computing_root_dir

- set_fact:
    hub_repo_dir: "{{ edge_computing_root_dir.path }}/blueprint-management-hub"
    edge_repo_dir: "{{ edge_computing_root_dir.path }}/blueprint-industrial-edge"
    manuela_dev_repo_dir: "{{ edge_computing_root_dir.path }}/manuela-dev"
    manuela_gitops_repo_dir: "{{ edge_computing_root_dir.path }}/manuela-gitops"

# Clone the manuela dev & gitops repo and create a branch for the demo
- name: Clone the MANUela repos
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    refspec: '+refs/tags/*:refs/tags/*'
  loop:
    # yamllint disable rule:line-length
    - repo: "{{ gitea_repo_org_url }}/{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_hub_repo_name }}"
      dest: "{{ hub_repo_dir }}"
    - repo: "{{ gitea_repo_org_url }}/{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_edge_repo_name }}"
      dest: "{{ edge_repo_dir }}"
    - repo: "{{ gitea_repo_org_url }}/{{ ocp_workload_aiedge_computing_blueprint.manuela_dev_repo_name }}"
      dest: "{{ manuela_dev_repo_dir }}"
    - repo: "{{ gitea_repo_org_url }}/{{ ocp_workload_aiedge_computing_blueprint.manuela_gitops_repo_name }}"
      dest: "{{ manuela_gitops_repo_dir }}"
    # yamllint enable rule:line-length

- name: Set the git config user name
  git_config:
    name: user.name
    repo: "{{ item }}"
    scope: local
    value: "{{ ocp_workload_aiedge_computing_blueprint.git_config_user_name }}"
  loop:
    - "{{ hub_repo_dir }}"
    - "{{ edge_repo_dir }}"
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"

- name: Set the git config email
  git_config:
    name: user.email
    repo: "{{ item }}"
    scope: local
    value: "{{ ocp_workload_aiedge_computing_blueprint.git_config_user_email }}"
  loop:
    - "{{ hub_repo_dir }}"
    - "{{ edge_repo_dir }}"
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"

- name: Add remote tracking for gitea with auth in url
  command:
    chdir: "{{ item.repo_dir }}"
    cmd: >-
      git remote add gitea https://{{
      ocp_workload_aiedge_computing_blueprint.gitea_user }}:{{
      ocp_workload_aiedge_computing_blueprint.gitea_user_pw }}@{{
      gitea_server_host_org }}/{{ item.repo_name }}
  loop:
    # yamllint disable rule:line-length
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_hub_repo_name }}"
      repo_dir: "{{ hub_repo_dir }}"
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_edge_repo_name }}"
      repo_dir: "{{ edge_repo_dir }}"
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.manuela_dev_repo_name }}"
      repo_dir: "{{ manuela_dev_repo_dir }}"
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.manuela_gitops_repo_name }}"
      repo_dir: "{{ manuela_gitops_repo_dir }}"
    # yamllint enable rule:line-length

  # We are pulling a stable tag for the demo and resetting master to that commit
- name: Reset each repo master to the specified tag
  command:
    chdir: "{{ item.repo_dir }}"
    cmd: "git reset --hard {{ item.repo_branch }}"
  loop:
    # yamllint disable rule:line-length
    - repo_branch: "{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_hub_repo_branch }}"
      repo_dir: "{{ hub_repo_dir }}"
    - repo_branch: "{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_edge_repo_branch }}"
      repo_dir: "{{ edge_repo_dir }}"
    - repo_branch: "{{ ocp_workload_aiedge_computing_blueprint.manuela_dev_repo_branch }}"
      repo_dir: "{{ manuela_dev_repo_dir }}"
    - repo_branch: "{{ ocp_workload_aiedge_computing_blueprint.manuela_gitops_repo_branch }}"
      repo_dir: "{{ manuela_gitops_repo_dir }}"
    # yamllint enable rule:line-length
  when: ocp_workload_aiedge_computing_blueprint.git_repo_reset | bool

- name: Update all git repo urls to reference gitea as the host
  replace:
    path: "{{ item }}"
    regexp: 'github\.com\/redhat-edge-computing'
    replace: "{{ gitea_server_host_org }}"
  loop:
    # yamllint disable rule:line-length
    - "{{ hub_repo_dir }}/README.md"
    - "{{ hub_repo_dir }}/base/02_cluster-addons/07_tekton/configmaps/environment.yaml"
    - "{{ hub_repo_dir }}/base/03_services/argocd-operator-subs/channel.yaml"
    - "{{ hub_repo_dir }}/base/03_services/manuela-central/argocd-hub-centraldatacenter.yaml"
    - "{{ hub_repo_dir }}/base/03_services/manuela-factory-subs/channel.yaml"
    - "{{ hub_repo_dir }}/base/03_services/manuela-ml-workspace/kustomization.yaml"
    - "{{ hub_repo_dir }}/sites/edge-mgmt-hub.gcp.devcluster.openshift.com/00_install-config/kustomization.yaml"
    - "{{ hub_repo_dir }}/sites/edge-mgmt-hub.gcp.devcluster.openshift.com/README.md"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-data-lake/manuela-data-lake-central-kafka-cluster.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-data-lake/manuela-data-lake-central-s3-store.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-data-lake/manuela-data-lake-factory-mirror-maker.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-tst/manuela-tst-all-application.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/manuela-stormshift-line-dashboard-application.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/manuela-stormshift-machine-sensor-application.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/manuela-stormshift-messaging-application.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/manuela-stormshift-line-dashboard-application.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/manuela-stormshift-machine-sensor-application.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/manuela-stormshift-messaging-application.yaml"
    - "{{ manuela_gitops_repo_dir }}/meta/argocd-hub-centraldatacenter.yaml"
    - "{{ manuela_gitops_repo_dir }}/meta/argocd-hub-factorydatacenter.yaml"
    - "{{ manuela_gitops_repo_dir }}/meta/argocd-staging-gcp-linedataserver.yaml"
    - "{{ edge_repo_dir }}/sites/mvp.edge.industrial/00_install-config/kustomization.yaml"
    - "{{ edge_repo_dir }}/sites/mvp.edge.industrial/03_services/manuela-edge/channel-sensors.yaml"
    - "{{ edge_repo_dir }}/sites/staging-edge.devcluster.openshift.com/00_install-config/kustomization.yaml"
    - "{{ edge_repo_dir }}/sites/staging-edge.devcluster.openshift.com/03_services/argocd-gitops-factory/argocd-staging-aws-factorydatacenter.yaml"
    - "{{ edge_repo_dir }}/sites/staging-edge.devcluster.openshift.com/03_services/argocd-gitops-factory/argocd-staging-aws-linedataserver.yaml"
    - "{{ edge_repo_dir }}/sites/staging-edge.gcp.devcluster.openshift.com/00_install-config/kustomization.yaml"
    - "{{ edge_repo_dir }}/sites/staging-edge.gcp.devcluster.openshift.com/03_services/argocd-gitops-factory/argocd-staging-gcp-factorydatacenter.yaml"
    - "{{ edge_repo_dir }}/sites/staging-edge.gcp.devcluster.openshift.com/03_services/argocd-gitops-factory/argocd-staging-gcp-linedataserver.yaml"
    # yamllint enable rule:line-length

- name: Commit changes to the application repoURLs
  command:
    chdir: "{{ item }}"
    cmd: "git commit -a -m 'Update git repo URLs to use gitea server'"
  loop:
    - "{{ hub_repo_dir }}"
    - "{{ edge_repo_dir }}"
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"
  ignore_errors: yes

- name: Update all quay urls to using internal registry
  replace:
    path: "{{ item }}"
    # yamllint disable-line rule:line-length
    regexp: 'quay\.io/(redhat-edge-computing|manuela)/(iot-(consumer|frontend|software-sensor|anomaly-detection))'
    replace: '{{ core_imageregistry_url }}/manuela-tst-all/\2'
  loop:
    # yamllint disable rule:line-length
    - "{{ hub_repo_dir }}/base/02_cluster-addons/07_tekton/configmaps/environment.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-quickstart/line-dashboard/kustomization.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-quickstart/machine-sensor/kustomization.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-quickstart/messaging/kustomization.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/templates/manuela-openshift-prod/anomaly-detection/anomaly-detection-is.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/templates/manuela-openshift-prod/line-dashboard/line-dashboard-is.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/templates/manuela-openshift-prod/machine-sensor/machine-sensor-is.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/templates/manuela-openshift-prod/messaging/messaging-is.yaml"
    # yamllint enable rule:line-length

- name: Commit changes to the application repoURLs
  command:
    chdir: "{{ item }}"
    cmd: "git commit -a -m 'Update quay repo URLs to use internal registry'"
  loop:
    - "{{ hub_repo_dir }}"
    - "{{ edge_repo_dir }}"
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"
  ignore_errors: yes

- name: Update all manuela-tst references to the route for edge-mgmt-hub.gcp.devcluster domain
  replace:
    path: "{{ item }}"
    # yamllint disable-line rule:line-length
    regexp: 'apps\.(edge-mgmt-hub\.gcp\.devcluster|staging-edge(\.gcp)?\.devcluster)\.openshift\.com'
    replace: '{{ core_cluster_wildcard_domain }}'
  loop:
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-tst/line-dashboard-configmap-config.json"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-tst/line-dashboard-route.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-tst/machine-sensor-1-configmap.properties"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-tst/machine-sensor-2-configmap.properties"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-tst/messaging-route.yaml"
    # yamllint disable rule:line-length

- name: Update all factory and line references to the route for edge cluster placeholder
  replace:
    path: "{{ item }}"
    # yamllint disable-line rule:line-length
    regexp: 'apps\.(edge-mgmt-hub\.gcp\.devcluster|staging-edge(\.gcp)?\.devcluster)\.openshift\.com'
    replace: '{{ ocp_workload_aiedge_computing_blueprint.edge_cluster_domain_placeholder }}'
  loop:
    # yamllint disable rule:line-length
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-argocd-aggregator/hub/prometheus-route.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-argocd-aggregator/hub/pushprox-proxy-route.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-argocd-aggregator/spoke-ocp4/pushprox-client-deployment.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-data-lake/central-kafka-cluster/kafka-cluster.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-data-lake/central-kafka-cluster/kafka-tls-certificate-and-key.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-data-lake/central-s3-store/kafka-to-s3-cm.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-data-lake/factory-mirror-maker/factory-to-central-mirror-maker2.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-quickstart/line-dashboard/kustomization.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/line-dashboard/line-dashboard-configmap-config.json"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/line-dashboard/line-dashboard-route.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/machine-sensor/machine-sensor-1-configmap.properties"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/machine-sensor/machine-sensor-2-configmap.properties"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-aws/messaging/route.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/line-dashboard/line-dashboard-configmap-config.json"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/line-dashboard/line-dashboard-route.yaml"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/machine-sensor/machine-sensor-1-configmap.properties"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/machine-sensor/machine-sensor-2-configmap.properties"
    - "{{ manuela_gitops_repo_dir }}/config/instances/manuela-stormshift-staging-gcp/messaging/route.yaml"
    # yamllint enable rule:line-length

- name: Commit changes to the gitops routes
  command:
    chdir: "{{ item }}"
    cmd: "git commit -a -m 'Update route to use cluster wildcard domain'"
  loop:
    - "{{ hub_repo_dir }}"
    - "{{ edge_repo_dir }}"
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"
  ignore_errors: yes


- name: Add gitea user to blueprint secret
  replace:
    # yamllint disable rule:line-length
    path: "{{ hub_repo_dir }}/base/02_cluster-addons/07_tekton/secrets/github.yaml"
    regexp: 'GITHUBUSER'
    replace: "{{ ocp_workload_aiedge_computing_blueprint.gitea_user | b64encode }}"
    # yamllint enable rule:line-length

- name: Add gitea user token to blueprint
  replace:
    # yamllint disable rule:line-length
    path: "{{ hub_repo_dir }}/base/02_cluster-addons/07_tekton/secrets/github.yaml"
    regexp: 'GITHUBTOKEN'
    replace: "{{ ocp_workload_aiedge_computing_blueprint.gitea_user_pw | b64encode }}"
    # yamllint enable rule:line-length

- name: Commit changes to the tekton git secret
  command:
    chdir: "{{ hub_repo_dir }}"
    cmd: "git commit -a -m 'Update git user auth for tekton pipelines'"
  ignore_errors: yes

###################################################################################################
# Deploy infrastructure for the Core DataCenter
###################################################################################################
- name: Install Auto Approver kustomize manifest
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/02_cluster-addons/{{ item }}"
  loop:
    - "01_autoapprover/00_sa.yaml"
    - "01_autoapprover/01_crb.yaml"
    - "01_autoapprover/02_approver.yaml"

- name: Install ArgoCD kustomize manifest
  command:
    cmd: "oc apply -k '{{ hub_repo_dir }}/base/02_cluster-addons/03_argocd'"
  # Retry while we wait for the ArgoCD CRD creation
  register: result
  until: result.rc == 0
  retries: 10
  delay: 20

- name: Install OpenShift Pipeline kustomize manifest
  command:
    # yamllint disable-line rule:line-length
    cmd: "oc apply -k '{{ hub_repo_dir }}/base/02_cluster-addons/04_openshift-pipelines'"

- name: Install manuela-ci objects
  command:
    cmd: "oc apply -k '{{ hub_repo_dir }}/base/02_cluster-addons/05_manuela-ci'"

- name: Install Open Data Hub operator
  k8s:
    state: present
    # yamllint disable-line rule:line-length
    src: "{{ hub_repo_dir }}/base/02_cluster-addons/06_opendatahub/subscription.yaml"

####################################################################################################
# INSTALLPLAN APPROVAL
####################################################################################################
- name: Set InstallPlan Namespace
  set_fact:
    install_operator_namespace: "openshift-operators"

- name: "Approve pending InstallPlan for Operators"
  include_tasks: approve_installplan.yml
  loop:
    - openshift-pipelines-operator
    - opendatahub-operator
  loop_control:
    loop_var: install_operator_csv_nameprefix

####################################################################################################
# END INSTALLPLAN APPROVAL
####################################################################################################

###################################################################################################
# Create Image Registry auth info
###################################################################################################

- name: Enable anonymous image pulls from the exposed registry
  k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: image-puller
      subjects:
        - kind: Group
          apiGroup: rbac.authorization.k8s.io
          name: system:unauthenticated
        - kind: Group
          apiGroup: rbac.authorization.k8s.io
          name: system:authenticated
      roleRef:
        kind: ClusterRole
        apiGroup: rbac.authorization.k8s.io
        name: system:image-puller

- name: Create Service Account for Image Registry Access
  k8s:
    state: present
    name: edge-computing
    kind: ServiceAccount
    namespace: >-
      {{ ocp_workload_aiedge_computing_blueprint.pipeline_namespace }}

- name: Query the server for the service account with secrets
  k8s_info:
    name: edge-computing
    kind: ServiceAccount
    namespace: >-
      {{ ocp_workload_aiedge_computing_blueprint.pipeline_namespace }}
  register: edge_computing_service_account
  until: edge_computing_service_account|length > 0
  retries: 10
  delay: 20

- name: Get the dockercfg secret name for edge-computing service account
  set_fact:
    edge_computing_dockercfg_secret_name:
      # yamllint disable-line rule:line-length
      "{{ edge_computing_service_account.resources[0].secrets | map(attribute='name') | list | select('match', '.+dockercfg.+' ) | list | first }}"

- name: Create ClusterRoleBinding for edge-computing SA as registry-editor
  k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: edge-computing-registry-editor
        namespace: >-
          {{ ocp_workload_aiedge_computing_blueprint.pipeline_namespace }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: registry-editor
      subjects:
        - kind: ServiceAccount
          name: edge-computing
          namespace: >-
            {{ ocp_workload_aiedge_computing_blueprint.pipeline_namespace }}

- name: Get edge-computing dockerconfig secret
  k8s_info:
    name: "{{ edge_computing_dockercfg_secret_name }}"
    namespace: >-
      {{ ocp_workload_aiedge_computing_blueprint.pipeline_namespace }}
    kind: Secret
  register: edge_computing_dockercfg_secret
  until: edge_computing_dockercfg_secret|length > 0
  retries: 10
  delay: 20

- name: "Get the dockercfg auth tokens for authenticating to the registry"
  set_fact:
    edge_computing_dockercfg: >-
      {{ edge_computing_dockercfg_secret.resources[0].data['.dockercfg'] |
      b64decode | from_json }}

- name: "Get the dockercfg auth token for the internal registry"
  set_fact:
    # yamllint disable-line rule:line-length
    core_registry_auth_token: "{{ edge_computing_dockercfg['image-registry.openshift-image-registry.svc:5000'].auth }}"

- name: Create image registry build secret
  set_fact:
    dockerconfigjson: >-
      {{ ocp_workload_aiedge_computing_blueprint.dockerconfigjson_template |
      replace('INTERNAL_REGISTRY_URL', core_imageregistry_url ) |
      replace('INTERNAL_REGISTRY_AUTH_TOKEN', core_registry_auth_token) |
      from_json }}

- name: Base64 encrypt dockerconfig json
  set_fact:
    dockerconfigjson_base64: "{{ dockerconfigjson | to_json | b64encode }}"

- name: Add image registry build secret
  replace:
    # yamllint disable-line rule:line-length
    path: "{{ hub_repo_dir }}/base/02_cluster-addons/07_tekton/secrets/quay-build-secret.yaml"
    regexp: 'DOCKERCONFIGJSON'
    replace: "{{ dockerconfigjson_base64 }}"

- name: Commit quay build secret changes to the blueprint
  command:
    chdir: "{{ hub_repo_dir }}"
    cmd: "git commit -a -m 'Update quay build secret'"
  ignore_errors: yes

- name: Push all changes back to the git repos
  command:
    chdir: "{{ item.repo_dir }}"
    cmd: "git push -f gitea master"
  loop:
    # yamllint disable rule:line-length
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_hub_repo_name }}"
      repo_dir: "{{ hub_repo_dir }}"
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.acm_blueprint_edge_repo_name }}"
      repo_dir: "{{ edge_repo_dir }}"
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.manuela_dev_repo_name }}"
      repo_dir: "{{ manuela_dev_repo_dir }}"
    - repo_name: "{{ ocp_workload_aiedge_computing_blueprint.manuela_gitops_repo_name }}"
      repo_dir: "{{ manuela_gitops_repo_dir }}"
    # yamllint enable rule:line-length

- name: Check for tekton pipeline CRD
  k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: customresourcedefinition
    name: pipelines.tekton.dev
  register: result
  until: result.resources|length > 0
  retries: 10
  delay: 60

- name: Create tekton pipelines
  command:
    cmd: "oc apply -k '{{ hub_repo_dir }}/base/02_cluster-addons/07_tekton'"
  # Retry while we wait for OpenShift Pipelines CRD creation
  retries: 30
  delay: 20

- name: Update the github-push tekton task to use gitea as the push server
  k8s:
    state: present
    definition: >-
      {{ lookup('template', './templates/github-push.task.yaml.j2' ) |
      from_yaml }}

###################################################################################################
# Advanced Cluster Management
###################################################################################################
- name: Create the ACM gitops namespace
  k8s:
    state: present
    # yamllint disable rule:line-length
    src: "{{ hub_repo_dir }}/base/03_services/argocd-operator-subs/namespace.yaml"

- name: Create the ACM gitops channel
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/argocd-operator-subs/channel.yaml"

- name: Create the ACM gitops placementrule
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/argocd-operator-subs/placementrule-labels.yaml"

- name: Create the ACM subscription for ArgoCD operator
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/argocd-operator-subs/subscription-labels.yaml"

- name: Create the ACM namespace for the blueprint-management-hub
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/manuela-factory-subs/namespace.yaml"

- name: Create the ACM channel for the blueprint-management-hub repo
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/manuela-factory-subs/channel.yaml"

- name: Create the ACM factory application placementrule
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/manuela-factory-subs/placementrule-labels.yaml"

- name: Create the ACM subscription for MANUela factory
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/manuela-factory-subs/subscription-labels-devcluster-factory.yaml"

- name: Create the Manuela centraldatacenter argocd application
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/manuela-central/argocd-hub-centraldatacenter.yaml"

- name: Create the Manuela ML workspace
  k8s:
    state: present
    api_version: v1
    name: manuela-ml-workspace
    kind: Namespace

- name: Create the Open Data Hub resources
  k8s:
    state: present
    # yamllint disable-line rule:line-length
    src: "{{ hub_repo_dir }}/base/03_services/odh-resources/odh-kfdef.yaml"

- name: Create the tekton PipelineRuns
  k8s:
    state: present
    src: "{{ hub_repo_dir }}/base/03_services/tekton/{{ item }}"
    wait: true
  loop:
    - "seed-iot-anomaly-detection-run.yaml"
    - "seed-iot-consumer-run.yaml"
    - "seed-iot-frontend-run.yaml"
    - "seed-iot-software-sensor-run.yaml"


# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
