---

# Below are the variables  which are required to run role
  # vars:
  #   satellite_url: https://satellite1.cap01.example.opentlc.com
  #   satellite_admin: admin
  #   satellite_admin_password: r3dh4t1!
  #   satellite_org: gpte
  #   guid: mit01

# This is Api based role so should run on control node (localhost)
- name: List satellite hosts
  command: >-
    curl -k -u 'admin:r3dh4t1!' https://satellite1.cap01.example.opentlc.com/api/hosts 
  register: curl_output
  delegate_to: localhost

# - debug:
#     msg: "{{ curl_output.stdout | from_json | json_query('results')| map(attribute='name')
#       | zip( 
#           (curl_output.stdout | from_json | json_query('results') | map(attribute='organization_name') )
#       ) | map('join', ' ')  | list }}"        

- name: All Host list
  set_fact:
      all_host: "{{ 
              curl_output.stdout | from_json | json_query('results')| map(attribute='name')
              | zip( (curl_output.stdout | from_json | json_query('results') | map(attribute='organization_name') )) 
              | map('join', ' ')  
              | list 
              }}" 

- name: Host list for {{ guid }} GUID
  set_fact:
    host_list: "{{ host_list | d([]) + [ item.split()[0] ] }}"
  when: 
    - guid in item
    - satellite_org in item
  loop: "{{ all_host }}"

- name: Unregister host from satellite
  theforeman.foreman.foreman_host:
    username: "{{ satellite_admin }}"
    password: "{{ satellite_admin_password }}"
    server_url: "{{ satellite_url }}"
    validate_certs: no
    name: "{{ item }}"
    organization: "{{ satellite_org }}"
    state: absent
  loop: "{{ host_list }}"
