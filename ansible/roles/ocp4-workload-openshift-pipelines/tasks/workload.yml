---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Install tkn CLI
  become: yes
  unarchive:
    src: "https://github.com/tektoncd/cli/releases/download/v{{ _pipelines_tkn_version }}/tkn_{{ _pipelines_tkn_version }}_Linux_x86_64.tar.gz"
    remote_src: yes
    dest: /usr/bin
    mode: 0775
    owner: root
    group: root

- name: Create OpenShift Objects for OpenShift Pipelines
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/project.j2
  - ./templates/catalog_source_config.j2
  - ./templates/operator_group.j2
  - ./templates/subscription.j2

- name: Wait until InstallPlan is Created
  shell: oc get installplan -o name -n "{{ _pipelines_project }}" | awk -F "/" '{print $2}'
  register: install_plan
  retries: 30
  delay: 10
  until: install_plan.stdout != ""

- name: Ensure InstallPlan is Approved
  command: oc patch installplan "{{ install_plan.stdout }}" --type merge -p '{"spec":{"approved":true}}' -n "{{ _pipelines_project }}"

- name: Wait until CSV is Installed
  command: oc get csv -o jsonpath --template='{$.items[:1].status.phase}' -n "{{ _pipelines_project }}"
  register: csv
  retries: 30
  delay: 10
  until: csv.stdout == "Succeeded"

- name: Create Pipelines Install
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/pipelines.j2

- name: Create dashboard project
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/dashboard_project.j2

- name: Create dashboard
  shell: "oc apply -f https://github.com/tektoncd/dashboard/releases/download/{{ _pipelines_dashboard_version }}/openshift-tekton-dashboard.yaml"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
