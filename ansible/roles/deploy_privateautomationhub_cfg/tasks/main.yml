---
- name: Ensure yum/dnf pre-requisites in place
  package:
    name: "{{ deploy_automationcontroller_dnf_packages }}"
    state: present

- name: Download Ansible controller installer tar.gz
  get_url:
    url: "{{ automationcontroller_installer.url }}"
    dest: /tmp/automationcontroller.tar.gz
    password: "{{ automationcontroller_installer.password }}"
    username: "{{ automationcontroller_installer.username }}"

- name: Create installer directory for Ansible controller
  file:
    path: /tmp/automationcontroller_installer
    state: directory

- name: Extract Ansible controller installer tar.gz
  unarchive:
    src: /tmp/automationcontroller.tar.gz
    dest: /tmp/automationcontroller_installer
    remote_src: true
    extra_opts:
      - '--strip-components=1'
      - '--show-stored-names'

- name: Create template based inventory file for Private Automation Hub install
  template:
    src: privateautomationhub_inventory.j2
    dest: /tmp/automationcontroller_installer/inventory
    backup: yes

- name: Run the AAP installer for PAH installation
  shell: "./setup.sh"
  args:
    chdir: /tmp/automationcontroller_installer
  async: 1400
  poll: 15
  tags:
    - deploy_privateautomationhub

- name: Issue LE certs for PAH
  include_tasks: issue_cert.yml

# - name: Wait for Ansible controller to be up
#   uri:
#     url: "https://{{groups['automationcontroller'][0] }}/api/v2/ping/"
#     method: GET
#     user: "{{ deploy_automationcontroller_admin_user }}"
#     password: "{{ deploy_automationcontroller_admin_password }}"
#     validate_certs: false
#   register: r_automationcontroller_ping
#   until:
#     - r_automationcontroller_ping.json is defined
#     - r_automationcontroller_ping.json.instances[0].capacity > 0
#     - r_automationcontroller_ping.json.instance_groups[0].capacity > 0
#   retries: 60
#   delay: 10

# - name: Display Ansible controller /api/v2/ping results
#   debug:
#     msg: '{{ r_automationcontroller_ping.json }}'
...
