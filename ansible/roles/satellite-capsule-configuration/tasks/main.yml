---
- name: Disable all local repos
  shell: >-
    yum-config-manager repo --disable "*"

- name: setup satellite name
  set_fact:
    satellite_fqdn: "{{ item | regex_replace('.internal',subdomain_base_suffix) }}"
  loop: "{{ groups['satellites'] }}"

- name: Download Cert from Satellite
  get_url:
<<<<<<< HEAD
    url: "https://{{satellite_fqdn}}/pub/katello-ca-consumer-latest.noarch.rpm"
    dest: /root/katello-ca-consumer-latest.noarch.rpm
    mode: 0664
    validate_certs: no
  # loop: "{{ groups['satellites'] }}"
=======
    url: "https://{{item}}/pub/katello-ca-consumer-latest.noarch.rpm"
    dest: /root/katello-ca-consumer-latest.noarch.rpm
    mode: 0664
    validate_certs: no
  loop: "{{ groups['satellites'] }}"
>>>>>>> b8e0700692a0f8ae13a0204a129408056f6ac00e

- name: Remove rh-amazon-rhui-client package
  tags: packer
  yum:
    name: rh-amazon-rhui-client
    state: absent

- name: Install CA certificate
  yum:
    name: /root/katello-ca-consumer-latest.noarch.rpm
    state: present

- name: Install certs
  # use rpm here to avoid issue when yum is broken (chicken&egg)
  yum:
    name:  "/root/katello-ca-consumer-latest.noarch.rpm"
    state: present

# - name: Delete Cert Package
#   file:
#     name: /root/katello-ca-consumer-latest.noarch.rpm
#     state: absent

- name: Register with activation-key
  redhat_subscription:
    state: present
<<<<<<< HEAD
    server_hostname: "{{satellite_fqdn}}"
    activationkey: "{{activation_key_name}}"
    org_id: "{{org_label}}"
  # loop: "{{ groups['satellites'] }}"
=======
    server_hostname: "{{item}}"
    activationkey: "{{activation_key_name}}"
    org_id: "Default_Organization"
  loop: "{{ groups['satellites'] }}"
>>>>>>> b8e0700692a0f8ae13a0204a129408056f6ac00e

- name: Disable all repos
  command: subscription-manager repos --disable "*"

- name: Enable repos for RHEL
  rhsm_repository:
    name: "{{ item }}"
    state: enabled
  with_items:
    - '{{ capsule_repos }}'

- name: Install Katello Agent
  yum:
    name: katello-agent
    state: present

- name: Start Katello Agent
  service:
    name: goferd
    state: started
    enabled: yes

- name: Copy capsule cert tar from satellite 
  synchronize:
    src: /root/{{ inventory_hostname }}-certs.tar
    dest: /root
  delegate_to: "{{item}}"
  loop: "{{ groups['satellites'] }}"

- name: Configure Satellite Capsule
  command: >-
    satellite-installer --scenario capsule 
      --foreman-proxy-content-parent-fqdn {{ satellite_fqdn }}
      --foreman-proxy-register-in-foreman true 
      --foreman-proxy-foreman-base-url "https://{{ satellite_fqdn }}"
      --foreman-proxy-trusted-hosts {{ satellite_fqdn }} 
      --foreman-proxy-trusted-hosts {{ inventory_hostname | regex_replace('.internal',subdomain_base_suffix) }}
      --foreman-proxy-oauth-consumer-key {{ hostvars[item]['capsule_data']['foreman_oauth_key'] }}
      --foreman-proxy-oauth-consumer-secret {{ hostvars[item]['capsule_data']['foreman_oauth_secret'] }}
      --foreman-proxy-content-certs-tar /root/{{inventory_hostname}}-certs.tar 
      --puppet-server-foreman-url "https://{{ satellite_fqdn }}"
  loop: "{{ groups['satellites'] }}"

      