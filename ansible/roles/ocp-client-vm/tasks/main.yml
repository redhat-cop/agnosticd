---
- name: Install Openshift Client VM packages for RHEL 7
  when: ansible_distribution_major_version == "7"
  block:
  - name: Install Openshift Client VM packages for RHEL 7
    yum:
      state: present
      name:
      - java-1.8.0-openjdk-devel
      - java-11-openjdk-devel
      - docker
      - podman
      - skopeo
      - buildah
    tags:
    - install_openshift_client_vm_packages

  - name: Create docker group
    become: yes
    group:
      name: docker
      state: present

  - name: Create users group
    become: yes
    group:
      name: users
      state: present

- name: Install OpenShift Client VM packages for RHEL 8
  when: ansible_distribution_major_version == "8"
  yum:
    state: present
    name:
    - java-1.8.0-openjdk-devel
    - java-11-openjdk-devel
    - podman
    - skopeo
    - buildah

- when:
  - student_name is defined
  - student_name != ''
  name: Add user to docker and users groups
  become: yes
  user:
    name: "{{ student_name }}"
    append: yes
    groups: docker,users

- name: Enable and Start Docker
  service:
    name: docker
    state: started
    enabled: yes

- name: Get the OpenShift CLI for OCP 3
  become: yes
  when: ocp_clientvm_oc_version is version_compare('4.0', '<')
  unarchive:
    src: "https://mirror.openshift.com/pub/openshift-v3/clients/{{ ocp_clientvm_oc_version }}/linux/oc.tar.gz"
    remote_src: yes
    dest: /usr/local/sbin
    mode: 0775
    owner: root
    group: root

- name: Get Command Line Tools for OpenShift 4
  when: ocp_clientvm_oc_version is version_compare('4.0', '>=')
  block:
  - name: Get the OpenShift CLI for OCP 4
    become: yes
    unarchive:
      src: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_clientvm_oc_version }}/openshift-client-linux-{{ ocp_clientvm_oc_version }}.tar.gz"
      remote_src: yes
      dest: /usr/local/sbin
      mode: 0775
      owner: root
      group: root

  - name: Download OpenShift Do (odo)
    get_url:
      url: "https://mirror.openshift.com/pub/openshift-v4/clients/odo/{{ ocp_clientvm_odo_version }}/odo-linux-amd64"
      dest: /usr/local/sbin/odo
      owner: root
      group: root
      mode: 0775
    ignore_errors: true
    tags:
    - install_openshift_client_vm_packages

  - name: Download OpenShift Helm 3
    get_url:
      url: "https://mirror.openshift.com/pub/openshift-v4/clients/helm/{{ ocp_clientvm_helm_version }}/helm-linux-amd64"
      dest: /usr/local/sbin/helm
      owner: root
      group: root
      mode: 0775
    ignore_errors: true
    tags:
    - install_openshift_client_vm_packages

  - name: Download Tekton CLI (tkn)
    unarchive:
      src: "https://github.com/tektoncd/cli/releases/download/v{{ ocp_clientvm_tkn_version }}/tkn_{{ ocp_clientvm_tkn_version }}_Linux_x86_64.tar.gz"
      remote_src: yes
      dest: /usr/local/sbin
      mode: 0775
      owner: root
      group: root
    ignore_errors: true
    tags:
    - install_openshift_client_vm_packages

  - name: Download KNative CLI (kn)
    get_url:
      url: "https://github.com/knative/client/releases/download/{{ ocp_clientvm_kn_version }}/kn-linux-amd64"
      dest: /usr/local/sbin/kn
      owner: root
      group: root
      mode: 0775
    ignore_errors: true
    tags:
    - install_openshift_client_vm_packages

- name: Create OpenShift Bash completion file
  become: yes
  shell: /usr/local/sbin/oc completion bash >/etc/bash_completion.d/openshift

- name: Install S2I Executable
  unarchive:
    src: https://github.com/openshift/source-to-image/releases/download/v1.2.0/source-to-image-v1.2.0-2a579ecd-linux-amd64.tar.gz
    remote_src: yes
    dest: /usr/local/sbin
    owner: root
    group: root
    mode: 0755
    extra_opts:
      - --strip=1
  ignore_errors: true

- name: Get community istioctl utility
  get_url:
    url: "https://github.com/istio/istio/releases/download/{{ ocp_clientvm_istioctl_version }}/istio-{{ ocp_clientvm_istioctl_version }}-linux.tar.gz"
    dest: "/tmp/istio-{{ ocp_clientvm_istioctl_version }}-linux.tar.gz"
  register: r_geturl
  retries: 5
  delay: 20
  until: r_geturl is succeeded
  tags:
  - install_openshift_client_vm_packages
- name: Unarchive file
  unarchive:
    remote_src: yes
    src: "/tmp/istio-{{ ocp_clientvm_istioctl_version }}-linux.tar.gz"
    dest: /tmp/
  tags:
  - install_openshift_client_vm_packages
- name: Move istioctl to /usr/local/sbin
  copy:
    remote_src: yes
    src: "/tmp/istio-{{ ocp_clientvm_istioctl_version }}/bin/istioctl"
    dest: /usr/local/sbin/istioctl
    group: root
    owner: root
    mode: 0755
  tags:
  - install_openshift_client_vm_packages
- name: Cleanup Temp Directory
  file:
    dest: "/tmp/istio-{{ ocp_clientvm_istioctl_version }}"
    state: absent
  tags:
  - install_openshift_client_vm_packages
- name: Cleanup downloaded file
  file:
    dest: "/tmp/istio-{{ ocp_clientvm_istioctl_version }}-linux.tar.gz"
    state: absent
  tags:
  - install_openshift_client_vm_packages

- name: Create /usr/local/maven directory
  file:
    path: /usr/local/maven
    state: directory
    owner: root
    group: root
    mode: 0775

- name: Download and unarchive Maven Distribution
  unarchive:
    src: "https://gpte-public.s3.amazonaws.com/apache-maven-{{ ocp_clientvm_maven_version }}-bin.tar.gz"
    remote_src: yes
    dest: /usr/local/maven
    owner: root
    group: root
    extra_opts:
      - --strip=1
  register: r_geturl
  retries: 5
  delay: 20
  until: r_geturl is succeeded
  tags:
  - install_openshift_client_vm_packages

- name: Download jq-linux64
  get_url:
    url: https://gpte-public.s3.amazonaws.com/jq-linux64
    dest: /usr/local/sbin/jq
    mode: 0775
  ignore_errors: true
  tags:
  - install_openshift_client_vm_packages

- name: Install bash-git-prompt
  git:
    repo: https://github.com/magicmonty/bash-git-prompt.git
    dest: "{{ item }}/.bash-git-prompt"
    clone: yes
  loop:
  - "/root"
  - "/home/{{remote_user}}"
  - "/etc/skel"
  tags:
  - install_bash_customization

- name: Change ownership of bash-git-prompt
  file:
    path: "{{ item.directory }}/.bash-git-prompt"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    recurse: yes
  loop:
  - { directory: "/root",                 user: "root",            group: "root" }
  - { directory: "/home/{{remote_user}}", user: "{{remote_user}}", group: "{{remote_user}}" }
  - { directory: "/etc/skel",             user: "root",            group: "root" }
  tags:
  - install_bash_customization

- name: Install .bashrc
  copy:
    src: ../files/bashrc
    dest: "{{ item.directory }}/.bashrc"
    mode: 0644
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  loop:
  - { directory: "/root",                 user: "root",            group: "root" }
  - { directory: "/home/{{remote_user}}", user: "{{remote_user}}", group: "{{remote_user}}" }
  - { directory: "/etc/skel",             user: "root",            group: "root" }
  tags:
  - install_bash_customization

- name: Install .bash_profile
  copy:
    src: ../files/bash_profile
    dest: "{{ item.directory }}/.bash_profile"
    mode: 0644
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  loop:
  - { directory: "/root",                 user: "root",            group: "root" }
  - { directory: "/home/{{remote_user}}", user: "{{remote_user}}", group: "{{remote_user}}" }
  - { directory: "/etc/skel",             user: "root",            group: "root" }
  tags:
  - install_bash_customization

- name: Install everything for student user
  when: install_student_user|d(False)|bool
  block:
  - name: Install bash-git-prompt for lab-user
    git:
      repo: https://github.com/magicmonty/bash-git-prompt.git
      dest: "{{ item }}/.bash-git-prompt"
      clone: yes
    with_items:
    - "/home/lab-user"
    tags:
    - install_bash_customization

  - name: Change ownership of bash-git-prompt for lab-user
    file:
      path: "{{ item.directory }}/.bash-git-prompt"
      owner: "{{ item.user }}"
      group: "{{ item.group }}"
      recurse: yes
    loop:
    - { directory: "/home/lab-user",  user: "lab-user",  group: "users" }
    tags:
    - install_bash_customization

  - name: Install .bashrc for lab-user
    copy:
      src: ../files/bashrc
      dest: "{{ item.directory }}/.bashrc"
      mode: 0644
      owner: "{{ item.user }}"
      group: "{{ item.group }}"
    loop:
    - { directory: "/home/lab-user",  user: "lab-user",  group: "users" }
    tags:
    - install_bash_customization

  - name: Install .bash_profile for lab-user
    copy:
      src: ../files/bash_profile
      dest: "{{ item.directory }}/.bash_profile"
      mode: 0644
      owner: "{{ item.user }}"
      group: "{{ item.group }}"
    loop:
    - { directory: "/home/lab-user",  user: "lab-user",  group: "users" }
    tags:
    - install_bash_customization
