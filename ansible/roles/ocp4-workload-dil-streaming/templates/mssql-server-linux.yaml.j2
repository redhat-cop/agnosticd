---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mssql-server-linux
  annotations:
    app.openshift.io/connects-to: debezium
  labels:
    app: mssql-server-linux
    app.kubernetes.io/component: mssql-server-linux
    app.kubernetes.io/instance: mssql-server-linux
    app.kubernetes.io/part-of: enterprise-app
    app.openshift.io/runtime: mssql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql-server-linux
  template:
    metadata:
      labels:
        app: mssql-server-linux
        deploymentconfig: mssql-server-linux
    spec:
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: mssql-server-volume
        - name: data-sql
          configMap:
            name: data-sql
            defaultMode: 420
      containers:
        - name: mssql-server-linux
          env:
            - name: ACCEPT_EULA
              value: 'Y'
            - name: SA_PASSWORD
              value: Password!
            - name: MSSQL_PID
              value: Standard
            - name: MSSQL_AGENT_ENABLED
              value: 'true'
          image: >-
            mcr.microsoft.com/mssql/server@sha256:6ad336d284ec3b20d5ee89d68be03bce7b8018904e798a5d4bddcadc298dbd54
          ports:
            - containerPort: 1433
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: db-data
              mountPath: /var/opt/mssql
            - name: data-sql
              mountPath: /opt/workshop
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-server-volume
  labels:
    app: mssql-server-linux
    deploymentconfig: mssql-server-linux
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: gp2
  volumeMode: Filesystem
---
kind: Service
apiVersion: v1
metadata:
  name: mssql-server-linux
  labels:
    app: mssql-server-linux
    app.kubernetes.io/component: mssql-server-linux
    app.kubernetes.io/instance: mssql-server-linux
    app.kubernetes.io/part-of: enterprise-app
spec:
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  selector:
    app: mssql-server-linux
  type: ClusterIP
