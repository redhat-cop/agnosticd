---

- name: Evaluate {{ che_project }} namespace if not exists 
  k8s:
    api_version: v1
    kind: Namespace
    name: '{{ che_project }}'
    state: present

# RHPDS sepecific
- name: Delete the core limit range in  {{ che_project }} from RHPDS setting
  k8s:
    api_version: v1
    kind: LimitRange
    name: '{{ che_project }}-core-resource-limits'
    namespace: '{{ che_project }}'
    state: absent

- name: Evaluate Eclipse Che Operator Group
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'che-operatorgroup.yaml.j2') }}"

- name: Evaluate Eclipse Che Subscription
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'che-subscriptionyaml.j2') }}"

- name: Wait for Che operator to install
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: checlusters.org.eclipse.che
  register: crd_che
  until: crd_che.resources | list | length == 1
  retries: 10
  delay: 30

- name: Evaluate Eclipse Che Cluster
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'che-cluster.yaml.j2') }}"

- name: extract route_subdomain
  k8s_facts:
    kind: Ingress
  register: route_subdomain_r
  
- set_fact:
    route_subdomain: "{{ route_subdomain_r.resources[0].spec.domain | trim }}"

- name: Wait for Eclipse Che to be running
  uri:
    url: http://che-{{ che_project }}.{{ route_subdomain }}/api/system/state
    status_code: '200'
  register: result
  until: result.status == 200
  retries: 90
  delay: 30


- name: Extract key_cloak_admin_password
  k8s_facts: 
    kind: Secret
    name: che-identity-secret
    namespace: '{{ che_project }}'
  register: key_cloak_result


- set_fact:
    key_cloak_admin_password: "{{ key_cloak_result.resources[0].data.password | b64decode }}"


- name: Get Admin Token from Keycloack
  uri:
    url: http://keycloak-{{ che_project }}.{{ route_subdomain }}/auth/realms/master/protocol/openid-connect/token
    method: POST
    body_format: form-urlencoded
    body:
    - [ 'client_id', 'admin-cli' ]
    - [ 'username', 'admin' ]
    - [ 'password', '{{ key_cloak_admin_password }}' ]
    - [ 'grant_type', 'password' ]
    status_code: '200'
  register: token_result

- name: Extract Admin Token from Keycloack from result
  set_fact:
    admin_token: '{{token_result.json.access_token}}'

- name: Increase Token Lifespan (60mins)
  uri: 
    url: 'http://keycloak-{{ che_project }}.{{ route_subdomain }}/auth/admin/realms/master'
    method: PUT
    body: "{\"realm\":\"master\", \"accessTokenLifespan\":\"3600\"}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ admin_token }}"
    return_content: yes
    validate_certs: no
    status_code: 204

- name: Get Admin Token with Longer Lifespan
  uri:
    url: http://keycloak-{{ che_project }}.{{ route_subdomain }}/auth/realms/master/protocol/openid-connect/token
    method: POST
    body_format: form-urlencoded
    body:
    - [ 'client_id', 'admin-cli' ]
    - [ 'username', 'admin' ]
    - [ 'password', '{{ key_cloak_admin_password }}' ]
    - [ 'grant_type', 'password' ]
    status_code: '200'
  register: token_result

- name: Extract Admin Token with Longer Lifespan from Keycloack from result
  set_fact:
    admin_token: '{{token_result.json.access_token}}'

- name: Find API domain in OpenShift
  set_fact:
    api_domain: "{{  route_subdomain | replace('apps', 'api')  }}"

- name: Add users and create workspaces
  include_tasks: user_workspace.yaml
  with_sequence: start=1 end={{ num_users }} 
  when:
    - num_users|int > 0

