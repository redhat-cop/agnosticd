- name: AWS Generate CloudFormation Template
  template:
    src: "{{ANSIBLE_REPO_PATH}}/configs/{{ env_type }}/files/cloud_providers/{{cloud_provider}}_cloud_template.j2"
    dest: "{{ANSIBLE_REPO_PATH}}/workdir/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template-orig"
  tags:
    - aws_infrastructure_deployment
    - gen_cf_template

######################### Minimize template (avoid size limitation as much as possible)
- name: minimize json
  shell: "jq -c . < {{ ANSIBLE_REPO_PATH }}/workdir/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template-orig >  ../workdir/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template"
  register: jq_minify
  ignore_errors: true
  tags:
    - aws_infrastructure_deployment
    - gen_cf_template
    - minify_template

- name: use original if jq failed
  command: "cp {{ ANSIBLE_REPO_PATH }}/workdir/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template-orig ../workdir/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template"
  when: jq_minify is failed
  tags:
    - aws_infrastructure_deployment
    - gen_cf_template
    - minify_template

######################### Validate CF Template

- name: validate cloudformation template
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
    AWS_DEFAULT_REGION: "{{aws_region_final|d(aws_region)}}"
  command: >-
    aws cloudformation validate-template
    --region {{ aws_region_final | d(aws_region) | default(region) | default('us-east-1')}}
    --template-body file://../workdir/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template
  changed_when: false
  register: cloudformation_validation
  until: cloudformation_validation is succeeded
  delay: 20
  tags:
    - aws_infrastructure_deployment
    - validate_cf_template

######################### Launch CF Template
