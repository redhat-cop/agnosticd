---

- name: ensure pod conf dir exists
  file:
    path: "{{ awx_pod_yaml_dir }}"
    state: directory

- name: Generate broadcast websocket secret
  set_fact:
    broadcast_websocket_secret: "{{ lookup('password', '/dev/null', length=128) }}"
  run_once: true
  no_log: true

- name: set container ports
  set_fact:
    _container_firewall_ports:
      - "{{ awx_host_port }}/tcp"

- name: set container ports with ssl
  set_fact:
    _container_firewall_ports:
      - "{{ awx_host_port }}/tcp"
      - "{{ awx_host_ssl_port }}/tcp"
  when: ssl_certificate is defined

- name: do preparations for running pod
  block:

  - name: "set AWX configuration file: {{ awx_pod_yaml_path }}"
    template:
      src: awx.yml.j2
      dest: "{{ awx_pod_yaml_path }}"
      owner: root
      group: root
      mode: "0600"

  - name: ensure awx podman directory exists
    file:
      path: "{{ awx_podman_dir }}"
      state: directory
      mode: '0700'
      owner: '1000'

  - name: ensure postgres directory exists
    file:
      path: "{{ awx_podman_dir }}/db"
      state: directory
      mode: '0770'
      owner: '26'
      group: '26'

  - name: ensure awx data directory exists
    file:
      path: "{{ awx_podman_dir }}/data"
      state: directory
      mode: '0700'
      owner: '1000'

  - name: ensure awx redis-socket directory exists
    file:
      path: "{{ awx_podman_dir }}/redis-socket"
      state: directory
      mode: '0777'
      owner: '999'

  - name: copy awx SECRET_FILE
    copy:
      content: "{{ awx_secret_key }}"
      dest: "{{ awx_podman_dir }}/SECRET_FILE"
      mode: '0600'
      owner: '1000'

  - name: copy redis.conf
    copy:
      src: redis.conf
      dest: "{{ awx_podman_dir }}/redis.conf"
      mode: '0600'
      owner: '999'

  - name: copy ssl certificate
    copy:
      src: "{{ ssl_certificate }}"
      dest: "{{ awx_podman_dir }}/awxweb.pem"
      mode: '0600'
      owner: '1000'
    when: ssl_certificate is defined

  - name: copy ssl certificate key
    copy:
      src: "{{ ssl_certificate_key }}"
      dest: "{{ awx_podman_dir }}/awxweb.key"
      mode: '0600'
      owner: '1000'
    when: ssl_certificate is defined

  - name: copy ssl ca certificate
    copy:
      src: "{{ ca_trust_file }}"
      dest: "{{ awx_podman_dir }}/awxweb_ca.pem"
      mode: '0600'
      owner: '1000'
    when: ssl_certificate is defined

  - name: template ngnix.conf
    template:
      src: nginx.conf.j2
      dest: "{{ awx_podman_dir }}/nginx.conf"
      mode: '0600'
      owner: '1000'

  - name: template credentials.py
    template:
      src: credentials.py.j2
      dest: "{{ awx_podman_dir }}/credentials.py"
      mode: '0600'
      owner: '1000'

  - name: template environment.sh
    template:
      src: environment.sh.j2
      dest: "{{ awx_podman_dir }}/environment.sh"
      mode: '0600'
      owner: '1000'

  - name: template settings
    template:
      src: settings.py.j2
      dest: "{{ awx_podman_dir }}/settings.py"
      mode: '0600'
      owner: '1000'

  when: container_state == 'running'

- name: import role podman_container_systemd to handle containers
  vars:
    container_name: "{{ awx_pod_name }}"
    container_pod_yaml: "{{ awx_pod_yaml_path }}"
    container_image_list: "{{ awx_container_image_list }}"
    container_firewall_ports: "{{ _container_firewall_ports }}"
  import_role:
    name: podman_container_systemd

- name: "remove AWX configuration file: {{ awx_pod_yaml_path }}"
  file:
    path: "{{ awx_pod_yaml_path }}"
    state: absent
  when: container_state == 'absent'

- name: "remove awx config file directory: {{ awx_podman_dir }}"
  file:
    path: "{{ awx_podman_dir }}/"
    state: absent
  when: container_state == 'absent'
