---

- name: Delete the remote files used in this role
  file:
    path: /tmp/{{guid}}
    state: absent

- name: Print no SSH
  debug:
    msg: "user.info: {{ item }}"
  with_items:
    - ""
    - '**********'
    - 'IMPORTANT: You cannot SSH into the shared cluster.'
    - Please refer to the demo or lab instructions in order
    - to get the steps on how to access the environment properly.
    - '**********'
    - ""

- name: Get console route
  command: oc get route -n openshift-console console -o json
  register: routeconsole
  ignore_errors: yes

- name: Set webconsole address
  when: routeconsole is succeeded
  set_fact:
    webconsole: "http://{{ routeconsole.stdout | from_json | json_query('spec.host') }}"

- name: Print Overview
  when: routeconsole is succeeded
  debug:
    msg: "{{ item }}"
  with_items:
    - "user.info: Openshift Master Console: {{ webconsole }}"

- name: Get API for command line
  command: oc whoami --show-server
  register: showserver
  ignore_errors: yes

- name: Print Overview
  when: showserver is succeeded
  debug:
    msg: "user.info: {{ item }}"
  with_items:
    - "Openshift API for command line 'oc' client: {{ showserver.stdout | trim }}"

- name: Get Decision Central URL
  command: oc get route {{ dm_application_name }}-rhdmcentr -n bxms-dm-{{guid}} -o json
  register: bcroute
  ignore_errors: yes
- name: Set Decision Central address
  when: bcroute is succeeded
  set_fact:
    bcaddress: "http://{{ bcroute.stdout | from_json | json_query('spec.host') }}"
- name: Print Decision Central
  when: bcroute is succeeded
  debug:
    msg: "user.info: Decision Central route (authenticate as {{ kie_admin_user }} with password {{ kie_admin_password }}: {{ bcaddress }}"

- name: Get Kie Server URL
  command: oc get route {{ dm_application_name }}-kieserver -n bxms-dm-{{guid}} -o json
  register: ksroute
  ignore_errors: yes

- name: Set Kie Server address
  when: ksroute is succeeded
  set_fact:
    ksaddress: "http://{{ ksroute.stdout | from_json | json_query('spec.host') }}/docs"

- name: Print Kie Server
  when: ksroute is succeeded
  debug:
    msg: "user.info: Kie Server swagger (authenticate as {{ kie_admin_user }} with password {{ kie_admin_password }}: {{ ksaddress }}"

- name: Get demo application URL
  command: oc get route angular-dmf-ng-dmf -n bxms-dm-{{guid}} -o json
  register: ngroute
  ignore_errors: yes
- name: Set demo application address
  when: ngroute is succeeded
  set_fact:
    ngaddress: "http://{{ ngroute.stdout | from_json | json_query('spec.host') }}"
- name: Print demo application address
  when: ngroute is succeeded
  debug:
    msg: "user.info: Demo application: {{ ngaddress }}"

- name: post_workload Tasks Complete
  debug:
    msg: "Post-Software checks completed successfully"
