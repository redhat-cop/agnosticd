---
- name: set namespace
  set_fact:
    _namespace: "{{ namespace_prefix }}{{ user_num }}"

- name: Evaluate {{ _namespace }} namespace if not exists 
  k8s:
    api_version: v1
    kind: Namespace
    name: '{{ _namespace }}'
    state: present

- name: Create operator
  k8s:
    state: present
    namespace: "{{ _namespace }}"
    definition: "{{ lookup('file', role_path ~ '/files/apicurio/operator.yaml' ) | from_yaml }}"

- name: Wait until csv/{{ _apicurio_csv_version }} is Succeeded
  command: >
    oc get csv/{{ _apicurio_csv_version }} -o jsonpath='{.status.phase}' -n "{{ _namespace }}"
  register: apicuriocsv
  retries: "{{ _retry }}"
  delay: "{{ _delay }}"
  until: apicuriocsv.stdout == "Succeeded"

- name: Create Apicurio Service
  k8s:
    state: present
    namespace: "{{ _namespace }}"
    definition: "{{ lookup('template', role_path ~ '/files/apicurio/service.yaml' ) | from_yaml }}"

