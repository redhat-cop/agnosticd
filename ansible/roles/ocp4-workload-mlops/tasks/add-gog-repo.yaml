---
- name: Check if repository {{ repository.name }} exists in git for {{ user }}
  uri:
    url: https://gogs-labs-infra.{{ route_subdomain }}/api/v1/repos/{{ user }}/{{ repository.name }}
    user: "{{ user }}"
    password: "{{ gogs_pwd }}"
    force_basic_auth: true
    status_code: 200,404
    validate_certs: false
  register: repo_result

- name: Create git repository {{ repository.name }} for {{ user }}
  uri:
    url: https://gogs-labs-infra.{{ route_subdomain }}/api/v1/user/repos
    method: POST
    body: '{"name": "{{ repository.name }}", "private": false}'
    body_format: json
    user: "{{ user }}"
    password: "{{ gogs_pwd }}"
    status_code: 200,201
    force_basic_auth: true
    validate_certs: false
  when: repo_result.status != 200

- name: Create repositories
  git:
    repo: "{{ repository.base }}/{{ repository.name }}"
    dest: "{{ tmp_dir }}/{{ repository.name }}"
    force: true

- name: Push {{ repository.name }} to git repository in Gogs for {{ user }}
  shell: |
    git -c http.sslVerify=false  remote add {{ user }} https://{{ user }}:{{ gogs_pwd }}@gogs-labs-infra.{{ route_subdomain }}/{{ user }}/{{ repository.name }}.git
    git -c http.sslVerify=false  config --local user.email "{{ user }}@example.com"
    git -c http.sslVerify=false  config --local user.name "{{ user }}"
    git -c http.sslVerify=false  push -f --all {{ user }}
  args:
    chdir: "{{ tmp_dir }}/{{ repository.name }}"
  when: repo_result.status != 200    

- name: Get web hooks
  uri:
    url: https://gogs-labs-infra.{{ route_subdomain }}/api/v1/repos/{{user}}/{{ repository.name }}/hooks 
    user: "{{user}}"
    password: "{{gogs_pwd}}"
    force_basic_auth: true
    body_format: json
    validate_certs: false
  register: webhook

- name:  Delete web hooks
  uri:
    url: https://gogs-labs-infra.{{ route_subdomain }}/api/v1/repos/{{user}}/{{ repository.name }}/hooks/{{item.id}}
    user: "{{user}}"
    password: "{{gogs_pwd}}"
    force_basic_auth: true
    method: delete
    status_code: 204
    validate_certs: false
  loop: "{{webhook.json}}"
  loop_control:
    label: "{{item.id}}"

- name: Configure web hook
  uri:
    url: https://gogs-labs-infra.{{ route_subdomain }}/api/v1/repos/{{ user }}/{{ repository.name }}/hooks
    user: "{{user}}"
    password: "{{gogs_pwd}}"
    method: POST
    validate_certs: false
    body: 
      type: gogs
      config:
        url: "{{repository.webhook}}"
        content_type: json
      events:
      - push
      active: true
    force_basic_auth: yes
    status_code: 201
    body_format: json