---
- name: deploy argocd operator
  k8s:
    state: present
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/argocd_operatorgroup.yaml
  - ./files/argocd_subscription.yaml

- name: Wait for ArgoCD CRD to be ready
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: argocds.argoproj.io
  register: argocd_cr
  retries: 200
  delay: 10
  until: argocd_cr.resources | list | length == 1

- name: Create argocd repo passwords
  k8s:
    state: present
    definition:    
      kind: Secret
      apiVersion: v1
      metadata:
        name: repo-{{user}}-deploy
        namespace: labs-argocd
      data:
        password: "{{ gogs_pwd | b64encode }}"
        username: "{{ user | b64encode }}"
      type: Opaque
  loop: "{{users}}"
  loop_control:
    loop_var: user
    
- name: Create argocd 
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/argocd_cr.yaml.j2' ) | from_yaml }}"

- name: Wait for argocd to be available
  k8s_facts:
    api_version: argoproj.io/v1alpha1
    kind: ArgoCD
    name: argocd
    namespace: labs-argocd
  register: result
  until: result | json_query("resources[0].status.phase=='Available'")
  retries: 40
  delay: 10

- name: Create argocd application
  include_tasks: add-argocd-app.yaml
  vars:
    user: "{{ item[0] }}"
    ns: "{{ item[0] }}-{{ item[1] }}"    
    env: "{{item[1]}}"    
  loop: "{{ users|product(['stage', 'prod'])|list }}"