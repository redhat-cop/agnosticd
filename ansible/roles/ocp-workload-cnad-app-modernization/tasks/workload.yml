---
- name: define OCP_PROJECT
  set_fact:
    OCP_PROJECT: cnad-daytrader-{{guid}}
- name: Create project for Day Trader Demo
  shell: "oc new-project {{ OCP_PROJECT }} --display-name=\"CNAD Day Trader\" --description=\"Cloud Native Day Trader Application\""
- name: Install Kafka Cluster operator
  shell : "oc apply -f /tmp/{{guid}}/operators.yml"
- name: Install Kafka Cluster operator
  shell: "oc apply -f /tmp/{{guid}}/operator-subscriptions.yml"
- name: Create Kafka Cluster with Persistence
  shell : "oc create -f /tmp/{{guid}}/kafka.yml -n {{OCP_PROJECT}}"
- name: Deploy Kafdrop - tool to view messages
  shell : "oc create -f /tmp/{{guid}}/kafdrop4.yml -n {{OCP_PROJECT}}"
- name: Deploy MySQL
  shell : "oc new-app --name=mysql debezium/example-mysql:1.2 -n {{OCP_PROJECT}} -e MYSQL_ROOT_PASSWORD=debezium -e MYSQL_USER=mysqluser -e MYSQL_PASSWORD=mysqlpw"
- name: Create Generic Secrets
  shell : "oc create secret generic my-sql-credentials --from-file=/tmp/{{guid}}/debezium-mysql-credentials.properties -n {{OCP_PROJECT}}"
- name: Deploy the Kafka Connector
  shell: "oc apply -f  /tmp/{{guid}}/kafka-connect.yml -n {{OCP_PROJECT}}"
- name: Deploy MySQL Connector
  shell: "oc apply -f  /tmp/{{guid}}/mysqlconnector.yml -n {{OCP_PROJECT}}"
- name: Deploy Postgres DB
  shell: "oc new-app -p POSTGRESQL_USER=tradedb -p POSTGRESQL_PASSWORD=tradedb -p POSTGRESQL_DATABASE=tradedb postgresql-persistent"
- name: Delete limits
  shell: "oc delete limits {{OCP_PROJECT}}-core-resource-limits"
- name: Image Stream for Quarkus Trade Orders application
  shell: "oc apply -f  /tmp/{{guid}}/is-quarkus-trade-orders.yml -n {{OCP_PROJECT}}"
- name: Build Config for Quarkus Trader Orders application
  shell: "oc apply -f  /tmp/{{guid}}/bc-quarkus-trade-orders.yml -n {{OCP_PROJECT}}"
- name: Deployment Config for Quarkus Trade Orders application
  shell: "oc apply -f  /tmp/{{guid}}/dc-quarkus-trade-orders.yml -n {{OCP_PROJECT}}"
- name: Create Service for Quarkus application
  shell: "oc apply -f  /tmp/{{guid}}/service-trade-orders.yml -n {{OCP_PROJECT}}"
- name: Deploy the Open Liberty Application
  shell: "oc new-app openliberty/open-liberty-s2i:latest~https://github.com/murphye/sample.daytrader8.git#openshift -n {{OCP_PROJECT}}"
- name: Expose route for open liberty application
  shell: "oc expose svc/sampledaytrader8 --path=/io.openliberty.sample.daytrader8 --name=daytrader-route"
- name: Expose route for quarkus application
  shell: "oc expose svc/quarkus-trade-orders"
- include_tasks: ./wait_for_build.yml
  vars:
    build_to_wait:
      - "sampledaytrader8"
      - "quarkus-trade-orders"
- name: day trader route
  shell: "echo $(oc get routes daytrader-route -o jsonpath='{.spec.host}')"
  register: daytraderroute
- name: create tables
  shell: "curl -X GET http://{{daytraderroute.stdout}}/io.openliberty.sample.daytrader8/config?action=buildDBTables"
- name: scale down pod
  shell: "oc scale --replicas=0 deployment/sampledaytrader8"
- name: scale up pod
  shell: "oc scale --replicas=1 deployment/sampledaytrader8"
- pause:
    minutes: 2
- name: populate tables
  shell: "curl -X GET http://{{daytraderroute.stdout}}/io.openliberty.sample.daytrader8/config?action=buildDB"
