# vim: set ft=ansible
---
# Implement your Workload deployment tasks here
- name: determine deployed sets
  k8s_facts:
    api_version: machine.openshift.io/v1beta1
    kind: MachineSet
    namespace: openshift-machine-api
  register: machinesets_out

<<<<<<< HEAD

#- name: determine the deployed AZ
#  shell: "oc get machineset -n openshift-machine-api -o jsonpath --template '{.items[0].spec.template.spec.providerSpec.value.placement.region}'"
#  register: deployed_az
#
=======
>>>>>>> 7926bcb1a988be939637e43550403bd8642b622e
- name: register list of machinesets
  shell: "oc get machineset -n openshift-machine-api -o name"
  register: infra_machineset_exists
#
# stdout will have the word infra if there's already an infra machineset
# if there is one, we don't create any

- name: create infra machineset(s)
<<<<<<< HEAD
  script: files/infra.sh {{ machinesets_out.resources[0].spec.template.spec.providerSpec.value.placement.region }}
=======
  shell: "oc get machineset -n openshift-machine-api -o json | jq '.items[0]' | jq '.metadata.name=\"infra-{{ machinesets_out.resources[0].spec.template.spec.providerSpec.value.placement.region }}\"' | jq '.spec.selector.matchLabels.\"machine.openshift.io/cluster-api-machineset\"=\"infra-{{ machinesets_out.resources[0].spec.template.spec.providerSpec.value.placement.region }}\"' | jq '.spec.template.metadata.labels.\"machine.openshift.io/cluster-api-machineset\"=\"infra-{{ machinesets_out.resources[0].spec.template.spec.providerSpec.value.placement.region }}\"' | jq '.spec.template.spec.metadata.labels.\"node-role.kubernetes.io/infra\"=\"\"' | jq '.spec.template.spec.providerSpec.value.instanceType=\"{{ _infra_node_instance_type }}\"' | jq 'del (.metadata.annotations)' | jq '.metadata.labels += {\"machineset\":\"infra\"}' | jq '.spec.replicas={{ _infra_node_replicas }}' | oc create -f -"
>>>>>>> 7926bcb1a988be939637e43550403bd8642b622e
  when: '"infra" not in infra_machineset_exists.stdout'

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool