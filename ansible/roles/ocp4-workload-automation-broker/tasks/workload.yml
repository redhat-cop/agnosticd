---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Create OpenShift Objects for Service Broker
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/service_catalog_api_server.yaml
  - ./files/service_catalog_controller_manager.yaml

- name: Create OpenShift Objects for Automation Broker
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/broker_project.j2
  - ./templates/operator_group.j2
  - ./templates/catalog_source.j2
  - ./templates/subscription.j2
  - ./templates/cluster_role_binding.j2

- name: Wait until CSV is Installed
  command: oc get csv -o jsonpath --template='{$.items[:1].status.phase}' -n "{{ _asb_broker_project }}"
  register: csv
  retries: 25
  delay: 10
  ignore_errors: yes
  until: csv.stdout == "Succeeded"

- name: Notify user if Automation Broker operator deployment failed
  when: not csv.stdout == "Succeeded"
  debug:
    msg: "user.info: *** Automation Broker could not be installed ***"

- name: Create Automation Broker
  when: csv.stdout == "Succeeded"
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/automation_broker.j2

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
