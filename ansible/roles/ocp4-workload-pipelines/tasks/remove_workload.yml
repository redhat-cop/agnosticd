---
# Implement your Workload removal tasks here

- name: Set up ocp4_workload_pipelines combined dictionary
  set_fact:
    ocp4_workload_pipelines: >-
      {{ ocp4_workload_pipelines_defaults
       | combine(ocp4_workload_pipelines_vars    | default( {} ),
                 ocp4_workload_pipelines_secrets | default( {}), recursive=true )
      }}

- name: Remove Pipelines Installation
  k8s:
    state: absent
    api_version: operator.tekton.dev/v1alpha1
    kind: Config
    name: cluster

- name: Wait until all OpenShift pipelines pods have been removed
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: openshift-pipelines
  register: r_pipelines_pods
  retries: 20
  delay: 5
  until: r_pipelines_pods.resources | length == 0

- name: Get Installed CSV
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: openshift-pipelines-operator
    namespace: openshift-operators
  register: r_subscription

- name: Remove CSV
  when:
  - r_subscription.resources | length > 0
  - r_subscription.resources[0].status.currentCSV is defined
  - r_subscription.resources[0].status.currentCSV | length > 0
  k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ r_subscription.resources[0].status.currentCSV }}"
    namespace: openshift-operators

- name: Remove Subscription
  k8s:
    state: absent
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/subscription.j2

- name: Remove openshift-pipelines project
  k8s:
    state: absent
    api_version: project.openshift.io/v1
    kind: Project
    name: openshift-pipelines

- name: Remove tkn and tkn bash completion
  become: true
  file:
    state: absent
    path: "{{ item }}"
  loop:
  - /usr/bin/tkn
  - /etc/bash_completion.d/tkn

- name: Remove Tekton CRDs
  k8s:
    state: absent
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ item }}"
  loop:
  - config.operator.tekton.dev

- name: Find InstallPlans
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: openshift-operators
  register: r_install_plans

- name: Set InstallPlan Name
  when: r_install_plans.resources | length > 0
  set_fact:
    ocp4_workload_pipelines_install_plan_name: "{{ r_install_plans.resources | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'openshift-pipelines-operator')].metadata.name|[0]

- name: Remove InstallPlan
  when:
  - ocp4_workload_pipelines_install_plan_name is defined
  - ocp4_workload_pipelines_install_plan_name |d("") | length > 0
  k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    name: "{{ ocp4_workload_pipelines_install_plan_name }}"
    namespace: openshift-operators

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
