---
apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Red Hat IoT Demo Application Template - TEMP
    iconClass: icon-shadowman
    tags: jboss,iot,kapua,kura,eclipse
  name: dashboard

parameters:
- name: JOLOKIA_PASSWORD
  description: The password used for the Jolokia endpoint authentication
  generate: expression
  from: '[a-zA-Z0-9]{15}'
  required: true
- name: JOLOKIA_USER
  description: The username used for the Jolokia endpoint authentication
  value: jolokia
- description: Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/content/groups/public/)
  displayName: Maven mirror url
  name: MAVEN_MIRROR_URL
  required: false
- description: MQ cluster password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: MQ_CLUSTER_PASSWORD
  required: true
- description: JGroups cluster password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JGROUPS_CLUSTER_PASSWORD
  required: true
- description: Git source URI for application
  name: GIT_URI
  required: true
  value: https://github.com/redhat-iot/cloudera-iot-demo
- description: Git branch/tag reference
  name: GIT_REF
  value: master
- description: MQ Broker username
  name: BROKER_USERNAME
  value: "demo-gw2"
  required: true
- description: MQ Broker password
  name: BROKER_PASSWORD
  value: "RedHat123!@#"
  required: true
- description: OpenShift load-balanced MQ Broker hostname
  name: BROKER_HOSTNAME
  value: "ec-broker-ws"
  required: true
- description: OpenShift load-balanced MQ Broker port
  name: BROKER_PORT
  value: "31883"
  required: true
- description: OpenShift load-balanced MQ Broker websockets port
  name: BROKER_WS_PORT
  value: "80"
  required: true
- description: Name of datastore proxy service
  name: DASHBOARD_PROXY_SERVICE
  value: "dashboard-proxy"
  required: true
- description: Name of datastore proxy service
  name: DASHBOARD_PROXY_HOSTNAME
  value: "dashboard-proxy"
  required: true
- description: API Key for Google Maps
  name: GOOGLE_MAPS_API_KEY
  value: "AIzaSyDpDtvyzzdXDYk5nt6CuOtjxmvBvwGq5D4"
  required: false
- description: Datastore username
  name: DATASTORE_USERNAME
  value: "rhiot"
  required: true
- description: Datastore password
  name: DATASTORE_PASSWORD
  value: "redhatiot1!"
  required: true
- description: Datastore service hostname
  name: DATASTORE_HOST
  value: "datastore-hotrod"
  required: true
- description: Datastore port
  name: DATASTORE_PORT
  value: "11333"
  required: true
- description: Datastore password
  name: DATASTORE_CACHE
  value: "customer,facility,lines,machines,runs,calendar"
  required: true
- description: Datastore password
  name: ADDITIONAL_SENSOR_IDS
  required: false
- description: Datastore password
  name: CONTROL_TOPIC_PREFIX
  value: "Red-Hat/cldr-demo-gw/cloudera-demo"
  required: true
- description: Displayed title of web dashboard
  name: DASHBOARD_WEB_TITLE
  value: "IoT Industry 4.0 Demo"
  required: true
- description: Cloudera Impala service hostname
  name: IMPALA_HOST
  value: "34.211.218.209"
  required: true
- description: Cloudera Impala service port
  name: IMPALA_PORT
  value: "21050"
  required: true
labels:
  demo: cloudera
  app: dashboard

objects:

# UI and JDG

#
# Image Streams
#
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: dashboard
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: 'quay.io/redhat-iot/dashboard:latest'


#
# Build Configs
#
#- apiVersion: v1
#  kind: BuildConfig
#  metadata:
#    name: dashboard
#    labels:
#      application: dashboard
#  spec:
#    output:
#      to:
#        kind: ImageStreamTag
#        name: dashboard:latest
#    source:
#      contextDir: dashboard
#      git:
#        ref: ${GIT_REF}
#        uri: ${GIT_URI}
#      type: Git
#    strategy:
#      sourceStrategy:
#        from:
#          kind: ImageStreamTag
#          name: nodejs:4
#          namespace: openshift
#      type: Source
#    triggers:
#    - imageChange: {}
#      type: ImageChange
#    - type: ConfigChange
#
#- apiVersion: v1
#  kind: BuildConfig
#  metadata:
#    name: dashboard-proxy
#    labels:
#      application: dashboard-proxy
#  spec:
#    output:
#      to:
#        kind: ImageStreamTag
#        name: dashboard-proxy:latest
#    source:
#      contextDir: dashboard-proxy
#      git:
#        ref: ${GIT_REF}
#        uri: ${GIT_URI}
#      type: Git
#    strategy:
#      sourceStrategy:
#        env:
#        - name: MAVEN_MIRROR_URL
#          value: ${MAVEN_MIRROR_URL}
#        from:
#          kind: ImageStreamTag
#          name: wildfly:10.1
#          namespace: openshift
#      type: Source
#    triggers:
#    - type: ConfigChange
#    - imageChange: {}
#      type: ImageChange

#
# Angular Dashboard deployment
#
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: dashboard
    name: dashboard
  spec:
    replicas: 1
    selector:
      deploymentconfig: dashboard
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: dashboard
          deploymentconfig: dashboard
      spec:
        containers:
        - env:
          - name: BROKER_HOSTNAME
            value: ${BROKER_HOSTNAME}
          - name: BROKER_PORT
            value: ${BROKER_PORT}
          - name: BROKER_WS_PORT
            value: ${BROKER_WS_PORT}
          - name: BROKER_USERNAME
            value: ${BROKER_USERNAME}
          - name: BROKER_PASSWORD
            value: ${BROKER_PASSWORD}
          - name: DASHBOARD_PROXY_SERVICE
            value: ${DASHBOARD_PROXY_SERVICE}
          - name: DASHBOARD_PROXY_HOSTNAME
            value: ${DASHBOARD_PROXY_HOSTNAME}
          - name: GOOGLE_MAPS_API_KEY
            value: ${GOOGLE_MAPS_API_KEY}
          - name: DASHBOARD_WEB_TITLE
            value: ${DASHBOARD_WEB_TITLE}
          - name: CONTROL_TOPIC_PREFIX
            value: ${CONTROL_TOPIC_PREFIX}
          image: dashboard
          imagePullPolicy: Always
          name: dashboard
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 10
        imagePullSecrets:
        - name: redhat-iot-rhpds-pull-secret

    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - dashboard
        from:
          kind: ImageStreamTag
          name: dashboard:latest
      type: ImageChange
    - type: ConfigChange


#
# Services
#
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: dashboard
    name: dashboard
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: dashboard
    sessionAffinity: None
    type: ClusterIP

#
# Routes
#
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: dashboard
    name: dashboard
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: dashboard

