# Deploy the Dynamic NFS Provisioner
# Needs to be run on a Master Host
#
# Source for all yaml definition files used:
#   https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client/deploy
---
- name: Check for NFS Provisioner project
  command: "oc get project {{nfs_provisioner_project}}"
  register: result
  changed_when: false
  ignore_errors: true

- name: Set up NFS Provisioner
  when: result is failed
  block:
  - name: Create NFS Provisioner Project
    shell: "oc new-project {{ nfs_provisioner_project }} --display-name 'NFS Provisioner'"

  - name: Create Service Account
    shell: "oc create sa nfs-client-provisioner -n {{ nfs_provisioner_project }}"

  - name: Copy RBAC ClusterRole.yaml
    copy:
      src: ./files/cluster_role.yaml
      dest: /tmp/cluster_role.yaml
      owner: root
      group: root
      mode: 0644
  - name: Create RBAC ClusterRole
    command: oc apply -f /tmp/cluster_role.yaml

  - name: Copy RBAC ClusterRoleBinding.yaml
    template:
      src: ./templates/cluster_role_binding.yaml
      dest: /tmp/cluster_role_binding.yaml
      owner: root
      group: root
      mode: 0644
  - name: Create RBAC ClusterRoleBinding
    command: oc apply -f /tmp/cluster_role_binding.yaml

  - name: Copy RBAC role.yaml
    template:
      src: ./templates/role.yaml
      dest: /tmp/role.yaml
      owner: root
      group: root
      mode: 0644
  - name: Create RBAC Role
    shell: "oc apply -f /tmp/role.yaml -n {{ nfs_provisioner_project }}"

  - name: Copy RBAC role_binding.yaml
    template:
      src: ./templates/role_binding.yaml
      dest: /tmp/role_binding.yaml
      owner: root
      group: root
      mode: 0644
  - name: Create RBAC RoleBinding
    shell: "oc apply -f /tmp/role_binding.yaml -n {{ nfs_provisioner_project }}"

  - name: Create SCC for Service Account nfs-client-provisioner
    shell: "oc adm policy add-scc-to-user hostmount-anyuid system:serviceaccount:{{ nfs_provisioner_project}}:nfs-client-provisioner"

  - name: Copy Deployment nfs-provisioner.yaml
    template:
      src: ./templates/nfs_provisioner.yaml
      dest: /tmp/nfs_provisioner.yaml
      owner: root
      group: root
      mode: 0644
  - name: Create Deployment nfs-provisioner
    shell: "oc apply -f /tmp/nfs_provisioner.yaml -n {{ nfs_provisioner_project }}"

  - name: Copy storage_class.yaml
    template:
      src: ./templates/storage_class.yaml
      dest: /tmp/storage_class.yaml
      owner: root
      group: root
      mode: 0644
  - name: Create Storage Class
    command: oc apply -f /tmp/storage_class.yaml
  - name: Set NFS Storage Class as default
    when: nfs_provisioner_storage_class_is_default|d(False)|bool
    shell: "oc patch storageclass {{ nfs_provisioner_storage_class_name }} -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'"