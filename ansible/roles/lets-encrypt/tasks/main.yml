---
## Request Let's Encrypt Wildcard Certificates for the Cluster
## Make sure to import the intermediate
## certificate (https://letsencrypt.org/certs/fakeleintermediatex1.pem)
## Into your browser to accept all newly created certificates
  - name: Get Temporary CA Certificate
    get_url:
      url: https://letsencrypt.org/certs/fakeleintermediatex1.pem
      dest: /root/fakeleintermediatex1.pem

  - name: Remove Let's Encrypt directory if it's there
    file:
      path: /root/acme.sh
      state: absent

  - name: Remove Let's Encrypt cache if it's there
    file:
      path: /root/.acme.sh
      state: absent

  - name: Clone Let's Encrypt Repo
    git:
      repo: https://github.com/Neilpang/acme.sh.git
      clone: yes
      dest: /root/acme.sh
      version: 2

  - name: Add AWS Access Key to Let's Encrypt configuration
    lineinfile:
      path: /root/acme.sh/dnsapi/dns_aws.sh
      line: AWS_ACCESS_KEY_ID="{{ hostvars['localhost'].route53user_access_key }}"
      state: present
      insertbefore: '^#AWS_ACCESS_KEY_ID'

  - name: Add AWS Secret Access Key to Let's Encrypt configuration
    lineinfile:
      path: /root/acme.sh/dnsapi/dns_aws.sh
      line: AWS_SECRET_ACCESS_KEY="{{ hostvars['localhost'].route53user_secret_access_key }}"
      state: present
      insertbefore: '^#AWS_SECRET_ACCESS_KEY'

  - name: Request Wildcard Certificates from Let's Encrypt
    shell: "/root/acme.sh/acme.sh --server https://acme-staging-v02.api.letsencrypt.org/directory --test --issue -d {{ master_lb_dns }} -d *.{{ cloudapps_suffix }} --dns dns_aws"
    args:
      chdir: /root/acme.sh
