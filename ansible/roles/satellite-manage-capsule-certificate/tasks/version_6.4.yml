---
- name: Block for capsule servers
  tags:
    - configure_satellite
    - configure_satellite_capsule_certificate
  when: groups['capsules'] is defined 
  block:
    - name: Collecting foreman secret from config
      shell:
        "grep oauth_consumer_secret /etc/foreman/settings.yaml | awk '{ print $2}'"
      register: output
          
    - name: Storing foreman secret
      set_fact:
        capsule_data: "{{ capsule_data | default({}) |combine({ 'foreman_oauth_secret': output.stdout}) }} "
      delegate_to: localhost
          
    - name: Collecting foreman key from config
      shell:
        "grep oauth_consumer_key /etc/foreman/settings.yaml | awk '{ print $2}'"
      register: output
          
    - name: Storing foreman key
      set_fact:
        capsule_data: "{{ capsule_data| default({}) |combine({ 'foreman_oauth_key': output.stdout}) }} "

    - name: Collecting pulp secret from config
      shell:
        "grep ^oauth_secret /etc/pulp/server.conf | awk '{print $2}'"
      register: output
          
    - name: Storing pulp server key
      set_fact:
        capsule_data: "{{ capsule_data| default({}) |combine({ 'pulp_oauth_secret': output.stdout}) }} "

    # - debug: var=capsule_data

    - name: Generate Satellite Capsule certificate
      shell: >-
        capsule-certs-generate
        --foreman-proxy-fqdn {{ item | regex_replace('.internal',subdomain_base_suffix) }}
        --certs-tar /root/{{item | regex_replace('.internal',subdomain_base_suffix) }}-certs.tar
      register: capsule_certificate_log
      loop: "{{ groups['capsules'] }}"  
      
    # - name: Storing logs in log file
    #   copy:
    #     content: "{{ item[1].stdout_lines  }}"
    #     dest: /root/{{item[0]}}-certs.log
    #   loop: "{{ groups['capsules']|zip(capsule_certificate_log.results)|list }}"
      

