# vim: set ft=ansible
---
# Implement your Workload deployment tasks here

- name: create a namespace for the service mesh operators
  k8s:
    state: present
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: service-mesh-operators

- name: create an OperatorGroup so that the CSVs will get installed
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: service-mesh-operators
        namespace: service-mesh-operators

- name: create Service Mesh CatalogSourceConfig
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1
      kind: CatalogSourceConfig
      metadata:
        name: service-mesh-catalog-source-config
        namespace: openshift-marketplace
      spec:
        packages: elasticsearch-operator,jaeger-product,kiali-ossm,servicemeshoperator
        source: service-mesh-catalog-source-config
        targetNamespace: service-mesh-operators

- name: create ElasticSearch subscription
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: service-mesh-elasticsearch
        namespace: service-mesh-operators
      spec:
        channel: preview
        source: service-mesh-catalog-source-config
        name: elasticsearch-operator
        sourceNamespace: service-mesh-operators
        startingCSV: elasticsearch-operator.4.1.20-201910102034
        installPlanApproval: Manual

- name: create Jaeger subscription
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: service-mesh-jaeger
        namespace: service-mesh-operators
      spec:
        channel: stable
        source: service-mesh-catalog-source-config
        name: jaeger-product
        sourceNamespace: service-mesh-operators
        startingCSV: jaeger-operator.v1.13.1
        installPlanApproval: Manual

- name: create Kiali subscription
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: service-mesh-kiali
        namespace: service-mesh-operators
      spec:
        channel: stable
        source: service-mesh-catalog-source-config
        name: kiali-ossm
        sourceNamespace: service-mesh-operators
        startingCSV: kiali-operator.v1.0.6
        installPlanApproval: Manual

- name: create Service Mesh Operator subscription
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: service-mesh-operator
        namespace: service-mesh-operators
      spec:
        channel: "1.0"
        source: service-mesh-catalog-source-config
        name: servicemeshoperator
        sourceNamespace: service-mesh-operators
        startingCSV: servicemeshoperator.v1.0.1
        installPlanApproval: Manual

- name: wait for the status of the subscriptions to not be empty
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: "{{ item }}"
    namespace: service-mesh-operators
  register: operator_subscription_out
  until: operator_subscription_out.resources[0].status is defined
  retries: 30
  delay: 20
  with_items:
    - service-mesh-operator
    - service-mesh-jaeger
    - service-mesh-kiali
    - service-mesh-elasticsearch

- name: find the installplan
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: service-mesh-operators
  register: installplans_out

- name: patch the installplan to approve it
  k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: InstallPlan
      metadata:
        namespace: service-mesh-operators
        name: "{{ installplans_out.resources[0].metadata.name }}"
      spec:
        approved: true

- name: wait for the CSVs to exist
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ item }}"
    namespace: service-mesh-operators
  register: csv_exists_out
  retries: 5
  delay: 70
  until: csv_exists_out.resources | length > 0
  with_items:
    - elasticsearch-operator.4.1.20-201910102034
    - jaeger-operator.v1.13.1
    - kiali-operator.v1.0.6
    - servicemeshoperator.v1.0.1

- name: wait for the CSVs to be Succeeded
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ item }}"
    namespace: service-mesh-operators
  register: csv_exists_out
  retries: 5
  delay: 70
  until: csv_exists_out.resources[0].status.phase == "Succeeded"
  with_items:
    - elasticsearch-operator.4.1.20-201910102034
    - jaeger-operator.v1.13.1
    - kiali-operator.v1.0.6
    - servicemeshoperator.v1.0.1

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool

