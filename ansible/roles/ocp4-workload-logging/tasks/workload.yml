# vim: set ft=ansible
---
# Implement your Workload deployment tasks here

- name: Create OpenShift Objects for Logging
  ignore_errors: yes
  retries: 5
  delay: 10
  until: r_objects is succeeded
  register: r_objects
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/namespace.yaml
  - ./files/operatorgroup.yaml
  - ./files/elasticsearch_catalog_source.yaml
  - ./files/elasticsearch_subscription.yaml
  - ./files/logging_catalog_source.yaml
  - ./files/logging_subscription.yaml

- name: Wait for Elasticsearch CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: elasticsearches.logging.openshift.io
  register: r_elasticsearch_crd
  retries: 20
  delay: 10
  ignore_errors: yes
  until: r_elasticsearch_crd.resources | list | length == 1

- name: Notify user if Elasticsearch deployment failed
  when: not r_elasticsearch_crd.resources | list | length == 1
  debug:
    msg: "user.info: *** Elasticsearch operator could not be installed ***"

- name: Wait for Logging CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: clusterloggings.logging.openshift.io
  register: r_logging_crd
  retries: 20
  delay: 10
  ignore_errors: yes
  until: r_logging_crd.resources | list | length == 1

- name: Notify user if Logging deployment failed
  when: not r_logging_crd.resources | list | length == 1
  debug:
    msg: "user.info: *** Logging operator could not be installed ***"

- name: Deploy Logging
  when:
  - r_logging_crd.resources | list | length == 1
  - r_elasticsearch_crd.resources | list | length == 1
  block:
  - name: Create OpenShift Objects for ClusterLogging
    k8s:
      state: present
      merge_type:
      - strategic-merge
      - merge
      definition: "{{ lookup('template', item ) | from_yaml }}"
    ignore_errors: yes
    loop:
    - ./templates/cluster_logging.j2

  - name: Sleep to give the status field a chance to populate
    when: _logging_wait_for_deployment | bool
    pause:
      seconds: 60
  
  - name: Wait until Elasticsearch Cluster Status is green
    when: _logging_wait_for_deployment| bool
    k8s_facts:
      api_version: logging.openshift.io/v1
      kind: ClusterLogging
      name: instance
      namespace: openshift-logging
    register: r_logging
    retries: 30
    delay: 10
    ignore_errors: yes
    until: 
    - r_logging.resources[0].status.logStore.elasticsearchStatus[0].clusterHealth == "green"

  - name: Update Logging Curator configuration
    k8s:
      state: present
      merge_type:
      - strategic-merge
      - merge
      definition: "{{ lookup('file', item ) | from_yaml }}"
    ignore_errors: yes
    loop:
    - ./files/curator_configmap.yaml

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
