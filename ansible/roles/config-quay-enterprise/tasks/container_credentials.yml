---

- name: Check if container credential file exists
  stat:
    path: "{{ container_credentials_file }}"
  register: container_credential_stat_result

- block:
  - name: Read content of container credentials file
    slurp:
      path: "{{ container_credentials_file }}"
    register: remote_container_credentials_file

  - name: Set content of container credentials file
    set_fact:
      container_credentials_file_content: "{{ remote_container_credentials_file.content| b64decode | from_json }}"
  when: container_credential_stat_result.stat.exists

- name: Create Quay credentials variable
  set_fact:
    quay_container_credentials:
      auths: "{ '{{quay_registry_server}}':{ 'email': '{{ quay_registry_email }}', 'auth': '{{ quay_registry_auth }}' } }"

- name: Create merged credentials file content
  set_fact:
    container_credentials_file_content: "{{ container_credentials_file_content | combine(quay_container_credentials, recursive=True) }}"

- name: Create directory for container credentials file
  file:
    state: directory
    path: "{{ container_credentials_file | dirname }}"

- name: Update container credentials file
  copy:
    content: "{{container_credentials_file_content | to_nice_json }}"
    dest: "{{ container_credentials_file }}"
