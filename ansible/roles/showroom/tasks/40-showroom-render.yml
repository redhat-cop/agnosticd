---

- name: Render asciidoc via antora container
  containers.podman.podman_container:
    name: container
    image: docker.io/antora/antora
    command: "{{ showroom_ui | default('default') }}-site.yml"
    detach: false                               # ensure completion of render before moving on
    volumes:
      - "{{ showroom_user_home_dir }}/content:/antora:Z"
  become_user: "{{ showroom_user }}"
  register: r_podman_run_antora
  vars:
  tags:
    - showroom-render

- name: Debug Render asciidoc via antora container
  ansible.builtin.debug:
    var: "{{ r_podman_run_antora }}"
    verbosity: 2

- name: Set showroom_host if not defined
  when: showroom_host is not defined
  ansible.builtin.set_fact:
    showroom_host: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"

- name: Showroom UI inject when showroom_ui does not equal string zero
  when: showroom_ui != "zero-touch"
  block:

    - name: Insert showroom index.html and css
      ansible.builtin.template:
        src: "{{ __file.src }}"
        dest: "{{ showroom_user_home_dir }}/content/www/{{ __file.dest }}"
        owner: "{{ showroom_user }}"
        group: "{{ showroom_user_group }}"
        mode: "u=rw,g=r,o=r"
      loop:
        - src: index.html.j2
          dest: index.html
        - src: "css/split.css"
          dest: split.css
        - src: "css/tabs.css"
          dest: tabs.css
      loop_control:
        loop_var: __file

- name: Project Zero UI inject when showroom_ui equals string zero
  when: showroom_ui == "zero-touch"
  block:

    - name: Insert the zero bundle for the Zero theme
      ansible.builtin.unarchive:
        src: "{{ showroom_ui_zero_bundle }}"
        dest: "{{ showroom_user_home_dir }}/content/www"
        remote_src: true
        owner: "{{ showroom_user }}"
        group: "{{ showroom_user_group }}"
        mode: "u=rwx,g=rx,o=rx"

    - name: Fix Project Zero asset permissions
      ansible.builtin.file:
        path: "{{ showroom_user_home_dir }}/content/www/assets"
        owner: "{{ showroom_user }}"
        group: "{{ showroom_user_group }}"
        mode: "u=rwx,g=rx,o=rx"
        recurse: true

    - name: Create a symbolic link for the zero-touch-config file
      ansible.builtin.copy:
        src: "{{ showroom_user_home_dir }}/content/zero-touch-config.yml"
        dest: "{{ showroom_user_home_dir }}/content/www/zero-touch-config.yml"
        owner: "{{ showroom_user }}"
        group: "{{ showroom_user_group }}"
        mode: "u=rw,g=r,o=r"
        remote_src: true
        # state: link
