---

# Orchestrate showroom containers and setup orchestration pre-requisites

- name: Insert showroom orchestration files, compose, scripts, and systemd
  ansible.builtin.template:
    src: "{{ __orchestration.src }}"
    dest: "{{ __orchestration.dest }}"
    owner: "{{ __orchestration.owner | default(showroom_user) }}"
    group: "{{ __orchestration.group | default(showroom_user_group) }}"
    mode: "{{ __orchestration.mode | default('u=rw,g=r,o=r') }}"
  loop:
    - src: "{{ showroom_container_compose_template | default('container-compose.yml.j2') }}"
      dest: "{{ showroom_user_home_dir }}/orchestration/container-compose.yml"
    - src: "{{ showroom_systemd_service_template | default('showroom.service.j2') }}"
      dest: "/etc/systemd/system/showroom.service"
      owner: root
      group: root
    - src: "{{ showroom_systemd_service_start | default('showroom-start.j2') }}"
      dest: "/usr/local/bin/showroom-start.sh"
      owner: root
      group: root
      mode: "u=rwx,g=rx,o=rx"
    - src: "{{ showroom_systemd_service_stop | default('showroom-stop.j2') }}"
      dest: "/usr/local/bin/showroom-stop.sh"
      owner: root
      group: root
      mode: "u=rwx,g=rx,o=rx"
  loop_control:
    loop_var: __orchestration

- name: Setup showroom host for nginx for showroom_frontend_service
  when: showroom_frontend_service == "nginx"
  block:

    - name: Setup showroom host with nginx.conf
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: "{{ showroom_user_home_dir }}/orchestration/nginx.conf"
        owner: "{{ showroom_user }}"
        group: "{{ showroom_user_group }}"
        mode: "u=rw,g=r,o=r"

- name: Enable and Start showroom service
  ansible.builtin.service:
    name: showroom.service
    enabled: true
    state: started
