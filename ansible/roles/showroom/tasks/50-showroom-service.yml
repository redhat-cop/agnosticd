---

# Orchestrate showroom containers and setup orchestration pre-requisites

- name: Insert showroom orchestration files, compose, scripts, and systemd
  ansible.builtin.template:
    src: "{{ __orchestration.src }}"
    dest: "{{ __orchestration.dest }}"
    owner: "{{ __orchestration.owner | default(showroom_user) }}"
    group: "{{ __orchestration.group | default(showroom_user_group) }}"
    mode: "{{ __orchestration.mode | default('u=rw,g=r,o=r') }}"
  loop:
    - src: "{{ showroom_container_compose_template | default('container-compose.yml.j2') }}"
      dest: "{{ showroom_user_home_dir }}/orchestration/container-compose.yml"
    - src: "{{ showroom_systemd_service_template | default('showroom.service.j2') }}"
      dest: "/etc/systemd/system/showroom.service"
      owner: root
      group: root
    - src: "{{ showroom_systemd_service_start | default('showroom-start.j2') }}"
      dest: "/usr/local/bin/showroom-start.sh"
      owner: root
      group: root
      mode: "u=rwx,g=rx,o=rx"
    - src: "{{ showroom_systemd_service_stop | default('showroom-stop.j2') }}"
      dest: "/usr/local/bin/showroom-stop.sh"
      owner: root
      group: root
      mode: "u=rwx,g=rx,o=rx"
  loop_control:
    loop_var: __orchestration

- name: Setup showroom host for nginx for showroom_frontend_service
  when: showroom_frontend_service == "nginx"
  block:

    - name: Setup showroom host with nginx.conf
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: "{{ showroom_user_home_dir }}/orchestration/nginx.conf"
        owner: "{{ showroom_user }}"
        group: "{{ showroom_user_group }}"
        mode: "u=rw,g=r,o=r"

- name: Setup showroom host for traefik for showroom_frontend_service
  when: showroom_frontend_service == "traefik"
  block:

    # TODO: Move this to 8443 after validation
    # IE eliminate the entire sysctl task once verified and tested

    - name: Allow users to open ports 80 and up without sudo etc
      ansible.posix.sysctl:
        name: net.ipv4.ip_unprivileged_port_start
        value: 80
        state: present
        reload: true

    - name: Create acme.json for LetsEncypt called via traefik with correct permissions
      ansible.builtin.file:
        path: "{{ showroom_user_home_dir }}/orchestration/acme.json"
        state: touch
        owner: "{{ showroom_user }}"
        group: "{{ showroom_user_group }}"
        mode: u=rw,g-rwx,o-rwx

    - name: Set a root password for machinectl
      ansible.builtin.user:
        name: root
        password: "{{ common_password | password_hash('sha512') }}"

    - name: "Start --user {{ showroom_user }} podman.socket for traefik"
      shell: "loginctl enable-linger $USER; systemctl --user enable podman.socket --now"
      become: true
      become_user: "{{ showroom_user }}"
      become_method: machinectl
      vars:
        ansible_become_pass: "{{ common_password }}"
      environment:
        XDG_RUNTIME_DIR: "/run/user/{{ showroom_user_uid }}"
        DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ showroom_user_uid }}/bus"

    - name: "Create a Podman network {{ showroom_podman_network }}"
      containers.podman.podman_network:
        name: "{{ showroom_podman_network | default('showroom_network') }}"
        state: present
      become_user: "{{ showroom_user }}"

- name: Enable and Start showroom service
  ansible.builtin.service:
    name: showroom.service
    enabled: true
    state: started
