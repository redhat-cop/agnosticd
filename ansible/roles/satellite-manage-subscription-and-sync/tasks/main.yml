---

- name: Fetching enabled repos name list from subscription of {{org}}
  shell: >-
    hammer --output cve  
    repository list 
    --organization "{{org}}" |grep Name
  register: repo_name
  ignore_errors: yes
  tags:
    - configure_satellite
    - configure_satellite_repository
           
- name: Creating fact from enabled Repos Name list from subscription of {{org}} 
  set_fact:
    repos_added: "{{ repos_added | d([]) + [ item.split(':')[1].lstrip(' ') ] }}"
  loop: "{{ repo_name.stdout_lines}}"
  when: repo_name is defined
  tags:
    - configure_satellite
    - configure_satellite_repository

- name: print already exist repos 
  debug: 
    var: repos_added | d([])
     
- name: Setting up satellite repository 
  command: >-
    hammer repository-set enable 
    --organization "{{item.organization}}" 
    --product "{{item.product}}" 
    --basearch "{{item.basearch}}" 
    --name "{{item.name}}" {% if item.releasever is defined %} --releasever '{{ item.releasever }}' {% endif %}
  when: 
    -  item.name | regex_replace('[()]')  + ' ' + item.basearch + ( ' ' if item.releasever|d(None)  else '')  +  item.releasever|d('')  not in  repos_added|d([])
  loop: "{{ satellite_repository }}"
  tags:
    - configure_satellite
    - configure_satellite_repository

- name: Grab ID of existing repos
  shell: >-
    hammer repository list
    --organization "{{ org }}" | grep yum | awk '{print $1}'
  register: repos

- name: Sync repo
  command: >-
    hammer repository synchronize
    --organization "{{ org }}"
    --id "{{ item }}"
  loop: "{{ repos.stdout_lines }}"
  # register: sync_result
  # retries: 3
  # until: "{{ sync_result is  success }} "
  async: 50
  tags:
    - configure_satellite
    - configure_satellite_repository
    - configure_satellite_sync_repo



