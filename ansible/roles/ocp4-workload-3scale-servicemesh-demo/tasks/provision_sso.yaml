---
# Use the SSO Operator to Install SSO

- name: Evaluate {{sso_project }} namespace if not exists 
  k8s:
    api_version: v1
    kind: Namespace
    name: '{{ sso_project }}'
    state: present

- name: Evaluate SSO Operator Group
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'sso-operatorgroup.yaml.j2') }}"

- name: Evaluate SSO Subscription
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'sso-subscription.yaml.j2') }}"

- name: Wait for SSO operator to install
  k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: keycloaks.keycloak.org
  register: crd_sso
  until: crd_sso.resources | list | length == 1
  retries: 10
  delay: 30

- name: Evaluate the SSO Instance CR
  k8s:
    state: present
    resource_definition:  "{{ lookup('template', 'sso-instance.yaml.j2') }}"

- name: Wait for SSO to be running
  uri:
    url: https://keycloak-{{ sso_project }}.{{ route_subdomain }}
    validate_certs: no
    status_code: '200'
  register: result
  until: result.status == 200
  retries: 90
  delay: 30    

- pause:
    minutes: 1

- name: Retrieve SSO admin credentials
  k8s_facts:
    kind: secret
    name: credential-sso
    namespace: '{{sso_project}}'
  register: _sso_credentials

- debug: var=_sso_credentials

- set_fact:
    _sso_admin_user: '{{ _sso_credentials.resources[0].data.ADMIN_USERNAME | b64decode }}'
    _sso_admin_password: '{{ _sso_credentials.resources[0].data.ADMIN_PASSWORD | b64decode }}'

- name: Get SSO token
  shell: "curl --insecure -X POST 'https://keycloak-{{sso_project}}.{{route_subdomain}}/auth/realms/master/protocol/openid-connect/token' \
  -H 'Content-Type: application/x-www-form-urlencoded' -d 'username={{_sso_admin_user}}' -d 'password={{_sso_admin_password}}' -d 'grant_type=password' -d 'client_id=admin-cli'"
  register: token_text

- set_fact: TKN={{ (token_text.stdout | from_json).access_token }}

- debug: var=TKN

- name: Create Threescale Realm
  uri: 
    url: 'https://keycloak-{{sso_project}}.{{route_subdomain}}/auth/admin/realms'
    method: POST
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{TKN}}"
    body: "{{ lookup('file', 'threescale-realm.json') }}"
    return_content: yes
    validate_certs: no
    status_code: 201
