---

- name: Ensure yum/dnf pre-requisites in place
  package:
    name: "{{ deploy_automationcontroller_dnf_packages }}"
    state: present

- name: extract installer according to method {{ aap_deploy_extract_method }}
  include_tasks:
    file: "extract/{{ aap_deploy_extract_method }}.yml"

- name: Create template based inventory file for Ansible controller install
  template:
    src: automationcontroller_inventory.j2
    dest: "{{ __aap_deploy_extract_dir }}/inventory"

- name: Run the Automation Controller installer
  command: "./setup.sh"
  args:
    chdir: "{{ __aap_deploy_extract_dir }}"
  async: "{{ aap_deploy_timeout_secs | int }}"
  poll: 30
  tags:
    - deploy_automationcontroller_installer

- name: Wait for Ansible controller to be up
  uri:
    url: "https://{{groups['automationcontroller'][0] }}/api/v2/ping/"
    method: GET
    user: "{{ deploy_automationcontroller_admin_user }}"
    password: "{{ deploy_automationcontroller_admin_password }}"
    validate_certs: false
  register: r_automationcontroller_ping
  until:
    - r_automationcontroller_ping.json is defined
    - r_automationcontroller_ping.json.instances[0].capacity > 0
    - r_automationcontroller_ping.json.instance_groups[0].capacity > 0
  retries: 60
  delay: 10

- name: Display Ansible controller /api/v2/ping results
  debug:
    msg: '{{ r_automationcontroller_ping.json }}'

- name: remove registry username from inventory file
  lineinfile:
    path: "{{ __aap_deploy_extract_dir }}/inventory"
    regexp: '^registry_username='
    line: 'registry_username=SECRET'

- name: remove registry password from inventory file
  lineinfile:
    path: "{{ __aap_deploy_extract_dir }}/inventory"
    regexp: '^registry_password='
    line: registry_password=SECRET
...
