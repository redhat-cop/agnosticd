---
- name: nginx | include correct tasks for OS
  include_tasks:
    file: "nginx/{{ ansible_distribution }}{{ansible_distribution_major_version }}.yml"

- name: nginx | start nginx server
  service:
    name: nginx
    enabled: yes
    state: started

- name: nginx | generate certbot certificate (Let's Encrypt)
  when: certbot_cert_manager_provider != 'zerossl'
  command: >-
    certbot certonly --nginx
    -m {{ vscode_server_encrypt_mail | regex_replace('example.com$','opentlc.com') }}
    -d {{ vscode_server_hostname }} --noninteractive --agree-tos

- name: nginx | generate certbot certificate (ZeroSSL)
  when: certbot_cert_manager_provider == 'zerossl'
  command: >-
    certbot certonly --nginx
    --eab-kid "{{ certbot_cert_manager_zerossl_eab_key_id }}" --eab-hmac-key "{{ certbot_cert_manager_zerossl_hmac_key }}" --server "{{ certbot_cert_manager_acme_url }}"
    -m {{ vscode_server_encrypt_mail | regex_replace('example.com$','opentlc.com') }}
    -d {{ vscode_server_hostname }} --noninteractive --agree-tos

- name: nginx | create nginx certificate directory
  file:
    path: /etc/pki/nginx/private
    state: directory
    recurse: yes
    owner: nginx

- name: nginx | copy letsencrypt key
  copy:
    src: /etc/letsencrypt/live/{{ vscode_server_hostname }}/fullchain.pem
    dest: /etc/pki/nginx/server.crt
    remote_src: yes
    owner: nginx
    mode: 0644

- name: nginx | copy letsencrypt certificate
  copy:
    src: /etc/letsencrypt/live/{{ vscode_server_hostname }}/privkey.pem
    dest: /etc/pki/nginx/private/server.key
    remote_src: yes
    owner: nginx
    mode: 0644

- name: nginx | copy custom vscode nginx configuration file
  ansible.builtin.template:
    src: "{{ vscode_server_nginx_conf }}"
    dest: /etc/nginx/nginx.conf

- name: nginx | enable selinux boolean to connect with vscode-server
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: nginx | restart nginx server
  service:
    name: nginx
    state: restarted

...
