---

- name: vscode | download vscode-server package
  get_url:
    url: "{{ vscode_server_rpm_url }}"
    dest: /tmp/code-server.rpm

- name: vscode | install vscode-server
  yum:
    name: /tmp/code-server.rpm
    disable_gpg_check: true
    state: present

- name: Clean up
  file:
    path: "/tmp/code-server.rpm"
    state: absent

- name: vscode | create directory in user's home
  file:
    path: "{{ vscode_server_user_dir }}/{{ __directory }}/"
    recurse: true
    state: directory
    owner: "{{ vscode_user_name }}"
    group: users
  loop:
    - User
    - extensions
  loop_control:
    loop_var: __directory

- name: vscode | copy default settings
  template:
    src: settings.json
    dest: "{{ vscode_server_user_dir }}/User/settings.json"
    owner: "{{ vscode_user_name }}"
    group: users

- name: vscode | create config directory in user's home
  file:
    path: "{{ vscode_server_config_dir }}/"
    recurse: true
    state: directory
    owner: "{{ vscode_user_name }}"
    group: users

- name: vscode | copy configuration
  template:
    src: config.yaml.j2
    dest: "{{ vscode_server_config_dir }}/config.yaml"
    owner: "{{ vscode_user_name }}"
    group: users

- name: vscode | download necessary extensions
  get_url:
    url: "{{ __vscode_server_extension }}"
    dest: "{{ vscode_server_user_dir }}/extensions/"
    validate_certs: no
    owner: "{{ vscode_user_name }}"
  loop: "{{ [__vscode_server_extensions_base_url] | product(vscode_server_default_extensions) | map('join') | list | union(vscode_server_extension_urls) }}"
  loop_control:
    loop_var: __vscode_server_extension

- name: vscode | install extensions in given order
  become_user: "{{ vscode_user_name }}"
  command:
    argv:
      - "/bin/code-server"
      - "--install-extension"
      - "{{ vscode_server_user_dir }}/extensions/{{ __vscode_extension }}"
  loop: "{{ vscode_server_default_extensions | union(vscode_server_extension_urls | map('urlsplit', 'path') | map('basename') | list) }}"
  loop_control:
    loop_var: __vscode_extension

- name: Copy coder.json template
  when: vscode_user_workspace_path is defined
  template:
    src: coder.json.j2
    dest: "{{ vscode_server_user_dir }}/coder.json"
    owner: "{{ vscode_user_name }}"
    mode: '0644'

- name: vscode | enable and start vscode-server daemon
  systemd:
    enabled: true
    state: started
    daemon_reload: true
    name: "code-server@{{ vscode_user_name }}"

# because the vscode terminal isn't a login shell, it can be that podman
# moans about no systemd user session being available
- name: vscode | make sure user lingers to avoid issues with podman
  command:
    cmd: "loginctl enable-linger {{ vscode_user_name }}"
