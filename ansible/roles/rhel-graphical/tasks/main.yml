---
# tasks file for graphical
- name: RHEL Graphical role
  block:
  - name: Gather package facts
    package_facts:
      manager: auto

  - name: Gather service facts
    service_facts:

  - name: Open port 443 on firewalld
    ansible.posix.firewalld:
      service: https
      zone: public
      permanent: true
      immediate: true
      state: enabled
    when:
    - ansible_facts.services['firewalld']['state']|default('') != 'running'

  - name: RHEL 7 Tasks
    block:
    - name: Install GUI components (cloud access)
      yum:
        name:
        - "@gnome-desktop"
        - "@x11"
        - "@fonts"
        - "tigervnc-server"
        exclude: "fwupdate-efi"
        disablerepo: "*"
        enablerepo: "rhui-REGION-rhel-server-releases"
        skip_broken: "true"
        state: present
      when: cloud_access

    - name: Install GUI components
      yum:
        name:
        - "@gnome-desktop"
        - "@x11"
        - "@fonts"
        - "tigervnc-server"
        exclude: "fwupdate-efi"
        skip_broken: "true"
        state: present
      when: not cloud_access
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '7'

  - name: RHEL 8 Tasks
    block:
    - name: Install GUI components on RHEL 8
      yum:
        name:
        - "@base-x"
        exclude:
        - file-roller-nautilus
        skip_broken: "true"
        state: present

    - name: Install Internet Browser on RHEL 8
      yum:
        name:
        - "@Internet Browser"
        state: present

    - name: Install GNOME on RHEL 8
      yum:
        name:
        - "@GNOME"
        exclude:
        - file-roller-nautilus
        skip_broken: "true"
        state: present

    - name: Install VNC packages on RHEL 8
      yum:
        name:
        - tigervnc-server
        - "xorg-*"
        - coreutils
        - wget
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '8'

  - name: RHEL 9 Tasks
    block:

    - name: Install GNOME on RHEL 9
      yum:
        name:
        - "@GNOME"
        state: present

    - name: Install VNC packages on RHEL 9
      yum:
        name:
        - tigervnc-server
        - "xorg-*"
        - coreutils
        - wget
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '9'

  - name: "Create the remote .config directory"
    file:
      path: "/home/{{ student_name }}/.config"
      mode: 0755
      state: directory
      owner: "{{ student_name }}"
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '9'

  - name: Configure ~/.config/gnome-initial-setup-done
    ansible.builtin.copy:
      content: "yes"
      dest: "/home/{{ student_name }}/.config/gnome-initial-setup-done"
      owner: "{{ student_name }}"
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '9'

  - name: Configure ~/.config/gnome-initial-setup-done
    ansible.builtin.copy:
      content: "yes"
      dest: "/home/{{ student_name }}/.config/gnome-initial-setup-done"
      owner: "{{ student_name }}"
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '9'

  - name: Disable welcome window
    ansible.builtin.command: >-
      dbus-launch --exit-with-session gsettings
      set org.gnome.shell welcome-dialog-last-shown-version '40.10'
    become_user: "{{ student_name }}"
    ignore_errors: true

  - name: Copy TigerVNC service file
    command: "cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@.service"

  - name: Assign the student user to the first display
    lineinfile:
      dest: /etc/tigervnc/vncserver.users
      line: ":1={{ student_name }}"
      create: true

  - name: "Create the remote .vnc directory"
    file:
      path: /home/{{ student_name }}/.vnc
      mode: 0755
      state: directory
      owner: "{{ student_name }}"

  - name: "Generate vnc password for root user remotely"
    shell: |
      echo {{ student_password }} | vncpasswd -f > /home/{{ student_name }}/.vnc/passwd

  - name: "Change the permission to 600 for ~/.vnc/passwd file"
    file:
      path: /home/{{ student_name }}/.vnc/passwd
      mode: 0600
      owner: "{{ student_name }}"

  - name: "Start & enable the vncserver"
    systemd:
      state: started
      daemon_reload: true
      name: vncserver@:1
      enabled: true
...
