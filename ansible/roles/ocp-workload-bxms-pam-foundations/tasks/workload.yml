---
- name: define ocp_projects
  set_fact:
    dev_project: "rhpam-{{ guid }}-dev"

- name: "Create projects {{dev_project}}"
  command: "oc new-project {{dev_project}}"

- name: "Label namespaces"
  command: "oc label namespace {{dev_project}} AAD='{{guid}}'"

- name: add custom pam image streams
  block:
    - command: "oc import-image {{kieserver_image}} -n {{ kieserver_image_namespace }} --confirm"
    - command: "oc import-image {{businesscentral_image}} -n {{ businesscentral_image_namespace }} --confirm"

- name: Import PAM Authoring template
  shell: "oc create -f {{pam_template_yml}} -n {{dev_project}}"

- name: Create Secrets Business Central
  shell: oc process -f {{pam_secrets_template_yml}} -p SECRET_NAME=businesscentral-app-secret | oc create -f - -n {{dev_project}}

- name: Create Secrets KIE-server
  shell: oc process -f {{pam_secrets_template_yml}} -p SECRET_NAME=kieserver-app-secret | oc create -f - -n {{dev_project}}

- name: Create Service Account Business Central
  shell: oc create serviceaccount {{bc_service_account}} -n {{dev_project}}

- name: Create Service Account KIE Server
  shell: oc create serviceaccount {{ks_service_account}} -n {{dev_project}}

- name: Link secrets and service account Business Central
  shell: oc secrets link --for=mount {{bc_service_account}} businesscentral-app-secret -n {{dev_project}}

- name: Link secrets and service account KIE-server
  shell: oc secrets link --for=mount {{ks_service_account}} kieserver-app-secret -n {{dev_project}}

# Deploy Business Central
- name: Check if Business Central was already provisioned
  command: "oc get service {{ businesscentral_application_name }} -n {{ dev_project}}"
  register: bc_already_installed
  ignore_errors: true
  changed_when: false

- name: Prepare Business Central template
  template:
    src: "templates/rhpam-dev-businesscentral.yaml"
    dest: "/tmp/{{guid}}/rhpam-dev-businesscentral.yaml"
  changed_when: false
  when: bc_already_installed is failed

- name: Instantiate Business Central from template
  command: >-
    oc new-app -f /tmp/{{ guid }}/rhpam-dev-businesscentral.yaml
    -n {{ dev_project }}
  when: bc_already_installed is failed

- name: Wait for Business Central to be deployed
  command: "oc get dc/{{businesscentral_application_name}} -o yaml -n {{ dev_project }}"
  register: result
  until: '"availableReplicas: 1" in result.stdout'
  retries: 5
  delay: 60
  changed_when: false
  when:
    - bc_already_installed is failed

- name: get domain url
  shell: echo $(oc get route {{ businesscentral_application_name }} -o jsonpath='{.spec.host}' -n {{ dev_project }} | sed "s/{{ businesscentral_application_name }}-{{ dev_project }}.//g")
  register: ocp_domain_host

- name: set ocp_domain fact
  set_fact:
    ocp_domain: "{{ ocp_domain_host.stdout }}"

- name: Wait for Business Central to be running (HTTP test)
  uri:
    url: "https://{{businesscentral_application_name}}-{{dev_project}}.{{ ocp_domain }}"
  register: _result
  until: _result.status == 200
  retries: 10
  delay: 60
  changed_when: false
  when:
    - bc_already_installed is failed

# Deploy Kie-server
- name: Check if Kie Server was already provisioned
  command: "oc get service {{ kieserver_application_name }} -n {{ dev_project}}"
  register: ks_already_installed
  ignore_errors: true
  changed_when: false

- name: Prepare Kie Server template
  template:
    src: "templates/rhpam-dev-kieserver.yaml"
    dest: "/tmp/{{guid}}/rhpam-dev-kieserver.yaml"
  changed_when: false
  when: ks_already_installed is failed

- name: Instantiate Kie Server from template
  command: >-
    oc new-app -f /tmp/{{ guid }}/rhpam-dev-kieserver.yaml
    -n {{ dev_project }}
  when: ks_already_installed is failed

- name: Wait for Kie Server to be deployed
  command: "oc get dc/{{kieserver_application_name}} -o yaml -n {{ dev_project }}"
  register: result
  until: '"availableReplicas: 1" in result.stdout'
  retries: 5
  delay: 60
  changed_when: false
  when:
    - ks_already_installed is failed

- name: Wait for Kie Server to be running (HTTP test)
  uri:
    url: "https://{{kieserver_application_name}}-{{dev_project}}.{{ ocp_domain }}/docs"
  register: _result
  until: _result.status == 200
  retries: 10
  delay: 60
  changed_when: false
  when:
    - ks_already_installed is failed

- name: Give ocp_username access to dev project
  shell: "oc policy add-role-to-user admin {{ ocp_username }} -n {{ dev_project }}"

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete
