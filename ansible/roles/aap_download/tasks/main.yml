---
- name: Check if aap.tar.gz exists
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/aap.tar.gz"
    checksum_algorithm: sha256
  register: stat_var

- name: Attempt to download specified AAP if we don't already have it
  when: stat_var.stat.checksum | default("") != provided_sha_value
  block:
    - name: Download aap.tar.gz from access.redhat.com
      ansible.builtin.include_tasks: 10_download.yml

  rescue:
    - name: Role aap_download has entered rescue stanza
      ansible.builtin.debug:
        msg: "download from access.redhat.com has failed, attempting to see if there is a cached aap.tar.gz file"

    - name: Fail if file aap.tar.gz not found
      ansible.builtin.fail:
        msg: "There was no app.tar.gz file found to install AAP"
      when: not stat_var.stat.exists

- name: Check if aap.tar.gz again (post download)
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/aap.tar.gz"
    get_checksum: true
    checksum_algorithm: sha256
  register: stat_var

- name: Debug full output stats
  ansible.builtin.debug:
    msg: "{{ stat_var }}"

- name: List playbook_dir in case stat_var is empty
  ansible.builtin.command: ls -al {{ playbook_dir }}
  changed_when: false
  register: reg_output

- name: Debug variable output
  ansible.builtin.debug:
    msg: "{{ reg_output.stdout_lines }}"

- name: Verify sha256sum of aap.tar.gz
  ansible.builtin.fail:
    msg: "Failure, sha256sum does not match"
  when: stat_var.stat.checksum != provided_sha_value
