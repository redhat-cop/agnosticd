---
- name: Read metadata.json
  slurp:
    path: ~{{ ansible_user }}/{{ cluster_name }}/metadata.json
  register: r_read_metadata_json
  until: r_read_metadata_json is success
  retries: 10
  delay: 5

- name: Set ocp4_cluster_infra_id
  set_fact:
    ocp4_cluster_infra_id: "{{ (r_read_metadata_json.content | b64decode | from_json).infraID }}"

- name: List floating ips
  command: >-
    openstack --os-cloud={{ osp_cloud_name }}
    floating ip list -f json
  changed_when: false
  register: r_list_floating_ip

- name: Get api-port
  command: >-
    openstack --os-cloud={{ osp_cloud_name }}
    port show {{ ocp4_cluster_infra_id }}-api-port -f json
  register: r_show_api_port
  changed_when: false
  failed_when: >-
    r_show_api_port.rc != 0 and
    'No Port found' not in r_show_api_port.stderr

- name: Unset floating ip for api-port
  vars:
    __fixed_ip: >-
      {{ r_show_api_port.stdout | from_json
       | json_query('fixed_ips[0].ip_address')
      }}
    __floating_ip_query: >-
      [?"Fixed IP Address"==`{{ __fixed_ip | to_json }}`].ID|[0]
    __floating_ip: >-
      {{ r_list_floating_ip.stdout | from_json
       | json_query(__floating_ip_query)
      }}
  when: >-
    r_show_api_port.rc == 0 and
    __floating_ip | default('') != ''
  command: >-
    openstack --os-cloud={{ osp_cloud_name }}
    floating ip unset --port {{ __floating_ip }}

- name: Get ingress-port
  command: >-
    openstack --os-cloud={{ osp_cloud_name }}
    port show {{ ocp4_cluster_infra_id }}-ingress-port -f json
  register: r_show_ingress_port
  changed_when: false
  failed_when: >-
    r_show_ingress_port.rc != 0 and
    'No Port found' not in r_show_ingress_port.stderr

- name: Unset floating ip for ingress-port
  vars:
    __fixed_ip: >-
      {{ r_show_ingress_port.stdout | from_json
       | json_query('fixed_ips[0].ip_address')
      }}
    __floating_ip_query: >-
      [?"Fixed IP Address"==`{{ __fixed_ip | to_json }}`].ID|[0]
    __floating_ip: >-
      {{ r_list_floating_ip.stdout | from_json
       | json_query(__floating_ip_query)
      }}
  when: >-
    r_show_ingress_port.rc == 0 and
    __floating_ip | default('') != ''
  command: >-
    openstack --os-cloud={{ osp_cloud_name }}
    floating ip unset --port {{ __floating_ip }}

- name: Remove node subnet from external router
  command: >-
    openstack --os-cloud={{ osp_cloud_name }}
    router remove subnet {{ ocp4_cluster_infra_id }}-external-router
    {% if ocp_use_single_network | bool %}
    {{ internal_network_subnet_id }}
    {% else %}
    {{ ocp4_cluster_infra_id }}-nodes
    {% endif %}
  register: r_remove_subnet_for_external_router
  failed_when: >-
    r_remove_subnet_for_external_router.rc != 0 and
    'No Subnet found' not in r_remove_subnet_for_external_router.stderr and
    'No Router found' not in r_remove_subnet_for_external_router.stderr

- name: Remove external router
  command: >-
    openstack --os-cloud={{ osp_cloud_name }}
    router delete {{ ocp4_cluster_infra_id }}-external-router
  register: r_delete_external_router
  failed_when: >-
    r_delete_external_router.rc != 0 and
    'No Router found' not in r_delete_external_router.stderr
