---

# Project and user administration

- name: "Create project for workload {{namespace}}"
  shell: "oc get project {{namespace}} || oc new-project {{namespace}} --display-name='Reactica'"

- name: "Give user access to the project"
  shell: "oc adm policy add-role-to-user admin {{ocp_username}} -n {{namespace}}"

- name: "Label namespace"
  command: "oc label namespace {{namespace}} AAD='{{guid}}'"

- name: Make sure we go back to default project
  shell: "oc project default"

# ###############       Installing images streams and templates        ###############

- name: Install AMQ ImageStream
  shell: "oc replace --force -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/amq-broker-71/amq-broker-7-image-streams.yaml -n {{namespace}}"

- name: Install DataGrid ImageStream
  shell: "curl -s https://raw.githubusercontent.com/jboss-container-images/jboss-datagrid-7-openshift-image/datagrid72/templates/datagrid72-image-stream.json | sed 's/registry.redhat.io/registry.access.redhat.com/g' | oc replace --force -n {{namespace}} -f -"
  args:
    warn: false

- name: Install AMQ template
  shell: "oc replace --force -f https://github.com/jboss-container-images/jboss-amq-7-broker-openshift-image/raw/amq-broker-71/templates/amq-broker-71-basic.yaml -n {{namespace}}"

- name: Install DataGrid template
  shell: "oc replace --force -f https://raw.githubusercontent.com/jboss-container-images/jboss-datagrid-7-openshift-image/datagrid72/templates/datagrid72-basic.json -n {{namespace}}"


## Deploying AMQ and DataGrid ###

- name: Deploying AMQ
  shell: "oc get dc eventstream-amq -n {{namespace}} || oc new-app --template=amq-broker-71-basic -p APPLICATION_NAME=eventstream -p AMQ_QUEUES=USER_QUEUE,ENTER_EVENT_QUEUE,RIDE_EVENT_QUEUE,QLC_QUEUE,CL_QUEUE -p AMQ_USER=user -p AMQ_PASSWORD=user123 -p AMQ_PROTOCOL=amqp -p IMAGE_STREAM_NAMESPACE={{namespace}} -n {{namespace}}"

- name: Deploying DataGrid
  shell: "oc get dc eventstore-dg -n {{namespace}} || oc new-app --template=datagrid72-basic -p APPLICATION_NAME=eventstore-dg -p CACHE_NAMES=userevents,rideevents,users -p IMAGE_STREAM_NAMESPACE={{namespace}} -n {{namespace}}"

- name: Wait for AMQ to be availble
  shell: "oc get pods -n {{namespace}} | grep eventstream-amq | grep -s Running"
  retries: 30
  delay: 10
  register: result
  until: result is succeeded

- name: Wait for DG to be availble
  shell: "oc get pods -n {{namespace}} | grep eventstore-dg | grep -s Running"
  retries: 30
  delay: 10
  register: result
  until: result is succeeded


- name: Add the view role to the default service account 
  shell: "oc policy add-role-to-user view -z default -n {{namespace}}"

- name: Copy catalog service configmap to known path
  template:
    src: application.yaml
    dest: /tmp/application.yaml

- name: Create the application configuration for the apps
  shell: "oc get configmap reactica-config -n {{namespace}} || oc create configmap reactica-config --from-file=/tmp/application.yaml -n {{namespace}}"

- name: Create services
  include_tasks: create-dc-svc-and-route.yml service="{{item}}"
  with_items:
    - event-store
    - billboard
    - current-line-updater
    - queue-length-calculator
    - event-generator

- name: Make sure we go back to default project
  shell: "oc project default"

