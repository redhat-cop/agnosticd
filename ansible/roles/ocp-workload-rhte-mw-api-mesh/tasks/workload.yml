---
- name: define ocp_project
  set_fact:
    ocp_project: "{{lab_name}}-{{guid}}"

- name: "Create project for workload {{ocp_project}}"
  shell: "oc new-project {{ocp_project}} --display-name={{ocp_project}}"

- name: "Label namespace"
  command: "oc label namespace {{ocp_project}} AAD='{{guid}}'"

- name: Make sure we go back to default project
  shell: "oc project default"



# #######         Istio Control Plane      ############## #

- name: Determine if istio-system namespace already exists.  Provision istio control plane once per OCP cluster
  command: oc get projects -o name
  register: oc_projects
  changed_when: false

- name: "Add anyuid scc to all authenticated: {{oc_projects.stdout_lines}}"
  shell: "oc adm policy add-scc-to-group anyuid system:authenticated"
  when: '"projects/" ~ "istio-system" not in oc_projects.stdout_lines'

- name: Copy istio-demo template to known path
  template:
    src: templates/istio-demo-1.0.0.yaml 
    dest: /tmp/istio-demo-1.0.0.yaml
  when: '"projects/" ~ "istio-system" not in oc_projects.stdout_lines'

- name: Provision Istio Control Plane
  shell:  "oc create -f /tmp/istio-demo-1.0.0.yaml"
  when: '"projects/" ~ "istio-system" not in oc_projects.stdout_lines'

- name: Expose routes
  shell: |
      oc expose svc istio-ingressgateway -n istio-system && \ 
      oc expose svc servicegraph -n istio-system && \
      oc expose svc grafana -n istio-system && \
      oc expose svc prometheus -n istio-system && \
      oc expose svc tracing -n istio-system
  when: '"projects/" ~ "istio-system" not in oc_projects.stdout_lines'

###########################################################


# #######       Istio Privildges for user       ######### #

- name: Add view access for user to istio-system namespace (for istioctl to be able to view istio config map )
  shell: "oc adm policy add-role-to-user view {{ocp_username}} -n istio-system"

- name: Provide anyuid scc to default sa for each student lab namespace
  shell: "oc adm policy add-scc-to-user privileged -z default -n {{ocp_project}} "
###########################################################



# #######      Coolstore Catalog Service   ############## #

- name: Add the view role to the default service account
  shell: "oc policy add-role-to-user view -z default -n {{ocp_project}}"

- stat: path=/tmp/app-config.yaml
  register: app_config_file
- name: Copy catalog service configmap to known path
  template:
    src: templates/app-config.yaml
    dest: /tmp/app-config.yaml
  when: app_config_file.stat.exists == False

- name: Load catalog service configmap
  shell: "oc create configmap app-config --from-file=/tmp/app-config.yaml -n {{ocp_project}}" 


- stat: path=/tmp/coolstore-catalog-mongodb-persistent.yaml
  register: coolstore_file
- name: Copy catalog service (with db) template to known path
  template:
    src: templates/coolstore-catalog-mongodb-persistent.yaml 
    dest: /tmp/coolstore-catalog-mongodb-persistent.yaml
  when: coolstore_file.stat.exists == False

- name: Build and create catalog service
  shell: |
      oc new-app \
      -f /tmp/coolstore-catalog-mongodb-persistent.yaml \
      -p CATALOG_DB_USERNAME=mongo \
      -p CATALOG_DB_PASSWORD=mongo \
      -n {{ocp_project}} 
- include_tasks: ./wait_for_build.yml
  static: no
  vars:
    build_to_wait:
      - catalog-service-s2i

- name: resume catalog-service
  shell: oc rollout resume dc/catalog-service -n {{ocp_project}}
- include_tasks: ./wait_for_deploy.yml
  static: no
  vars:
    pod_to_wait:
      - catalog-service

####################################################



- name: Annotate the empty project as requested by user
  shell: "oc annotate namespace {{ocp_project}} openshift.io/requester={{ocp_username}} --overwrite"

- name: Give ocp_username access to ocp_project; user = {{ocp_username}}
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{ocp_project}}"

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete
