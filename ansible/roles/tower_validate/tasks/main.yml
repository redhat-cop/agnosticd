---
# tasks file for tower_validate
- name: ping the Tower using the API
  uri:
    url: "https://{{ tower_hostname }}/api/v2/ping/"
    validate_certs: "{{ tower_validate_certs }}"
    method: GET
    headers:
      #Content-Type: "application/json"
      Authorization: "Basic {{ (tower_admin_user + ':' + tower_admin_password) | b64encode }}"
  register: tower_ping_res
- name: output the Tower ping result
  debug:
    var: tower_ping_res
    verbosity: 2  # only outputs when -vv or more
- name: gather the Tower configuration using the API
  uri:
    url: "https://{{ tower_hostname }}/api/v2/config/"
    validate_certs: "{{ tower_validate_certs }}"
    method: GET
    headers:
      #Content-Type: "application/json"
      Authorization: "Basic {{ (tower_admin_user + ':' + tower_admin_password) | b64encode }}"
  register: tower_config_res
- name: output the Tower configuration result
  debug:
    var: tower_config_res
    verbosity: 2  # only outputs when -vv or more

# Validate the expected values of Tower are met by the current installation

# NOTE: the `| int` are required to also allow to overwrite the variables on the command line

- name: validate that Tower cluster has the right number of instances
  assert:
    that:
    - tower_ping_res.json.instances | length == tower_expected_instances | int
    fail_msg: "tower_ping_res.json.instances {{ tower_ping_res.json.instances | length }} != tower_expected_instances {{ tower_expected_instances }}"
  when: tower_expected_instances is defined
- name: validate that Tower cluster has the right number of instance groups
  assert:
    that:
    - tower_ping_res.json.instance_groups | length == tower_expected_instance_groups | int
    fail_msg: "tower_ping_res.json.instance_groups {{ tower_ping_res.json.instance_groups | length }} != tower_expected_instance_groups {{ tower_expected_instance_groups }}"
  when: tower_expected_instance_groups is defined
- name: validate that Tower cluster has enough nodes licensed
  assert:
    that:
    - tower_config_res.json.license_info.available_instances >= tower_expected_licensed_min_nodes | int
    fail_msg: "tower_config_res.json.license_info.available_instances {{ tower_config_res.json.license_info.available_instances }} is less than tower_expected_licensed_min_nodes {{ tower_expected_licensed_min_nodes }}"
  when: tower_expected_licensed_min_nodes is defined
- name: validate that Tower cluster has enough time left
  assert:
    that:
    - tower_config_res.json.license_info.time_remaining >= (tower_expected_licensed_min_days | int * 24 * 3600)
    fail_msg: "tower_config_res.json.license_info.time_remaining {{ tower_config_res.json.license_info.time_remaining }} (in secs) is less than tower_expected_licensed_min_days {{ tower_expected_licensed_min_days }} (in days)"
  when: tower_expected_licensed_min_days is defined
