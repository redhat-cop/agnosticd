---
- name: Generate admin user password
  ansible.builtin.set_fact:
    _hcp_admin_password: >-
      {{ lookup('password', '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ hcp_admin_password_length
      ) }}

- name: Set up randomized user password array
  ansible.builtin.set_fact:
    hcp_user_passwords: >-
      {{ hcp_user_passwords + [ lookup('password',
        '/dev/null chars=ascii_letters,digits '
        ~ 'length=' ~ hcp_user_password_length ) ] }}
  loop: "{{ range(0, num_users, 1) | list }}"

- name: Create temporary htpasswd file
  ansible.builtin.tempfile:
    state: file
    suffix: htpasswd
  register: r_htpasswd

- name: Add admin user to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ hcp_admin_user }}"
    password: "{{ _hcp_admin_password }}"
    mode: "0664"

- name: Add users and passwords to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ hcp_user_base }}{{ item + 1 }}"
    password: "{{ hcp_user_passwords[item] }}"
    mode: "0664"
  loop: "{{ range(0, num_users, 1) | list }}"

- name: Read contents of htpasswd file
  ansible.builtin.slurp:
    src: "{{ r_htpasswd.path }}"
  register: r_htpasswd_file

- name: Remove generated htpasswd file
  ansible.builtin.file:
    path: "{{ r_htpasswd.path }}"
    state: absent

- name: Ensure htpasswd secret is absent
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: "htpasswd-{{ guid }}"
    namespace: "{{ hcp_ocp_namespace }}"
  register: r_htpasswd_secret_absent
  retries: 5
  delay: 10
  until: r_htpasswd_secret_absent is success

- name: Create secret htpasswd-{{ guid }}
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'secret-htpasswd.yaml') | from_yaml }}"
  vars:
    namespace: "{{ hcp_ocp_namespace }}"

- name: Save admin user information
  agnosticd_user_info:
    data:
      openshift_cluster_admin_username: "{{ hcp_admin_user }}"
      openshift_cluster_admin_password: "{{ _hcp_admin_password }}"
      openshift_cluster_num_users: "{{ num_users }}"
      openshift_cluster_user_base: "{{ hcp_user_base }}"

- name: Set hosted cluster console URL
  ansible.builtin.set_fact:
    _hcp_console_url: >-
      https://console-openshift-console.apps.hcp-{{ guid }}.{{ cluster_dns_zone }}

- name: Save user information for each user
  agnosticd_user_info:
    user: "{{ hcp_user_base }}{{ n + 1 }}"
    data:
      user: "{{ hcp_user_base }}{{ n + 1 }}"
      password: "{{ hcp_user_passwords[ n ] }}"
      openshift_cluster_console_url: "{{ _hcp_console_url }}"
      openshift_console_url: "{{ _hcp_console_url }}"
  loop: "{{ range(0, num_users | int) | list }}"
  loop_control:
    loop_var: n
