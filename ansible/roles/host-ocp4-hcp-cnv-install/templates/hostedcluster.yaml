---
apiVersion: hypershift.openshift.io/v1beta1
kind: HostedCluster
metadata:
  creationTimestamp: null
  name: hcp-{{ guid }}
  namespace: {{ namespace }}
spec:
  autoscaling: {}
  configuration:
    apiServer:
      servingCerts:
        namedCertificates:
          - servingCertificate:
              name: oauth-{{ guid }}
            names:
              - oauth-{{ namespace }}-hcp-{{ guid }}.{{ sandbox_openshift_apps_domain }}
{% if hcp_authentication | default('none') == "htpasswd" %}
    oauth:
      identityProviders:
      - name: democreds
        type: HTPasswd
        htpasswd:
          fileData:
            name: htpasswd-{{ guid }}
        mappingMethod: claim
      templates:
        error:
          name: ""
        login:
          name: ""
        providerSelection:
          name: ""
      tokenConfig: {}
{% endif %}

  controllerAvailabilityPolicy: {{ hcp_controller_availability_policy }}
  dns:
    baseDomain: {{ cluster_dns_zone }}
  etcd:
    managed:
      storage:
        persistentVolume:
          size: {{ hcp_etcd_pvc_size }}
          storageClassName: {{ hcp_etcd_storage_class }}
        type: PersistentVolume
    managementType: Managed
  fips: false
  infraID: hcp-{{ guid }}-{{ lookup('community.general.random_string', upper=false, numbers=false, special=false) }}
  networking:
    clusterNetwork:
    - cidr: 10.132.0.0/14
    networkType: OVNKubernetes
    serviceNetwork:
    - cidr: 172.31.0.0/16
  olmCatalogPlacement: management
  platform:
    kubevirt:
      baseDomainPassthrough: true
      credentials:
        infraKubeConfigSecret:
          key: kubeconfig
          name: hcp-{{ guid }}-infra-credentials
        infraNamespace: {{ namespace }}
{% if hcp_disable_storage_class | default(False) %}
      storageDriver:
        type: None
{% endif %}
    type: KubeVirt
  pullSecret:
    name: hcp-{{ guid }}-pull-secret
  release:
    image: quay.io/openshift-release-dev/ocp-release:{{ _ocp_latest_image.name }}
  services:
  - service: APIServer
    servicePublishingStrategy:
      type: LoadBalancer
  - service: OAuthServer
    servicePublishingStrategy:
      type: Route
  - service: Konnectivity
    servicePublishingStrategy:
      type: Route
  - service: Ignition
    servicePublishingStrategy:
      type: Route
  - service: OVNSbDb
    servicePublishingStrategy:
      type: Route
  sshKey: {}
status:
  controlPlaneEndpoint:
    host: ""
    port: 0
