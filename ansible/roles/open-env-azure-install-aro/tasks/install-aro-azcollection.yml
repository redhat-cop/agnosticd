---
- name: Check if ARO is already installed
  azure.azcollection.azure_rm_openshiftmanagedcluster_info:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    name: "aro-cluster-{{ guid }}"
  ignore_errors: true
  register: check_aro_install

- name: Create ARO cluster
  when: check_aro_install.clusters | length == 0
  azure.azcollection.azure_rm_openshiftmanagedcluster:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    name: "aro-cluster-{{ guid }}"
    location: "{{ azure_region }}"
    cluster_profile:
      pull_secret: "{{ ocp4_pull_secret }}"
      version: "{{ az_aro_version }}"
    service_principal_profile:
      client_id: "{{ azaroappsp.service_principals[0].app_id }}"
      client_secret: "{{ az_aro_pass }}"
    worker_profiles:
      - vm_size: "Standard_D4s_v3"
        subnet_id: "{{ worker_subnet.subnets[0].id }}"
        disk_size: 128
        count: 3
    master_profile:
      vm_size: "Standard_D8s_v3"
      subnet_id: "{{ master_subnet.subnets[0].id }}"
    state: present

- name: Wait for ARO to deploy
  azure.azcollection.azure_rm_openshiftmanagedcluster_info:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    name: "aro-cluster-{{ guid }}"
  register: aro_cluster
  until: "aro_cluster.clusters.properties.provisioningState == 'Succeeded'"
  retries: 60
  delay: 60

- name: Grab the console URL for ARO
  ansible.builtin.set_fact: az_aro4_console_url="{{ aro_cluster.clusters.properties.consoleProfile.url }}"

- name: Grab the API Server URL for ARO
  ansible.builtin.set_fact: az_aro4_public_api_url="{{ aro_cluster.clusters.properties.apiserverProfile.url }}"

- name: Build the ARO reply URL
  ansible.builtin.set_fact: az_aro4_reply_url="https://oauth-openshift.apps.{{ aro_cluster.clusters.properties.clusterProfile.domain }}.{{ aro_cluster.clusters.location }}.aroapp.io/oauth2callback/AAD"
