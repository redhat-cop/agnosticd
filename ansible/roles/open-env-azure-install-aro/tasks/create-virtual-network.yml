---

- name: Create ARO virtual network
  azure.azcollection.azure_rm_virtualnetwork:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    name: "aro-vnet-{{ guid }}"
    address_prefixes_cidr:
      - "10.0.0.0/22"
  register: az_aro_vnet

- name: Get Network Contributor Role Definition
  azure.azcollection.azure_rm_roledefinition_info:
    auth_source: cli
    scope: "{{ az_aro_vnet.state.id }}"
    role_name: "Network Contributor"
  register: az_nc_role_definition

- name: Set ARO SP as Network Contributor for the vnet
  azure.azcollection.azure_rm_roleassignment:
    auth_source: cli
    scope: "{{ az_aro_vnet.state.id }}"
    assignee_object_id: "{{ azaroappsp.service_principals[0].object_id }}"
    role_definition_id:
      "{{ az_nc_role_definition.roledefinitions[0].id }}"
    state: present
  register: az_nc_app_result
  failed_when: "az_nc_app_result.msg is defined and 'The role assignment already exists' not in az_nc_app_result.msg"

- name: Set ARO RP SP as Network Contributor for the vnet
  azure.azcollection.azure_rm_roleassignment:
    auth_source: cli
    scope: "{{ az_aro_vnet.state.id }}"
    assignee_object_id: "{{ azrpsp.service_principals[0].object_id }}"
    role_definition_id:
      "{{ az_nc_role_definition.roledefinitions[0].id }}"
    state: present
  register: az_nc_rp_app_result
  failed_when: "az_nc_rp_app_result.msg is defined and 'The role assignment already exists' not in az_nc_rp_app_result.msg"

- name: Check if ARO master subnet exists
  azure.azcollection.azure_rm_subnet_info:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    virtual_network_name: "aro-vnet-{{ guid }}"
    name: master-subnet
  ignore_errors: true
  register: master_subnet_check

- name: Create ARO master subnet
  when: "'subnets' not in master_subnet_check"
  azure.azcollection.azure_rm_subnet:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    virtual_network_name: "aro-vnet-{{ guid }}"
    name: master-subnet
    address_prefix_cidr: "10.0.0.0/23"
    service_endpoints:
      - service: "Microsoft.ContainerRegistry"
        locations:
          - "{{ azure_region }}"
    private_link_service_network_policies: "Disabled"

- name: Check if ARO worker subnet exists
  azure.azcollection.azure_rm_subnet_info:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    virtual_network_name: "aro-vnet-{{ guid }}"
    name: worker-subnet
  ignore_errors: true
  register: worker_subnet_check

- name: Create ARO worker subnet
  when: "'subnets' not in worker_subnet_check"
  azure.azcollection.azure_rm_subnet:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    virtual_network_name: "aro-vnet-{{ guid }}"
    name: worker-subnet
    address_prefix_cidr: "10.0.2.0/23"
    service_endpoints:
      - service: "Microsoft.ContainerRegistry"
        locations:
          - "{{ azure_region }}"

- name: Wait for ARO master subnet to provision
  azure.azcollection.azure_rm_subnet_info:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    virtual_network_name: "aro-vnet-{{ guid }}"
    name: master-subnet
  register: master_subnet
  until: "master_subnet.subnets[0].provisioning_state == 'Succeeded'"
  retries: 10
  delay: 10

- name: Wait for ARO worker subnet to provision
  azure.azcollection.azure_rm_subnet_info:
    auth_source: cli
    tenant: "{{ azure_tenant }}"
    resource_group: "openenv-{{ guid }}"
    virtual_network_name: "aro-vnet-{{ guid }}"
    name: worker-subnet
  register: worker_subnet
  until: "worker_subnet.subnets[0].provisioning_state == 'Succeeded'"
  retries: 10
  delay: 10

- name: Sleep before running ARO install
  ansible.builtin.pause:
    minutes: 5
