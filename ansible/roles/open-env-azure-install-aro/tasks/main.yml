---
- name: Login with azure root user
  command: >-
    az login -u "{{ azure_user }}"
    -p="{{ azure_user_password }}" --tenant="{{ azure_tenant }}"
- name: Create ARO VNET
  command: >-
    az network vnet create --resource-group "openenv-{{ guid }}" --name "aro-vnet-{{ guid }}" --address-prefixes 10.0.0.0/22

- name: Create ARO master subnet
  command: >-
    az network vnet subnet create --resource-group "openenv-{{ guid }}" --vnet-name "aro-vnet-{{ guid }}" --name master-subnet --address-prefixes 10.0.0.0/23 --service-endpoints Microsoft.ContainerRegistry

- name: Create ARO worker subnet
  command: >-
    az network vnet subnet create --resource-group "openenv-{{ guid }}" --vnet-name "aro-vnet-{{ guid }}" --name worker-subnet --address-prefixes 10.0.2.0/23 --service-endpoints Microsoft.ContainerRegistry

- name: Update policy for ARO master subnet
  command: >-
    az network vnet subnet update --name master-subnet --resource-group "openenv-{{ guid }}" --vnet-name "aro-vnet-{{ guid }}" --disable-private-link-service-network-policies true

- name: Create token file for ARO installer
  copy:
    dest: "{{ output_dir }}/token.txt"
    content: "{{ ocp4_pull_secret }}"

- name: Wait for vnets to settle
  pause:
    minutes: 2

- name: Create ARO cluster
  command: >-
    az aro create --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}" --vnet "aro-vnet-{{ guid }}" --master-subnet master-subnet --worker-subnet worker-subnet --client-id "{{ azaroappinfo.stdout | from_json | json_query('appId') }}" --client-secret '{{ az_aro_pass }}' --pull-secret "@{{ output_dir }}/token.txt"

- name: Grab the console URL for ARO
  command: >
    az aro show --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}"
    --query consoleProfile -o tsv
  register: az_aro4_public_hostname

- name: Grab the API Server URL for ARO
  command: >
    az aro show --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}"
    --query apiserverProfile.url -o tsv
  register: az_aro4_public_api

- name: Grabbing the kubeadmin password for ARO
  command: >
    az aro list-credentials --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}"
    --query kubeadminPassword -o tsv
  register: az_aro4_kubeadmin_password
