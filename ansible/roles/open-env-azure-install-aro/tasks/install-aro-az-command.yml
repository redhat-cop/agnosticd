---
- name: Create token file for ARO installer
  copy:
    dest: "{{ output_dir }}/token.txt"
    content: "{{ ocp4_pull_secret }}"

- name: Create ARO cluster
  command: >-
    az aro create --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}" --vnet "aro-vnet-{{ guid }}" --master-subnet master-subnet --worker-subnet worker-subnet --client-id "{{ azaroappsp.service_principals[0].app_id }}" --client-secret '{{ az_aro_pass }}' --pull-secret "@{{ output_dir }}/token.txt" --version {{ az_aro_version }}
  register: aro_cluster
  
- name: Grab the console URL for ARO
  command: >
    az aro show --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}"
    --query consoleProfile -o tsv
  register: console_url

- name: Grab the console URL for ARO
  ansible.builtin.set_fact: az_aro4_console_url="{{ console_url.stdout }}"

- name: Grab the API Server URL for ARO
  command: >
    az aro show --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}"
    --query apiserverProfile.url -o tsv
  register: public_api_url

- name: Grab the API Server URL for ARO
  ansible.builtin.set_fact: az_aro4_public_api_url="{{ public_api_url.stdout }}"

- name: Grab ARO domain
  command: >
    az aro show --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}"
    --query clusterProfile.domain -o tsv
  register: aro_domain

- name: Grab ARO location
  command: >
    az aro show --resource-group "openenv-{{ guid }}" --name "aro-cluster-{{ guid }}"
    --query location -o tsv
  register: aro_location

- name: Build the ARO reply URL
  ansible.builtin.set_fact: az_aro4_reply_url="https://oauth-openshift.apps.{{ aro_domain.stdout }}.{{ aro_location.stdout }}.aroapp.io/oauth2callback/AAD"
