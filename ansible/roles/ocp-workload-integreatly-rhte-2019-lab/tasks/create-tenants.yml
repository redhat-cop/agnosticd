---
- set_fact: userno={{ item }}

- name: Get 3scale master hostname
  shell: "oc get route/system-master -n 3scale -o json | jq '.spec.host'"
  register: 3scale_host_cmd

- debug:
  msg: 3scale master URL is {{ 3scale_host_cmd.stdout }}

- name: Wait until 3scale API is available 
  uri: 
    url: https://{{ 3scale_host_cmd.stdout }}
    method: HEAD
    validate_certs: no
  register: wait_threescale_result
  until: wait_threescale_result is succeeded
  ignore_errors: yes
  retries: 10
  delay: 60

- name: Create Tenant {{ item }}
  uri:
    url: https://{{ 3scale_host_cmd.stdout }}/master/api/providers.xml
    method: POST
    return_content: yes
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    body: "access_token={{threescale_master_access_token}}&org_name={{ userno }}&username={{ userno }}&email=admin%40{{ userno }}.com&password=openshift"
    validate_certs: no
    status_code: 201,409
  register: create_tenant_result
  retries: 3
  delay: 10
  until: create_tenant_result is not failed

- debug: var=create_tenant_result.content

- set_fact: signup={{ create_tenant_result.content }}

- name: Get Ids
  xml:
    xmlstring: '{{ signup }}'
    xpath: //account/id | //user[username='{{ userno }}']/id | //account/admin_domain | //account/domain
    content: text
  register: xmlstring

- debug: var=xmlstring.matches

- set_fact: ids={{ xmlstring.matches }}

- name: Activate Tenant User {{ item }}
  uri:
    url: https://{{ 3scale_host_cmd.stdout }}/admin/api/accounts/{{ ids[0].id }}/users/{{ ids[3].id }}/activate.xml
    method: PUT
    return_content: yes
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    body: "access_token={{threescale_master_access_token}}&account_id={{ ids[0].id }}&id={{ ids[3].id }}"
    validate_certs: no
    status_code: 200
  register: activate_tenant_result
  retries: 3
  delay: 10
  until: activate_tenant_result is not failed

- name: Create Admin Tenant {{ item }} Router
  shell: "oc create route edge system-provider-{{ userno }}-admin-route --service=system-provider --hostname={{ ids[1].admin_domain }} --port=http --insecure-policy=Allow -n {{ namespace }}"
  register: create_admin_tenant_router
  failed_when: create_admin_tenant_router.stderr != '' and 'already exists' not in create_admin_tenant_router.stderr

- name: Create Developer Tenant {{ item }} Router
  shell: "oc create route edge system-developer-{{ userno }}-route --service=system-developer --hostname={{ ids[2].domain }} --port=http --insecure-policy=Allow -n {{ namespace }}"
  register: create_dev_tenant_router
  failed_when: create_dev_tenant_router.stderr != '' and 'already exists' not in create_dev_tenant_router.stderr
