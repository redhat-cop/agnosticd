---
- name: Check if gitea user already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/users/{{ _namespace }}"
    method: GET
    validate_certs: false
  register: gitea_user
  ignore_errors: true

- name: Create user in gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/admin/users"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _gitea_admin_name }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_user.status == 404
  vars:
    body:
      email: "{{ _namespace }}@workshop.com"
      full_name: "{{ _namespace }}"
      login_name: "{{ _namespace }}"
      must_change_password: false
      password: "{{ _account_password }}"
      send_notify: false
      source_id: 0
      username: "{{ _namespace }}"

- name: Check if gitea pam-fraudmanagement project already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/pam-fraudmanagement"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_pam_project
  ignore_errors: true

- name: Get gitea user info
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/users/{{ _namespace }}"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_insystem_user
  when: gitea_pam_project.status == 404

- name: Deploy pam-fraudmanagement into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_pam_project.status == 404
  vars:
    body: '{
      "clone_addr": "https://github.com/RedHat-Consulting-UK/summit-2020-pam-fraudmanagement.git",
      "description": "Proactive Fraud Management with Case Management, Kafka and DMN Services",
      "repo_name": "pam-fraudmanagement",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'
