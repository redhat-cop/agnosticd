---
- name: Check if gitea user already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/users/{{ _namespace }}"
    method: GET
    validate_certs: false
  register: gitea_user
  ignore_errors: true

- name: Create user in gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/admin/users"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _gitea_admin_name }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_user.status == 404
  vars:
    body:
      email: "{{ _namespace }}@workshop.com"
      full_name: "{{ _namespace }}"
      login_name: "{{ _namespace }}"
      must_change_password: false
      password: "{{ _account_password }}"
      send_notify: false
      source_id: 0
      username: "{{ _namespace }}"

- name: Check if gitea proactive-fraud-detection-bucketrepo repo already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/proactive-fraud-detection-bucketrepo"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_repo_bucketrepo
  ignore_errors: true

- name: Check if gitea proactive-fraud-detection-doc repo already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/proactive-fraud-detection-doc"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_repo_doc
  ignore_errors: true

- name: Check if gitea proactive-fraud-detection-fuse repo already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/proactive-fraud-detection-fuse"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_repo_fuse
  ignore_errors: true

- name: Check if gitea proactive-fraud-detection-kafka repo already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/proactive-fraud-detection-kafka"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_repo_kafka
  ignore_errors: true

- name: Check if gitea proactive-fraud-detection-dmn repo already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/proactive-fraud-detection-dmn"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_repo_dmn
  ignore_errors: true

- name: Check if gitea proactive-fraud-detection-case repo already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/proactive-fraud-detection-case"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_repo_case
  ignore_errors: true

- name: Check if gitea proactive-fraud-detection-kclient repo already exists (note; error can be ignored)
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/{{ _namespace }}/proactive-fraud-detection-kclient"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_repo_kclient
  ignore_errors: true

- name: Get gitea user info
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/users/{{ _namespace }}"
    method: GET
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  register: gitea_insystem_user

- name: Deploy proactive-fraud-detection-bucketrepo into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_repo_bucketrepo.status == 404
  vars:
    body: '{
      "clone_addr": "https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-bucketrepo.git",
      "description": "Mirrored from https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-bucketrepo.git",
      "repo_name": "proactive-fraud-detection-bucketrepo",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'

- name: Deploy proactive-fraud-detection-doc into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_repo_doc.status == 404
  vars:
    body: '{
      "clone_addr": "https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-doc.git",
      "description": "Mirrored from https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-doc.git",
      "repo_name": "proactive-fraud-detection-doc",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'
- name: Deploy proactive-fraud-detection-fuse into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_repo_fuse.status == 404
  vars:
    body: '{
      "clone_addr": "https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-fuse.git",
      "description": "Mirrored from https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-fuse.git",
      "repo_name": "proactive-fraud-detection-fuse",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'

- name: Deploy proactive-fraud-detection-kafka into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_repo_kafka.status == 404
  vars:
    body: '{
      "clone_addr": "https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-kafka.git",
      "description": "Mirrored from https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-kafka.git",
      "repo_name": "proactive-fraud-detection-kafka",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'

- name: Deploy proactive-fraud-detection-dmn into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_repo_dmn.status == 404
  vars:
    body: '{
      "clone_addr": "https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-dmn.git",
      "description": "Mirrored from https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-dmn.git",
      "repo_name": "proactive-fraud-detection-dmn",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'

- name: Deploy proactive-fraud-detection-case into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_repo_case.status == 404
  vars:
    body: '{
      "clone_addr": "https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-case.git",
      "description": "Mirrored from https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-case.git",
      "repo_name": "proactive-fraud-detection-case",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'

- name: Deploy proactive-fraud-detection-kclient into gitea
  uri:
    url: "https://{{ gitea_route.stdout }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ _namespace }}"
    password: "{{ _account_password }}"
    force_basic_auth: true
  when: gitea_repo_kclient.status == 404
  vars:
    body: '{
      "clone_addr": "https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-kclient.git",
      "description": "Mirrored from https://gitlab.com/2020-summit-labs/proactive-fraud-detection/proactive-fraud-detection-kclient.git",
      "repo_name": "proactive-fraud-detection-kclient",
      "uid": {{ gitea_insystem_user.json.id | int }}
    }'