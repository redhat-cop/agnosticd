---
- name: Create operator
  k8s:
    state: present
    namespace: "{{ _namespace }}"
    definition: "{{ lookup('file', role_path ~ '/files/datagrid/operator.yml' ) | from_yaml }}"

- name: Wait until csv/{{ _datagrid_csv_version }} is Succeeded
  command: >
    oc get csv/{{ _datagrid_csv_version }} -o jsonpath='{.status.phase}' -n "{{ _namespace }}"
  register: datagridcsv
  retries: "{{ _retry }}"
  delay: "{{ _delay }}"
  until: datagridcsv.stdout == "Succeeded"

- name: Create Infinispan
  k8s:
    state: present
    namespace: "{{ _namespace }}"
    definition: "{{ lookup('template', role_path ~ '/files/datagrid/cluster.yml' ) | from_yaml }}"

- name: Wait until Infinispan is Deployed
  command: >
    oc get infinispan/example-infinispan -o jsonpath='{.status.conditions[?(@.type=="wellFormed")].status}' -n "{{ _namespace }}"
  register: infinispan
  retries: "{{ _retry }}"
  delay: "{{ _delay }}"
  until: infinispan.stdout == "True"

- name: Get Infinispan hotrod service address
  command: >
    oc get svc/example-infinispan -o jsonpath='{.metadata.name}{":"}{.spec.ports[?(@.name=="hotrod")].port}' -n "{{ _namespace }}"
  register: hotrod_clients