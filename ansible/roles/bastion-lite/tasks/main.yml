---
# Generate an SSH key on the Bastion and configure access on all the hosts
- include_tasks: ./create_bastion_ssh_key_and_access.yml

- name: Generate .ssh/config
  template:
    src: "{{ role_path }}/templates/bastion_ssh_config.j2"
    dest: ~/.ssh/config
    mode: 0400

- name: Stat /etc/sysconfig/iptables
  stat:
    path: /etc/sysconfig/iptables
  register: statiptables

- name: Install FTL
  when: install_ftl | default(false) | bool
  block:
    - name: Install FTL
      include_role:
        name: ftl-injector
      vars:
        student_login: "{{ student_name }}"
        use_python3: "{{ ftl_use_python3 | default(true) }}"

    - name: Ensure system Python3 has selinux library installed
      when: ftl_use_python3 | default(true) | bool
      pip:
        state: present
        executable: /usr/bin/pip3
        name: selinux
        version: 0.2.1

- name: Install jq on the bastion
  get_url:
    url: https://gpte-public.s3.amazonaws.com/jq-linux64
    dest: /usr/bin/jq
    mode: 0775
    owner: root
    group: root

- name: Install OpenShift Helm 3
  when: install_helm | default(False) | bool
  get_url:
    url: "{{ bastion_lite_inst_root_url }}/openshift-v4/clients/helm/{{ bastion_lite_helm_version }}/helm-linux-amd64"
    dest: /usr/bin/helm
    owner: root
    group: root
    mode: 0775
  ignore_errors: true

- name: Add GUID to /etc/skel/.bashrc
  lineinfile:
    path: /etc/skel/.bashrc
    regexp: "^export GUID"
    line: "export GUID={{ guid }}"

- name: Add GUID to ~{{ ansible_user }}/.bashrc
  lineinfile:
    path: "~{{ ansible_user }}/.bashrc"
    regexp: "^export GUID"
    line: "export GUID={{ guid }}"

- name: Add CLOUDUSER to /etc/skel/.bashrc
  lineinfile:
    path: /etc/skel/.bashrc
    regexp: "^export CLOUDUSER"
    line: "export CLOUDUSER={{ ansible_user }}"

- name: Add CLOUDUSER to ~{{ ansible_user }}/.bashrc
  lineinfile:
    path: "~{{ ansible_user }}/.bashrc"
    regexp: "^export CLOUDUSER"
    line: "export CLOUDUSER={{ ansible_user }}"
