---
apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  name: {{ machineset_name }}
  namespace: openshift-machine-api
  labels:
    {{ machineset_group_label }}: {{ machineset_group.name }}
    machine.openshift.io/cluster-api-cluster: {{ cluster_label }}
spec:
{% if machineset_name not in ocp4_current_machineset_names
   or not machineset_group.autoscale|default(False)
%}
  replicas: {{ machineset_replicas }}
{% endif %}
  selector:
    matchLabels:
      machine.openshift.io/cluster-api-cluster: {{ cluster_label }}
{% if 'role' in machineset_group %}
      machine.openshift.io/cluster-api-machine-role: {{ machineset_group.role }}
      machine.openshift.io/cluster-api-machine-type: {{ machineset_group.role }}
{% endif %}
      machine.openshift.io/cluster-api-machineset: {{ machineset_name }}
  template:
    metadata:
      labels:
        {{ machineset_group_label }}: {{ machineset_group.name }}
        machine.openshift.io/cluster-api-cluster: {{ cluster_label }}
{% if 'role' in machineset_group %}
        machine.openshift.io/cluster-api-machine-role: {{ machineset_group.role }}
        machine.openshift.io/cluster-api-machine-type: {{ machineset_group.role }}
{% endif %}
        machine.openshift.io/cluster-api-machineset: {{ machineset_name }}
    spec:
      metadata:
        labels: {{ machineset_group_node_labels | to_json }}
      providerSpec:
        value:
          ami:
            id: {{ aws_coreos_ami_id }}
          apiVersion: awsproviderconfig.openshift.io/v1beta1
          blockDevices:
          - ebs:
              iops: 0
              volumeSize: {{ aws_root_volume_size }}
              volumeType: gp2
          credentialsSecret:
            name: aws-cloud-credentials
          deviceIndex: 0
          iamInstanceProfile:
            id: {{ aws_iam_instance_profile_id }}
          instanceType: {{ aws_instance_type }}
          kind: AWSMachineProviderConfig
          metadata:
            creationTimestamp: null
          placement:
            availabilityZone: {{ availability_zone }}
            region: {{ availability_zone_region }}
          publicIp: null
          securityGroups: {{ aws_worker_security_groups | to_json }}
          subnet:
            filters:
            - name: tag:Name
              values:
              - {{ availability_zone_subnet }}
          tags: {{ aws_worker_tags | to_json }}
          userDataSecret:
            name: worker-user-data
{% if machineset_group.taints | d('') | length > 0 %}            
      taints:
{% for taint in machineset_group.taints %}
      - key: "{{ taint.key }}"
        value: "{{ taint.value }}"
        effect: "{{ taint.effect }}"
{% endfor %}
{% endif %}
      versions:
        kubelet: ""
