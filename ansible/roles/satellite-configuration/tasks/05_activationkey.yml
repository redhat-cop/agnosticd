---
- name: Fetching Name list of existing Activation Keys
  shell: hammer --output cve activation-key list --organization "{{ORG}}"  |grep Name
  ignore_errors: yes
  register: activation_key_list

- name: Creating fact list from Name of existing Activation Keys
  set_fact:
    list_of_exist_activation_key: "{{ list_of_exist_activation_key + [ item.split(':')[1].lstrip(' ') ] }}"
  loop: "{{activation_key_list.stdout_lines}}"

- debug: var=list_of_exist_activation_key

- name: Creating Activiation Key
  shell:  hammer activation-key create 
      --organization "{{ORG}}"
      --name "{{ACTIVATION_KEY_NAME}}"
      --content-view "{{CONTENT_VIEW_NAME}}"
      --lifecycle-environment "{{LIFE_CYCLE_ENV_NAME}}"
  when: ACTIVATION_KEY_NAME not in list_of_exist_activation_key
  tags:
    - satellite_configuration
    - activationkey
##########################################################
# need to plan how to work on subscription id
# -  hammer --output cve subscription list --organization "Default Organization" |grep '^ID'
- name: Fetching list of subscription ID from existing Activation-Keys
  shell: hammer --output cve 
    activation-key subscriptions 
    --organization "{{ORG}}" 
    --name "{{ACTIVATION_KEY_NAME}}" |grep ID
  ignore_errors: yes
  register: list_of_susbscription_in_activation_key

- name: Creating fact list of subscription ID from existing Activation-Keys 
  set_fact:
    list_of_existing_subscription_in_activation_key: "{{ list_of_existing_subscription_in_activation_key + [ item.split(':')[1].strip(' ') | int  ] }}"
  loop: "{{ list_of_susbscription_in_activation_key.stdout_lines }}"

- debug: var=list_of_existing_subscription_in_activation_key

- name: Adding subscription to Activiation Key
  shell:  hammer activation-key add-subscription
      --organization "{{ORG}}"
      --name "{{ACTIVATION_KEY_NAME}}"
      --subscription-id 1
  when: 1 not in list_of_existing_subscription_in_activation_key

  tags:
    - satellite_configuration
    - activationkey
