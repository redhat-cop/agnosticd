---

- name: Fetching enabled Repos Name list from subscription of {{ORG}}
  shell: hammer --output cve  repository list --organization "{{ORG}}" |grep Name
  register: repo_name
  ignore_errors: yes
           
- name: Creating fact from enabled Repos Name list from subscription of {{ORG}} 
  set_fact:
    repos_added: "{{ repos_added + [ item.split(':')[1].lstrip(' ') ] }}"
  loop: "{{ repo_name.stdout_lines}}"

# - name: print repo vars
#   debug: var=repos_added
          
# - debug: var=item
#   when: item.sync_name not in repos_added
#   loop: "{{  satellite_repository }}"

  #######################################

- name: Setting up satellite repository
  shell:  hammer repository-set enable 
    --organization "{{item.organization}}" 
    --product "{{item.product}}" 
    --basearch "{{item.basearch}}" 
    --name "{{item.name}}"
    --releasever "{{item.releasever}}"
  when: ((item.sync_name not in repos_added) and 
      (item.releasever is defined))
  loop: "{{ satellite_repository }}"
  tags:
    - satellite_configuration

- name: Setting up satellite repository
  shell:  hammer repository-set enable 
    --organization "{{item.organization}}" 
    --product "{{item.product}}" 
    --basearch "{{item.basearch}}" 
    --name "{{item.name}}"
  when: ((item.sync_name not in repos_added) and
        (item.releasever is not defined ))
  loop: "{{ satellite_repository }}"
  tags:
    - satellite_configuration

- name: Sync repo
  shell: hammer repository synchronize 
    --organization "{{item.organization}}" 
    --product "{{item.product}}" 
    --name "{{item.sync_name}}"
    --async
  loop: "{{ satellite_repository }}"
  ignore_errors: yes
  tags:
    - satellite_configuration

