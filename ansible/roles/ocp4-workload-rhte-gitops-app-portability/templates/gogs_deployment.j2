apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: gogs
  name: gogs
  namespace: "{{ _gogs_project }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: gogs
  template:
    metadata:
      labels:
        name: gogs
    spec:
      containers:
      - image: quay.io/mavazque/gogs:0.11.91
        name: gogs
        ports:
        - containerPort: 3000
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /opt/gogs/data
          name: gogs-data
        - mountPath: /etc/gogs/conf
          name: gogs-config
      volumes:
      - name: gogs-data
        persistentVolumeClaim:
          claimName: gogs
      - configMap:
          defaultMode: 420
          items:
          - key: app.ini
            path: app.ini
          name: gogs-config
        name: gogs-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: gogs
  name: gogs 
  namespace: "{{ _gogs_project }}"
spec:
  ports:
  - port: 3000 
    protocol: TCP
    targetPort: 3000
  selector:
    name: gogs
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim 
metadata:
  labels:
    name: gogs
  name: gogs
  namespace: "{{ _gogs_project }}"
spec:
  accessModes:
   - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    name: gogs
  name: gogs-config
  namespace: "{{ _gogs_project }}"
data:
  app.ini: |
    RUN_MODE = prod
    RUN_USER = gogs

    [database]
    DB_TYPE  = postgres
    HOST     = postgres:5432
    NAME     = "{{ _gogs_db_name }}"
    USER     = "{{ _gogs_db_user }}"
    PASSWD   = "{{ _gogs_db_user_password }}"

    [repository]
    ROOT = /opt/gogs/data/repositories

    [server]
    ROOT_URL=http://"{{ gogs_route_hostname }}"
    SSH_DOMAIN="{{ gogs_route_hostname }}"

    [security]
    INSTALL_LOCK = true

    [service]
    ENABLE_CAPTCHA = false

    [webhook]
    SKIP_TLS_VERIFY = false
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: gogs
  namespace: "{{ _gogs_project }}"
spec:
  host: "{{ gogs_route_hostname }}"
  port:
    targetPort: 3000
  to:
    kind: Service
    name: gogs
    weight: 100
status:
  ingress: []
