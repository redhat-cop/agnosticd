---
# Implement your Pre Workload deployment tasks here

- name: Ensure variables are set
  assert:
    that:
      - ocp_username is defined
      - guid is defined
    fail_msg: "Must define ocp_username and guid"

# Figure out paths
- name: Get openshift hostname
  k8s_info:
    kind: Route
    name: console
    namespace: openshift-console
    api_version: route.openshift.io/v1
  register: openshift_console_route

- name: Set openshift host
  set_fact:
    route_subdomain: "{{ openshift_console_route.resources[0].status.ingress[0].routerCanonicalHostname }}"

- name: Set openshift console
  set_fact:
    console_url: "https://{{ openshift_console_route.resources[0].status.ingress[0].host }}"

- name: debug values
  debug:
    msg:
    - "console URL: {{ console_url }}"
    - "route subdomain: {{ route_subdomain }}"
    - "ocp_username: {{ ocp_username }}"
    - "guid: {{ guid }}"


# Extract Che Keycloak Admin Password
- name: Extract key_cloak_admin_password
  k8s_info: 
    kind: Secret
    name: che-identity-secret
    namespace: '{{ che_project }}'
  register: key_cloak_result


- set_fact:
    key_cloak_admin_password: "{{ key_cloak_result.resources[0].data.password | b64decode }}"


# Exract Che Keycloak Admin Token
- name: Get Admin Token with Longer Lifespan
  uri:
    url: http://keycloak-{{ che_project }}.{{ route_subdomain }}/auth/realms/master/protocol/openid-connect/token
    method: POST
    body_format: form-urlencoded
    body:
    - [ 'client_id', 'admin-cli' ]
    - [ 'username', 'admin' ]
    - [ 'password', '{{ key_cloak_admin_password }}' ]
    - [ 'grant_type', 'password' ]
    status_code: '200'
  register: token_result

- name: Extract Admin Token with Longer Lifespan from Keycloack from result
  set_fact:
    ocp4_workload_iot_managed_che_admin_token: '{{token_result.json.access_token}}'

# Extract 3scale Master Access Token
- name: Extract 3scale Master Access Token
  k8s_info:
    kind: Secret
    name: system-seed
    namespace: '{{ threescale_project }}'
  register: master_secret_result

- name: Set 3scale Master Admin Token
  set_fact:
    ocp4_workload_iot_managed_threescale_master_token: '{{ master_secret_result.resources[0].data.MASTER_ACCESS_TOKEN | b64decode }}'

# Leave this as the last task in the playbook.
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when: not silent|bool
