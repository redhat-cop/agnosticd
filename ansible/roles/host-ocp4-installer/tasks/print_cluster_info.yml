---
- name: Get kubeadmin password
  ansible.builtin.slurp:
    path: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeadmin-password
  register: r_slurp_kubeadmin_password

- name: Set user data for kubeadmin password
  when: host_ocp4_installer_set_user_data_kubeadmin_password | bool
  agnosticd_user_info:
    data:
      openshift_kubeadmin_password: "{{ r_slurp_kubeadmin_password.content | b64decode }}"

- name: Get console route
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  command: oc get route -n openshift-console console -o json
  register: routeconsole
  retries: 10
  delay: 30
  until: routeconsole is succeeded
  ignore_errors: true

- name: Get Webconsole URL
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  command: oc whoami --show-console
  register: webconsole_url

- name: Get API URL
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  command: oc whoami --show-server
  register: api_url

- name: Get OpenShift Ingress Domain
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  command: oc get ingresses.config.openshift.io cluster -o jsonpath='{.spec.domain}'
  register: r_ingress_domain

- name: Set facts for OpenShift console and API
  set_fact:
    openshift_api_url: "{{ api_url.stdout | trim }}"
    openshift_console_url: "{{ webconsole_url.stdout | trim }}"
    openshift_client_download_url: "{{ ocp4_client_url }}"
    openshift_cluster_ingress_domain: "{{ r_ingress_domain.stdout | trim }}"
    openshift_route_default_domain: "{{ r_ingress_domain.stdout | trim }}"

- name: Set user data for OpenShift access
  agnosticd_user_info:
    data:
      openshift_api_url: "{{ openshift_api_url }}"
      openshift_console_url: "{{ openshift_console_url }}"
      openshift_client_download_url: "{{ openshift_client_download_url }}"
      openshift_cluster_ingress_domain: "{{ openshift_cluster_ingress_domain }}"
  when: host_ocp4_installer_set_user_data | bool

- name: Show user messages for OpenShift access
  when: host_ocp4_installer_show_user_info | bool
  agnosticd_user_info:
    msg: |-
      OpenShift Console: {{ openshift_console_url }}
      OpenShift API for command line 'oc' client: {{ openshift_api_url }}
      {% if host_ocp4_installer_set_user_data_kubeadmin_password | bool %}
      OpenShift kubeadmin password: {{ r_slurp_kubeadmin_password.content | b64decode }}
      {% endif %}
      Download oc client from {{ ocp4_client_url }}
