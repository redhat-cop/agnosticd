- name: Generate SSH keys
  shell: ssh-keygen -b 2048 -t rsa -f /home/{{ ansible_user }}/.ssh/id_rsa -q -N ""
  args:
    creates: /home/{{ ansible_user }}/.ssh/id_rsa

- name: Generate SSH pub key
  shell: ssh-keygen -y -f /home/{{ ansible_user }}/.ssh/id_rsa > /home/{{ ansible_user }}/.ssh/id_rsa.pub
  args:
    creates: /home/{{ ansible_user }}/.ssh/id_rsa.pub

- name: Slurp public key
  slurp:
    path: /home/{{ ansible_user }}/.ssh/id_rsa.pub
  register: idrsapub

- name: Create cluster directory
  file:
    path: /home/{{ ansible_user }}/{{ cluster_name }}
    state: directory

- name: Check if version specific install-config.j2 exists
  stat:
    path: templates/install-config.yaml.{{ ocp4_installer_version }}.j2
  register: rconfig
  delegate_to: localhost
  become: false

- name: Use version-specific template for install-config-yaml
  set_fact:
    install_config_template_path: templates/install-config.yaml.{{ ocp4_installer_version }}.j2
  when: rconfig.stat.exists

- name: Use default template for install-config-yaml
  set_fact:
    install_config_template_path: templates/install-config.yaml.j2
  when: not rconfig.stat.exists

- name: Generate config install-config.yaml
  template:
    src: "{{ install_config_template_path }}"
    dest: /home/{{ ansible_user }}/{{ cluster_name }}/install-config.yaml

- name: Make a copy of the cluster install config
  copy:
    remote_src: true
    src: /home/{{ ansible_user }}/{{ cluster_name }}/install-config.yaml
    dest: /home/{{ ansible_user }}/{{ cluster_name }}/install-config.yaml.bak
