
- name: Install client and OpenShift Installer binaries
  import_tasks: install_installer.yml

- name: Install client and OpenShift Installer binaries
  import_tasks: generate.ocp.configs.yml

- name: Create deployinprogress file
  file:
    path: /tmp/deployinprogress
    state: touch

- name: Run the installer
  tags:
  - run_installer
  command: openshift-install create cluster --dir=/home/{{ ansible_user }}/{{ cluster_name }}
  async: "{{ 2 * 60 * 60 }}"

- name: Fetch kube config
  fetch:
    flat: yes
    src: /home/{{ ansible_user }}/{{ cluster_name }}/auth/{{ item }}
    dest: "{{ hostvars.localhost.output_dir }}/{{ env_type }}_{{ guid }}_{{ item }}"
  loop:
    - kubeconfig
    - kubeadmin-password
- name: Make sure .kube directory exists in home directory
  file:
    state: directory
    path: "/home/{{ ansible_user }}/.kube"
    owner: "{{ ansible_user }}"
    mode: 0775

- name: Set up .kube/config
  copy:
    remote_src: yes
    src: "/home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig"
    dest: "/home/{{ ansible_user }}/.kube/config"

- name: Make sure .kube directory exists in /root
  file:
    state: directory
    path: /root/.kube
    owner: root
    mode: 0700
  become: yes

- name: Set up .kube/config for root
  copy:
    remote_src: yes
    src: "/home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig"
    dest: /root/.kube/config
  become: yes

- name: Gather and Print cluster info
  import_tasks: print_cluster_info.yml


- name: Delete deployinprogress lock file
  file:
    path: /tmp/deployinprogress
    state: absent

## Open the port for the api
- name: OpenStack specific requirement - attach floating_ip_address to ingress port
  import_tasks: osp_post.yml
  when: cloud_provider == "osp"
