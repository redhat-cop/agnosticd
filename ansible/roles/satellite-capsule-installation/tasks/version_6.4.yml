---
- name: This block is for situation when role is used with multi-region-satellite config to automate capsule installation
  when: "groups['satellites'] is defined"
  block:
    - name: Grab satellite publicname for aws
      set_fact:
        satellite_publicname: "{{ item | regex_replace('.internal',subdomain_base_suffix) }}"
      loop: "{{ groups['satellites'] }}"
      when: 
        - "cloud_provider == 'ec2'"

    - name: Grab satellite publicname for OSP
      set_fact:
        satellite_publicname: "{{ item + guid + osp_cluster_dns_zone }}"
      loop: "{{ groups['satellites'] }}"
      when: 
        - "cloud_provider == 'osp'"

- name: Set satellite publicname as per satellite_public_fqdn
  set_fact:
    satellite_publicname: "{{ satellite_public_fqdn }}"
  when: "groups['satellites'] is not defined"

- name: Remove rh-amazon-rhui-client package
  yum:
    name: rh-amazon-rhui-client
    state: absent
  tags:
    - install_capsule

- name: Remove existing repositories
  shell: "{{ item }}"
  loop:
    - '/bin/yum-config-manager repo --disable "*"'
    # - '/sbin/subscription-manager repos --disable "*"'
    - '/bin/rm -rf /etc/yum.repos.d/*.repo'
  tags:
    - install_capsule

- name: Download Cert from Satellite
  get_url:
    url: "https://{{satellite_publicname}}/pub/katello-ca-consumer-latest.noarch.rpm"
    dest: /root/katello-ca-consumer-latest.noarch.rpm
    mode: 0664
    validate_certs: no
  tags:
    - install_capsule

- name: Install Satellite CA certificate
  yum:
    name: /root/katello-ca-consumer-latest.noarch.rpm
    state: present
  tags:
    - install_capsule

# - name: Register with activation-key
#   redhat_subscription:
#     state: present
#     server_hostname: "{{satellite_publicname}}"
#     activationkey: "{{ item.activation_key }}"
#     org_id: "{{ org_label }}"
#   when: 'item.name == "Capsule Server"'
#   loop: "{{ satellite_content }}"
#   tags:
#     - install_capsule

- name: Register with activation-key
  redhat_subscription:
    state: present
    server_hostname: "{{ satellite_publicname }}"
    activationkey: "{{ capsule_activationkey }}"
    org_id: "{{ capsule_org }}"
  tags:
    - install_capsule

# - name: Enable repos for RHEL
#   rhsm_repository:
#     name: "{{ item }}"
#     state: enabled
#   with_items:
#     - '{{ rhel_repos }}'
#   tags:
#     - install_capsule

- name: Enable repos for RHEL
  rhsm_repository:
    name: "{{ item }}"
    state: enabled
  with_items:
    - '{{ capsule_repos }}'
  tags:
    - install_capsule

- name: Yum clean all
  command: /bin/yum clean all
  tags:
    - install_capsule

- name: Host update
  yum: 
    name: '*'
    state: latest
  tags:
    - install_capsule

- name: Install capsule packages
  yum: 
    name: 
      - satellite-capsule-6.4.*el7*
      - katello-agent
      - chrony
    state: latest
  tags:
    - install_capsule

- name: Start Katello Agent
  service:
    name: goferd
    state: started
    enabled: yes
  tags:
    - install_capsule

- name: start and enable chrony
  service:
    name: chronyd
    state: started
    enabled: yes
  tags:
    - install_capsule