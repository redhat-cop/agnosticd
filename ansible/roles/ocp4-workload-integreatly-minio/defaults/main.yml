---
become_override: False
ocp_username: opentlc-mgr
silent: False

# If your workload needs customization options provide variables
# in a dictionary. The dictionary should be named "<role name>_defaults".
# So because this example workload is called "ocp-workload-example" the dictionary
# should be named "ocp_workload_example_defaults". Note that the dictionary can not
# include "-" characters, so replace all "-" with "_" instead.
#
# You can override the defaults as parameters to the Ansible run that runs
# your workload. The overrides should be in a dictionary called
# "<role name>_vars".
#
# If there are any secrets that need to be passed (data that should not be in a
# public repo somewhere) you can specify another dictionary "<role name>_secrets".
#
# When the workload is executed the dictionary "<role name>" will be constructed from
# "<role name>_defaults" plus "<role name>_vars" (if defined) and "<role name>_secrets"
# (if defined).
#
# The logic in the workload should only use the dictionary "<role name>".
ocp4_workload_integreatly_minio_defaults:
  # minio namespace
  namespace: redhat-rhmi-minio-operator
  project_display: Minio Object Storage
  # minio operator
  operator_image: minio/k8s-operator:1.0.8
  operator_resource_serviceaccount_name: minio-operator-sa
  operator_resource_role_name: minio-operator-role
  operator_resource_rolebinding_name: minio-operator-binding
  operator_deployment_replicas: 1 
  operator_templates:
    - project.yml.j2
    - crd.yml.j2
    - clusterrole.yml.j2
    - serviceaccount.yml.j2
    - rolebinding.yml.j2
    - deployment.yml.j2
    - secret.yml.j2
  # minio credentials
  credential_access_key: rhmi-minio-access
  credential_secret_key: rhmi-minio-secret
