---
# Implement your Workload deployment tasks here

- set_fact:
    user_name: "user{{ user_num }}"

- set_fact:
    project_name: "opendatahub-{{ user_name }}"

- debug:
    msg: "Deploying ML Workflows workshop materials to preexisting project {{ project_name }}"

- name: Verify user can create projects
  command: "oc auth can-i create project"
  register: canicreateprojects
  failed_when: canicreateprojects.stdout != 'yes'

- name: "Make sure project {{ project_name }} is there"
  k8s:
    state: present
    name: "{{ project_name }}"
    kind: Project
    api_version: project.openshift.io/v1

- name: Create the custom notebook image
  k8s:
    state: present
    namespace: "{{ project_name }}"
    definition: "{{ item }}"
  with_items:
    - "{{ lookup('template', 'custom-notebook-imagestream.yaml.j2') }}"

- name: Create the pipeline builder image
  k8s:
    state: present
    namespace: "{{ project_name }}"
    definition: "{{ item }}"
  with_items:
    - "{{ lookup('template', 'pipeline-s2i-imagestream.yaml.j2') }}"

- name: Create the pipeline build and app
  k8s:
    state: present
    namespace: "{{ project_name }}"
    definition: "{{ item }}"
  with_items:
    - "{{ lookup('template', 'pipeline-imagestream.yaml.j2') }}"
    - "{{ lookup('template', 'pipeline-buildconfig.yaml.j2') }}"
    - "{{ lookup('template', 'pipeline-deploymentconfig.yaml.j2') }}"
    - "{{ lookup('template', 'pipeline-service.yaml.j2') }}"

- name: Kick Jupyterhub
  shell: |
      oc scale dc/jupyterhub --replicas=0 -n {{ project_name }}

- name: Nudge Jupyterhub
  shell: |
      oc scale dc/jupyterhub --replicas=1 -n {{ project_name }}

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool

