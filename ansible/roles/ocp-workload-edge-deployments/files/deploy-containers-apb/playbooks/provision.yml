- name: Adding new target_host to the target_group
  hosts: localhost
  gather_facts: no
  connection: local
  tasks:
  - name: Adding the remote host to the inventory
    add_host:
      name: "{{ target_host }}"
      groups: target_group
    changed_when: false

  - name: Setting right permissions to .ssh directory
    file:
      path: /opt/apb/.ssh
      state: directory
      mode: 0700

  - name: Copy the private key in .ssh dir
    shell: cp /opt/apb/id_rsa /opt/apb/.ssh/

  - name: Setting right permissing for keyfile
    file:
      path: /opt/apb/.ssh/id_rsa
      mode: 0600

- name: Starting containers privisioning on remote RHEL
  hosts: target_group
  remote_user: root
  gather_facts: false
  vars:
    token: "YOUR_TOKEN_HERE"
    registryaddr: "YOUR_OCP_ADDRESS_HERE"
  tasks:
  - name: Log into private registry and force re-authorization
    shell: podman login --tls-verify=false --username openshift --password "{{ token }}" "{{ registryaddr }}"

  - name: Pulling images of latest tag (force)
    shell: podman pull "{{item}}:latest"
    with_items:
     - jboss-amq-6/amq63-openshift
     - "{{ registryaddr }}/iot-testing/businessrules"
     - "{{ registryaddr }}/iot-testing/software-sensor"
     - "{{ registryaddr }}/iot-testing/routingservice"

  - name: Killing any previous container that I'll deploy next
    shell: podman rm -f "{{ item }}"
    ignore_errors: True
    with_items:
     - amq63
     - routingservice
     - businessrules
     - software-sensor

  - name: Starting AMQ container on the host
    shell: podman run -d --net host --name amq63 -e AMQ_USER=admin -e AMQ_PASSWORD=change12_me -e AMQ_TRANSPORTS="openwire, mqtt" -e AMQ_QUEUES=message.to.rules -e AMQ_SPLIT=true -e AMQ_MESH_DISCOVERY_TYPE=dns -e AMQ_MESH_SERVICE_NAME=broker-amq-mesh -e AMQ_MESH_SERVICE_NAMESPACE=default -e AMQ_STORAGE_USAGE_LIMIT="1 gb" jboss-amq-6/amq63-openshift:latest
  
  - pause:
      seconds: 30

  - name: Starting RoutingService container on the host
    shell: podman run -d --net host --name routingservice -e SOURCE_AMQ_BROKER=tcp://localhost:61616 -e SOURCE_BROKER_ADMIN_UID=admin -e SOURCE_BROKER_ADMIN_PASSWD=change12_me -e BROKER_AMQ_MQTT_HOST=localhost "{{ registryaddr }}/iot-testing/routingservice:latest"

  - pause:
      seconds: 10

  - name: Starting BusinessRules container on the host
    shell: podman run -d --net host --name businessrules -e JAVA_APP_JAR=rules-jar-with-dependencies.jar -e SOURCE_AMQ_BROKER=tcp://localhost:61616 -e SOURCE_QUEUE=message.to.rules -e SOURCE_BROKER_ADMIN_UID=admin -e SOURCE_BROKER_ADMIN_PASSWD=change12_me -e TARGET_AMQ_BROKER=tcp://YOUR_INFRA_ADDR:30616 -e TARGET_QUEUE=message.to.datacenter -e TARGET_BROKER_ADMIN_UID=admin -e TARGET_BROKER_ADMIN_PASSWD=change12_me "{{ registryaddr }}/iot-testing/businessrules:latest"

  - pause:
      seconds: 10

  - name: Starting SoftwareSensor container on the host
    shell: podman run -d --net host --name software-sensor -e JAVA_OPTIONS="-DhighWater=800 -DlowWater=200 -DbrokerUID=admin -DbrokerPassword=change12_me -DreceiverURL=localhost -DdeviceType=temperature -DdeviceID=4711 -DinitialValue=70 -Dcount=1000 -DwaitTime=1" -e JAVA_APP_JAR=softwareSensor-jar-with-dependencies.jar "{{ registryaddr }}/iot-testing/software-sensor:latest"
