---
# Implement your Workload removal tasks here
- name: Cleaning up the environment
  debug:
    msg: "Cleaning up the environment.."

- name: Check if project IoT Development exists
  shell: "oc get project iot-development 2>/dev/null | wc -l"
  register: result

- name: Delete project IoT Development
  shell: "oc delete project iot-development"
  when: result.stdout != "0"

- name: Check if project IoT Testing exists
  shell: "oc get project iot-testing 2>/dev/null | wc -l"
  register: result

- name: Delete project IoT Testing
  shell: "oc delete project iot-testing"
  when: result.stdout != "0"

- name: Check if project IoT Hub exists
  shell: "oc get project iot-hub 2>/dev/null | wc -l"
  register: result

- name: Delete project IoT Hub
  shell: "oc delete project iot-hub"
  when: result.stdout != "0"

- name: Check BuildConfig in openshift namespace exists
  shell: "oc get bc deploy-containers-apb -n openshift 2>/dev/null | wc -l"
  register: result

- name: Delete BuildConfig in openshift namespace
  shell: "oc delete bc deploy-containers-apb -n openshift"
  when: result.stdout != "0"

- name: Check ImageStream in openshift namespace exists
  shell: "oc get is deploy-containers-apb -n openshift 2>/dev/null | wc -l"
  register: result

- name: Delete ImageStream in openshift namespace
  shell: "oc delete is deploy-containers-apb -n openshift"
  when: result.stdout != "0"

- name: Check that the temp dir exists
  stat:
    path: /tmp/{{guid}}
  register: stat_result

- name: Getting the generated public-key into this playbook
  slurp:
    src: /tmp/{{guid}}/deploy-containers-apb/id_rsa.pub
  register: publickey

- name: Removing SSH public key to the authorized host for the machine
  become: true
  authorized_key:
    user: root
    state: absent
    key: "{{ publickey['content'] | b64decode }}"

- name: Cleaning up temp dir
  shell: "rm -rf /tmp/{{guid}}"
  when: stat_result.stat.exists == True

- name: Check that the backup file exists
  stat:
    path: /etc/containers/registries.conf.bak
  register: stat_result

- name: Restoring up /etc/containers/registries.conf
  become: true
  shell: mv /etc/containers/registries.conf.bak /etc/containers/registries.conf
  when: stat_result.stat.exists == True

- name: Removing Cockpit and Docker
  become: true
  yum:
    name: ['docker', 'cockpit', 'cockpit-docker', 'apb']
    state: absent

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
