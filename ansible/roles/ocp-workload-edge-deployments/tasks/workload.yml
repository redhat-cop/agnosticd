---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Create project for IoT Development
  shell: "oc new-project iot-development"

- name: Create project for IoT Testing
  shell: "oc new-project iot-testing"

- name: Create project for IoT Hub
  shell: "oc new-project iot-hub"

- name: Fill with all the resources the project iot-development
  shell: "oc create -f /tmp/{{guid}}/project-iot-development.yaml -n iot-development"

- name: Fill with all the resources the project iot-testing
  shell: "oc create -f /tmp/{{guid}}/project-iot-testing.yaml -n iot-testing"

- name: Fill with all the resources the project iot-hub
  shell: "oc create -f /tmp/{{guid}}/project-iot-hub.yaml -n iot-hub"

- name: Create policy for letting Jenkins ServiceAccount Access to iot-testing Project
  shell: "oc policy add-role-to-user edit system:serviceaccount:iot-development:jenkins -n iot-testing"

- name: Generate a brand new SSH key for connecting to the remote machine
  shell: "cd /tmp/{{guid}}/deploy-containers-apb; ssh-keygen -N '' -f ./id_rsa"

- name: Get the Builder Token for injecting it in the Ansible Playbook Bundle (APB) configuration
  shell: "oc get $(oc get secret -n openshift -o name | grep builder-token | head -1) -n openshift -o yaml | grep token: | awk '{print $2;}' | base64 -d"
  register: tokenresult

- name: Setting the just acquired Builder Token in the APB configuration
  shell: "sed -i 's/YOUR_TOKEN_HERE/{{ tokenresult.stdout }}/g' /tmp/{{guid}}/deploy-containers-apb/playbooks/provision.yaml"

- name: Setting the OCP Registry Address in the APB configuration
  shell: "sed -i 's/YOUR_OCP_ADDRESS_HERE/docker-registry-default.{{ ocp_apps_domain }}/g' /tmp/{{guid}}/deploy-containers-apb/playbooks/provision.yaml"

- name: Setting the Endpoint for AMQ connections (supposing a Single Node Installation) in the APB configuration
  shell: "sed -i 's/TARGET_AMQ_BROKER/anything.{{ ocp_apps_domain }}/g' /tmp/{{guid}}/deploy-containers-apb/playbooks/provision.yaml"

- name: Ensure that APB binary is installed
  yum:
    name: apb
    state: present

- name: Ready to prepare the APB build
  shell: "cd /tmp/{{guid}}/deploy-containers-apb; apb prepare"

- name: Starting the APB build and push process
  shell: "cd /tmp/{{guid}}/deploy-containers-apb; oc start-build --follow --from-dir . deploy-containers-apb"

## We should handle the ssh-copy-id of the previously created SSH key on the remote host and in parallel also handling the setup of the external machine

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
