---
## Sonatype Nexus Install

- name: Check if Nexus project exists
  command: "oc get project {{ nexus_project }}"
  register: nexus_project_exists
  ignore_errors: true

- name: Create Nexus Project if it doesn't yet exist
  command: "oc new-project {{ nexus_project }} --display-name='{{ nexus_project_display_name }}'"
  when:
  - nexus_project_exists is failed

- name: Check if Nexus was already provisioned
  command: "oc get service nexus -n {{ nexus_project}}"
  register: nexus_already_installed
  ignore_errors: true
  changed_when: false

- name: Copy Nexus template to master
  copy:
    src: files/nexus3-persistent-template.yaml
    dest: /root/nexus-template.yaml
  when:
  - nexus_already_installed is failed
      
### We should add a check if a pv is already created (nexus requests a 10Gi pv)
- name: Instantiate Nexus from template
  command: >-
    oc new-app -f /root/nexus-template.yaml
    --param=VOLUME_CAPACITY={{ nexus_volume_capacity }}
    --param=MEMORY_LIMIT={{ nexus_memory_limit }}
    --param=MEMORY_REQUEST={{ nexus_memory_request }}
    --param=CPU_LIMIT={{ nexus_cpu_limit }}
    --param=CPU_REQUEST={{ nexus_cpu_request}}
    --param=NEXUS_VERSION={{ nexus_version }}
    -n {{ nexus_project }}
  when: nexus_already_installed is failed

# looks like we need a better check - it seems we're ready up to several
# seconds before the router finds out about us, so we might want another
# http check to make sure nexus is responding
- name: Wait for Nexus to be running
  command: "oc get dc/nexus -o yaml -n {{ nexus_project }}"
  register: result
  until: '"availableReplicas: 1" in result.stdout'
  retries: 5
  delay: 60
  changed_when: false
  when:
    - nexus_already_installed is failed
    - nexus_wait_for_deployment | bool
