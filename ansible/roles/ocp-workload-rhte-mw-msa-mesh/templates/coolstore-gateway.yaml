apiVersion: v1
kind: Template
labels:
  app: coolstore-gateway
metadata:
  annotations:
    description: CoolStore gateway service
  name: coolstore-gateway

parameters:
- description: Gateway Service name
  name: GATEWAY_SERVICE_NAME
  required: true
  value: gateway-service
- description: GATEWAY_IMAGE_URL
  name: GATEWAY_IMAGE_URL
  required: true
  value: docker.io/rhtgptetraining/gateway-service:1.0

objects:

- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      application: ${GATEWAY_SERVICE_NAME}
    name: ${GATEWAY_SERVICE_NAME}
  spec:
    # JA Bride:  setting all deployments to paused.  Will then start each one via ansible
    paused: true
    replicas: 1
    strategy:
      type: RollingUpdate
    template:
      metadata:
        labels:
          application: ${GATEWAY_SERVICE_NAME}
          deployment: ${GATEWAY_SERVICE_NAME}
        name: ${GATEWAY_SERVICE_NAME}
      spec:
        containers:
        - env:
#          - name: JAVA_OPTIONS
#            value: -Dswarm.project.stage.file=file:///app/config/project-defaults.yml
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ${GATEWAY_IMAGE_URL}
          imagePullPolicy: IfNotPresent
          name: ${GATEWAY_SERVICE_NAME}
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${GATEWAY_SERVICE_NAME}
    name: ${GATEWAY_SERVICE_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deployment: ${GATEWAY_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: ${GATEWAY_SERVICE_NAME}
    name: ${GATEWAY_SERVICE_NAME}
  spec:
    host:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${GATEWAY_SERVICE_NAME}

