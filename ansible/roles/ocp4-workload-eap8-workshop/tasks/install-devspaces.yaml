---
# create codeready namespace
- name: create devspaces namespace
  k8s:
    state: present
    kind: Project
    api_version: project.openshift.io/v1
    definition:
      metadata:
        name: "devspaces"
        annotations:
          openshift.io/description: ""
          openshift.io/display-name: "Dev Spaces Project"

# deploy codeready operator
- name: Create operator subscription for Dev Spaces
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/devspaces_subscription.yaml

# wait for CRD to be a thing
- name: Wait for Dev Spaces CRD to be ready
  k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: checlusters.org.eclipse.che
  register: r_codeready_crd
  retries: 200
  delay: 10
  until: r_codeready_crd.resources | list | length == 1

- name: wait a minute and let the dev spaces CRD become ready
  when: num_users | int > 0
  pause:
      minutes: 1


# deploy codeready CR
- name: Create CR for Dev Spaces
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/devspaces_cr.yaml

# wait for che to be up
- name: wait for Dev Spaces to be running
  uri:
    url: https://devspaces.{{ route_subdomain }}/dashboard/
    validate_certs: false
    status_code: 403
  register: result
  until: result.status == 403
  retries: 120
  delay: 15

- name: Import stack imagestream
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/stack_imagestream.yaml

- name: wait for stack to be a thing
  k8s_info:
    kind: ImageStream
    name: quarkus-stack
    namespace: openshift
  register: r_stack_is
  retries: 200
  delay: 10
  until: r_stack_is.resources | list | length == 1

- name: import stack image
  shell: |
    oc import-image --all quarkus-stack -n openshift

- name: Pre-create and warm user workspaces
  include_tasks: create_che_workspace.yaml
  vars:
    user: "{{ item }}"
  with_list: "{{ users }}"

- name: wait a minute and let the image download and be registered
  when: num_users | int > 0
  pause:
      minutes: 2

# - name: Attempt to warm workspaces which failed to start
#   include_tasks: verify_che_workspace.yaml
#   vars:
#     user: "{{ item }}"
#   with_list: "{{ users }}"

