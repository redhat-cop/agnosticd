# The Top Level domain for which to request a certificate
_certbot_domain: ""

# Wildcard domain for which to request a certificate
_certbot_wildcard_domain: ""

# Type of Cloud Provider to use for DNS Validation
# Valid values: route53
_certbot_dns_provider: route53

# Wildcard domains need valid Cloud access credentials on the host
# in directory {{ _certbot_remote_dir }}/.aws/credentials to manipulate
# Route 53 entries for automatic validation by Let's Encrypt

# The e-mail address to use to register with Let's Encrypt
_certbot_le_email: "rhpds-admins@redhat.com"

# The directoroy on the remote host in which to create certbot directories
_certbot_remote_dir: "/root"
_certbot_remote_dir_owner: "root"
_certbot_remote_dir_group: "root"

# The directory on the remote host in which to install the certificates
# after they've been successfully requested
_certbot_install_dir: "/root/certificates"
_certbot_install_dir_owner: "root"
_certbot_install_dir_group: "root"

# Local (to the host ansible is running on) cache of certificates
# Prevents re-requesting certificates for later runs of the playbook
# when the domains haven't changed
_certbot_use_cache: True
_certbot_cache_archive_file: "/tmp/certbot.tar.gz"

# Use the Production Let's Encrypt Server. Leave to False for testing runs
# to prevent issues with the Let's Encrypt rate limits
_certbot_production: False

# Install a cron job to automatically renew Certificates. Checks
# once a day.
_certbot_renew_automatically: False

# Force the creation of new certificates even if there are
# a) certificates already on the host or
# b) certificates in the local cache
_certbot_force_issue: False

# Internal Variable. Don't change
_certbot_setup_complete: false

_certbot_cron_job_name: LETS_ENCRYPT_RENEW

_certbot_user: "{{ ansible_user }}"

_certbot_virtualenv: "/home/{{ _certbot_user }}/virtualenvs/certbot"

use_python3: true