---
apiVersion: v1
items:

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: config
    namespace: "{{ matrix_synapse_namespace }}"
  data:
    homeserver.yaml: |-
      # Configuration file for Synapse.
      #
      # This is a YAML file: see [1] for a quick introduction. Note in particular
      # that *indentation is important*: all the elements of a list or dictionary
      # should have the same indentation.
      #
      # [1] https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html
      #
      # For more information on how to configure Synapse, including a complete accounting of
      # each option, go to docs/usage/configuration/config_documentation.md or
      # https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html
      server_name: "rhintegration.demo"
      # public_baseurl: "https://synapse-service-matrix.apps.cluster-svdnn.svdnn.sandbox758.opentlc.com"
      pid_file: /data/homeserver.pid
      listeners:
        - port: 8008
          tls: false
          type: http
          x_forwarded: true
          resources:
            - names: [client, federation]
              compress: false

      database:
        name: sqlite3
        args:
          database: /data/homeserver.db

      # database:
      #  name: psycopg2
      #  allow_unsafe_locale: true
      #  args:
      #    user: synapse-db
      #    password: synapse
      #     database: synapse
      #     host: postgres-service.test.svc.cluster.local
      #     cp_min: 5
      #     cp_max: 10

      # rate limiting
      rc_message:
        per_second: 50
        burst_count: 50


      log_config: "/data/rhintegration.demo.log.config"
      media_store_path: /data/media_store
      registration_shared_secret: "BtDaMSiDS-B:V2KP-_QoGgGu,FwK~9zKfL8Ow3=g;xHAm4GR=r"
      report_stats: false
      macaroon_secret_key: "+Ysdz_s*7tOL0j0P&kF^@hA_wQ6SLeV6ciwxR4*f3n&HM;7fN1"
      form_secret: "@RzaZ;NsJT1QueIgSVzw,0IhNxPf3atW_ItNXTfUIzB9:5RP4~"
      signing_key_path: "/data/rhintegration.demo.signing.key"
      trusted_key_servers:
        - server_name: "matrix.org"

      enable_group_creation: true

      # vim:ft=yaml


- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: synapse-pv-claim
    namespace: "{{ matrix_synapse_namespace }}"
  spec:
    accessModes:
      - ReadWriteOnce
    volumeMode: Filesystem
    resources:
      requests:
        storage: 1Gi

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: synapse
    namespace: "{{ matrix_synapse_namespace }}"
  spec:
    selector:
      matchLabels:
        app: synapse
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: synapse
      spec:
        replicas: 0
        containers:
        # - image: matrixdotorg/synapse:v1.85.0
        - image: 'quay.io/redhatintegration/synapse:v1.85.0'

          name: synapse
          command: ["/bin/sh", "-c", "/start.py generate && /start.py"]
          env:
          - name: SYNAPSE_SERVER_NAME
            value: "rhintegration.demo"
          - name: SYNAPSE_REPORT_STATS
            value: "no"
          - name: SYNAPSE_CONFIG_PATH
            value: "/data/config/homeserver.yaml"
          - name: PUBLIC_BASE_URL
            value: "https://synapse-service-matrix.{{ route_subdomain }}"
          volumeMounts:
          - name: data
            mountPath: /data
            subPath: synapse
          - name: config
            mountPath: /data/config
          ports:
            - containerPort: 8008
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: synapse-pv-claim
        - name: config
          configMap:
            name: config

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: synapse
    name: synapse
    namespace: "{{ matrix_synapse_namespace }}"
  spec:
    clusterIP: None
    ports:
    - name: http
      port: 8008
      protocol: TCP
      targetPort: 8008
    selector:
      app: synapse
    type: ClusterIP

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: synapse
    namespace: "{{ matrix_synapse_namespace }}"
    labels:
      app: synapse
  spec:
    to:
      kind: Service
      name: synapse
    port:
      targetPort: http
    wildcardPolicy: None
    tls:
      termination: edge