- name: Create Registry Namespace
  k8s:
    api_version: v1
    kind: Namespace
    name: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    state: present

- name: Evaluate Registry Operator Group
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'registry-operatorgroup.yaml.j2') }}"
  vars:
    operator_namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'

- name: Evaluate Registry Subscription
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'registry-subscription.yaml.j2') }}"

- name: Wait for Registry operator to install
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: apicurioregistries.apicur.io
  register: crd_registry
  until: crd_registry.resources | list | length == 1
  retries: 10
  delay: 30

- name: Create Kafka Cluster
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'kafka-demo.yaml.j2') }}"

- name: Wait for Kafka Cluster to start
  k8s_facts:
    kind: Kafka
    name: demo
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    api_version: kafka.strimzi.io/v1beta1
  register: kafka_resource
  until: >-
    (kafka_resource.resources is defined) 
    and (kafka_resource.resources|length>0)
    and (kafka_resource.resources[0].status is defined) 
    and (kafka_resource.resources[0].status.conditions is defined)
    and (kafka_resource.resources[0].status.conditions[0].type == 'Ready') 
  retries: 30
  delay: 10

- name: Create Kafka Topics
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'kafka-topic.yaml.j2') }}"
  loop:
    - 'global-id-topic'
    - 'storage-topic'
  loop_control:
    loop_var: topic_name

- name: Create Registry
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'registry.yaml.j2') }}"
