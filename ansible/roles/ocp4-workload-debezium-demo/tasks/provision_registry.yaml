---
- name: Evaluate Registry Subscription
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'registry-subscription.yaml.j2') }}"

- name: Wait for Registry operator to install
  k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: apicurioregistries.registry.apicur.io
  register: r_k8s_info
  until: r_k8s_info.resources | default([]) | length == 1
  retries: 10
  delay: 30

- name: Create Registry Namespace
  k8s:
    api_version: v1
    kind: Namespace
    name: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    state: present

- name: Enable anyuid on Namespace
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'scc-anyuid.yaml.j2') }}"
  vars:
    scc_namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'

- name: Deploy PostgreSQL Server Database
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'postgresql.yaml.j2') }}"
  vars:
    db_name: 'registry'
    connects_to: 'service-registry'
    part_of: 'registry'

- name: Wait for Database to Start
  k8s_info:
    kind: Deployment
    name: postgresql
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    api_version: apps/v1
  register: r_k8s_info
  until: r_k8s_info.resources[0].status.readyReplicas | default(0) > 0
  retries: 30
  delay: 10

- name: Create Registry
  k8s:
    state: present
    namespace: '{{ ocp4_workload_debezium_demo_registry_namespace }}'
    resource_definition: "{{ lookup('template', 'registry.yaml.j2') }}"
