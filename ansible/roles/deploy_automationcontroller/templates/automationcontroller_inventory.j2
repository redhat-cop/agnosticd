{% if groups['automationcontroller'] is defined %}
[automationcontroller]
{% for host in groups['automationcontroller'] %}
{{ host }}
{% endfor %}
{% endif %}

{% if groups['automationcontroller_database'] is defined %}
[database]
{{    groups['automationcontroller_database'][0] }}
{% endif %}

{% if groups['automationhub'] is defined %}
[automationhub]
{% for host in groups['automationhub'] %}
{{ host }} #automationhub_main_url=https://{{ host.split('.')[0] }}.{{ guid }}{{ subdomain_base_suffix }}
{% endfor %}
{% endif %}

{% if groups['execution_nodes'] is defined %}
[execution_nodes]
{% for host in groups['execution_nodes'] %}
{{ host }}
{% endfor %}

[automationcontroller:vars]
node_type={{ aap_deploy_controller_type }}
peers=execution_nodes
{% endif %}

[all:vars]
admin_password='{{ deploy_automationcontroller_admin_password }}'
automationhub_admin_password='{{ deploy_automationcontroller_admin_password }}'
ansible_become=true
ansible_become_method=sudo

{% if groups['automationcontroller_database'] is defined %}
pg_host={{ groups['automationcontroller_database'][0] }}
pg_port='5432'
# we use the same database instance for controller and PAH
automationhub_pg_host={{ groups['automationcontroller_database'][0] }}
automationhub_pg_port='5432'
{% else %}
pg_host=''
pg_port=''

automationhub_pg_host=''
automationhub_pg_port=''
{% endif %}

pg_database='awx'
pg_username='awx'
pg_password='{{ deploy_automationcontroller_admin_password }}'
pg_sslmode='prefer'  # set to 'verify-full' for client-side enforced SSL

automationhub_pg_database='automationhub'
automationhub_pg_username='automationhub'
automationhub_pg_password='{{ deploy_automationcontroller_admin_password }}'
automationhub_pg_sslmode='prefer'

gpgcheck='{{ deploy_automationcontroller_dnf_gpgcheck }}'
aw_repo_url='{{ aw_repo_url | default("https://releases.ansible.com/ansible-tower/") }}'
ignore_preflight_errors=True

registry_url='registry.redhat.io'
registry_username='{{ registry_username }}'
registry_password='{{ registry_password }}'

# seems to fail
# enable_insights_collection={{ aap_deploy_insights }}
