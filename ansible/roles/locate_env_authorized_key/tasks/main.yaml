---
- name: Set env_authorized_key_path
  delegate_to: localhost
  become: false
  delegate_facts: true
  set_fact:
    env_authorized_key_path: >-
      {%- if hostvars.localhost.ssh_provision_key_path is defined -%}
      {{ hostvars.localhost.ssh_provision_key_path }}
      {%- elif hostvars.localhost.infra_ssh_key is defined -%}
      {{ hostvars.localhost.infra_ssh_key }}
      {%- else -%}
      {{ output_dir }}/{{ env_authorized_key | default(guid ~ 'key') }}
      {%- endif -%}

- name: Set env_authorized_key_path_pub
  delegate_to: localhost
  become: false
  delegate_facts: true
  set_fact:
    env_authorized_key_path_pub: >-
      {%- if hostvars.localhost.ssh_provision_pubkey_path is defined -%}
      {{ hostvars.localhost.ssh_provision_pubkey_path }}
      {%- else -%}
      {{ output_dir }}/{{ hostvars.localhost.ssh_provision_key_name | default(env_authorized_key) | regex_replace('\.pem$', '') }}.pub
      {%- endif -%}

- name: Generate SSH pub key content if it doesn't exist
  shell: >-
    ssh-keygen -y -f {{ hostvars.localhost.env_authorized_key_path | quote }}
    > {{ hostvars.localhost.env_authorized_key_path_pub | quote }}
  args:
    creates: "{{ hostvars.localhost.env_authorized_key_path_pub }}"
  delegate_to: localhost
  become: false

- name: Save SSH pub key content as fact
  delegate_to: localhost
  delegate_facts: true
  become: false
  set_fact:
    env_authorized_key_content_pub: >-
      {%- if hostvars.localhost.ssh_provision_pubkey_content is defined -%}
      {{ hostvars.localhost.ssh_provision_pubkey_content }}
      {%- else -%}
      {{ lookup('file', hostvars.localhost.env_authorized_key_path_pub) }}
      {%- endif -%}
