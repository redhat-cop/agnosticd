---
- name: Get user from Active Directory
  register: azuser
  azure.azcollection.azure_rm_aduser_info:
    auth_source: cli
    user_principal_name: "{{ upn }}"
    tenant: "{{ azure_tenant }}"
- name: Create OPEN environment resource group
  azure.azcollection.azure_rm_resourcegroup:
    subscription_id: "{{ azure_subscription_id }}"
    name: "openenv-{{ guid }}"
    location: eastus
    state: present
    tags:
      guid: "{{ guid }}"
      delete: never
- name: Get resource group info
  register: azrg
  azure.azcollection.azure_rm_resourcegroup_info:
    name: "openenv-{{ guid }}"
    auth_source: cli
    tenant: "{{ azure_tenant }}"
- name: Get Role Definition for Contributor
  azure.azcollection.azure_rm_roledefinition_info:
    scope: "{{ azrg['resourcegroups'][0].id }}"
    role_name: Contributor
  register: azrd
- name: Create a role assignment
  azure.azcollection.azure_rm_roleassignment:
    scope: "{{ azrg['resourcegroups'][0].id }}"
    assignee_object_id: "{{ azuser['ad_users'][0].object_id }}"
    role_definition_id:
      "{{ azrd['roledefinitions'][0].id }}"
- name: See if application already exists
  azure.azcollection.azure_rm_adapplication_info:
    identifier_uri: "api://openenv-{{ guid }}"
    tenant: "{{ azure_tenant }}"
  ignore_errors: true
  register: azappcheck
- name: Create the Service Principal
  when: azappcheck['applications']|length==0
  command: >-
    az ad sp create-for-rbac
    --name "api://openenv-{{ guid }}"
    --role Contributor
    --scopes "{{ azrg['resourcegroups'][0].id }}"
  register: azappcreate
- name: Get password
  when: azappcreate.changed
  block:
    - set_fact: azpass="{{ azappcreate.stdout | from_json | json_query('password') }}"
- name: Get application info
  azure.azcollection.azure_rm_adapplication_info:
    identifier_uri: "api://openenv-{{ guid }}"
    tenant: "{{ azure_tenant }}"
  register: azapp
