---
# Implement your Post Workload deployment tasks here

- name: "Checking if NooBaa system exists..."
  become: true
  shell: "oc get project {{ noobaa_namespace|d('noobaa') }}"
  register: noobaa_status
  ignore_errors: true

- block:
    - name: "Getting NooBaa endpoint"
      shell: "oc get route s3 -n {{ noobaa_namespace|d('noobaa') }} -o go-template='{{ '{{' }} .spec.host {{ '}}' }}{{ '{{' }} println {{ '}}' }}'"
      register: noobaa_endpoint
    - name: "Creating temp directory"
      tempfile:
        state: directory
      register: tmp_dir
    - name: "Getting AWS key"
      shell: "oc get secret noobaa-admin -n noobaa -o go-template='{{ '{{' }} .data.AWS_ACCESS_KEY_ID {{ '}}' }}{{ '{{' }} println {{ '}}' }}'|base64 --decode"
      register: noobaa_aws_key
    - name: "Getting AWS key"
      shell: "oc get secret noobaa-admin -n noobaa -o go-template='{{ '{{' }} .data.AWS_SECRET_ACCESS_KEY {{ '}}' }}{{ '{{' }} println {{ '}}' }}'|base64 --decode"
      register: noobaa_aws_secret
    - name: "Generating migstorage definition"
      template:
        src: "migstorage.yaml.j2"
        dest: "{{ tmp_dir.path }}/migstorage.yaml"
      vars: 
        - noobaa_s3_url: "http://{{ noobaa_endpoint.stdout }}"
        - noobaa_key: "{{ noobaa_aws_key.stdout }}"
        - noobaa_secret: "{{ noobaa_aws_secret.stdout }}"
        - noobaa_region: "{{ region|d('us-east-2') }}"
    - name: "Creating migstorage"
      shell: "oc apply -f {{ tmp_dir.path }}/migstorage.yaml"
  when: noobaa_status.rc == 0

- name: "Cleaning up temp directory"
  file: 
    path: "{{ repodir.path }}"
    state: absent

# Leave these as the last tasks in the playbook

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: pre_workload tasks complete
  debug:
    msg: "Post-Workload tasks completed successfully."
  when:
  - not silent|bool
  - not workload_shared_deployment|d(False)

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: pre_workload tasks complete
  debug:
    msg: "Post-Software checks completed successfully"
  when:
  - not silent|bool
  - workload_shared_deployment|d(False)
