---

- name: Set container_service_deploy_payload_type
  set_fact:
    container_service_deploy_payload_type: >-
      {% if container_service_deploy_url.endswith('.tar')
           or container_service_deploy_url.endswith('.tar.gz') -%}
      tar
      {%- else -%}
      git
      {%- endif -%}

- name: Create a directory if it does not exist
  file:
    path: "/opt/{{ container_service_deploy_name }}"
    state: directory
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"

- name: Fetch podman resources either git repo OR tar archive
  block:

    - name: Download and unpack remote tar archive of podman resources
      when: container_service_deploy_payload_type == 'tar'
      ansible.builtin.unarchive:
        src: "{{ container_service_deploy_url }}"
        dest: "/opt/{{ container_service_deploy_name }}"
        remote_src: true

    - name: Clone remote git repo of podman resources
      when: container_service_deploy_payload_type == 'git'
      ansible.builtin.git:
        repo: "{{ container_service_deploy_url }}"
        dest: "/opt/{{ container_service_deploy_name }}"

- name: Create systemd podman based service
  template:
    src: podman.service.j2
    dest: "/etc/systemd/system/{{ container_service_deploy_name | default('podman') }}.service"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: Enable and Start the new podman service
  service:
    name: "{{ container_service_deploy_name | default('podman') }}.service"
    enabled: true
    state: started

...
