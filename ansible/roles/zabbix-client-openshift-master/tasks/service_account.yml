# vim: set ft=ansible:
---
- name: check if Zabbix SA exists
  command: oc get sa zabbix -n default
  register: sacommand
  ignore_errors: yes
  changed_when: false

- name: create Zabbix SA
  command: oc create sa zabbix -n default
  when: sacommand | failed

- name: add policy for zabbix SA
  command: oc adm policy add-cluster-role-to-user cluster-reader system:serviceaccount:default:zabbix -n default
  when: sacommand | failed

- name: get token (step 1)
  shell: "{% raw %}oc get sa/zabbix -n default --template='{{range .secrets}}{{ .name }} {{end}}' | xargs -n 1 oc get secret --template='{{ if .data.token }}{{ .data.token }}{{end}}' | head -n 1 | base64 -d - > /tmp/zabbix.token{% endraw %}"
  changed_when: false

# cannot use a register directly in step 1 as there seem to be a bug in ansible
# this workaround with cat works:
- name: get token (step 2)
  command: cat /tmp/zabbix.token
  register: token

- name: remove temp file
  file:
    path: /tmp/zabbix.token
    state: absent

- name: set facts for token zabbix
  set_fact:
    zabbix_token: "{{ token.stdout }}"
  when: token | succeeded

- name: Try to get Hawkular route
  command: "oc get route/hawkular-metrics -n openshift-infra --template='{% raw %}{{ .spec.host }}{% endraw %}'"
  register: hawkular
  changed_when: false
  ignore_errors: true

- name: Try to set facts for hawkular and token zabbix
  set_fact:
    hawkular_route: "{{ hawkular.stdout }}"
  when: hawkular | succeeded
  ignore_errors: true
