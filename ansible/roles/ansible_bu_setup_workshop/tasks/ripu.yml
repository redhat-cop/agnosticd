---
- name: Include fetch instances info
  ansible.builtin.include_tasks:
    file: ./common/fetch_instances_info.yml

- name: Include cockpit tasks
  ansible.builtin.include_tasks:
    file: ./common/cockpit.yml

- name: Include ansible-navigator tasks
  ansible.builtin.include_tasks:
    file: ./common/ansible-navigator.yml

- name: Include code-server tasks
  ansible.builtin.include_tasks:
    file: ./common/code-server.yml

- name: Include automation controller tasks
  ansible.builtin.include_tasks:
    file: ./common/automation-controller.yml

- name: template out motd
  ansible.builtin.template:
    src: ./templates/motd.j2
    dest: /etc/motd

- name: template out /etc/host
  ansible.builtin.template:
    src: ./templates/etchosts/{{ workshop_type }}.j2
    dest: /etc/hosts

- name: copy setup.yml playbook
  copy:
    src: ./files/setup.yml
    dest: "/home/{{ student_name }}/setup.yml"
    owner: "{{ student_name }}"
    group: "{{ student_name }}" 
    
- name: Clone rhel-workshop
  ansible.builtin.git:
    repo: https://github.com/ansible/workshops.git
    dest: /tmp/workshops
    version: devel

- name: Copy rhel-workshop to users home
  ansible.builtin.copy:
    src: "/tmp/workshops/exercises/{{ ansible_bu_setup_workshop_exercise_src }}/"
    dest: "/home/{{ student_name }}/{{ ansible_bu_setup_workshop_exercise_dest }}/"
    remote_src: true
    owner: "{{ student_name }}"
    group: "{{ student_name }}"
    mode: '0755'

- name: Copy rhel-workshop to users home
  ansible.builtin.copy:
    src: "/tmp/workshops/exercises/{{ ansible_bu_setup_workshop_exercise_src }}/"
    dest: "/home/{{ student_name }}/{{ ansible_bu_setup_workshop_exercise_dest }}/"
    remote_src: true
    owner: "{{ student_name }}"
    group: "{{ student_name }}"
    mode: '0755'

- name: Clean workshop clone directory
  ansible.builtin.file:
    path: "/tmp/workshops"
    state: absent


# Launch Automation Controller Run Time Job Templates
- name: Automation Controller Job Launch Block
  environment:
    CONTROLLER_HOST: "{{ aap_auth.controller_host | default(aap_controller_web_url) }}"
    CONTROLLER_USERNAME: "{{ aap_auth.controller_username | default(aap_controller_admin_user) | default('admin') }}"
    CONTROLLER_PASSWORD: "{{ aap_auth.controller_password | default(aap_controller_admin_password) }}"
    CONTROLLER_VERIFY_SSL: "{{ aap_auth.controller_verify_ssl | default('true') }}"
  vars:
    _controller_url: "https://{{ aap_auth.controller_host | default(aap_controller_web_url) }}"
    _controller_username: "{{ aap_auth.controller_username | default(aap_controller_admin_user) | default('admin') }}"
    _controller_password: "{{ aap_auth.controller_password | default(aap_controller_admin_password) }}"
    controller_request_timeout: "250"
    controller_configuration_projects_async_retries: 60
    controller_configuration_projects_async_delay: 5
    controller_infra_workloads:
      - infra.controller_configuration.credential_types
      - infra.controller_configuration.execution_environments
      - infra.controller_configuration.projects
      - infra.controller_configuration.project_update
      - infra.controller_configuration.job_templates
    controller_validate_certs: "{{ aap_auth.controller_verify_ssl | default('true') }}"
    controller_credential_types:
      - name: GitHub_Personal_Access_Token
        description: Credential for GitHub repo operations automation
        kind: cloud
        inputs:
          fields:
            - type: string
              id: personal_access_token
              label: Personal Access Token
              secret: true
              help_text: GitHub Personal Access Token
              multiline: true
          required:
            - personal_access_token
        injectors:
          env:
            MY_PA_TOKEN: !unsafe '{{ personal_access_token }}'
    controller_projects:
      - name: Project Leapp
        organization: Default
        scm_update_on_launch: false
        scm_update_cache_timeout: 3600
        scm_type: git
        scm_url: "{{ ripu_project_scm_url }}"
        scm_branch: "{{ ripu_project_scm_branch }}"
        default_environment: ripu workshop execution environment
    controller_templates:
      - name: Z / CaC / Controller
        project: Project Leapp
        playbook: controller_cac.yml
        inventory: Workshop Inventory
        execution_environment: Default execution environment
        credentials:
          - Controller Credential
        extra_vars:
          controller_configuration_projects_async_retries: 60
          controller_configuration_projects_async_delay: 5
    controller_execution_environments:
      - name: ripu workshop execution environment
        image: registry.redhat.io/ansible-automation-platform-24/ee-supported-rhel8:latest
  block:
    - name: Turn on AWX_COLLECTIONS_ENABLED on controller
      awx.awx.settings:
        name: AWX_COLLECTIONS_ENABLED
        value: true
        controller_username: "{{ _controller_username }}"
        controller_password: "{{ _controller_username }}"
        controller_host: "{{ _controller_url }}"
        validate_certs: "{{ controller_validate_certs }}"

    - name: Deploy controller-infra workloads
      ansible.builtin.include_tasks: common/generic_cac_subtasks_init.yml
      loop: "{{ controller_infra_workloads }}"
      loop_control:
        loop_var: controller_infra_vars
      when:
        - controller_infra_workloads | d("") | length >0

    - name: Run Z / CaC / Controller job template
      awx.awx.job_launch:
        job_template: "Z / CaC / Controller"
        controller_username: "{{ _controller_username }}"
        controller_password: "{{ _controller_username }}"
        controller_host: "{{ _controller_url }}"
      register: setupcontroljob

    - name: "Check API until Z / CaC / Controller job is successful"
      ansible.builtin.uri:
        url: "{{ _controller_url }}/api/v2/jobs/{{ setupcontroljob.id }}/?format=json"
        user: "{{ _controller_username }}"
        password: "{{ _controller_username }}"
        force_basic_auth: true
        method: GET
        return_content: true
        status_code: 200
        validate_certs: "{{ controller_validate_certs }}"
      register: workshop_job_templates01
      until: workshop_job_templates01.json.status == "successful"
      delay: 15  # Every 15 seconds
      retries: 24  # 6 minutes 6*60/15

    - name: Run Z / SETUP / Workshop deployment workflow template
      awx.awx.workflow_launch:
        workflow_template: "Z / SETUP / Workshop deployment"
        controller_username: "{{ _controller_username }}"
        controller_password: "{{ _controller_username }}"
        controller_host: "{{ _controller_url }}"
        timeout: 900
...
