---
- name: Git clone for {{ _source_name }}
  git:
    dest: "{{ _install_path }}"
    # Pass-through options to git module
    accept_hostkey: "{{ _source.accept_hostkey | default(omit) }}"
    #archive - not appropriate for this usage
    #bare - not appropriate for this usage
    #clone - always default to yes
    depth: "{{ _source.depth | default(omit) }}"
    executable: "{{ agnosticd_dynamic_git_executable | default(omit) }}"
    force: "{{ _source.force | default(omit) }}"
    gpg_whitelist: "{{ _source.gpg_whitelist | default(omit) }}"
    key_file: "{{ _source.key_file | default(omit) }}"
    recursive: "{{ _source.recursive | default(omit) }}"
    reference: "{{ _source.reference | default(omit) }}"
    refspec: "{{ _source.refspec | default(omit) }}"
    remote: "{{ _source.remote | default(omit) }}"
    repo: "{{ _source.repo | default(omit) }}"
    #separate_git_dir - not appropriate for this usage
    ssh_opts: "{{ _source.ssh_opts | default(omit) }}"
    track_submodules: "{{ _source.track_submodules | default(omit) }}"
    umask: "{{ _source.umask | default(omit) }}"
    update: "{{ _source.get('update', omit) }}"
    verify_commit: "{{ _source.verify_commit | default(omit) }}"
    version: "{{ _source.version | default(omit) }}"
  when: not _install_path is exists

- name: Create role links to git repo for {{ _source_name }}
  file:
    state: link
    path: "{{ agnosticd_dynamic_roles_dir }}/{{ _role.key }}"
    src: "{{ (_install_path ~ '/' ~ _role.value | default('')) | relpath(_install_dir) }}"
  loop: "{{ _source.role_paths | default({}) | dict2items }}"
  loop_control:
    loop_var: _role
    label: "{{ _role.key }}"
