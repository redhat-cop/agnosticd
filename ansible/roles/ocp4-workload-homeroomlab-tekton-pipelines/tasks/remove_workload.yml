---
# Implement your Workload removal tasks here
- name: Copy .kube/config and set env var
  copy:
    src: ~/.kube/config
    dest: "{{ tmp_kubeconfig }}"
    remote_src: yes

- environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
  block:
    - name: post_workload Tasks Complete
      debug:
       msg: "Pre-Software checks completed successfully - Removed"

    - name: Set user project
      command: "oc project {{ project_name }}"

    - name: Git clone the repo if it doesn't exist
      git:
        repo: "{{ lab_repo }}"
        version: "{{ lab_branch }}"
        dest: "{{ tmp_git_location }}"
        track_submodules: yes

    - name: Delete spawner
      command: "{{ tmp_git_location }}/.workshop/scripts/delete-spawner.sh"
      args:
        chdir: "{{ tmp_git_location }}"

    - name: Delete workshop
      command: "{{ tmp_git_location }}/.workshop/scripts/delete-workshop.sh"
      args:
        chdir: "{{ tmp_git_location }}"

    # TODO: Only delete project if empty, as we're sharing the project
#    - name: Delete project
#      command: "oc delete project {{ project_name }}"
#      ignore_errors: yes

- name: Remove temp kube config
  command: "rm {{ tmp_kubeconfig }}"

- name: Remove temp git repo
  command: "rm -rf {{ tmp_git_location }}"
  
# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
