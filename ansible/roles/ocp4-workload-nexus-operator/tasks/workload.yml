---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Create OpenShift Objects for Nexus Operator
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/project.j2
  - ./templates/crd.j2
  - ./templates/service_account.j2
  - ./templates/role.j2
  - ./templates/role_binding.j2
  - ./templates/operator.j2

- name: Deploy default Nexus instance
  when: _nexus_deploy_nexus_instance|bool
  block:
    - name: Create OpenShift Custom Resource for Nexus Instance
      k8s:
        state: present
        merge_type:
        - strategic-merge
        - merge
        definition: "{{ lookup('template', './templates/opentlc-nexus.j2' ) | from_yaml }}"
    - name: Wait for Nexus Pod to start creating
      pause:
        seconds: 20
    - name: Get pod name for nexus pod
      k8s_facts:
        kind: Pod
        namespace: "{{ _nexus_operator_project }}"
        label_selectors:
          - app={{ _nexus_name }}
      register: nexus_pods
    - name: Get Admin password
      k8s:
        api_version: gpte.opentlc.com/v1alpha1
        kind: Nexus
        name: "{{ _nexus_name }}"
        namespace: "{{ _nexus_operator_project }}"
      register: nexus_cr
      until:
      - nexus_cr.result.status.conditions[0].type == "Running"
      retries: 50
      delay: 5
      changed_when: false
    - name: Get Admin password
      k8s:
        api_version: gpte.opentlc.com/v1alpha1
        kind: Nexus
        name: "{{ _nexus_name }}"
        namespace: "{{ _nexus_operator_project }}"
      register: nexus_cr
      until:
      - nexus_cr.result.status.admin_password is defined
      retries: 50
      delay: 5
      changed_when: false
    - name: Display Nexus password
      debug:
        msg: "user.info: Nexus password is {{ nexus_cr.result.status.admin_password }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
