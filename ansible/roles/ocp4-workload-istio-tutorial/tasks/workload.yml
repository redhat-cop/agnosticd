# vim: set ft=ansible
---

# Implement your Workload deployment tasks here
- name: set SCCs for Istio (will be dropped in the future)
  shell: "oc adm policy add-scc-to-user {{ item }} -z default -n istio-tutorial"
  with_items:
    - anyuid
    - privileged

- name: create the istio-tutorial project
  k8s:
    state: present
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: istio-tutorial

- name: create the customer service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: istio-tutorial
        name: customer
        labels:
          app: customer    
      spec:
        ports:
        - name: http
          port: 8080
        selector:
          app: customer

- name: create the preference service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: istio-tutorial
        name: preference
        labels:
          app: preference    
      spec:
        ports:
        - name: http
          port: 8080
        selector:
          app: preference
  
- name: create the recommendation service
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        namespace: istio-tutorial
        name: recommendation
        labels:
          app: recommendation    
      spec:
        ports:
        - name: http
          port: 8080
        selector:
          app: recommendation

- name: create the customer gateway
  k8s:
    state: present
    definition:
      apiVersion: networking.istio.io/v1alpha3
      kind: Gateway
      metadata:
        name: customer-gateway
        namespace: istio-tutorial
      spec:
        selector:
          istio: ingressgateway # use istio default controller
        servers:
        - port:
            number: 80
            name: http
            protocol: HTTP
          hosts:
          - "*"

- name: create the customer virtualservice
  k8s:
    state: present
    definition:
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: customer
        namespace: istio-tutorial
      spec:
        hosts:
        - "*"
        gateways:
        - customer-gateway
        http:
        - route:
          - destination:
              host: customer
              port:
                number: 8080

- name: create the customer deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: istio-tutorial
        labels:
          app: customer
          version: v1
        name: customer
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: customer
            version: v1
        template:
          metadata:
            labels:
              app: customer
              version: v1
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/port: "8080"
              prometheus.io/scheme: "http"
              sidecar.istio.io/inject: "true"
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true -Djava.security.egd=file:///dev/./urandom
              image: quay.io/maistra_demos/customer:v1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                  - curl
                  - localhost:8080/health
                initialDelaySeconds: 20
                periodSeconds: 5
                timeoutSeconds: 1
              name: customer
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 8778
                name: jolokia
                protocol: TCP
              - containerPort: 9779
                name: prometheus
                protocol: TCP
              readinessProbe:
                exec:
                  command:
                  - curl
                  - localhost:8080/health
                initialDelaySeconds: 10
                periodSeconds: 5
                timeoutSeconds: 1
              securityContext:
                privileged: false

- name: create the preference deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: istio-tutorial
        labels:
          app: preference
          version: v1
        name: preference-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: preference
            version: v1
        template:
          metadata:
            labels:
              app: preference
              version: v1
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/port: "8080"
              prometheus.io/scheme: "http"
              sidecar.istio.io/inject: "true"
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true -Djava.security.egd=file:///dev/./urandom
              image: quay.io/maistra_demos/preference:v1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                  - curl
                  - localhost:8080/health
                initialDelaySeconds: 30
                periodSeconds: 5
                timeoutSeconds: 1
              name: preference
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 8778
                name: jolokia
                protocol: TCP
              - containerPort: 9779
                name: prometheus
                protocol: TCP
              readinessProbe:
                exec:
                  command:
                  - curl
                  - localhost:8080/health
                initialDelaySeconds: 30
                periodSeconds: 5
                timeoutSeconds: 1
              securityContext:
                privileged: false

- name: create the recommendation deployment
  k8s:
    state: present
    definition:
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: istio-tutorial
        labels:
          app: recommendation
          version: v1
        name: recommendation-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: recommendation
            version: v1
        template:
          metadata:
            labels:
              app: recommendation
              version: v1
            annotations:
              sidecar.istio.io/inject: "true"
              prometheus.io/scrape: "true"
              prometheus.io/port: "8080"
              prometheus.io/scheme: "http"
          spec:
            containers:
            - env:
              - name: JAVA_OPTIONS
                value: -Xmx256m
              image: quay.io/maistra_demos/recommendation:v1
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                  - curl
                  - localhost:8080/health
                initialDelaySeconds: 20
                periodSeconds: 5
                timeoutSeconds: 1
              name: recommendation
              ports:
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 8778
                name: jolokia
                protocol: TCP
              - containerPort: 9779
                name: prometheus
                protocol: TCP
              readinessProbe:
                exec:
                  command:
                  - curl
                  - localhost:8080/health
                initialDelaySeconds: 10
                periodSeconds: 5
                timeoutSeconds: 1
              securityContext:
                privileged: false

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool

