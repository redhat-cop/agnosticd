---
# Setup OpenShift Service Mesh via operator
- name: Create OpenShift Objects for Elastic Search
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/elasticsearch_subscription.yaml

- name: Wait for elasticsearch CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: elasticsearches.logging.openshift.io
  register: r_es_crd
  retries: 200
  delay: 10
  until: r_es_crd.resources | list | length == 1

- name: Create OpenShift Objects for Kiali
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/kiali_subscription.yaml

- name: Wait for Kiali CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: kialis.kiali.io
  register: r_kiali_crd
  retries: 200
  delay: 10
  until: r_kiali_crd.resources | list | length == 1

- name: Create OpenShift Objects for Service Mesh
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/osm_subscription.yaml

- name: Wait for service mesh control plane CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: servicemeshcontrolplanes.maistra.io
  register: r_smcp_crd
  retries: 200
  delay: 10
  until: r_smcp_crd.resources | list | length == 1

- name: create service mesh user projects
  include_tasks: create_project.yaml
  vars:
    name: "{{ item[0] }}-{{ item[1] }}"
    user: "{{ item[0] }}"
  loop: "{{ users|product(['istio-system'])|list }}"

- name: create service mesh objects for users
  include_tasks: create_user_service_mesh.yaml
  vars:
    project: "{{ item[0] }}-{{ item[1] }}"
    user: "{{ item[0] }}"
  loop: "{{ users|product(['istio-system'])|list }}"

# - name: create istio-system project
#   k8s:
#     state: present
#     kind: Project
#     api_version: project.openshift.io/v1
#     definition:
#       metadata:
#         name: "istio-system"

# - name: Create ServiceMeshControlPlane in istio-system namespace
#   k8s:
#     state: present
#     merge_type:
#     - strategic-merge
#     - merge
#     definition: "{{ lookup('template', 'osm_smcp_single.yaml.j2' ) | from_yaml }}"
#   register: smcp_result_r
#   retries: 120
#   delay: 10
#   until: smcp_result_r is succeeded

# - name: Create default ServiceMeshMemberRoll in istio-system
#   k8s:
#     state: present
#     definition: "{{ lookup( 'template', 'osm_smmr.yaml.j2' ) | from_yaml  }}"
