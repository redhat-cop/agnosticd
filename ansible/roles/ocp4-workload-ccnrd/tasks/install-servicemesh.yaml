---
# Setup OpenShift Service Mesh via operator
- name: Create OpenShift Objects for Elastic Search
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/elasticsearch_subscription.yaml

- name: Wait for elasticsearch CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: elasticsearches.logging.openshift.io
  register: r_es_crd
  retries: 200
  delay: 10
  until: r_es_crd.resources | list | length == 1

- name: Create OpenShift Objects for Jaeger
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/jaeger_subscription.yaml

- name: Wait for Jaeger CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: jaegers.jaegertracing.io
  register: r_jaeger_crd
  retries: 200
  delay: 10
  until: r_jaeger_crd.resources | list | length == 1

- name: Create OpenShift Objects for Kiali
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/kiali_subscription.yaml

- name: Wait for Kiali CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: kialis.kiali.io
  register: r_kiali_crd
  retries: 200
  delay: 10
  until: r_kiali_crd.resources | list | length == 1

- name: Create OpenShift Objects for Service Mesh
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/osm_subscription.yaml

- name: Wait for service mesh control plane CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: servicemeshcontrolplanes.maistra.io
  register: r_smcp_crd
  retries: 200
  delay: 10
  until: r_smcp_crd.resources | list | length == 1

- name: create service mesh user projects
  include_tasks: create_project.yaml
  vars:
    name: "{{ item[0] }}-{{ item[1] }}"
    user: "{{ item[0] }}"
  loop: "{{ users|product(['istio-system'])|list }}"

- name: create service mesh objects for users
  include_tasks: create_user_service_mesh.yaml
  vars:
    project: "{{ item[0] }}-{{ item[1] }}"
    user: "{{ item[0] }}"
  loop: "{{ users|product(['istio-system'])|list }}"

