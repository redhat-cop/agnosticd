---
- name: Nginx and nginx_with_cert block
  become: "{{ nginx_with_cert_ansible_become | default(omit) }}"
  block:
    - name: Set python interpreter for nginx_with_cert
      when: nginx_with_cert_ansible_python_interpreter is defined
      ansible.builtin.set_fact:
        ansible_python_interpreter: "{{ nginx_with_cert_ansible_python_interpreter }}"

    - name: Nginx | include correct tasks for OS
      ansible.builtin.include_tasks:
        file: "nginx/{{ ansible_distribution }}{{ansible_distribution_major_version }}.yml"

    - name: Nginx | start nginx server
      ansible.builtin.service:
        name: nginx
        enabled: true
        state: started

    - name: Nginx | generate certbot certificate (Let's Encrypt)
      when: certbot_cert_manager_provider != 'zerossl'
      ansible.builtin.command: >-
        certbot certonly
        --nginx
        -m {{ nginx_with_cert_encrypt_mail | regex_replace('example.com$','opentlc.com') }}
        -d {{ nginx_with_cert_hostname }}
        --noninteractive --agree-tos

    - name: Nginx | generate certbot certificate (ZeroSSL)
      when: certbot_cert_manager_provider == 'zerossl'
      ansible.builtin.command: >-
        certbot certonly
        --nginx
        --eab-kid "{{ certbot_cert_manager_zerossl_eab_key_id }}"
        --eab-hmac-key "{{ certbot_cert_manager_zerossl_hmac_key }}"
        --server "{{ certbot_cert_manager_acme_url }}"
        -m {{ nginx_with_cert_encrypt_mail | regex_replace('example.com$','opentlc.com') }}
        -d {{ nginx_with_cert_hostname }} --noninteractive --agree-tos

    - name: Nginx | create nginx certificate directory
      ansible.builtin.file:
        path: /etc/pki/nginx/private
        state: directory
        recurse: true
        owner: nginx

    - name: Nginx | copy letsencrypt key
      ansible.builtin.copy:
        src: /etc/letsencrypt/live/{{ nginx_with_cert_hostname }}/fullchain.pem
        dest: /etc/pki/nginx/server.crt
        remote_src: true
        owner: nginx
        mode: 0644

    - name: Nginx | copy letsencrypt certificate
      ansible.builtin.copy:
        src: /etc/letsencrypt/live/{{ nginx_with_cert_hostname }}/privkey.pem
        dest: /etc/pki/nginx/private/server.key
        remote_src: true
        owner: nginx
        mode: 0644

    - name: Nginx | copy custom nginx_with_cert nginx configuration file
      ansible.builtin.template:
        src: "{{ nginx_with_cert_nginx_conf }}"
        dest: /etc/nginx/nginx.conf

    - name: Nginx | enable selinux boolean to connect with nginx_with_cert
      ansible.posix.seboolean:
        name: httpd_can_network_connect
        state: true
        persistent: true

    - name: Nginx | restart nginx server
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: print out user.info
      agnosticd_user_info:
        msg: |
          nginx_web_url: {{ nginx_with_cert_hostname }}

    - name: Save user data
      agnosticd_user_info:
        data:
          nginx_web_url: "{{ nginx_with_cert_hostname }}"

...
