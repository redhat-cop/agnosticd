---
- name: Listing all Templates available on the Developer Portal
  uri:
    method: GET
    url: "{{ _3scale_admin_url }}/admin/api/cms/templates.xml?per_page=100"
    validate_certs: "{{ obsandbox_validate_certs|d(false)|bool }}"
    headers:
      Authorization: "{{ _3scale_basic_auth_token }}"
    return_content: true
    status_code: 200
  register: _3scale_portal_templates_list
  until: _3scale_portal_templates_list.content is defined

- name: Querying id for Layout "{{ _layout_system_name }}"
  xml:
    xmlstring: '{{ _3scale_portal_templates_list.content }}'
    xpath: "//templates/layout[system_name='{{ _layout_system_name }}']/id"
    content: text
  ignore_errors: true
  register: _xpath_layouts

- name: Retrieve the content for Layout "{{ _layout_system_name }}"
  set_fact:
    _layout_content: "{{ lookup('url', _layout_location, split_lines=False) }}"

- name: Update pre-exising Layout "{{ _layout_system_name }}"
  when:
    - _xpath_layouts is defined
    - _xpath_layouts.matches is defined
    - _xpath_layouts.matches | length | int > 0
  block:
    - name: Set the _layout_id with the pre-existing Layout
      set_fact: _layout_id="{{ _xpath_layouts.matches[0].id }}"

    - name: PUT request to 3scale CMS backend to update layout {{ _layout_system_name }}
      uri:
        method: PUT
        url: "{{ _3scale_admin_url }}/admin/api/cms/templates/{{ _layout_id }}.xml"
        validate_certs: "{{ obsandbox_validate_certs|d(false)|bool }}"
        headers:
          Authorization: "{{ _3scale_basic_auth_token }}"
        body_format: form-urlencoded
        body:
          - [draft, '{{ _layout_content }}']
        status_code: 200

- name: Upload a new Layout "{{ _layout_system_name }}"
  when: (_xpath_layouts is undefined) or (_xpath_layouts.matches is undefined)
  block:
    - name: POST request to 3scale CMS backend to update layout {{ _layout_system_name }}
      uri:
        method: POST
        url: "{{ _3scale_admin_url }}/admin/api/cms/templates.xml"
        validate_certs: "{{ obsandbox_validate_certs|d(false)|bool }}"
        headers:
          Authorization: "{{ _3scale_basic_auth_token }}"
        body_format: form-urlencoded
        body:
          - [system_name, '{{ _layout_system_name }}']
          - [title, '{{ _layout_title }}']
          - [section_name, 'root']
          - [type, 'layout']
          - [liquid_enabled, '1']
          - [draft, '{{ _layout_content }}']
        return_content: true
        status_code: 201
      register: _layout_created

    - name: Retrieve the layout id from the XML response from 3scale CMS backend
      xml:
        xmlstring: '{{ _layout_created.content }}'
        xpath: "//layout/id"
        content: text
      register: _layout_created_xpath

    - name: Set the _layout_id for the Layout created
      set_fact: _layout_id="{{ _layout_created_xpath.matches[0].id }}"

- name: Publish the Layout "{{ _layout_system_name }} ({{ _layout_id }})"
  uri:
    method: PUT
    url: "{{ _3scale_admin_url }}/admin/api/cms/templates/{{ _layout_id }}/publish"
    validate_certs: "{{ obsandbox_validate_certs|d(false)|bool }}"
    headers:
      Authorization: "{{ _3scale_basic_auth_token }}"
    status_code: 200
