---
- name: Resolving section's relative path "{{ _file_path }}"
  set_fact:
    _section_relative_path: "{{ _file_path | dirname }}"

- name: Listing all Sections available on the Developer Portal
  uri:
    method: GET
    url: "{{ _3scale_admin_url }}/admin/api/cms/sections.xml?per_page=100"
    validate_certs: "{{ obsandbox_validate_certs|d(false)|bool }}"
    headers:
      Authorization: "{{ _3scale_basic_auth_token }}"
    return_content: true
    status_code: 200
  register: _3scale_portal_sections_list
  retries: 8
  delay: 15
  until: _3scale_portal_sections_list.content is defined

- name: Get Section id by Relative Path "{{ _section_relative_path }}"
  xml:
    xmlstring: '{{ _3scale_portal_sections_list.content }}'
    xpath: "//sections/section[partial_path='{{ _section_relative_path }}']/id"
    content: text
  register: _relpath_query

- name: Set _section_parent_id for section relative path "{{ _section_relative_path }}"
  set_fact: _section_parent_id={{ _relpath_query.matches[0].id | int | d(-1) }}

- name: Listing all pre-existing Files on the Developer Portal
  uri:
    method: GET
    url: "{{ _3scale_admin_url }}/admin/api/cms/files.xml?per_page=100"
    validate_certs: "{{ obsandbox_validate_certs|d(false)|bool }}"
    headers:
      Authorization: "{{ _3scale_basic_auth_token }}"
    return_content: true
    status_code: 200
  register: _3scale_portal_files_list
  until: _3scale_portal_files_list.content is defined

- name: Querying id for File "{{ _file_path }}"
  xml:
    xmlstring: '{{ _3scale_portal_files_list.content }}'
    xpath: "//files/file[path='{{ _file_path }}']/id"
    content: text
  ignore_errors: true
  register: _xpath_files

- name: create temporary file
  tempfile:
    state: file
    suffix: temp
  register: _tempfile
  until: _tempfile.path is defined

- name: Download the File "{{ _file_path }}" as tempfile
  get_url:
    url: "{{ _file_location }}"
    dest: "{{ _tempfile.path }}"

# 3scale CMS backend requires multipart-form with attached payload on this request,
# the URI module was not suitable to make it work -- so using CURL with SHELL module instead
# (warning is disabled)
- name: Upload a new File "{{ _file_path }}"
  shell: >
    curl -k -f -s -S -X POST '{{ _3scale_admin_url }}/admin/api/cms/files.xml' \
    --header 'Authorization: {{ _3scale_basic_auth_token }}' \
    --form 'path={{ _file_path }}' \
    --form 'title={{ _file_path | basename }}' \
    --form 'section_id={{ _section_parent_id }}' \
    --form 'downloadable=0' \
    --form 'attachment=@{{ _tempfile.path }}; filename={{ _file_path | basename }}'
  args:
    warn: false
  register: _r_shell
  failed_when: >
    (_r_shell.rc == 22)
  when: >
    (_xpath_files is undefined) or
    (_xpath_files.matches is undefined)

# 3scale CMS backend requires multipart-form with attached payload on this request,
# the URI module was not suitable to make it work -- so using CURL with SHELL module instead
# (warning is disabled)
- name: Update a pre-exising File "{{ _file_path }}"
  shell: >
    curl -k -f -s -S -X PUT '{{ _3scale_admin_url }}/admin/api/cms/files/{{ _xpath_files.matches[0].id | int }}.xml' \
    --header 'Authorization: {{ _3scale_basic_auth_token }}' \
    --form 'path={{ _file_path }}' \
    --form 'title={{ _file_path | basename }}' \
    --form 'section_id={{ _section_parent_id }}' \
    --form 'downloadable=0' \
    --form 'attachment=@{{ _tempfile.path }}; filename={{ _file_path | basename }}'
  args:
    warn: false
  register: _r_shell
  failed_when: >
    (_r_shell.rc == 22)
  when:
    - _xpath_files is defined
    - _xpath_files.matches is defined
    - _xpath_files.matches | length | int > 0

- name: use the registered var and the file module to remove the temporary file
  file:
    path: "{{ _tempfile.path }}"
    state: absent
  when: _tempfile.path is defined
