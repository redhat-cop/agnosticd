---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Create Project for Workshop Operator
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/project.j2' ) | from_yaml }}"
  register: r_create_project
  retries: 5
  delay: 60
  until: r_create_project is succeeded

- name: Create OpenShift Objects for Workshop Operator
  k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/crd.j2
  - ./templates/service_account.j2
  - ./templates/cluster_role.j2
  - ./templates/cluster_role_binding.j2
  - ./templates/operator.j2

- name: Deploy default Workshop instance
  when: _deploy_instance|bool
  block:
  - name: Create OpenShift Custom Resource for Workshop Instance
    k8s:
      state: present
      merge_type:
      - strategic-merge
      - merge
      definition: "{{ lookup('template', './templates/debugging-workshop.j2' ) | from_yaml }}"

- name: Wait for CodeReady Workspaces to start
  k8s:
    api_version: v1
    kind: Deployment
    name: codeready
    namespace: workspaces
  register: crw_deployment
  until:
    - crw_deployment.result is defined
  retries: 30
  delay: 120
  changed_when: false
- name: Wait for the CodeReady Workspaces to be ready
  k8s:
    api_version: v1
    kind: Deployment
    name: codeready
    namespace: workspaces
  register: crw_deployment
  until:
    - crw_deployment.result.status.readyReplicas is defined
    - crw_deployment.result.status.readyReplicas == 1
  retries: 50
  delay: 10
  changed_when: false

- name: Wait for Istio to start
  k8s:
    api_version: v1
    kind: Deployment
    name: istio-pilot
    namespace: istio-system
  register: istio_deployment
  until:
    - istio_deployment.result is defined
  retries: 30
  delay: 120
  changed_when: false
- name: Wait for the Istio to be ready
  k8s:
    api_version: v1
    kind: Deployment
    name: istio-pilot
    namespace: istio-system
  register: istio_deployment
  until:
    - istio_deployment.result.status.readyReplicas is defined
    - istio_deployment.result.status.readyReplicas == 1
  retries: 50
  delay: 10
  changed_when: false

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
