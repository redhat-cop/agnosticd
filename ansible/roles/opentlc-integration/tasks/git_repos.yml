---
# public repo are easy:
- name: Clone public repositories
  git:
    repo: "{{ item.1.repo }}"
    dest: "{{ item.1.dest }}"
    version: "{{ item.1.version|default('master') }}"
    force: yes
  when:
    - item.1.user is not defined
  with_subelements:
    - "{{ mgr_users }}"
    - git_repos
    - skip_missing: True

- name: Set permissions for cloned public repos
  file:
    path: "{{ item.1.dest }}"
    state: directory
    owner: "{{ item.0.name }}"
    recurse: yes
    group: "{{ item.0.name }}"
    mode: 0770
  ignore_errors: true
  when:
    - item.1.user is not defined
  with_subelements:
    - "{{ mgr_users }}"
    - git_repos
    - skip_missing: true

# private repos need more love

- name: gitconfig, credential.helper cache
  ini_file:
    path: "{{ item.home }}/.gitconfig"
    section: "credential"
    option: helper
    value: cache
    owner: "{{ item.name }}"
    mode: 0600
  with_items: "{{ mgr_users }}"

- name: gitconfig, credential.useHttpPath true
  ini_file:
    path: "{{ item.home }}/.gitconfig"
    section: "credential"
    option: useHttpPath
    value: 'true'
  with_items: "{{ mgr_users }}"

- name: Clone repositories with credentials
  ignore_errors: true
  shell:
    cmd: |
      # avoid 'change-back dir' permission errors
      cd /tmp/ 
      #set -ue -o pipefail
      # temporarly store password in cache
      cat <<EOF | sudo -u {{ item.0.name }} git credential-cache store
      url={{ item.1.repo }}
      username={{ item.1.user }}
      password={{ item.1.password }}
      EOF
      if [ -n "{{ item.1.dest }}" -a -d "{{ item.1.dest }}" ]; then
        cd "{{ item.1.dest }}"
        sudo -u {{ item.0.name }} git reset --hard HEAD
        sudo -u {{ item.0.name }} git pull
        sudo -u {{ item.0.name }} git checkout {{ item.1.version|default('master') }}
      else
        sudo -u {{ item.0.name }} git clone "{{ item.1.repo }}" "{{ item.1.dest }}"
        cd "{{ item.1.dest }}"
        sudo -u {{ item.0.name }} git checkout {{ item.1.version|default('master') }}
      fi
  when:
    - item.1.user is defined
    - item.1.password is defined
    - item.1.dest is defined
  with_subelements:
    - "{{ mgr_users }}"
    - git_repos
    - skip_missing: true
