---
- name: verify user projects exist
  k8s_facts:
    api_version: v1
    kind: Namespace
    name: "{{ item }}-project"
    field_selectors:
      - status.phase=Active
  register: r_user_namespace
  failed_when: r_user_namespace.resources | list | length != 1
  loop: "{{ users }}"

- name: verify guides pod is running
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: guides
    label_selectors:
      - deploymentconfig=web
    field_selectors:
      - status.phase=Running
  register: r_guides_pod
  failed_when: r_guides_pod.resources | list | length != 1

- name: verify guides are accessible
  uri:
    url: http://web-guides.{{ route_subdomain }}
    method: GET
    status_code: 200

- name: verify codeready pod is running
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: codeready
    label_selectors:
      - app=codeready
      - component=codeready
    field_selectors:
      - status.phase=Running
  register: r_codeready_pod
  failed_when: r_codeready_pod.resources | list | length != 1

- name: verify codeready is accessible
  uri:
    url: http://codeready-codeready.{{ route_subdomain }}
    method: GET
    status_code: 200

- name: verify keycloak pod is running
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: codeready
    label_selectors:
      - app=codeready
      - component=keycloak
    field_selectors:
      - status.phase=Running
  register: r_keycloak_pod
  failed_when: r_keycloak_pod.resources | list | length != 1

- name: verify keycloak is accessible
  uri:
    url: http://keycloak-codeready.{{ route_subdomain }}
    method: GET
    status_code: 200

- name: Get SSO admin token
  uri:
    url: http://keycloak-codeready.{{ route_subdomain }}/auth/realms/master/protocol/openid-connect/token
    method: POST
    body:
      username: "{{ codeready_sso_admin_username }}"
      password: "{{ codeready_sso_admin_password }}"
      grant_type: "password"
      client_id: "admin-cli"
    body_format: form-urlencoded
    status_code: 200,201,204
  register: sso_admin_token

- name: Verify custom realm exists
  uri:
    url: http://keycloak-codeready.{{ route_subdomain }}/auth/admin/realms/quarkus
    method: GET
    headers:
      Accept: application/json
      Authorization: "Bearer {{ sso_admin_token.json.access_token }}"
    status_code: 200

- name: Verify Kafka CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: kafkas.kafka.strimzi.io
  register: r_kafka_crd
  failed_when: r_kafka_crd.resources | list | length != 1

- name: verify Kafka operator pod is running
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - name=amq-streams-cluster-operator
    field_selectors:
      - status.phase=Running
  register: r_amq_operator_pod
  failed_when: r_amq_operator_pod.resources | list | length != 1

- name: Verify Jaeger CRD
  k8s_facts:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: jaegers.jaegertracing.io
  register: r_jaeger_crd
  failed_when: r_jaeger_crd.resources | list | length != 1

- name: verify Jaeger operator pod is running
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - name = jaeger-operator
  register: r_jaeger_operator_pod
  failed_when: r_jaeger_operator_pod.resources | list | length != 1

- name: verify user workspaces are started
  include_tasks: confirm_che_workspace.yaml
  vars:
    user: "{{ item }}"
  with_list: "{{ users }}"

# Leave this as the last task in the playbook.
- name: workload verification tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
