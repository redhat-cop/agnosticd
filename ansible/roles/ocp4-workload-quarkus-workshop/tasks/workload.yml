# vim: set ft=ansible
---
# Implement your Workload deployment tasks here

# Access for admin
- name: Give access to opentlc-mgr
  shell: |
         oc adm policy add-cluster-role-to-user cluster-admin opentlc-mgr

- name: create module list
  set_fact:
    modules: "{{ module_type.split(';') | map('trim') | list }}"

- name: Selected Modules
  debug:
    msg: "selected modules list: {{ modules }}"

# Create projects for user
- name: create projects for users
  include_tasks: create_project.yaml
  vars:
    t_project_name: "{{ t_user }}-project"
  loop: "{{ users }}"
  loop_control:
    loop_var: t_user

- name: create guides project
  k8s:
    state: present
    kind: Project
    api_version: project.openshift.io/v1
    definition:
      metadata:
        name: "guides"
        annotations:
          openshift.io/description: ""
          openshift.io/display-name: "Quarkus Workshop Guides"

- name: install guides
  include_tasks: install-guides.yaml
  vars:
    guide: "{{ item }}"
  loop: "{{ modules }}"

- name: install username distribution
  include_tasks: install-username-distribution.yaml

- name: search for rhsso
  k8s_facts:
    kind: DeploymentConfig
    name: rhsso
    namespace: rhsso
  register: r_rhsso_dc

- name: install rhsso
  when: r_rhsso_dc.resources | list | length == 0
  include_tasks: install-rhsso.yaml


# Install CRW via operator
- name: see if codeready is installed
  k8s_facts:
    api_version: org.eclipse.che/v1
    kind: CheCluster
    name: codeready-workspaces
    namespace: codeready
  register: r_codeready_cr

- name: show codeready cr
  debug:
    msg: "existing codeready project: {{ r_codeready_cr }}"

- name: install codeready
  when: r_codeready_cr.resources | list | length == 0
  include_tasks: install-codeready.yaml

  # Install  AMQ Streams for all workspaces
- name: Look for amq subscription
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: amq-streams
    namespace: openshift-operators
  register: r_amq_sub

- name: show existing amq sub
  debug:
    msg: "existing amq sub: {{ r_amq_sub }}"

- name: Create OpenShift Objects for Kafka (amq streams)
  when: r_amq_sub.resources | list | length == 0
  include_tasks: install-amqstreams.yaml

  # Install  Jaeger for all workspaces
- name: Look for jaeger subscription
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: jaeger-product
    namespace: openshift-operators
  register: r_jaeger_sub

- name: show existing jaeger sub
  debug:
    msg: "existing jaeger sub: {{ r_jaeger_sub }}"

- name: Create OpenShift Objects for Jaeger
  when: r_jaeger_sub.resources | list | length == 0
  include_tasks: install-jaeger.yaml

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
