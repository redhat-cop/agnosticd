---
- name: "Creating temp directory for operator repo"
  tempfile: 
    state: directory
    suffix: mig-operator
  register: repodir

- name: "Checking out operator repo"
  git:
    repo: "{{ mig_operator_repo }}"
    dest: "{{ repodir.path }}"
    
- name: "Applying variables"
  replace:
    path: "{{ repodir.path }}/controller.yml"
    regexp: "{{ item.pattern }}"
    replace: "{{ item.replace }}"
  loop:
    - { pattern: "migration_velero:.*", replace: "migration_velero: {{ mig_operator_deploy_velero }}" }
    - { pattern: "migration_controller:.*", replace: "migration_controller: {{ mig_operator_deploy_controller }}" }
    - { pattern: "migration_ui:.*", replace: "migration_ui: {{ mig_operator_deploy_ui }}" }
  when: not migration_workload_destroy

- name: "Applying mig cluster api endpoint"
  replace:
    path: "{{ repodir.path }}/controller.yml"
    regexp: "{{ item.pattern }}"
    replace: "{{ item.replace }}"
  loop:
    - { pattern: "#mig_ui_cluster_api_endpoint:.*", replace: "mig_ui_cluster_api_endpoint: {{ mig_operator_ui_cluster_api_endpoint }}" }
  when: not migration_workload_destroy and mig_operator_ui_cluster_api_endpoint is defined

- name: "Add memory limits to controller"
  lineinfile:
    path: "{{ repodir.path }}/controller.yml"
    insertafter: "migration_ui"
    line: "  {{ item.key }}: {{ item.val }}"
    state: present
  loop:
    - { key: mig_controller_limits_memory, val: "{{ mig_controller_limits_memory }}" }
    - { key: mig_controller_requests_memory, val: "{{ mig_controller_requests_memory }}" }
  when: not migration_workload_destroy