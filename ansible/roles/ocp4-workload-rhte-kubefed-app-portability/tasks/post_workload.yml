---
# Implement your Post Workload deployment tasks here
- name: Setting up custom facts
  set_fact:
    mongo_cluster1_route_hostname: "mongo-cluster1.{{ cluster1_wildcard_domain }}"
    mongo_cluster2_route_hostname: "mongo-cluster2.{{ cluster2_wildcard_domain }}"
    mongo_cluster3_route_hostname: "mongo-cluster3.{{ cluster3_wildcard_domain }}"

- name: Ensure Lab's Git Repository is Cloned
  git:
    repo: "{{ _lab_git_repo }}"
    dest: "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}"
    version: "{{ _lab_git_repo_branch }}"

- name: Ensure Directory for Storing TLS Required Files Exists
  file:
    path: "/home/{{ ansible_user }}/mongo_tls"
    state: directory

- name: Ensure TLS Required Files are Copied
  copy:
    src: "{{ item }}"
    dest: "/home/{{ ansible_user }}/mongo_tls"
  loop:
    - ./files/ca-config.json
    - ./files/ca-csr.json
    - ./files/mongodb-csr.json

- name: Generate CA
  shell: "cfssl gencert -initca ca-csr.json | cfssljson -bare ca"
  args:
    chdir: "/home/{{ ansible_user }}/mongo_tls"

- name: Set MongoDB Certificate SAN
  set_fact:
    mongo_certificate_san: "mongo,mongo.mongo,mongo.mongo.svc.cluster.local,localhost,localhost.localdomain,127.0.0.1,{{ mongo_cluster1_route_hostname }},{{ mongo_cluster2_route_hostname }},{{ mongo_cluster3_route_hostname }}"

- name: Generate the MongoDB Certificates
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname={{ mongo_certificate_san }} -profile=kubernetes mongodb-csr.json | cfssljson -bare mongodb"
  args:
    chdir: "/home/{{ ansible_user }}/mongo_tls"

- name: Combine MongoDB Private and Public keys
  shell: "cat mongodb-key.pem mongodb.pem > mongo.pem"
  args:
    chdir: "/home/{{ ansible_user }}/mongo_tls"

- name: Ensure Unneeded TLS files are Removed
  file:
    path: "/home/{{ ansible_user }}/mongo_tls/{{ item }}"
    state: absent
  loop:
    - ca-config.json
    - ca.csr
    - ca-csr.json
    - ca-key.pem
    - mongodb.csr
    - mongodb-csr.json
    - mongodb-key.pem
    - mongodb.pem

- name: Ensure Cluster Names are Updated in Lab's Yaml Files
  replace:
    path: "{{ item }}"
    regexp: feddemocl
    replace: cluster
  loop:
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/mongo-yaml/01-mongo-federated-secret.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/mongo-yaml/02-mongo-federated-service.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/mongo-yaml/03-mongo-federated-pvc.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/mongo-yaml/04-mongo-federated-deployment-rs.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/pacman-yaml/01-mongo-federated-secret.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/pacman-yaml/02-pacman-federated-service.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/pacman-yaml/03-pacman-federated-ingress.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/pacman-yaml/04-pacman-federated-service-account.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/pacman-yaml/05-pacman-federated-cluster-role.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/pacman-yaml/06-pacman-federated-cluster-role-binding.yaml"
    - "/home/{{ ansible_user }}/{{ _lab_git_clone_dir_name }}/labs/pacman-yaml/07-pacman-federated-deployment-rs.yaml"

# Leave this as the last task in the playbook.
- name: post_workload tasks complete
  debug:
    msg: "Post-Workload Tasks completed successfully."
  when: not silent|bool