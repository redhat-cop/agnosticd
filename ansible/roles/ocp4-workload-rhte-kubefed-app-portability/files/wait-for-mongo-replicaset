#!/bin/bash

READY=0
WAIT=0
MAX_WAIT=300
CLUSTER="$1"
NAMESPACE="$2"
HEALTHY_MEMBERS="$3"
echo "Checking if MongoDB Replicaset from namespace ${NAMESPACE} on cluster ${CLUSTER} is configured"
while [ $READY -eq 0 ]
do
  MONGO_POD=$(oc --context=${CLUSTER} -n ${NAMESPACE} get pod --selector="name=mongo" --output=jsonpath='{.items..metadata.name}')
  REPLICASET_STATUS=$(oc --context=${CLUSTER} -n ${NAMESPACE} exec ${MONGO_POD} -- bash -c 'mongo --norc --quiet --username=admin --password=$MONGODB_ADMIN_PASSWORD --host localhost admin --tls --tlsCAFile /opt/mongo-ssl/ca.pem --eval "JSON.stringify(rs.status())"')
  REPLICASET_HEALTHY_MEMBERS=$(echo $REPLICASET_STATUS | jq -n '[inputs | .members[].health] | reduce .[] as $num (0; .+$num)' 2>/dev/null)
  if [ "0$HEALTHY_MEMBERS" == "0$REPLICASET_HEALTHY_MEMBERS" ]
  then
    echo "MongoDB Replicaset is ready"
    READY=1
  else
    echo "MongoDB Replicaset is not ready yet, waiting... [$WAIT/$MAX_WAIT]"
    sleep 10
    WAIT=$(expr $WAIT + 10)
  fi
  if [ $WAIT -ge $MAX_WAIT ]
  then
    echo "Timeout while waiting MongoDB replicaset from namespace ${NAMESPACE} on cluster ${CLUSTER} to be configured"
    exit 1
  fi
done

echo ""
echo "MongoDB ReplicaSet Status:"
echo "--------------------------"
echo "Primary Member:"
echo $REPLICASET_STATUS | jq '.members[] | select(.state | contains(1)).name'
echo "Secondary Members:"
echo $REPLICASET_STATUS | jq '.members[] | select(.state | contains(2)).name'
