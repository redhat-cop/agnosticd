---
- name: Copying templates to bastion
  synchronize:
    src: "{{ role_path }}/files"
    dest: /tmp/ceph-templates
  
- name: "{{ ceph_workload_title }} common resources for Ceph"
  shell: "oc apply -f /tmp/ceph-templates/files/{{ item }}"
  loop:
    - "common.yaml"
    - "rbd/"
    - "cephfs/"
  when: not ceph_workload_destroy
  tags:
  - ceph_common_dep

- name: "{{ ceph_workload_title }} common resources for Ceph"
  shell: "oc delete -f /tmp/ceph-templates/files/{{ item }}"
  loop:
    - "rbd/"
    - "cephfs/"
    - "common.yaml"
  ignore_errors: true
  when: ceph_workload_destroy

- name: "{{ ceph_workload_title }} common resources for Ceph"
  k8s:
    state: "{{ ceph_workload_state }}"
    definition: "{{ lookup('template', item) }}"
  loop:
    - "operator-openshift-with-csi.yaml.j2"
    - "cluster.yaml.j2"
  tags:
  - ceph_cluster_dep
  - ceph_operator_dep

- name: "Waiting for MON pods to come up..."
  shell: "oc get pods -o json --selector=app=rook-ceph-mon -n rook-ceph"
  register: mon_pods
  until: mon_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  retries: 10
  delay: 12
  when: not ceph_workload_destroy

- name: "Waiting for OSD pods to come up..."
  shell: "oc get pods -o json --selector=app=rook-ceph-osd -n rook-ceph"
  register: osd_pods
  until: osd_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  retries: 10
  delay: 12
  when: not ceph_workload_destroy