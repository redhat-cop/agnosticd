---
- name: Step 001.1 Deploy Infrastructure
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - "{{ANSIBLE_REPO_PATH}}/configs/{{ env_type }}/env_vars.yml"
    - "{{ANSIBLE_REPO_PATH}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - step001.1
    - deploy_infrastructure
  tasks:
    # for SSH first access to ec2 instances we always use the key defined in the CloudFormation
    # template by the name {{key_name}}
    # This variable is used when generation ssh config.
    # - name: Get ssh pub key
    #   tags:
    #     - must
    #   set_fact:
    #     ssh_key: "~/.ssh/{{key_name}}.pem"

    - name: Run infra-ec2-template-generate Role
      import_role:
        name: "{{ ANSIBLE_REPO_PATH }}/roles/infra-ec2-template-generate"

    - name: Run infra-ec2-template-create Role
      import_role:
        name: "{{ ANSIBLE_REPO_PATH }}/roles/infra-ec2-template-create"
      vars:
        aws_region_loop: "{{aws_region}}"

    - name: Run infra-ec2-template-create Role into FallBack region
      include_role:
        name: "{{ ANSIBLE_REPO_PATH }}/roles/infra-ec2-template-create"
      vars:
        aws_region_loop: "{{item}}"
      with_items: "{{ fallback_regions }}"
      when:
        - fallback_regions is defined
        - cloudformation_out is failed

    - name: report Cloudformation error
      fail:
        msg: "FAIL {{ project_tag }} Create Cloudformation"
      when: not cloudformation_out is succeeded
      tags:
        - provision_cf_template

- name: Step 001.2 Create Inventory and SSH config setup
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - step001.2
    - create_inventory
    - create_ssh_config
  tasks:
    - name: Run infra-ec2-create-inventory Role
      import_role:
        name: "{{ ANSIBLE_REPO_PATH }}/roles/infra-ec2-create-inventory"
    - name: Run Common SSH Config Generator Role
      import_role:
        name: "{{ANSIBLE_REPO_PATH}}/roles/infra-common-ssh-config-generate"

- name: Step 001.3 Configure Linux Hosts and Wait for Connection
  hosts:
    - all:!windows:!network
  vars_files:
    - "{{ANSIBLE_REPO_PATH}}/configs/{{ env_type }}/env_vars.yml"
    - "{{ANSIBLE_REPO_PATH}}/configs/{{ env_type }}/env_secret_vars.yml"
  gather_facts: false
  any_errors_fatal: true
  ignore_errors: false
  become: true
  tags:
    - step001
    - step001.3
    - wait_ssh
    - set_hostname
  tasks:
    - name: set facts for remote access
      tags:
        - create_inventory
      set_fact:
        aws_region_final: "{{hostvars['localhost'].aws_region_final}}"
        ansible_ssh_extra_args: "{{ ansible_ssh_extra_args|d() }} -F {{ ANSIBLE_REPO_PATH }}/workdir/{{ env_type }}_{{ guid }}_ssh_conf"

    - name: Run infra-ec2-wait_for_linux_hosts Role
      import_role:
        name: "{{ ANSIBLE_REPO_PATH }}/roles/infra-ec2-wait_for_linux_hosts"
    - name: Run infra-ec2-linux-set-hostname Role
      import_role:
        name: "{{ ANSIBLE_REPO_PATH }}/roles/infra-ec2-linux-set-hostname"



- name: Step 001.4 Configure Windows Hosts and Wait for Connection
  gather_facts: false
  hosts:
    - windows
  vars_files:
    - "{{ANSIBLE_REPO_PATH}}/configs/{{ env_type }}/env_vars.yml"
    - "{{ANSIBLE_REPO_PATH}}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - step001.4
  tasks:
    - name: set facts for remote access
      tags:
        - create_inventory
      set_fact:
        ansible_become: false
        ansible_connection: winrm
        ansible_host: "{{ public_dns_name }}"
        ansible_password: "{{ windows_password | default(hostvars['localhost'].generated_windows_password) }}"
        ansible_port: 5986
        ansible_user: Administrator
        ansible_ssh_user: Administrator
        ansible_winrm_server_cert_validation: ignore
        aws_region_final: "{{hostvars['localhost'].aws_region_final}}"

    - name: Run infra-ec2-wait_for_linux_hosts Role
      import_role:
        name: "{{ ANSIBLE_REPO_PATH }}/roles/infra-ec2-wait_for_windows_hosts"
