---
- name: Install all Binaries
  become: true
  block:
  - name: Check studentvm_ocp4_oc_version variable
    assert:
      that:
      - studentvm_ocp4_oc_version is defined
      - studentvm_ocp4_oc_version | string | length  >= 3
      fail_msg: "studentvm_ocp4_oc_version must be defined and contain at least 3 characters."

  - name: OpenShift CLI
    when: studentvm_ocp4_oc_install | bool
    block:
    # 4.1 .. 4.99 -> latest stable client for that major version
    - name: Download latest stable OpenShift CLI
      when:
      - studentvm_ocp4_oc_version | string | length <= 4
      unarchive:
        src: >-
          {{ ocp4_installer_root_url }}/ocp/stable-{{
          studentvm_ocp4_oc_version }}/openshift-client-linux.tar.gz
        remote_src: true
        dest: "{{ studentvm_ocp4_bin_path }}"
        owner: root
        group: root
        mode: 0775
      args:
        creates: "{{ studentvm_ocp4_bin_path }}/oc"

    # 4.1.1 .. 4.99.99 -> specific client version
    - name: Download specific OpenShift CLI version
      when:
      - studentvm_ocp4_oc_install | bool
      - studentvm_ocp4_oc_version | string | length > 4
      unarchive:
        src: >-
          {{ ocp4_installer_root_url }}/ocp/{{
          studentvm_ocp4_oc_version }}/openshift-client-linux-{{
          studentvm_ocp4_oc_version }}.tar.gz
        remote_src: true
        dest: "{{ studentvm_ocp4_bin_path }}"
        owner: root
        group: root
        mode: 0775
      args:
        creates: "{{ studentvm_ocp4_bin_path }}/oc"

    - name: Bash Completions - oc
      blockinfile:
        dest: "~{{ studentvm_ocp4_user_name }}/.bashrc"
        insertafter: EOF
        marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK (oc) -->"
        block: |
          source <(oc completion bash)

  - name: OpenShift Do (odo)
    when: studentvm_ocp4_odo_install | bool
    block:
    - name: Download OpenShift Do (odo)
      get_url:
        url: >-
          {{ ocp4_installer_root_url }}/odo/{{ studentvm_ocp4_odo_version }}/odo-linux-amd64
        dest: "{{ studentvm_ocp4_bin_path }}/odo"
        owner: root
        group: root
        mode: 0775

    - name: Bash Completions - odo
      blockinfile:
        dest: "~{{ studentvm_ocp4_user_name }}/.bashrc"
        insertafter: EOF
        marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK (odo) -->"
        block: |
          complete -C {{ studentvm_ocp4_bin_path }}/odo odo

  - name: Helm
    when: studentvm_ocp4_helm_install | bool
    block:
    - name: Download OpenShift Helm
      get_url:
        url: >-
          {{ ocp4_installer_root_url }}/helm/{{
          studentvm_ocp4_helm_version }}/helm-linux-amd64
        dest: "{{ studentvm_ocp4_bin_path }}/helm"
        owner: root
        group: root
        mode: 0775

    - name: Bash Completions - helm
      shell: "{{ studentvm_ocp4_bin_path }}/helm completion bash >/etc/bash_completion.d/helm"
      args:
        creates: "/etc/bash_completion.d/helm"

  - name: OpenShift Pipelines (tkn)
    when: studentvm_ocp4_tkn_install | bool
    block:
    - name: Download OpenShift Pipelines CLI (tkn)
      unarchive:
        src: >-
          {{ ocp4_installer_root_url }}/pipeline/{{
          studentvm_ocp4_tkn_version }}/tkn-linux-amd64-{{ studentvm_ocp4_tkn_version }}.tar.gz
        remote_src: true
        dest: "{{ studentvm_ocp4_bin_path }}"
        owner: root
        group: root
        mode: 0775
      args:
        creates: "{{ studentvm_ocp4_bin_path }}/tkn"

    - name: Bash Completions - tkn
      shell: "{{ studentvm_ocp4_bin_path }}/tkn completion bash >/etc/bash_completion.d/tkn"
      args:
        creates: "/etc/bash_completion.d/tkn"

  - name: OpenShift Serverless (kn)
    when: studentvm_ocp4_kn_install | bool
    block:
    - name: Download OpenShift Serverless CLI (kn)
      unarchive:
        src: >-
          {{ ocp4_installer_root_url }}/serverless/{{
          studentvm_ocp4_kn_version }}/kn-linux-amd64-{{ studentvm_ocp4_kn_version }}.tar.gz
        remote_src: true
        dest: "{{ studentvm_ocp4_bin_path }}"
        owner: root
        group: root
        mode: 0775
      args:
        creates: "{{ studentvm_ocp4_bin_path }}/kn"

    - name: Bash Completions - kn
      shell: "{{ studentvm_ocp4_bin_path }}/kn completion bash >/etc/bash_completion.d/kn"
      args:
        creates: "/etc/bash_completion.d/kn"

  - name: Download OpenShift GitOps tool (kam)
    when: studentvm_ocp4_kam_install | bool
    unarchive:
      src: >-
        https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/kam/{{
        studentvm_ocp4_kam_version }}/kam-linux-amd64.tar.gz
      remote_src: true
      dest: "{{ studentvm_ocp4_bin_path }}"
      owner: root
      group: root
      mode: 0775
    args:
      creates: "{{ studentvm_ocp4_bin_path }}/kam"

  - name: Istioctl
    when: studentvm_ocp4_istioctl_install | bool
    block:
    - name: Download Istio CLI (istioctl)
      unarchive:
        src: >-
          https://github.com/istio/istio/releases/download/{{
          studentvm_ocp4_istioctl_version }}/istioctl-{{ studentvm_ocp4_istioctl_version }}-linux.tar.gz
        dest: "{{ studentvm_ocp4_bin_path }}"
        remote_src: true
        owner: root
        group: root
        mode: 0775
      args:
        creates: "{{ studentvm_ocp4_bin_path }}/istioctl"

  - name: S2I
    when: studentvm_ocp4_s2i_install | bool
    block:
    - name: Download S2I
      unarchive:
        src: "{{ studentvm_ocp4_s2i_url }}"
        remote_src: true
        dest: "{{ studentvm_ocp4_bin_path }}"
        owner: root
        group: root
        mode: 0755
        extra_opts:
        - --strip=1
      args:
        creates: "{{ studentvm_ocp4_bin_path }}/s2i"

    - name: Bash Completions - s2i
      shell: "{{ studentvm_ocp4_bin_path }}/s2i completion bash >/etc/bash_completion.d/s2i"
      args:
        creates: "/etc/bash_completion.d/s2i"

  - name: Download Operator Registry Tool (opm)
    when: studentvm_ocp4_opm_install | bool
    get_url:
      url: >-
        https://github.com/operator-framework/operator-registry/releases/download/{{
        studentvm_ocp4_opm_version }}/linux-amd64-opm
      dest: "{{ studentvm_ocp4_bin_path }}/opm"
      owner: root
      group: root
      mode: 0775

  - name: Download kubeseal
    when: studentvm_ocp4_kubeseal_install | bool
    get_url:
      url: >-
        https://github.com/bitnami-labs/sealed-secrets/releases/download/{{
        studentvm_ocp4_kubeseal_version }}/kubeseal-linux-amd64
      dest: "{{ studentvm_ocp4_bin_path }}/kubeseal"
      owner: root
      group: root
      mode: 0775

  - name: kustomize
    when: studentvm_ocp4_kustomize_install | bool
    block:
    - name: Download kustomize
      unarchive:
        src: >-
          https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F{{
          studentvm_ocp4_kustomize_version }}/kustomize_{{
          studentvm_ocp4_kustomize_version }}_linux_amd64.tar.gz
        remote_src: true
        dest: "{{ studentvm_ocp4_bin_path }}"
        owner: root
        group: root
        mode: 0755
      args:
        creates: "{{ studentvm_ocp4_bin_path }}/kustomize"

    - name: Bash Completions - kustomize
      blockinfile:
        dest: "~{{ studentvm_ocp4_user_name }}/.bashrc"
        insertafter: EOF
        marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK (kustomize) -->"
        block: |
          source <(kustomize completion bash)

  - name: Download ArgoCD tools
    when: studentvm_ocp4_argocd_install | bool
    block:
    - name: Download argocd
      get_url:
        url: >-
          https://github.com/argoproj/argo-cd/releases/download/{{
          studentvm_ocp4_argocd_version }}/argocd-linux-amd64
        dest: "{{ studentvm_ocp4_bin_path }}/argocd"
        owner: root
        group: root
        mode: 0775

    - name: Download argocd-util
      get_url:
        url: >-
          https://github.com/argoproj/argo-cd/releases/download/{{
          studentvm_ocp4_argocd_version }}/argocd-util-linux-amd64
        dest: "{{ studentvm_ocp4_bin_path }}/argocd-util"
        owner: root
        group: root
        mode: 0775

  - name: Download jq
    get_url:
      url: https://gpte-public.s3.amazonaws.com/jq-linux64
      dest: /usr/bin/jq
      owner: root
      group: root
      mode: 0775
