#vim: set ft=ansible:
---

# Determine User Running Ansible
- name: get the username running ansible
  become: false
  local_action: command whoami
  register: ansible_username
  
################################################################################
################################################################################
############ Step 000 Pre Infrastructure Deploy Tasks
################################################################################
################################################################################


#- name: Step 000 Pre Infrastructure Deploy Tasks
#  hosts: localhost
#  connection: local
#  gather_facts: False
#  vars_files:
#    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
#    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
#  tags:
#    - step000
#    - pre_infra_tasks
#  tasks:
#    - name: Check for "pre_infra tasks"
#      find:
#        paths: "{{ playbook_dir }}/configs/{{ env_type }}"
#        recurse: yes
#        file_type: file
#        patterns: ".*pre_infra.*"
#        use_regex: true
#      failed_when: no
#      changed_when: false
#      register: pre_infra_tasks
#
#    - include: "{{ item.path }}"
#      with_items: "{{ pre_infra_tasks.files }}"
#      when: pre_infra_tasks.matched|int != 0
#    - debug:
#        var: all
#    - debug:
#        var: bastions

#################################################################################
#################################################################################
############# Step 001 Deploy Infrastructure
#################################################################################
#################################################################################
- name: Step 001 Deploy Infrastructure
  #hosts: localhost
  #connection: local
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - deploy_infrastructure
  #tasks:
  local_action:
    - name: Deploy Infrastucture
      include: "{{ playbook_dir }}/cloud_providers/{{ cloud_provider }}_infrastructure_deployment.yml"
      tags:
        - infrastucture_deployment

    - name: Refresh cloud_provider cache
      command: "{{ playbook_dir }}/inventory/{{ cloud_provider }}.py --refresh-cache"
      tags:
        - refresh_inventory
      # Dont run task when its coming from tower as this is handled by tower
      when: 'ansible_username is not "awx"'
      
    - name: Refresh in-memory cloud_provider cache
      meta: refresh_inventory
      tags:
        - refresh_inventory
    - debug:
        var: hostvars
    - name: Store bastion hostname as a fact
      set_fact:
        bastion_hostname: "{{ hostvars[ groups[ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') ].0 ]['ec2_public_dns_name'] }}"

#TODO: May still want to generate an SSH config for later use
    - name: Configure local .ssh/config for bastion proxy use
      gather_facts: False
      include: "{{playbook_dir}}/cloud_providers/{{cloud_provider}}_ssh_config_setup.yml"
      when: 'deploy_local_ssh_config is defined and deploy_local_ssh_config == "true"'

#################################################################################
#################################################################################
############# Step 002 Post Infrastructure Deploy Tasks
#################################################################################
#################################################################################
- name: Step 002 Post Infrastructure Deploy Tasks
  hosts: all
  run_once: true
  connection: local
  gather_facts: False
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step002
    - post_infra_tasks
  tasks:
    - name: Check for "post_infra tasks"
      find:
        paths: "{{ playbook_dir }}/configs/{{ env_type }}"
        recurse: yes
        file_type: file
        patterns: ".*post_infra.*"
        use_regex: true
      failed_when: no
      changed_when: false
      register: post_infra_tasks

    - include: "{{ item.path }}"
      with_items: "{{ post_infra_tasks.files }}"
      when: post_infra_tasks.matched|int != 0

#################################################################################
#################################################################################
############## Step 003 Pre Software Deploy Tasks
#################################################################################
#################################################################################
- name: Step 003 Pre Software Deploy Tasks
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step003
    - pre_software_tasks
  tasks:
    - name: Check for "pre_software tasks"
      find:
        paths: "{{ playbook_dir }}/configs/{{ env_type }}"
        recurse: yes
        file_type: file
        patterns: ".*pre_software.*"
        use_regex: true
      failed_when: no
      changed_when: false
      register: pre_software_tasks

    - include: "{{ item.path }}"
      with_items: "{{ pre_software_tasks.files }}"
      when: pre_software_tasks.matched|int != 0

##################################################################################
##################################################################################
############## Step 004 Software Deploy Tasks
##################################################################################
##################################################################################

# Cloudformation template should tag all hosts with Project:{{ env_type }}-{{ guid }}
- name: Step 004 Deploy Software
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  become: yes
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - deploy_software
    - common_tasks
  roles:
    -  { role: common, when: "{{ install_common }}" }

- name: Configuring Bastion Hosts
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  become: yes
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  roles:
    -  { role: bastion, when: "{{ install_bastion }}" }
  tags:
    - step004
    - deploy_software
    - bastion_tasks

- include: "{{ playbook_dir }}/software_playbooks/{{ software_to_deploy }}.yml"
  tags:
    - deploy_software_playbook

################################################################################
################################################################################
############ Step 005 Post Software Deploy Tasks
################################################################################
################################################################################

- name: Step 005 Post Software Deploy Tasks
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step005
    - post_software_tasks
  tasks:
    - name: Check for "post_software tasks"
      find:
        paths: "{{playbook_dir}}/configs/{{ env_type }}"
        recurse: yes
        file_type: file
        patterns: ".*post_software.*tasks"
        use_regex: true
      failed_when: no
      changed_when: false
      register: post_software_tasks

    - include: "{{item.path}}"
      with_items: "{{post_software_tasks.files}}"
      when: post_software_tasks.matched|int != 0

# Include tasks (above) and include playbooks (below) don't work the same, by
# including the as a tasks file you cannot use "hosts" and execute plays
# When including as a playbook, you can list lplays and use "hosts"
# current issue is that "playbook" include does not allow using "with_items" and
# cannot be added dynamically - I'm sure this can be fixed
#
#
- include: "{{playbook_dir}}/configs/{{env_type}}//post_software.yml"
  tags:
    - step006

# - include: "{{playbook_dir}}/configs/{{env_type}}//post_software_playbook002.yml"
#   tags:
#     - step006
