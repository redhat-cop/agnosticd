- environment:
    OS_AUTH_URL: "{{ osp_auth_url }}"
    OS_USERNAME: "{{ guid }}-user"
    OS_PASSWORD: "{{ heat_user_password }}"
    OS_PROJECT_NAME: "{{ osp_project_name }}"
    OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
    OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"

  block:
    - name: Check if Heat stack already exists
      command: >-
        openstack stack show -f json base-stack-{{ guid }}
      register: r_show
      failed_when: false
      changed_when: false
      tags: heat

    - when: r_show.rc == 0
      block:

        - name: Update Heat stack from generated template
          command: >-
            openstack stack update -f json --wait
            -t {{ heat_master_template }}
            base-stack-{{ guid }}
          register: r_hot_out_update

    - when: r_show.rc != 0
      block:

        - name: Create Heat stack from generated template
          command: >-
            openstack stack create -f json --wait
            -t {{ heat_master_template }}
            base-stack-{{ guid }}
          register: r_hot_out_create

    - name: Grab outputs
      command: >-
        openstack stack show -f json base-stack-{{ guid }}
      changed_when: false
      register: r_hot_outputs

    - debug:
        var: r_hot_outputs
        verbosity: 3

    - set_fact:
        hot_outputs: "{{ (r_hot_outputs.stdout | from_json) }}"
    
    - debug:
        var: hot_outputs
        verbosity: 3

    - name: Save infra_key content
      set_fact:
        infra_private_key_content: "{{ hot_outputs | json_query(query) }}"
      vars:
        query: "outputs[?@.output_key=='{{ guid }}-infra_key'].output_value|[0]"

    - name: Set infra_ssh_key path
      set_fact:
        infra_ssh_key: "{{ output_dir }}/{{ guid }}_infra_ssh_key.pem"

    - name: Copy infra_key content to output_dir
      copy:
        dest: "{{ infra_ssh_key }}"
        content: "{{ infra_private_key_content }}"
        mode: 0600
