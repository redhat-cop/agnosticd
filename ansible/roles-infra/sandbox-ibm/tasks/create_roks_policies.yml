---
- name: Create cloud object storage policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - Cloud object storage policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Administrator"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "cloud-object-storage"
  register: r_cos_policy
  until: r_cos_policy.status == 201
  retries: 3
  delay: 10

- name: Create container registry policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - Container registry policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Administrator"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "container-registry"
  register: r_registry_policy
  until: r_registry_policy.status == 201
  retries: 3
  delay: 10

- name: Create containers-kubernetes policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - Containers-kubernetes policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Administrator"
        - role_id: "crn:v1:bluemix:public:iam::::serviceRole:Writer"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "containers-kubernetes"
  register: r_kube_policy
  until: r_kube_policy.status == 201
  retries: 3
  delay: 10

- name: Create is policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - IS policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Administrator"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "is"
  register: r_is_policy
  until: r_is_policy.status == 201
  retries: 3
  delay: 10

- name: Create iam-identity policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - IAM-identity policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam-identity::::serviceRole:ServiceIdCreator"
        - role_id: "crn:v1:bluemix:public:iam-identity::::serviceRole:UserApiKeyCreator"
        - role_id: "crn:v1:bluemix:public:iam::::role:Editor"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "iam-identity"
  register: r_iam_policy
  until: r_iam_policy.status == 201
  retries: 3
  delay: 10

- name: Create cloudcerts policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - Cloudcerts policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Editor"
        - role_id: "crn:v1:bluemix:public:iam::::serviceRole:Manager"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "cloudcerts"
  register: r_cloudcerts_policy
  until: r_cloudcerts_policy.status == 201
  retries: 3
  delay: 10

- name: Create global catalog policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - Global catalog policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Viewer"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "globalcatalog"
  register: r_catalog_policy
  until: r_catalog_policy.status == 201
  retries: 3
  delay: 10

- name: Create kms policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - KMS policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Administrator"
        - role_id: "crn:v1:bluemix:public:iam::::serviceRole:Manager"
        - role_id: "crn:v1:bluemix:public:kms::::serviceRole:KeyPurge"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "kms"
  register: r_kms_policy
  until: r_kms_policy.status == 201
  retries: 3
  delay: 10

- name: Create default resource group policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - default resource group policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Viewer"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "resourceType"
            operator: "stringEquals"
            value: "resource-group"
          - name: "resource"
            operator: "stringEquals"
            value: "{{ sandbox_default_resource_group }}"
  register: r_rg_policy
  until: r_rg_policy.status == 201
  retries: 3
  delay: 10

- name: Create schematics policy
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies"
    method: POST
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 201
    body_format: json
    body:
      type: "access"
      description: "RHOIC - schematics policy"
      subjects:
        - attributes:
          - name: "access_group_id"
            value: "{{ sandbox_rhoic_access_group }}"
      roles:
        - role_id: "crn:v1:bluemix:public:iam::::role:Administrator"
        - role_id: "crn:v1:bluemix:public:iam::::serviceRole:Manager"
      resources:
        - attributes:
          - name: "accountId"
            operator: "stringEquals"
            value: "{{ sandbox_account_id }}"
          - name: "serviceName"
            operator: "stringEquals"
            value: "schematics"
  register: r_rg_policy
  until: r_rg_policy.status == 201
  retries: 3
  delay: 10