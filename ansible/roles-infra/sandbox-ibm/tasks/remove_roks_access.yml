---
- name: Get a list of access groups
  uri:
    url: "https://iam.cloud.ibm.com/v2/groups?account_id={{ sandbox_account_id }}"
    headers:
      Authorization: Bearer {{ auth_token }}
  register: r_sandbox_access_groups

- name: Set access group ID
  set_fact: 
    sandbox_roks_access_group: "{{ r_sandbox_access_groups['json']['groups'] | json_query(ag_query) }}"
  vars:
    ag_query: "[?name=='sandbox_ibm_roks_ag'].id | [0]"

- name: Get a list of policies associated to access group
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies?account_id={{ sandbox_account_id }}"
    headers:
      Authorization: Bearer {{ auth_token }}
    body_format: json
    body:
      access_group_id: "{{ sandbox_roks_access_group }}"
  register: r_sandbox_roks_policies

- name: Delete ROKS access policies
  uri:
    url: "https://iam.cloud.ibm.com/v1/policies/{{ item }}"
    method: DELETE
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 204
  loop: "{{ r_sandbox_roks_policies.json | to_json | from_json | json_query(_policy_query) }}"
  vars:
    _policy_query: "policies[?contains(keys(@), 'description') && starts_with(description, 'ROKS')].id"

- name: Delete ROKS access group
  when: sandbox_roks_access_group | length > 0
  uri:
    url: "https://iam.cloud.ibm.com/v2/groups/{{ sandbox_roks_access_group }}"
    method: DELETE
    headers:
      Authorization: Bearer {{ auth_token }}
    status_code: 204
