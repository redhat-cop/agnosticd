---
- name: Get floating ip for instance
  ibm.cloudcollection.ibm_is_floating_ips_info:
    name: "{{ instance.name }}-fip"
    resource_group: "{{ r_ibmcloud_resource_group_id }}"
  register: r_ibmcloud_floating_ips

- name: Initialize tags_dict variable
  set_fact:
    tags_dict: {}

- name: Populate dict
  set_fact:
    tags_dict: "{{ tags_dict | combine( {item.split(':')[0]: item.split(':')[1]} ) }}"
  with_items:
    - "{{ instance.tags }}"


- name: Create inventory (add_host)
  loop: "{{ r_ibmcloud_instances.resource.instances | list }}"
  loop_control:
    loop_var: instance
  ansible.builtin.add_host:
    name: "{{ instance.name }}"
    shortname: "{{ instance.name }}"
    ansible_user: "{{ remote_user }}"
    ansible_ssh_host: "{{ instance.name }}"
    ssh_port: "22"
    private_ip_address: "{{ instance.primary_network_interface[0].primary_ip[0].address }}"
    public_ip_address: "{{ r_ibmcloud_floating_ips.resource.floating_ips[0]['address'] }}"
    groups: "{{ tags_dict['ansiblegroup'] | default(omit) }}"
    bastion: "{{ local_bastion | default('') }}"
    bastion_ssh_port: "22"
  when: instance.annotations.managed | default(true) | bool
