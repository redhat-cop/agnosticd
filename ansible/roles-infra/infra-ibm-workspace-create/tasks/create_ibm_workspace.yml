---
- name: Get a list of workspaces
  command: >
    ibmcloud schematics workspace list -o json
  register: r_workspaces

- name: Check if workspace already exists (default to false)
  set_fact:
    workspace_exists: false

- name: Check if workspace already exists
  when: (r_workspaces.stdout | from_json).workspaces | json_query(workspace_query)
  set_fact:
    workspace_exists: true
  vars:
    workspace_query: >
      [?name=='{{ guid }}-workspace']

# Note when we create this workspace even with terraform_version set to 0.12 the workspace is still being created as 0.11 which invalidates our Terraform template to being uploaded
- name: Create the workspace
  when: not workspace_exists
  command: >
    ibmcloud schematics workspace new --file {{ ibm_cloud_workspace_config }} -o json
  register: r_new_workspace

- debug:
    var: r_new_workspace.stdout | from_json

# We need to set the new workspace_id (will be used while updating workspace, apply or destroy resources), if you have a better aproach go for it.
- name: Get a list of workspaces
  command: >
    ibmcloud schematics workspace list -o json
  register: r_workspaces_new

- name: Set the workspace ID
  set_fact:
    workspace_id: (r_workspaces_new.stdout | from_json).workspaces | json_query(workspace_id_query)
  vars:
    workspace_id_query: >
      [?name=='{{ guid }}-workspace'].id|[0]

- name: Set the workspace ID and update if it exists
  when: workspace_exists
  block:
  - name: Set fact for workspace_id
    set_fact:
      workspace_id: (r_workspaces.stdout | from_json).workspaces | json_query(workspace_id_query)
    vars:
      workspace_id_query: >
        [?name=='{{ guid }}-workspace'].id|[0]
  
  - name: Update the existing workspace
    command: >
      ibmcloud schematics workspace update --id {{ workspace_id }} --file {{ ibm_cloud_workspace_config }} -o json
    register: r_existing_workspace
