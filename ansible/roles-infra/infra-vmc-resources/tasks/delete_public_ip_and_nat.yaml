- name: Check if Public IP exists
  uri:
    url: "{{ nsxt_proxy_url }}/cloud-service/api/v1/infra/public-ips/{{ env_type }}-{{ guid }}-{{ item.guest_name }}"
    method: GET
    status_code: [200,404,500]
    headers:
      csp-auth-token: "{{ _nsxt_token }}"
    return_content: yes
  register: _public_ip_exists

- name: Get Lab admins IPs
  uri:
    url: "{{ nsxt_proxy_url }}/policy/api/v1/infra/domains/mgw/groups/Lab_Public_IPS"
    method: GET
    headers:
      csp-auth-token: "{{ _nsxt_token }}"
    return_content: yes
  register: _lab_public_ips

- name: Remove a NAT configuration
  when: _public_ip_exists.status == 200
  uri:
    url: "{{ nsxt_proxy_url }}/policy/api/v1/infra/tier-1s/cgw/nat/USER/nat-rules/nat-{{ env_type }}-{{ guid }}-{{ item.guest_name }}"
    method: DELETE
    headers:
      csp-auth-token: "{{ _nsxt_token }}"
    body_format: json
    return_content: yes
  register: _nat_request

- name: Remove associated Public IP
  when: _public_ip_exists.status == 200
  uri:
    url: "{{ nsxt_proxy_url }}/cloud-service/api/v1/infra/public-ips/{{ env_type }}-{{ guid }}-{{ item.guest_name }}"
    method: DELETE
    headers:
      csp-auth-token: "{{ _nsxt_token }}"
    body_format: json
    body:
      display_name: "{{ env_type }}-{{ guid }}-{{ item.guest_name }}"
    return_content: yes
  register: _public_ip_request

- name: Set the IP in a variable
  set_fact:
    _vm_public_ip: "{{ _public_ip_request.json.ip | default(_public_ip_exists.json.ip)}}"

- name: Set a new variable removing the IP to the lab public ips 
  set_fact: 
    _lab_public_ips_new: "{{ _lab_public_ips.json.expression.0.ip_addresses|default([])|difference([_vm_public_ip]) }}"

- name: Update list of IPs for Public Admin IPs
  uri:
    url: "{{ nsxt_proxy_url }}/policy/api/v1/infra/domains/mgw/groups/Lab_Public_IPS"
    method: PATCH
    headers:
      csp-auth-token: "{{ _nsxt_token }}"
    body_format: json
    body:
      display_name: "Lab Public IPS"
      group_type: ["IPAddress"]
      expression:
      - resource_type: "IPAddressExpression"
        ip_addresses: "{{ _lab_public_ips_new }}"
    return_content: yes
