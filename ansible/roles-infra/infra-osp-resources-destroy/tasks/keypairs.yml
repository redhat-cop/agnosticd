---
- environment:
    OS_AUTH_URL: "{{ osp_auth_url }}"
    OS_USERNAME: "{{ osp_auth_username }}"
    OS_PASSWORD: "{{ osp_auth_password }}"
    OS_PROJECT_NAME: "{{ osp_project_name }}"
    OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
    OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"

  block:
  - name: Get user info
    os_user_facts:
      name: "{{ _keypair_owner }}"
      domain: default
    register: r_osp_user_info

  - when: r_osp_user_info.ansible_facts.openstack_users | length > 0
    block:
    - name: Get UUID of user
      set_fact:
        osp_user_uuid: "{{ r_osp_user_info | json_query(uuid_query) }}"
      vars:
        uuid_query: ansible_facts.openstack_users[].id|[0]

    # These can't use the os_ module since impersonating the user is only
    # available with the nova client here.
    - name: Get keypairs for user
      shell: nova keypair-list --user {{ osp_user_uuid }} | grep ssh | awk '{ print $2 }'
      register: r_user_keypairs

    - name: Delete user keypair
      when: r_user_keypairs.stdout_lines | length > 0
      shell: nova keypair-delete --user {{ osp_user_uuid }} {{ item }}
      loop: "{{ r_user_keypairs.stdout_lines }}"

    - name: Delete user
      os_user:
        state: absent
        name: "{{ _keypair_owner }}"
