---
###########################################################################
# CAUTION
###########################################################################
# This file is used for several cloud provider. Keep in mind when you
# update it and make sure it works for all of them using this common conf.
###########################################################################


- name: Store bastion hostname as a fact
  set_fact:
    bastion_hostname: "{{groups['bastions'].0 }}"
    # This is where the ssh_config file will be created, this file is used to
    # define the communication method to all the hosts in the deployment
    ansible_ssh_config: "{{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"
    ansible_known_host: "{{output_dir}}/{{ env_type }}_{{ guid }}_ssh_known_hosts"
    remote_user: "{{ remote_user_map[cloud_provider] }}"

- name: Delete dedicated known_host if it exists (new deployment)
  file:
    dest: "{{ansible_known_host}}"
    state: absent

- name: delete local ssh config, start fresh
  file:
    dest: "{{ ansible_ssh_config }}"
    state: absent
  when: secondary_stack is not defined

- name: Create empty local ssh config
  file:
    dest: "{{ ansible_ssh_config }}"
    state: touch
  when: secondary_stack is not defined

- name: Add bastion proxy config to workdir ssh config file
  blockinfile:
    dest: "{{ ansible_ssh_config }}"
    marker: "##### {mark} ADDED BASTION PROXY HOST {{ bastion_hostname }} {{ env_type }}-{{ guid }} ######"
    content: |
        Host {{ bastion_hostname }} {{ hostvars[bastion_hostname].shortname |d('')}}
          Hostname {{ hostvars[bastion_hostname].public_dns_name }}
          IdentityFile {{ ssh_key | default(infra_ssh_key) | default(ansible_ssh_private_key_file) | default(default_key_name)}}
          IdentitiesOnly yes
          User {{ remote_user }}
          ControlMaster auto
          ControlPath /tmp/{{ guid }}-%r-%h-%p
          ControlPersist 5m
          StrictHostKeyChecking no
          ConnectTimeout 60
          ConnectionAttempts 10
          UserKnownHostsFile {{ansible_known_host}}
  tags:
    - bastion_proxy_config_main

- name: Add all hosts to workdir ssh config file
  blockinfile:
    dest: "{{ ansible_ssh_config }}"
    marker: "##### {mark} ADDED Node Proxy Config  {{ item }} {{ env_type }}-{{ guid }} ######"
    block: |
        Host {{ item }} {{  hostvars[item].public_ip_address | default('') }} {{ hostvars[item].shortname |d('')}}
        {% if hostvars[item].isolated %}
          Hostname {{ hostvars[item].public_ip_address }}
        {% else %}
          Hostname {{ hostvars[item].private_ip_address }}
        {% endif %}
          User {{ remote_user }}
          IdentityFile {{ ssh_key | default(infra_ssh_key) | default(ansible_ssh_private_key_file) | default(default_key_name)}}
        {% if hostvars[item].bastion != '' %}
          ProxyCommand ssh -F {{ ansible_ssh_config }} {{ hostvars[item].bastion }} -W %h:%p
        {% else %}
          ProxyCommand ssh -F {{ ansible_ssh_config }} {{ bastion_hostname }} -W %h:%p
        {% endif %}
          StrictHostKeyChecking no
          UserKnownHostsFile {{ansible_known_host}}
          ControlMaster auto
          ControlPath /tmp/{{ guid }}-%r-%h-%p
          ControlPersist 5m
  when:
    - item not in [bastion_hostname, 'localhost', '127.0.0.1']
    - item != hostvars[item].bastion
  with_items: "{{ groups['all'] }}"
  tags:
    - bastion_proxy_config_hosts
