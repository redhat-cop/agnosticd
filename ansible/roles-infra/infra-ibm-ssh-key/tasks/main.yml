---
- name: List SSH keys available in account
  command: >
    ibmcloud is keys --json
  register: r_ssh_keys

# We cannot upload multiple public key with the same fingerprint
# Do we want to check and then delete if it exists?
# - name: Verify SSH key does not already exist
#   command: >-
#     echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4LIAh+LeqBsODfR9YMqyk6E74hE9/FzyDsBf7pukER7alw99JLySZFeO7hL0COXrQlbweVDTwbU5GJrLSbUQZvgVOIbH/roAwMBjzuwdh7ibLyxZNdJs/6gLifWUXSmaj/JKXCr2Lg+527wRfePY+1mXJNMc+cbrezWoUpNlhw3D1NrcJnxldmRn6Rw0jnQdaz1PtAgMfX4Xftr9RV0GggtAwCGjViBK6WM+Fkfp4hT0EMVoCtwvhmEIzeaYaHofit3pW/KONp1DG/OisojUcDuQ6S7i5Mt35N1LmzR06ED4c8kOLMaqZ7UDupFOoILL/vqayVjL67trgcsTcJXI5 
#     | ssh-keygen -lf - 
#     | cut -d " " -f2
#   register: r_ssh_key_fingerprint

# If we only need one key on the sandbox, we can use the task below to do both, check and create
# Idempotency tested
- name: Create SSH key if it does not exist
  when: (r_ssh_keys.stdout | from_json) | json_query(ssh_key_query) | length == 0
  command: >-
    ibmcloud is keyc {{ guid }}-key "{{ infra_ibm_ssh_key_pubssh_key }}"
    --resource-group-id {{ resource_group_id }} --json
  vars:
    ssh_key_query: >
      [?name=='{{ guid }}-key']
  register: r_ssh_key_new
  tags:
    - ssh_keys

# TODO: Add task to get SSH key ID for other use