---
- name: Import default destroy playbook
  import_playbook: ../../cloud_providers/{{cloud_provider}}_destroy_env.yml

- name: Delete VMs on VMWare
  hosts: localhost
  become: false
  tasks:
    - ansible.builtin.debug:
        msg: "Step 000 Pre Infrastructure"

    - name: Create private key
      ansible.builtin.copy:
        dest: /tmp/jumphostldap.pem
        content: "{{ vmware_ibm_ldap_jumphost_privatekey }}"
        mode: "0600"

    - name: Add ldap jumphost host to the temporary inventory
      ansible.builtin.add_host:
        groupname: network
        name: jumphostldap
        bastion: ""
        isolated: true
        ansible_ssh_host: "{{ vmware_ibm_ldap_jumphost }}"
        ansible_ssh_user: "{{ vmware_ibm_ldap_jumphost_user }}"
        ansible_ssh_private_key_file: /tmp/jumphostldap.pem
        private_ip_address: "{{ vmware_ibm_ldap_jumphost }}"
        public_ip_address: "{{ vmware_ibm_ldap_jumphost }}"

    - name: Remove user from roles for different objects on VCenter
      community.vmware.vmware_object_role_permission:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        state: absent
        role: "{{ vcenter_role }}"
        principal: "{{ vcenter_student_username }}@{{ vcenter_domain }}"
        recursive: "{{ true if item.key == 'Folder' else false }}"
        object_name: "{{ item.value }}"
        object_type: "{{ item.key }}"
      register: r_vmware_object_role_permission
      until: r_vmware_object_role_permission is success
      retries: 1
      delay: 10
      loop: "{{ vcenter_permissions | dict2items }}"
      ignore_errors: true

    # yamllint disable rule:line-length
    - name: Run playbook in the jumphost to remove the user
      delegate_to: jumphostldap
      ansible.builtin.command: |
        ansible-playbook /home/{{ vmware_ibm_ldap_jumphost_user }}/sandbox_ad_user.yaml -e '{"vmware_add_create_user":{"name":"{{ vcenter_student_username }}","firstname":"{{ vcenter_student_username }}","surname":"{{ vcenter_student_username }}","password":"","group":"sandbox-users"}}' -e state=absent
      ignore_errors: true
    # yamllint enable rule:line-length

    - name: Delete folder and VMs
      block:
        - name: Get all VMs in the folder
          community.vmware.vmware_vm_info:
            validate_certs: false
            hostname: "{{ vcenter_hostname }}"
            username: "{{ vcenter_username }}"
            password: "{{ vcenter_password }}"
            folder: "/{{ vcenter_datacenter }}/vm/Workloads/{{ hostvars['localhost']['vcenter_folder'] }}"
          ignore_errors: true
          register: r_folder_vms

        - name: Debug VMs
          ansible.builtin.debug:
            msg: "{{ r_folder_vms }}"

        - name: Set datastore
          when:
            - r_folder_vms.virtual_machines is defined
            - r_folder_vms.virtual_machines | length > 0
          ansible.builtin.set_fact:
            vcenter_datastore: "{{ r_folder_vms.virtual_machines[0].datastore_url[0].name }}"

        - name: Debug datastore
          ansible.builtin.debug:
            msg: "Datastore: {{ vcenter_datastore | default('datastore1') }}"

        - name: Remove the VMs
          when:
            - r_folder_vms.virtual_machines is defined
            - r_folder_vms.virtual_machines | length > 0
          ansible.builtin.include_tasks: vcenter-remove-vm.yml
          vars:
            vm_uuid: "{{ item.uuid }}"
            vm_power_state: "{{ item.power_state }}"
          loop: "{{ r_folder_vms.virtual_machines }}"

        - name: Delete folder for the project
          community.vmware.vcenter_folder:
            validate_certs: false
            hostname: "{{ vcenter_hostname }}"
            username: "{{ vcenter_username }}"
            password: "{{ vcenter_password }}"
            datacenter: "{{ vcenter_datacenter }}"
            folder_name: "{{ hostvars['localhost']['vcenter_folder'] }}"
            parent_folder: "Workloads"
            folder_type: vm
            state: absent
          ignore_errors: true


- name: Remove ldap jumphost from inventory
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - meta: refresh_inventory
