- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: False
  become: yes
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

- name: Setup lab-user
  hosts: bastions
  become: true
  tasks:
    - name: Setup lab-user
      include_tasks: ./setup_lab_user.yml

- name: Import Tower License from Bastion 
  hosts: bastions
  become: false
  tasks:
    - name: Import Tower License With API
      uri:
        url: https://{{ tower_hostname }}/api/v2/config/
        user: admin
        password: "{{ tower_admin_password }}"
        method: POST
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body: "{{ tower_license }}"
        body_format: json
        force_basic_auth: yes
        validate_certs: false

- name: Setup Workloads on Tower
  import_playbook: tower_workloads.yml

- name: Configure Tower after workloads 
  hosts: bastions
  become: false
  collections:
    - awx.awx
  tasks:
    - when: tower_lab_setup | bool
      name: Configure Ansible Tower Environment
      include_tasks: configure_tower.yml

- name: Setup Workloads on Satellite
  import_playbook: satellite_workloads.yml

- name: Configure Satellite 
  hosts: satellites
  become: true
  collections:
    - theforeman.foreman
  tasks:
    
    - when: satellite_lab_setup | bool
      name: Configure Satellite Repositories
      include_tasks: configure_satellite.yml

- name: Deploy user.info
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005
  tasks:

    - name: print out user.info
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Tower Login details:"
        - "Tower WebUI URL: https://tower.{{guid}}.{{osp_cluster_dns_zone}}"
        - "Tower login username: devops"
        - "Tower login Password: {{ devops_password_tower }}"
        - ""
        - "Satellite Login details:"
        - "Satellite WebUI URL: https://satellite.{{guid}}.{{osp_cluster_dns_zone}}"  
        - "Satellite login username: {{ hostvars['satellite']['satellite_admin'] }}"
        - "Satellite login Password: {{ hostvars['satellite']['satellite_admin_password'] }}"
        - ""
        - "To access control via SSH:"
        - "ssh  {{ student_name }}@control.{{ guid }}.{{ osp_cluster_dns_zone }}"
        - "Enter ssh password when prompted: {{ hostvars['control']['student_password'] }}"

    - name: Save user data
      agnosticd_user_info:
        data:
          ssh_command: "ssh  {{ student_name }}@control.{{ guid }}.{{ osp_cluster_dns_zone }}"
          ssh_password: "{{ hostvars['control']['student_password'] }}"
          tower_url: "https://tower.{{osp_cluster_dns_zone}}" 
          tower_admin: "admin"
          tower_admin_password: "{{ hostvars['control']['tower_admin_password'] }}"
          satellite_url: "https://satellite.{{guid}}.{{osp_cluster_dns_zone}}" 
          satellite_admin: "{{ hostvars['satellite']['satellite_admin'] }}"
          satellite_admin_password: "{{ hostvars['satellite']['satellite_admin_password'] }}"


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:

    - debug:
        msg: "Post-Software checks completed successfully"
