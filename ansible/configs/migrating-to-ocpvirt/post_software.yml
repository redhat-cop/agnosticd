---
- name: Step 005 Post Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Step 005 Post Software"

- name: Deploy some operators
  hosts: bastion-vm
  tasks:
    - name: Make .kube directory
      ansible.builtin.file:
        path: /root/.kube/
        state: directory
      when: ocp4_aio_deploy_type == 'sno'

    - name: Make rhacm the default cluster for bastion oc commands
      when: ocp4_aio_deploy_type == 'sno'
      ansible.builtin.copy:
        remote_src: true
        src: /root/sno-rhacm/auth/kubeconfig
        dest: /root/.kube/config

    - name: Copy file htpasswd.yaml
      copy:
        src: "htpasswd.yaml"
        dest: "/tmp/htpasswd.yaml"

    - name: Configure admin user
      shell: "{{ item }}"
      args:
        chdir: /tmp/
      loop:
        - htpasswd -c -B -b users.htpasswd admin r3dh4t1!
        - /usr/bin/oc create secret generic htpass-secret --from-file=htpasswd=users.htpasswd -n openshift-config
        - /usr/bin/oc apply -f htpasswd.yaml
        - /usr/bin/oc adm policy add-cluster-role-to-user cluster-admin admin
        - /usr/bin/oc delete secrets kubeadmin -n kube-system

    - name: Pre-install operators
      script: files/configure_operators.sh

#    - name: Run configure_ssl.sh
#      script: files/configure_ssl.sh

    - name: Setting up OCS Storage
      include_role:
        name: ocp4_aio_role_ocs
      when: ocp4_aio_deploy_ocs and ocp4_aio_deploy_type == 'ipi'

    - name: Configure image registry
      shell: >
        oc patch configs.imageregistry.operator.openshift.io cluster
        --type merge --patch '{"spec":{"storage":{"pvc":{"claim":"ocs-imgreg"}}, "managementState": "Managed"}}'

    - name: Setting up Openshift Virtualisation Lab
      include_role:
        name: ocp4_aio_workload_cnvlab

- name: Print informations
  hosts: localhost
  tasks:

    - name: Print Bastion Connection Information
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Host you will be using for lab : {{ hostvars['hypervisor']['public_ip_address'] }}"
        - "SSH User : {{ student_name }}"
        - "SSH Password : {{ hostvars['hypervisor']['student_password'] }}"
#        - "OpenShift web console : https://console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"
#        - "kubeadmin user Password : {{ hostvars['kube_holder']['kubeadmin_password'] }}"

    - when: ocp4_aio_deploy_cnvlab
      name: Print Openshift Virtualization lab infos
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Lab instructions : http://{{ hostvars['cnvlab_holder']['route'] }}"

    - name: Print Kube Configuration for IPI
      when: ocp4_aio_deploy_ipi
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "The console is available at: https://console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"
        - "The password for admin user is: r3dh4t1!"
        - "If you'd like CLI access, the bastion host will have already been setup - `ssh root@192.168.123.100` and password `redhat`"
        - "You should then automatically have oc/kubectl access to the cluster. Check out ~/ocp-install/auth/."

    - name: Display infos
      when: ocp4_aio_deploy_sno
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "To access the environment via a Squid Proxy, setup the following proxy in your browser :"
        - "proxy.{{ guid }}.{{ cluster_dns_zone }}:3128"
        - "The console for rhacm cluster is available without proxy at: https://console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"
        - "The kubeadmin password for the rhacm cluster  is: {{ hostvars['rhacm_holder']['kubeadmin_password'] }}"
        - "The console for edge1 cluster is available using the proxy at: https://console-openshift-console.apps.edge1.example.com"
        - "The kubeadmin password for edge1 cluster is: {{ hostvars['edge1_holder']['kubeadmin_password'] }}"
        - "The console for edge2 cluster is available using the proxy at: https://console-openshift-console.apps.edge2.example.com"
        - "The kubeadmin password for edge2 cluster is: {{ hostvars['edge2_holder']['kubeadmin_password'] }}"
        - "If you'd like CLI access, the bastion host will have already been setup - `ssh root@192.168.123.100`"
        - "You should then automatically have oc/kubectl access to the cluster."

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
