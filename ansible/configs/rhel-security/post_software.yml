---
- name: Step 005 Post Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Step 005 Post Software"
    - name: Output ssh user_info for ec2 based deploys
      when:
        - cloud_provider == "ec2"
      block:
        - name: Set ssh user_info
          agnosticd_user_info:
            msg: "{{ __user_info }}"
          loop:
            - "To Access development node via SSH:"
            - "ssh_command: ssh {{ student_name }}@{{ bastion_prefix }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Enter ssh password when prompted: {{ student_password }}"
            - ""
          loop_control:
            loop_var: __user_info
          vars:
            bastion_prefix: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              cloud_provider: "{{ cloud_provider }}"
              bastion_ssh_command: "ssh {{ student_name }}@{{ bastion_public_hostname }}"
              bastion_public_hostname: "{{ bastion_prefix }}.{{ guid }}{{ subdomain_base_suffix }}"
              bastion_ssh_user_name: "{{ student_name }}"
              bastion_ssh_password: "{{ common_password }}"
              guid: "{{ guid }}"
              targethost: "{{ bastion_prefix }}.{{ guid }}{{ subdomain_base_suffix }}"
              subdomain: "{{ guid }}{{ subdomain_base_suffix }}"
              subdomain_internal: "{{ chomped_zone_internal_dns | default('') }}"
              USERNAME: "{{ student_name }}"
              BASTION_PASSWORD: "{{ hostvars[groups.bastions.0].student_password }}"
              BASTION_IP_ADDRESS: "{{ hostvars[groups.bastions.0].public_ip_address }}"
              OPENSCAP_PASSWORD: "{{ hostvars[groups.openscap.0].student_password }}"
              OPENSCAP_IP_ADDRESS: "{{ hostvars[groups.openscap.0].public_ip_address }}"
              SESSIONRECORDING_IP_ADDRESS: "{{ hostvars[groups.sessionrecording.0].public_ip_address }}"
          vars:
            student_name: "{{ ansible_service_account_user_name }}"
            bastion_prefix: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}"
          register: r_user_data

    - name: Deploy Bookbag
      when:
        - bookbag_git_repo is defined
      include_role:
        name: bookbag
      vars:
        ACTION: create

- name: Verify playbook execution
  hosts: all
  become: true
  roles:
    - when: rhel_security_validate | default(true) | bool
      role: rhel-security-verification

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:

    - name: Deploy Showroom on shared cluster
      when: showroom_deploy_shared_cluster_enable | default(false) | bool
      include_role:
        name: ocp4_workload_showroom

    - debug:
        msg: "Post-Software checks completed successfully"
