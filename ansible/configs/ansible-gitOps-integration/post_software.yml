- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: False
  become: yes
  tasks:
    - debug:
        msg: "Post-Software tasks Started"


- name: Post tower installation task
  hosts: towers
  gather_facts: false
  become: yes
  tags:
    - lets_encrypt_tasks
  
  tasks:
    - name: Let's encrypt nginx
      include_tasks: lets-encrypt-nginx.yml


- name: Step lab post software deployment
  hosts: bastions
  gather_facts: false
  become: yes
  tags:
    - post_bastion_tasks

  tasks:
    - name: Install python-gitlab python module
      pip:
        name: 
          - python-gitlab==1.12.1
          - requests==2.6
      tags:
        - install-gitlab

    - name: Configure gitlab server configuration
      include_role:
        name: gitlab-config
      tags:
        - install-gitlab

    - name: Event tower workload
      include_tasks: rh_event.yml
      vars:
        tower_hostname: "{{ groups['towers'][0] }}"
      when: rhte_event | default(false) | bool
      tags:
        - configure-tower
    
    - name: Copy user's access details in {{ control_user_resource_dir_name }}
      copy:
        content: >-
          access_details:
            gitlab_hostname: "{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            gitlab_url: "http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            gitlab_username: "{{ control_user_name }}"
            gitlab_password: "{{ hostvars['localhost']['gitlab_server_root_password'] }}"
            gitlab_root_token: "{{ hostvars['localhost']['gitlab_server_root_token'] }}"

            tower_hostname: "{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            tower_url: "https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            tower_admin_user: "{{ control_user_name }}"
            tower_admin_password: "{{ hostvars['localhost']['tower_admin_password'] }}"

            vscode_ui_hostname: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            vscode_ui_url: "https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            vscode_ui_password: "{{ hostvars['localhost']['vscode_user_password'] }}"

            ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            ssh_password: "{{ student_password }}"

        dest: "/home/{{ control_user_name }}/{{ control_user_resource_dir_name }}/access_details.yml"
        mode: 0644
        owner: root
        group: root
    

- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: osp user.info
      when: cloud_provider == 'osp'
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access Gitlab via browser:"
            - "Gitlab URL: http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Gitlab Username: {{ control_user_name }}"
            - "Gitlab Password: {{ gitlab_server_root_password }}"
            - ""
            - "To Access Ansible Tower console via browser:"
            - "Ansible Tower URL: https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Ansible Tower Username: {{ control_user_name }}"
            - "Ansible Tower Admin Password: {{ tower_admin_password }}"
            - ""
            - "To Access VScode UI via browser:"
            - "VScode UI URL: https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "VScode UI Password: {{ vscode_user_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Enter ssh password when prompted: {{ student_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              gitlab_url: "http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              gitlab_username: "{{ control_user_name }}"
              gitlab_password: "{{ gitlab_server_root_password }}"
              tower_url: "https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              tower_admin_user: "{{ control_user_name }}"
              tower_admin_password: "Ansible Tower Admin Password: {{ tower_admin_password }}"
              vscode_ui_url: "https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              vscode_ui_password: "{{ vscode_user_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              ssh_password: "{{ student_password }}"
        - name: Deploy Bookbag
          when: bookbag_git_repo is defined
          include_role:
            name: bookbag
          vars:
            ACTION: create
            
    - name: ec2 user.info
      when: cloud_provider == 'ec2'
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access Gitlab via browser:"
            - "Gitlab URL: http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Gitlab Username: {{ control_user_name }}"
            - "Gitlab Password: {{ gitlab_server_root_password }}"
            - ""
            - "To Access Ansible Tower console via browser:"
            - "Ansible Tower URL: https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Ansible Tower Username: {{ control_user_name }}"
            - "Ansible Tower Admin Password: {{ tower_admin_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Enter ssh password when prompted: {{ student_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              gitlab_url: "http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              gitlab_username: "{{ control_user_name }}"
              gitlab_password: "{{ gitlab_server_root_password }}"
              tower_url: "https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              tower_admin_user: "{{ control_user_name }}"
              tower_admin_password: "Ansible Tower Admin Password: {{ tower_admin_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              ssh_password: "{{ student_password }}"
        - name: Deploy Bookbag
          when: bookbag_git_repo is defined
          include_role:
            name: bookbag
          vars:
            ACTION: create

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
