################################################################################
################################################################################
### Environment Structure
################################################################################
################################################################################
## Environment Sizing


default_key_name: ~/.ssh/{{key_name}}.pem
tower_run: false

# How many do you want for each instance type


bastion_instance_type: "t2.medium"
bastion_instance_image: RHEL75

satellite_instance_count: 1
satellite_instance_type: "m5.2xlarge"

security_groups:
  - name: BastionSG
    rules:
      - name: BasSSHPublic
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: SatelliteSG
    rules:
      - name: SatHTTPSPorts
        description: "HTTPS Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: BastionUDPPorts
        description: "Only from bastion"
        from_port: 0
        to_port: 65535
        protocol: udp
        from_group: DefaultSG
        rule_type: Ingress
      - name: BastionTCPPorts
        description: "Only from bastion"
        from_port: 0
        to_port: 65535
        protocol: tcp
        from_group: DefaultSG
        rule_type: Ingress
 
# Environment Instances
instances:
  - name: "bastion"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: false
    security_groups:
      - BastionSG
      - DefaultSG
    image: "{{ bastion_instance_image }}"
    flavor:
      ec2: "{{bastion_instance_type}}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "satellite"
    count: "{{satellite_instance_count}}"
    public_dns: true
    security_groups: 
      - SatelliteSG
      - DefaultSG
    flavor:
      ec2: "{{satellite_instance_type}}"
    tags:
      - key: "AnsibleGroup"
        value: "satellites"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"


# DNS settings for environmnet
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{subdomain_base_short}}{{subdomain_base_suffix}}"

zone_internal_dns: "{{guid}}.internal."
chomped_zone_internal_dns: "{{guid}}.internal"

# Stuff that only GPTE cares about:
install_ipa_client: false

# for file based repo
repo_method: file 
use_own_repos: true
repo_version: "6.4"

## For RHN login 
# repo_method: rhn
# rhsm_pool_ids:
#   - 8a85f99b6b498682016b521dfe463949
# rhel_subscription_user:
# rhel_subscription_pass: 

######
rhel_repos:
  - rhel-7-server-rpms 
  - rhel-server-rhscl-7-rpms 
  - rhel-7-server-satellite-6.4-rpms 
  - rhel-7-server-satellite-maintenance-6-rpms 
  - rhel-7-server-ansible-2.6-rpms
  - rhel-7-server-extras-rpms

# Do you want to run a full yum update
update_packages: false

common_packages:
  - python
  - unzip
  - bash-completion
  - tmux
  - wget
  - git
  - vim-enhanced
  - at
  - python27-python-pip
  - bind-utils


guid: defaultguid
install_bastion: true
install_common: true
install_ipa_client: false


deploy_local_ssh_config_location: "{{output_dir}}/"
use_own_key: true
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true


HostedZoneId: Z3IHLWJZOU9SRT
project_tag: "{{ env_type }}-{{ guid }}"
cloud_provider: ec2                     # Which AgnosticD Cloud Provider to use
key_name: ocpkey                        # Keyname must exist in AWS
aws_region: ap-southeast-2
