################################################################################
### OSP Environment variables
################################################################################


cloud_provider: osp
install_student_user: false


ansible_user: cloud-user
remote_user: cloud-user
osp_cluster_dns_zone: red.osp.opentlc.com
osp_cluster_dns_server: ddns01.opentlc.com
use_dynamic_dns: true
osp_project_create: true
student_name: student
admin_user: opentlc-mgr

bastion_instance_type: 2c2g30d
satellite_instance_type: 8c32g100d
capsule_instance_type: 4c16g30d
host_instance_type: 2c2g30d

satellite_host_root_fs_size: 100

_image: rhel-server-7.7-update-2
bastion_instance_image: "{{ _image }}"
satellite_instance_image: "{{ _image }}"
capsule_image: "{{ _image }}"
host_image: "rhel-8.1"

satellite_instance_count: 1
capsule_instance_count: 0

satellite_libvirt_provisioning: yes

satellite_libvirt_network:
  name: Provisioning
  domain: example.org
  network: '192.168.122.0'
  gateway: '192.168.122.1'
  netmask: '255.255.255.0'
  range_from: '192.168.122.2'
  range_to: '192.168.122.254'

security_groups:
  - name: HostSG
    rules:
      - name: CapsHostSSHPort
        description: "Allow ssh to hosts from Satellite"
        from_port: 22
        to_port: 22
        protocol: tcp
        rule_type: Ingress
        from_group: CapsuleSG
  - name: CapsuleSG
    rules:
      # from satellite
      - name: PulpHTTPSPort
        description: "Pulp HTTPS from satellite"
        from_port: 443
        to_port: 443
        protocol: tcp
        from_group: SatelliteSG
        rule_type: Ingress
      - name: ProxyHTTPSPort
        description: "proxy HTTPS from satellite"
        from_port: 9090
        to_port: 9090
        protocol: tcp
        from_group: SatelliteSG
        rule_type: Ingress
      # from Hosts
      - name: CapsuleProvisionPort
        description: "Download templates"
        from_port: 8000
        to_port: 8000
        protocol: tcp
        from_group: HostSG
        rule_type: Ingress
  - name: SatelliteSG
    rules:
      - name: SatHTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: SatHTTPSPorts
        description: "HTTPS Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: BastionUDPPorts
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: BastionSG
        rule_type: Ingress
      - name: BastionTCPPorts
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: BastionSG
        rule_type: Ingress
      # Capsule to satellite
      - name: CapsQpidToSat
        description: "Qpid com to satellite"
        from_port: 5646
        to_port: 5646
        protocol: tcp
        from_group: CapsuleSG
        rule_type: Ingress

# Environment Instances
instances:
  - name: "bastion"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: false
    floating_ip: true
    image_id: "{{ bastion_instance_image }}"
    flavor:
      ec2: "{{bastion_instance_type}}"
      osp: "{{bastion_instance_type}}"
      azure: Standard_A2_V2
    security_groups:
      - BastionSG
      - DefaultSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "satellite"
    count: "{{satellite_instance_count}}"
    public_dns: true
    floating_ip: true
    image_id: "{{ satellite_instance_image }}"
    rootfs_size: "{{ satellite_host_root_fs_size }}"
    flavor:
      ec2: "{{satellite_instance_type}}"
      osp: "{{satellite_instance_type}}"
      azure: Standard_A2_V2
    security_groups:
      - SatelliteSG
      - CapsuleSG
      - DefaultSG
    tags:
      - key: "AnsibleGroup"
        value: "satellites"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "capsule"
    count: "{{ capsule_instance_count }}"
    public_dns: false
    floating_ip: true
    image_id: "{{ capsule_image }}"
    flavor:
      ec2: "{{ capsule_instance_type }}"
      osp: "{{ capsule_instance_type }}"
      azure: Standard_A2_V2
    security_groups:
      - CapsuleSG
      - DefaultSG
    tags:
      - key: "AnsibleGroup"
        value: "capsules"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

# Note: there are no hosts instances
#       those are added dynamically
