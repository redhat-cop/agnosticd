---
- name: Step 001 software
  hosts: utility
  gather_facts: false
  become: true
  tasks:
    - when: cloud_provider == "osp"
      block:
        - name: Install required packages
          package:
            name:
              - gcc
              - python3
              - python3-devel
              - ipmitool
              - libvirt
              - libguestfs-tools
              - qemu-kvm
              - qemu-img
              - jq
              - libguestfs
              - bind-utils
              - bind
              - dhcp-server
              - python3-openstackclient
              - nfs-utils

        - name: Add /usr/local/bin to PATH
          copy:
            dest: /etc/profile.d/custom-path.sh
            content: 'PATH=$PATH:/usr/local/bin'

- name: Step 002 Utility VM config
  hosts: utility
  gather_facts: false
  become: true
  tasks:
    - name: Create .config directory
      file:
        path: /home/cloud-user/.config/openstack
        state: directory
        owner: "cloud-user"
        group: users
        mode: 0744

    - name: Create directory for nfs share
      file:
        path: /nfs
        state: directory
        owner: "root"
        group: root
        mode: 0777

    - name: Create partition for NFS volume
      parted:
        device: /dev/vdb
        number: 1
        state: present

    - name: Create volume for NFS share on vdb
      filesystem:
        fstype: ext4
        dev: /dev/vdb1
        resizefs: yes

    - name: mount NFS backend volume
      mount:
        path: /nfs
        src: /dev/vdb1
        fstype: ext4
        state: present

    - name: create NFS export file
      template:
        src: "./files/exports.j2"
        dest: "/etc/exports"
        owner: root
        group: root
        mode: 0644

    - name: start and enable NFS service
      service:
        name: nfs-server
        state: started
        enabled: yes

    - name: Create clouds.yaml file
      template:
        src: "./files/clouds.yaml.j2"
        dest: "/home/cloud-user/.config/openstack/clouds.yaml"
        owner: "cloud-user"
        mode: 0700

    - name: Get scripts from github
      git:
        repo: https://github.com/schmaustech/ocp-ipi-on-osp.git
        dest: "/home/cloud-user/scripts"

    - name: Change ownership of scripts
      file:
        path: /home/cloud-user/scripts
        state: directory
        owner: "cloud-user"
        group: "cloud-user"
        mode: 0744
        recurse: yes

    - name: Resolving templated scripts 1/8
      template:
        src: "./files/02_services.sh.j2"
        dest: "/home/cloud-user/scripts/02_services.sh"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Resolving templated scripts 2/8
      template:
        src: "./files/03_build-bridges.sh.j2"
        dest: "/home/cloud-user/scripts/03_build-bridges.sh"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Resolving templated scripts 3/8
      template:
        src: "./files/06_prepare-node.sh.j2"
        dest: "/home/cloud-user/scripts/06_prepare-node.sh"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Resolving templated scripts 4/8
      template:
        src: "./files/08_grabber.sh.j2"
        dest: "/home/cloud-user/scripts/08_grabber.sh"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Resolving templated scripts 5/8
      template:
        src: "./files/09_deploy.sh.j2"
        dest: "/home/cloud-user/scripts/09_deploy.sh"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Resolving templated scripts 6/8
      template:
        src: "./files/install-config.yaml.j2"
        dest: "/home/cloud-user/scripts/install-config.yaml"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Resolving templated scripts 7/8
      template:
        src: "./files/08_build_installer.sh.j2"
        dest: "/home/cloud-user/scripts/08_build_installer.sh"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Resolving templated scripts 8/8
      template:
        src: "./files/10_volume-attach.sh.j2"
        dest: "/home/cloud-user/scripts/10_volume-attach.sh"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Templating dhcp
      template:
        src: "./files/dhcpd.conf.j2"
        dest: "/home/cloud-user/scripts/dhcp/dhcpd.conf"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Templating DNS 1/3
      template:
        src: "./files/0.20.10.in-addr.arpa.j2"
        dest: "/home/cloud-user/scripts/named/0.20.10.in-addr.arpa"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Templating DNS 2/3
      template:
        src: "./files/named.conf.j2"
        dest: "/home/cloud-user/scripts/named/named.conf"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Templating DNS 3/3
      template:
        src: "./files/myzone.com.zone.j2"
        dest: "/home/cloud-user/scripts/named/{{ my_ocp_domain }}.zone"
        owner: "cloud-user"
        mode: 0744
        force: yes

    - name: Setting pull-secret
      template:
        src: "./files/pull-secret.json.j2"
        dest: "/home/cloud-user/pull-secret.json"
        owner: "cloud-user"
        mode: 0744

    - name: Sending wrapper script
      template:
        src: "./files/wrapper.sh.j2"
        dest: "/home/cloud-user/scripts/wrapper.sh"
        owner: "cloud-user"
        mode: 0744

    - name: Installing KNI if my_auto enabled, this may take a while ...
      shell: /home/cloud-user/scripts/wrapper.sh
      args:
        chdir: /home/cloud-user/scripts/

    - name: Preparing provisionning 7/8
      command: "/home/cloud-user/scripts/cleanup-refresh.sh"
      become_user: cloud-user

    - name: Dump all vars Software
      action: template src=./files/dumpvars.j2 dest=/tmp/ansible-sw.all

- name: Step 003 Bastion VM config
  hosts: bastion
  gather_facts: false
  become: true
  tasks:
    - name: Install required packages
      package:
        name:
        - squid
    - name: Configure squid
      template:
        src: "./files/squid.conf.j2"
        dest: "/etc/squid/squid.conf"
        owner: "root"
        group: "squid"
        mode: 0640
        force: yes
    - name: Set resolv for squid
      template:
        src: "./files/resolv.switch.j2"
        dest: "/etc/resolv.conf"
        owner: "root"
        group: "root"
        mode: 0644
        force: yes
    - name: restart squid
      service:
        name: squid
        state: restarted
