---
- name: Step 004 software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004_01
    - software
  tasks:
    - debug:
        msg: "Software tasks Started"


- name: Configure gitea server
  hosts: gitlab
  become: true
  tasks:
    - name: inlcude gitea deployment tasks
      include_tasks: ./deploy_gitea.yml


- name: Install softwares on bastion
  hosts: bastions
  become: true
  tags:
    - step004_02
    - software
  pre_tasks:

    - name: Configure git client
      include_role:
        name: ansible.workshops.gitlab_client
      vars:
        username: "{{ student_name }}"
        student: "{{ student_name }}"
        admin_password: "{{ common_password }}"
        ec2_name_prefix: "{{ guid }}"
        workshop_dns_zone: "{{ sandbox_zone }}"

    - name: Add control host in automationcontroller group
      add_host:
        name: "{{ groups['bastions'][0] }}"
        groups: automationcontroller

  tasks:

    - name: Install Automation controller
      when: install_automationcontroller | bool
      block:
        - name: install automation controller from role
          include_role:
            name: deploy_automationcontroller

        - name: Clean up
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - "/tmp/automationcontroller_installer"
            - "/tmp/automationcontroller.tar.gz"

        - name: Enable offline automation controller repo
          command: >-
            yum config-manager --enable ansible-automation-platform

        - name: Install ansible core & navigator
          yum:
            name:
              - ansible-core
              - ansible-navigator
            state: present

        - name: copy ansible-navigator.yml 
          copy:
            src: ./files/ansible-navigator.yml
            dest: "/home/{{ student_name }}/.ansible-navigator.yml"
            owner: "{{ student_name }}"
            group: users

        - when: configure_automationcontroller | bool
          include_role:
            name: automation_platform_loader

        - when: enable_letsencyrpt_cert | bool
          include_role:
            name: aap_controller_cert_issue

    - name: vscode config block
      when: install_vscode_server | bool
      block:
        - name: Install vscode server
          include_role:
            name: vscode-server

        - name: Clean up
          file:
            path: "/tmp/code-server.rpm"
            state: absent

        - name: Insert vscode proxy conf in nginx
          blockinfile:
            path: /etc/nginx/conf.d/automation-controller.nginx.conf
            marker: "    # ANSIBLE MANAGED BLOCK"
            insertbefore: '.*location \/ \{.*'
            block: "{{ lookup('file', './files/vscode_nginx.conf') }}"

        - name: Restart nginx
          service:
            name: nginx
            state: restarted


- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step004_03
    - software
  tasks:
    - debug:
        msg: "Software checks completed successfully"
