---
- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: false
  become: true
  tags:
    - step005

  tasks:
        
    - name: "Post-Software tasks Started"
      ansible.builtin.debug:
        msg: "Post-Software tasks Started"

- name: Update CentOS Bastion
  hosts: bastions
  gather_facts: false
  become: true
  tasks:
    - name: Update Packages
      package:
        name: "*"
        state: latest

    - name: Reboot CentOS bastion after update
      reboot:
        connect_timeout: 300
        msg: "RHEL updates installing. Rebooting now."
        pre_reboot_delay: 60
        post_reboot_delay: 10

    - name: Update network facts after reboot
      setup:
        gather_subset:
        - 'network'
        - 'virtual'

- name: Output user_info
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step005

  tasks:

    - name: Do very annoying normalization of domain name
      ansible.builtin.set_fact:
        agnosticd_domain_name: >-
         {% if cloud_provider == 'osp' -%}
           .{{ osp_cluster_dns_zone }}
         {%- elif cloud_provider == 'ec2' -%}
           {{ subdomain_base_suffix }}
         {%- endif %}

    - name: Output ssh user_info for osp or ec2 based deploys
      block:

        - name: Set ssh user_info
          agnosticd_user_info:
            msg: "{{ __user_info }}"
          loop:
            - "To Access Control node via SSH:"
            - "ssh {{ ansible_service_account_user_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}"
            - "Enter ssh password when prompted: {{ ansible_service_account_user_password }}"
            - ""
          loop_control:
            loop_var: __user_info

        - name: Set agnosticd_user_info ssh data
          agnosticd_user_info:
            data:
              ssh_command: "ssh {{ ansible_service_account_user_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}"
              ssh_password: "{{ ansible_service_account_user_password }}"

        - name: Deploy Bookbag
          when: bookbag_git_repo is defined
          include_role:
            name: bookbag
          vars:
            ACTION: create

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:

    - name: "Post-Software checks completed successfully"
      ansible.builtin.debug:
        msg: "Post-Software checks completed successfully"

...
