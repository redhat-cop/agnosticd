---
################################################################################
################################################################################
### Environment Structure
################################################################################
################################################################################
## Environment Sizing

#  _instance_type:
#  ec2: "t2.medium"
#  azure: Standard_A2_V2
#  osp: 2c2g30d
#  _instance_image: RHEL75

#node_instance_type:
#  ec2: "t2.medium"
#  azure: Standard_A2_V2
#  osp: 2c2g30d


# Customize the student password here. Keep in mind these systems may be public facing.
# student_name: lab-user
student_password: "shamrock masher positron tweet"

# Networks
# A list of the private networks and subnets to create in the project
# You can create as many as you want, but at least one is required.
# Use the name of the networks where appropriate in the instance list
networks:
- name: node_network
  shared: "false"
  subnet_cidr: 192.168.47.0/24
  gateway_ip: 192.168.47.1
  allocation_start: 192.168.47.10
  allocation_end: 192.168.47.254
  dns_nameservers: []
  create_router: true

# Security groups and associated rules. This will be provided
# when the Heat template is generated separate groups and rules
security_groups:
- name: node_sg
  description: Node security group allows basic icmp and SSH ingress and egress.
  rules:
  - protocol: icmp
    description: "Ping"
    direction: ingress
    rule_type: Ingress
  - protocol: tcp
    description: "SSH Access"
    direction: ingress
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0
    rule_type: Ingress
  - protocol: tcp
    description: "Cockpit UI Access"
    direction: ingress
    port_range_min: 9090
    port_range_max: 9090
    remote_ip_prefix: 0.0.0.0/0
    rule_type: Ingress

# Environment Instances
instances:
- name: node
  count: "{{ node_instance_count }}"
  unique: true
  alt_name: "bastion"
  public_dns: true
  dns_loadbalancer: false
  floating_ip: true
  image_id: "{{ node_instance_image }}"
  flavor:
    osp: "{{ node_instance_type }}"
  metadata:
  - AnsibleGroup: "bastions,nodes"
  - function: node
  # - user: "{{ student_name }}"
  - ostype: linux
  rootfs_size: "{{ node_rootfs_size }}"
  volumes:
  - name: '/dev/sda1'
    size: 40
  network: node_network
  security_groups:
  - node_sg

# Instance Variables

rhel_image: pntae-rhel-9.0-original      # Image within OSP to use for systems
node_instance_count: 1                   # The number of nodes to deploy for this environment
node_instance_image: "{{ rhel_image }}"  # Image to use for the node_instance defined in the default_vars.yml
node_instance_type: 2c2g30d              # Existing OSP flavor
node_rootfs_size: 30                     # Size of the root filesystem

# Packages
repo_method: satellite
rhel_repos:                              # Repositories that will be available in the environment.
- rhel-9-for-x86_64-baseos-rpms
- rhel-9-for-x86_64-appstream-rpms

set_repositories_rhel9_lock_release: '9.0'

# Stuff that only GPTE cares about:
install_ipa_client: false


################################################################################
################################################################################
### Common Host settings
################################################################################
################################################################################

# Do you want to run a full yum update
update_packages: false                   # Update all packages on system after configuration. true/false
software_to_deploy: none                 # Not deploying any software onto the environment
common_packages:                         # Packages to be installed on each node
- python
- unzip
- bash-completion
- tmux
- wget
- git
- vim-enhanced
- at
- firewalld

###V2WORK, these should just be set as default listed in the documentation
install_bastion: false
install_common: true
install_student_user: true

## SB Don't set software_to_deploy from here, always use extra vars (-e) or "none" will be used
#software_to_deploy: none


## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another.
# Using GUID is required, if it is not passed in the command line or uncommented
# here the deployment will fail
#guid: defaultguid


###V2WORK, these should just be set as default listed in the documentation
# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"


### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true
ssh_provision_key_name: pntae-training-key-pub

# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"
