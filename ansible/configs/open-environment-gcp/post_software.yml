---
- name: Step 000 Post Software
  hosts: localhost
  connection: local
  become: false
  tags:
    - step001
    - post_software
  tasks:
    - debug:
        msg: "Step 000 Post Software - Starting"

    - name: Print GCP Sandbox Information
      agnosticd_user_info:
        msg: |
          We have temporarily allocated GCP project {{ new_project.projectId }} to you.
          You can log into https://console.cloud.google.com/home/dashboard?project={{ new_project.projectId }}&organizationId={{ gcp_organization }} using your Red Hat SSO credentials.
          NOTE: When this OPEN environment expires, the project and all of its contents will be destroyed.  All data will be irrecovably removed. Please regularly back up your data and script your changes in case you need to rebuild.
          NOTE: It can take a few minutes for your project to become visible in the GCP Web UI.

    - name: Print GCP OPEN Environment Details
      agnosticd_user_info:
        msg: |

          Your GCP OPEN Environment details:
          Organization ID: {{ gcp_organization }}
          Project ID: {{ new_project.projectId }}
          DNS Zone: {{ guid }}.{{ gcp_root_dns_zone }}
          Service Account: {{ service_account_email }}
          Save the following GCP credentials file to use the service account:
          ----------
          {{ lookup('file', svc_account_creds_file) }}
          ----------

          CLI quickstart:

          sudo tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM
          [google-cloud-cli]
          name=Google Cloud CLI
          baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=0
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                 https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          EOM
          sudo dnf -y install google-cloud-cli
          gcloud init

          See https://cloud.google.com/sdk/gcloud for more info on installing the the gcloud CLI

    - name: Update user info
      agnosticd_user_info:
        data:
          gcp_organization: "{{ gcp_organization }}"
          gcp_project: "{{ new_project.projectId }}"
          gcp_dns_zone: "{{ guid }}.{{ gcp_root_dns_zone }}"
          gcp_service_account: "{{ service_account_email }}"
          gcp_credentials_file: "{{ lookup('file', svc_account_creds_file) }}"

    - name: Remove creds file
      ansible.builtin.file:
        path: "{{ svc_account_creds_file }}"
        state: absent

- name: Step 002 Post Software
  hosts: localhost
  connection: local
  become: false
  tags:
    - step001
    - post_software
  tasks:
    - debug:
        msg: "Step 002 Post Software - Completed"

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
