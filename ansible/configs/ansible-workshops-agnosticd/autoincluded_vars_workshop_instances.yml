---

workshop_instances:
  format_documentation_entry:
    # some workshops include instances from others
    include_instances_from:
      - workshop_type:
        when_variable: when variable is defined and truthy, null to skip check
    instances:
        # not the name of the machine (this is autogenerated and indexed), but a base of identifiers combined with ec2 prefixes and workshop names
      - name:
        groups: a comma-separated list of Ansible groups, see the ansible-workshop-groups tag
        # late-evaluated variable to enable conditional instance creation
        # if null or false, the instance is created
        lateeval_conditional:
          when_variable: whatever_variable_name
          is_value: true or a string or anything else
        assign_public_ip: true
        keypair_name:
        flavour:
        image:
        number_of_instances:
        vpc_subnet_cloudformation_ref: a reference (string) to an existing cloudformation node
        # whether to (automagically, via indices) link this to an IAM instance profile, used for control nodes
        # this is a String?
        # null/false - do not associate
        # "ControlNode"/"Lockdown"/... - cloudformation name prefix of the role
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key:
            value:
          # the following tags are auto-generated and do not need to be specified
          # this is documentation, not the source of truth, as some variables depend on the (machine duplicate) loop index
          - key: Workshop
            value: the name of the workshop
          - key: Workshop_guid
            value: the agnosticd GUID, uniquely identifying a deployment
          - key: Workshop_type
            value: the workshop type
          - key: owner
            value: the name of the AWS user
          - key: Info
            value: the AWS user that provisioned this machine, human-friendly description
          - key: ansible-workshops
            value: "true"
          - key: ansible-workshop-groups
            value: comma-separated list of Ansible groups the hosts will be put into (sourced from the "groups" key)
          - key: short_name
            value: the top-level name property
          - key: Name
            value: a name with the workshop and student prefix
          - key: Index
            value: the unique index among many duplicates
          - key: Student
            value: this is student(Index + 1)
          - key: Students
            value: the number of students
          - key: AWS_USERNAME
            value: the username of the AWS user that created this resource
          - key: launch_time
            value: time of launch (template generation, but this is approximate anyway)
          - key: dns
            value: the DNS name for the machine
          - key: AnsibleGroup
            value: an agnosticd hook, equal to ansible-workshop-groups + ["bastions"] to work around agnosticd
          - key: internaldns
            value: an agnosticd hook, equal to short_name
          - key: Project
            value: an agnosticd hook, equal to project_tag
        volumes:
          - device_name:
            type:
            size:
            # null means don't set a limit
            iops: null
            delete_on_termination:
        additional_enis:
          - vpc_subnet_cloudformation_ref:
            device_index:
            delete_on_termination:

  # management plane
  cluster:
    include_instances_from: []
    instances:
      - name: ansible
        groups: control_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[control_type].size }}"
        image: "{{ (lookup('vars', 'ansible_control_node_ami_' + control_type)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: ControlNode
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Ansible_Workshops
            value: "This was provisioned through the ansible workshops provisioner"
          - key: username
            value: "{{ ec2_info[control_type].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[control_type].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

  # management plane
  attendance:
    include_instances_from: []
    instances:
      - name: attendance
        groups: attendance
        lateeval_conditional:
          when_variable: attendance
          is_value: true
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['attendance_host']['size'] }}"
        image: "{{ attendance_host_ami.image_id }}"
        number_of_instances: 1
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: App
            value: AnsibleWorkshop
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: long_name
            value: "attendance-host.{{ ec2_name_prefix }}.{{ workshop_dns_zone | default('') }}"
          - key: username
            value: "{{ ec2_info['attendance_host']['username'] }}"
        volumes: []
        additional_enis: []

  # management plane
  automationhub:
    include_instances_from: []
    instances:
      - name: automationhub
        groups: automationhub
        lateeval_conditional:
          when_variable: automation_hub
          is_value: true
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[control_type].size }}"
        image: "{{ (lookup('vars', 'ansible_control_node_ami_' + control_type)).image_id }}"
        number_of_instances: 1
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: App
            value: AnsibleWorkshop
          - key: Ansible_Workshops
            value: "This was provisioned through the ansible workshops provisioner"
          - key: username
            value: "{{ ec2_info[control_type].username }}"
          - key: long_name
            value: "automationhub.{{ ec2_name_prefix }}.{{ workshop_dns_zone | default ('') }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[control_type].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

  centos_7:
    include_instances_from: []
    instances:
      - name: node4
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[centos7].size }}"
        image: "{{ (lookup('vars', 'node_ami_centos7_' + centos7)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: Lockdown
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[centos7].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[centos7].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: node5
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[centos7].size }}"
        image: "{{ (lookup('vars', 'node_ami_centos7_' + centos7)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: Lockdown
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[centos7].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[centos7].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: node6
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[centos7].size }}"
        image: "{{ (lookup('vars', 'node_ami_centos7_' + centos7)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: Lockdown
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[centos7].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[centos7].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

  demo:
    include_instances_from:
      - workshop_type: rhel
        when_variable: null
      - workshop_type: windows
        when_variable: null
      - workshop_type: network
        when_variable: null
      - workshop_type: f5
        when_variable: null
      - workshop_type: security
        when_variable: null
    instances: []

  devops:
    include_instances_from: []
    instances:
      - name: dev_web1
        groups: lab_hosts,managed_nodes,site1
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node1_ami_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
          - key: Devops_tag
            value: dev_web1
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: dev_web2
        groups: lab_hosts,managed_nodes,site1
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node2_ami_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
          - key: Devops_tag
            value: dev_web2
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: prod_web1
        groups: lab_hosts,managed_nodes,site2
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node3_ami_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
          - key: Devops_tag
            value: prod_web1
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: prod_web2
        groups: lab_hosts,managed_nodes,site2
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node4_ami_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
          - key: Devops_tag
            value: prod_web2
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

  f5:
    include_instances_from: []
    instances:
      - name: f5
        groups: f5
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.f5node.size }}"
        image: "{{ f5_ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: false
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.f5node.username }}"
          - key: password
            value: "{{ ec2_info.f5node.password }}"
        volumes: []
        additional_enis: []

      - name: node1
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.rhel8.size }}"
        image: "{{ node1_ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: false
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner for F5 workshop"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes: []
        additional_enis: []

      - name: node2
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.rhel8.size }}"
        image: "{{ node1_ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: false
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner for F5 workshop"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes: []
        additional_enis: []

  middleware:
    include_instances_from: []
    instances:
      - name: node1
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.middleware.size }}"
        image: "{{ node_ami_middleware.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.middleware.username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info.middleware.disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: node2
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.middleware.size }}"
        image: "{{ node_ami_middleware.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.middleware.username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info.middleware.disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: node3
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.middleware.size }}"
        image: "{{ node_ami_middleware.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.middleware.username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info.middleware.disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: isonode
        groups: lab_hosts,managed_nodes
        lateeval_conditional:
          when_variable: create_cluster
          is_value: true
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.middleware.size }}"
        image: "{{ node_ami_middleware.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.middleware.username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info.middleware.disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: remotenode
        groups: lab_hosts,managed_nodes
        lateeval_conditional:
          when_variable: create_cluster
          is_value: true
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info.middleware.size }}"
        image: "{{ node_ami_middleware.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.middleware.username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info.middleware.disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

  network:
    include_instances_from: []
    instances:
      - name: rtr1
        groups: routers,core,dmvpn
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rtr1_type].size }}"
        image: "{{ ec2_info[rtr1_type].ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: false
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: ansible_network_os
            value: "{{ ec2_info[rtr1_type].os }}"
          - key: username
            value: "{{ ec2_info[rtr1_type].username }}"
          - key: group
            value: core
# these networking volume configs are quite ugly and hackish :(
{% if ec2_info[rtr1_type].volumes is defined %}
        volumes:
{% for volume in ec2_info[rtr1_type].volumes %}
          - device_name: "{{ volume.device_name }}"
            type: "{{ volume.volume_type }}"
            size: "{{ volume.volume_size }}"
            iops: "{{ volume.iops }}"
            delete_on_termination: "{{ volume.delete_on_termination }}"
{% endfor %}
{% endif %}
        additional_enis: []

      - name: rtr2
        groups: routers,core
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rtr2_type].size }}"
        image: "{{ ec2_info[rtr2_type].ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: NetworkWorkshopSubnet1
        associate_instance_profile: false
        source_dest_check: false
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: ansible_network_os
            value: "{{ ec2_info[rtr2_type].os }}"
          - key: username
            value: "{{ ec2_info[rtr2_type].username }}"
          - key: group
            value: core
# these networking volume configs are quite ugly and hackish :(
{% if ec2_info[rtr2_type].volumes is defined %}
        volumes:
{% for volume in ec2_info[rtr2_type].volumes %}
          - device_name: "{{ volume.device_name }}"
            type: "{{ volume.volume_type }}"
            size: "{{ volume.volume_size }}"
            iops: "{{ volume.iops }}"
            delete_on_termination: "{{ volume.delete_on_termination }}"
{% endfor %}
{% endif %}
        additional_enis: []

      - name: rtr3
        groups: routers,access
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rtr3_type].size }}"
        image: "{{ ec2_info[rtr3_type].ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: false
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: ansible_network_os
            value: "{{ ec2_info[rtr3_type].os }}"
          - key: username
            value: "{{ ec2_info[rtr3_type].username }}"
          - key: group
            value: access
# these networking volume configs are quite ugly and hackish :(
{% if ec2_info[rtr3_type].volumes is defined %}
        volumes:
{% for volume in ec2_info[rtr3_type].volumes %}
          - device_name: "{{ volume.device_name }}"
            type: "{{ volume.volume_type }}"
            size: "{{ volume.volume_size }}"
            iops: "{{ volume.iops }}"
            delete_on_termination: "{{ volume.delete_on_termination }}"
{% endfor %}
{% endif %}
        additional_enis: []

      - name: rtr4
        groups: routers,access
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rtr4_type].size }}"
        image: "{{ ec2_info[rtr4_type].ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: NetworkWorkshopSubnet1
        associate_instance_profile: false
        source_dest_check: false
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: ansible_network_os
            value: "{{ ec2_info[rtr4_type].os }}"
          - key: username
            value: "{{ ec2_info[rtr4_type].username }}"
          - key: group
            value: access
# these networking volume configs are quite ugly and hackish :(
{% if ec2_info[rtr4_type].volumes is defined %}
        volumes:
{% for volume in ec2_info[rtr4_type].volumes %}
          - device_name: "{{ volume.device_name }}"
            type: "{{ volume.volume_type }}"
            size: "{{ volume.volume_size }}"
            iops: "{{ volume.iops }}"
            delete_on_termination: "{{ volume.delete_on_termination }}"
{% endfor %}
{% endif %}
        additional_enis: []









  rhel:
    include_instances_from: []
    instances:
      - name: node1
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node_ami_rhel_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: Lockdown
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: node2
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node_ami_rhel_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: Lockdown
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: node3
        groups: lab_hosts,managed_nodes
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node_ami_rhel_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: Lockdown
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: isonode
        groups: lab_hosts,managed_nodes
        lateeval_conditional:
          when_variable: create_cluster
          is_value: true
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node_ami_rhel_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: remotenode
        groups: lab_hosts,managed_nodes
        lateeval_conditional:
          when_variable: create_cluster
          is_value: true
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ (lookup('vars', 'node_ami_rhel_' + rhel)).image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []


  rhel_90:
    include_instances_from:
      - workshop_type: rhel
        when_variable: null
    instances: []


  security:
    include_instances_from: []
    instances:
      - name: qradar
        groups: security,security_connection_check,qradar,siem
        lateeval_conditional:
          when_variable: security_console
          is_value: qradar
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['qradar']['size'] }}"
        image: "{{ qradar_ami['image_id'] }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: '{{ ec2_info["rhel8"]["username"] }}'
          - key: ansible_python_interpreter
            value: "{{ ec2_info['qradar']['python_interpreter'] }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info['qradar']['disk_space'] }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: splunk
        groups: security,security_connection_check,splunk,siem
        lateeval_conditional:
          when_variable: security_console
          is_value: splunk
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['splunk_enterprise']['size'] }}"
        image: "{{ splunk_ami['image_id'] }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: '{{ ec2_info["rhel8"]["username"] }}'
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info['splunk_enterprise']['disk_space'] }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

      - name: snort
        groups: security,security_connection_check,snort,ids
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['rhel8']['size'] }}"
        image: "{{ snort_ami['image_id'] }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: '{{ ec2_info["rhel8"]["username"] }}'
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info['rhel8']['disk_space'] }}"
            iops: null
            delete_on_termination: true
        additional_enis:
          - vpc_subnet_cloudformation_ref: NetworkWorkshopSubnet1
            device_index: 1
            delete_on_termination: true

      - name: attacker
        groups: security,security_connection_check,attack
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['rhel8']['size'] }}"
        image: "{{ attacker_ami['image_id'] }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: '{{ ec2_info["rhel8"]["username"] }}'
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info['rhel8']['disk_space'] }}"
            iops: null
            delete_on_termination: true
        additional_enis:
          - vpc_subnet_cloudformation_ref: NetworkWorkshopSubnet1
            device_index: 1
            delete_on_termination: true

      - name: checkpoint_mgmt
        groups: security,checkpoint,firewall,checkpoint_mgmt
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ec2_info.checkpoint_mgmt.size }}"
        image: "{{ec2_info.checkpoint_mgmt.ami.image_id}}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: |
          {{ lookup('template', 'gaia-mgmt-ftw-user-data.sh.j2') | indent(width=10) }}
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.checkpoint_mgmt.username }}"
        volumes: []
        additional_enis: []

      - name: windows_ws
        groups: security,windows,workstation
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ec2_info.windows_ws.size }}"
        image: "{{ec2_info.windows_ws.ami.image_id}}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: |
          {{ lookup('template', 'windows_userdata.txt.j2') | indent(width=10) }}
        tags:
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info.windows_ws.username }}"
          - key: password
            value: "{{ windows_password }}"
          - key: ansible_port
            value: 5986
          - key: ansible_connection
            value: winrm
          - key: ansible_winrm_server_cert_validation
            value: ignore
        volumes: []
        additional_enis: []

      - name: checkpoint_gw
        groups: security,checkpoint,firewall
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ec2_info.checkpoint_gw.size }}"
        image: "{{ec2_info.checkpoint_gw.ami.image_id}}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: |
          {{ lookup('template', 'gaia-ftw-user-data.sh.j2') | indent(width=10) }}
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ec2_info.checkpoint_gw.username}}"
        volumes: []
        additional_enis:
          - vpc_subnet_cloudformation_ref: NetworkWorkshopSubnet1
            device_index: 1
            delete_on_termination: true


  smart_mgmt:
    include_instances_from:
      - workshop_type: rhel
        when_variable: null
      - workshop_type: centos_7
        when_variable: centos7

    instances:
      - name: satellite
        groups: lab_hosts,managed_nodes,satellite
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['satellite'].size }}"
        image: "{{ sat_ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: "{{ ebs_optimized_capable | default(false) }}"
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: 500
            iops: null
            delete_on_termination: true
        additional_enis: []

  storage:
    include_instances_from: []
    instances:
      - name: netapp
        groups: lab_hosts,managed_nodes,storage,netapp
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info[rhel].size }}"
        image: "{{ netapp_ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: null
        tags:
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: username
            value: "{{ ec2_info[rhel].username }}"
        volumes:
          - device_name: /dev/sda1
            type: gp2
            size: "{{ ec2_info[rhel].disk_space }}"
            iops: null
            delete_on_termination: true
        additional_enis: []

  windows:
    include_instances_from: []
    instances:
      - name: gitlab
        groups: rhel,gitlab
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['skylight_rhel8_gitlab']['size'] }}"
        image: "{{ win_gitlab_ami.image_id }}"
        number_of_instances: 1
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: |
          {{ lookup('template', 'skylight_gitlab_userdata.j2') | indent(width=10) }}
        tags:
          - key: App
            value: AnsibleWorkshop
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: long_name
            value: "gitlab.{{ ec2_name_prefix }}.{{ workshop_dns_zone | default('') }}"
          - key: username
            value: "{{ ec2_info['skylight_rhel8_gitlab']['username'] }}"
        volumes: []
        additional_enis: []

      - name: instance1
        groups: windows
        lateeval_conditional: null
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['skylight_windows_instance']['size'] }}"
        image: "{{ win_instance_ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: |
          {{ lookup('template', 'skylight_windows_userdata.j2', template_vars=dict(vm_name='instance1')) | indent(width=10) }}
        tags:
          - key: App
            value: AnsibleWorkshop
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: become_password
            value: "{{ admin_password }}"
          - key: ansible_winrm_transport
            value: "ntlm"
          - key: ansible_winrm_server_cert_validation
            value: "ignore"
          - key: ansible_winrm_operation_timeout_sec
            value: 120
          - key: ansible_winrm_read_timeout_sec
            value: 150
          - key: ansible_port
            value: 5986
        volumes: []
        additional_enis: []

      - name: instance2
        groups: windows
        lateeval_conditional:
          when_variable: doubleup
          is_value: true
        assign_public_ip: true
        keypair_name: "{{ ec2_name_prefix }}-key"
        flavour: "{{ ec2_info['skylight_windows_instance']['size'] }}"
        image: "{{ win_instance_ami.image_id }}"
        number_of_instances: "{{ student_total }}"
        vpc_subnet_cloudformation_ref: Subnet1
        associate_instance_profile: false
        source_dest_check: true
        ebs_optimized: false
        user_data: |
          {{ lookup('template', 'skylight_windows_userdata.j2', template_vars=dict(vm_name='instance2')) | indent(width=10) }}
        tags:
          - key: App
            value: AnsibleWorkshop
          - key: uuid
            value: "{{ ec2_name_prefix }}"
          - key: guid
            value: "{{ ec2_name_prefix }}"
          - key: Linklight
            value: "This was provisioned through the linklight provisioner"
          - key: become_password
            value: "{{ admin_password }}"
          - key: ansible_winrm_transport
            value: "ntlm"
          - key: ansible_winrm_server_cert_validation
            value: "ignore"
          - key: ansible_winrm_operation_timeout_sec
            value: 120
          - key: ansible_winrm_read_timeout_sec
            value: 150
          - key: ansible_port
            value: 5986
        volumes: []
        additional_enis: []
