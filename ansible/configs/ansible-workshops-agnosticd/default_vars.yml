---
env_type: ansible-workshops-agnosticd
output_dir: /tmp/workdir                # Writable working scratch directory
key_name: ocpkey

lab_user: devops                        # Ansible Service Account

# ansible-workshops handles instances differently, this is the agnosticd hook point
instances: [ ]

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another "just like it"

# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"

# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{ output_dir }}/"

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})
#use_own_key: true
#env_authorized_key: "{{ guid }}key"
#ansible_ssh_private_key_file: ~/.ssh/{{ key_name }}.pem
#set_env_authorized_key: true

# Is this running from Red Hat Ansible Tower
tower_run: false

###### VARIABLES YOU SHOULD ***NOT*** CONFIGURE FOR YOUR DEPLOYEMNT
###### You can, but you usually wouldn't need to.
ansible_user: ec2-user
remote_user: ec2-user

cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "

workshops:
  common:
    ports:
      - proto: 47
        to_port: -1
        from_port: -1
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 443
        from_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: icmp
        to_port: -1
        from_port: -1
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 80
        from_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 22
        from_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 3389
        from_port: 3389
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 8000
        from_port: 8000
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 8080
        from_port: 8080
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 8088
        from_port: 8088
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 8089
        from_port: 8089
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 8443
        from_port: 8443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 830
        from_port: 830
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 5986
        from_port: 5986
        cidr_ip: 0.0.0.0/0
        rule_desc: WinRM
      - proto: udp
        to_port: 514
        from_port: 514
        cidr_ip: 0.0.0.0/0
        rule_desc: WinRM
      - proto: tcp
        to_port: 5432
        from_port: 5432
        cidr_ip: 172.16.0.0/14
        rule_desc: Cluster option DB port
  f5:
    ports:
      - proto: tcp
        to_port: 8081
        from_port: 8081
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8082
        from_port: 8082
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8083
        from_port: 8083
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8084
        from_port: 8084
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8085
        from_port: 8085
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8086
        from_port: 8086
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8087
        from_port: 8087
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8090
        from_port: 8090
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8091
        from_port: 8091
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8092
        from_port: 8092
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8093
        from_port: 8093
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8094
        from_port: 8094
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8095
        from_port: 8095
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8096
        from_port: 8096
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8097
        from_port: 8097
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8098
        from_port: 8098
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8099
        from_port: 8099
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
      - proto: tcp
        to_port: 8100
        from_port: 8100
        cidr_ip: 0.0.0.0/0
        rule_desc: f5 port
  devops:
    ports:
      - proto: tcp
        to_port: 8888
        from_port: 8888
        cidr_ip: 0.0.0.0/0
        rule_desc: DevOps Sphinx Listener
      - proto: tcp
        to_port: 8081
        from_port: 8081
        cidr_ip: 0.0.0.0/0
        rule_desc: DevOps GOGs listener
      - proto: tcp
        to_port: 5000
        from_port: 5000
        cidr_ip: 0.0.0.0/0
        rule_desc: DevOps Container Registry
  windows:
    ports:
      - proto: tcp
        to_port: 8081
        from_port: 8081
        cidr_ip: 0.0.0.0/0
  rhel:
  rhel_90:
  smart_mgmt:
    ports:
      - proto: tcp
        to_port: 5647
        from_port: 5647
        cidr_ip: 0.0.0.0/0
        rule_desc: katello-agent
      - proto: tcp
        to_port: 9090
        from_port: 9090
        cidr_ip: 0.0.0.0/0
        rule_desc: SCAP reports
  network:
    ports:
      - proto: tcp
        to_port: 179
        from_port: 179
        cidr_ip: 0.0.0.0/0
        rule_desc: BGP
  security:
    ports:
      - proto: tcp
        to_port: 256
        from_port: 256
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point fetch policy
      - proto: tcp
        to_port: 257
        from_port: 257
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point logging
      - proto: tcp
        to_port: 18183
        from_port: 18183
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point FW1 sam
      - proto: tcp
        to_port: 18190
        from_port: 18190
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point SmartConsole CPMI
      - proto: tcp
        to_port: 18191
        from_port: 18191
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point SIC policy inst
      - proto: tcp
        to_port: 18192
        from_port: 18192
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point SIC get topology
      - proto: tcp
        to_port: 18194
        from_port: 18194
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point temain
      - proto: tcp
        to_port: 18202
        from_port: 18202
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point CP RTM
      - proto: tcp
        to_port: 18208
        from_port: 18208
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point FW1 remote install
      - proto: tcp
        to_port: 18209
        from_port: 18209
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point
      - proto: tcp
        to_port: 18210
        from_port: 18210
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point FW ICA pull
      - proto: tcp
        to_port: 18211
        from_port: 18211
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point SIC ICA push
      - proto: tcp
        to_port: 18221
        from_port: 18221
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point CP redundant
      - proto: tcp
        to_port: 18264
        from_port: 18264
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point FW ICA services
      - proto: tcp
        to_port: 18266
        from_port: 18266
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point seam
      - proto: tcp
        to_port: 19009
        from_port: 19009
        cidr_ip: 0.0.0.0/0
        rule_desc: Check Point SmartConsole CPMI

network_demo_second_vpc_ingress:
  ports:
    - proto: 47
      to_port: -1
      from_port: -1
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      to_port: 443
      from_port: 443
      cidr_ip: 0.0.0.0/0
    - proto: icmp
      to_port: -1
      from_port: -1
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      to_port: 80
      from_port: 80
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      to_port: 22
      from_port: 22
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      to_port: 8443
      from_port: 8443
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      to_port: 830
      from_port: 830
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      to_port: 179
      from_port: 179
      cidr_ip: 0.0.0.0/0

code_server: true
s3_state: present
teardown: false
website_information: ""
login_website_information: ""
dns_information: "No errors with DNS"
callback_information: "No issue with Ansible Controller callback"
demo_information: "No errors with Demos"
valid_dns_type:
  - aws
  - none
valid_workshop_types:
  - network
  - f5
  - rhel
  - devops
  - security
  - storage
  - windows
  - rhel_90
  - demo
  - smart_mgmt
  - middleware
network_type: multivendor
valid_network_types:
  - cisco
  - arista
  - juniper
  - multivendor
doubleup: false
attendance: true
security_console: qradar
valid_security_console_types:
  - splunk
  - qradar
ibm_community_grid: false
default_tower38_url: https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-3.8.0-1.tar.gz
default_tower37_url: https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-3.7.3-1.tar.gz

ec2_wait: true
# need to circle back and fix this for teardown - sean
ec2_az: "{{aws_region}}a"
ec2_subnet: "172.16.0.0/16"
ec2_subnet2: "172.17.0.0/16"
ec2_network_vpc2: "172.18.0.0/16"
ssh_port: 22
## The default is multivendor, 1 x Cisco, 2 x Arista, 1 x Juniper
##
##   VPC1       VPC2
##  (rtr1)  -   (rtr2)
##    |           |
##  (rtr3)  -   (rtr4)
##
control_type: "rhel8_tower"
rtr1_type: "cisco"
rtr2_type: "arista"
rtr3_type: "juniper"
rtr4_type: "arista"

# additional info needed by AWS ec2 modules
ec2_info:
  juniper:
    owners: 679593333241
    size: c4.xlarge
    ami: "{{ juniper_ami | default(omit) }}"
    os: junos
    username: ec2-user
    filter: "junos-vsrx3-x86-*byol*"
    architecture: x86_64
    volume:
      - device_name: /dev/sda1
        volume_type: io1
        iops: 1000
        volume_size: 40
        delete_on_termination: true
    ami_fact_names:
      - juniper_ami
  cisco:
    owners: 679593333241
    size: t2.medium
    ami: "{{ cisco_ami | default(omit) }}"
    os: ios
    username: ec2-user
    filter: "cisco-CSR-.16.09.02-BYOL*"
    architecture: x86_64
    ami_fact_names:
      - cisco_ami
  arista:
    owners: 679593333241
    size: c5.xlarge
    ami: "{{ arista_ami | default(omit) }}"
    os: eos
    username: ec2-user
    filter: "*VEOSRouter*"
    architecture: x86_64
    ami_fact_names:
      - arista_ami
  checkpoint_mgmt:
    owners: 679593333241
    filter: 'Check Point CloudGuard IaaS BYOL*R80.40*'
    architecture: x86_64
    size: m5.xlarge
    ami: "{{ checkpoint_mgmt_ami| default(omit) }}"
    username: admin
    ami_fact_names:
      - checkpoint_mgmt_ami
  checkpoint_gw:
    owners: 679593333241
    filter: 'Check Point CloudGuard IaaS GW*BYOL*R80.40*'
    architecture: x86_64
    size: c5.large
    ami: "{{ checkpoint_gw_ami| default(omit) }}"
    username: admin
    ami_fact_names:
      - checkpoint_gw_ami
  windows_ws:
    owners: 679593333241
    filter: 'Windows_Server-2016-English-Full-Base*'
    size: m5.xlarge
    ami: "{{ windows_ws_ami| default(omit) }}"
    username: Administrator
    ami_fact_names:
      - windows_ws_ami
  # Look for owner 309956199498 to find official Red Hat AMIs
  rhel8_tower:
    owners: 309956199498
    size: t3.medium
    os_type: linux
    disk_space: 20
    architecture: x86_64
    filter: 'RHEL-8*HVM-*Hourly*'
    username: ec2-user
    ami_fact_names:
      - ansible_control_node_ami_rhel8_tower
  rhel8:
    owners: 309956199498
    size: t3.micro
    os_type: linux
    disk_space: 10
    architecture: x86_64
    filter: 'RHEL-8*HVM-*Hourly*'
    username: ec2-user
    ami_fact_names:
      - node1_ami
      - node_ami_rhel_rhel8
      - node1_ami_rhel8
      - node2_ami_rhel8
      - node3_ami_rhel8
      - node4_ami_rhel8
  rhel7:
    owners: 309956199498
    size: t2.medium
    os_type: linux
    disk_space: 10
    architecture: x86_64
    filter: 'RHEL-7.9_HVM*'
    username: ec2-user
    python_interpreter: '/usr/bin/python'
    ami_fact_names:
      - snort_ami
      - attacker_ami
      - node_ami_rhel_rhel7
      - node1_ami_rhel7
      - node2_ami_rhel7
      - node3_ami_rhel7
      - node4_ami_rhel7
  rhel68:
    owners: 309956199498
    size: t2.medium
    os_type: linux
    disk_space: 10
    architecture: x86_64
    filter: 'RHEL-6.8_HVM_GA*'
    username: ec2-user
    python_interpreter: '/usr/bin/python'
    ami_fact_names:
      - node_ami_rhel_rhel68
      - node1_ami_rhel68
      - node2_ami_rhel68
      - node3_ami_rhel68
      - node4_ami_rhel68
  centos78:
    owners: 125523088429
    size: t2.medium
    os_type: linux
    disk_space: 10
    architecture: x86_64
    filter: 'CentOS*7.8*x86_64'
    username: centos
    python_interpreter: '/usr/bin/python'
    ami_fact_names:
      - node_ami_centos7_centos78
  centos79:
    owners: 125523088429
    size: t2.medium
    os_type: linux
    disk_space: 10
    architecture: x86_64
    filter: 'CentOS*7.9*x86_64'
    username: centos
    python_interpreter: '/usr/bin/python'
    ami_fact_names:
      - node_ami_centos7_centos79
  f5node:
    owners: 679593333241
    size: t2.large
    os_type: linux
    disk_space: 40
    architecture: x86_64
    filter: 'F5 BIGIP-16.0.*PAYG-Best 25Mbps*'
    username: admin
    password: admin
    ami_fact_names:
      - f5_ami
  splunk_enterprise:
    owners: 309956199498
    size: c4.4xlarge
    os_type: linux
    disk_space: 200
    architecture: x86_64
    filter: 'RHEL-7.7_HVM_GA-20190723-x86_64-1-Access2-GP2'
    username: ec2-user
    python_interpreter: '/usr/bin/python'
    ami_fact_names:
      - splunk_ami
  netapp:
    owners: 679593333241
    size: t2.medium
    os_type: linux
    disk_space: 10
    architecture: x86_64
    filter: 'OnCommand_Cloud_Manager_3.7.0_Marketplace*'
    username: ec2-user
    ami_fact_names:
      - netapp_ami
  qradar:
    owners: 721066863947
    size: t2.2xlarge
    os_type: linux
    disk_space: 300
    architecture: x86_64
    filter: 'AnsibleSecurity-QRadarCE*'
    username: ec2-user
    python_interpreter: '/usr/bin/python'
    ami_fact_names:
      - qradar_ami
  skylight_windows_ws:
    filter: 'Windows_Server-2016-English-Full-Base*'
    size: t3.medium
    ami_fact_names: [ ]
  skylight_windows_instance:
    filter: 'Windows_Server-2019-English-Core-Base*'
    size: t3.medium
    ami_fact_names:
      - win_instance_ami
  skylight_rhel7_gitlab:
    filter: 'RHEL-7.6_HVM_GA*x86_64*'
    size: t2.xlarge
    username: ec2-user
    ami_fact_names: [ ]
  skylight_rhel8_gitlab:
    owners: 309956199498
    filter: 'RHEL-8*HVM-*Hourly*'
    size: t2.xlarge
    username: ec2-user
    architecture: x86_64
    ami_fact_names:
      - win_gitlab_ami
  attendance_host:
    owners: 309956199498
    size: t3.micro
    os_type: linux
    disk_space: 10
    architecture: x86_64
    filter: 'RHEL-8*HVM-*Hourly*'
    username: ec2-user
    ami_fact_names:
      - attendance_host_ami
  satellite:
    owners: 551178754270
    filter: Satellite*
    username: ec2-user
    os_type: linux
    size: r5a.xlarge
    ami_fact_names:
      - sat_ami
  middleware:
    owners: 309956199498
    size: t2.xlarge
    os_type: linux
    disk_space: 20
    architecture: x86_64
    filter: 'RHEL-8*HVM-*Hourly*'
    username: ec2-user
    ami_fact_names:
      - node_ami_middleware
debug_teardown: false
