---
- name: Step 004 software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004_01
    - software
  tasks:
    - debug:
        msg: "Software tasks Started"

- name: Install softwares on bastion
  hosts: bastions
  become: true
  tags:
    - step004_02
    - software
  pre_tasks:
    - name: Add control host in automationcontroller group
      add_host:
        name: "{{ groups['bastions'][0] }}"
        groups: automationcontroller

  tasks:
    - when: install_automationcontroller | bool
      include_role:
        name: deploy_automationcontroller

    - when: configure_automationcontroller | bool
      include_role:
        name: automation_platform_loader

    - when: enable_letsencyrpt_cert | bool
      include_role:
        name: aap_controller_cert_issue

    - when: install_vscode_server | bool
      include_role:
        name: vscode-server

  post_tasks:
    - name: remove ansible_automation_controller installer file
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/automationcontroller_installer"
        - "/tmp/automationcontroller.tar.gz"
        - "/tmp/code-server.rpm"

    - name: vscode config block
      when: install_vscode_server | bool
      block:
        - name: Insert vscode proxy conf in nginx
          blockinfile:
            path: /etc/nginx/conf.d/automation-controller.nginx.conf
            marker: "    # ANSIBLE MANAGED BLOCK"
            insertbefore: '.*location \/ \{.*'
            block: "{{ lookup('file', './files/vscode_nginx.conf') }}"

        - name: Restart nginx
          service:
            name: nginx
            state: restarted

- name: software tasks on bastion
  hosts: bastions
  become: true
  tags:
    - step004_02.1
    - post_software
  tasks:
    - name: Enable offline automation controller repo
      command: >-
        yum config-manager --enable ansible-automation-platform

    - name: Install ansible core & navigator
      yum:
        name:
          - ansible-core
          - ansible-navigator
        state: present

    - name: create workshop directories
      file:
        path: "/home/{{ student_name }}/lab_inventory/"
        state: directory
        mode: 0755
        owner: "{{ student_name }}"
        group: users

    - name: generate ansible inventory from template
      template:
        src: ./files/hosts_template.j2
        dest: "/home/{{ student_name }}/lab_inventory/hosts"
        owner: "{{ student_name }}"
        group: users

    - name: clone rhel-workshop
      git:
        repo: https://github.com/ansible/workshops.git
        dest: /tmp/workshops
        version: devel

    - name: copy rhel-workshop to user's home
      copy:
        src: "/tmp/workshops/exercises/ansible_rhel/"
        dest: "/home/{{ student_name }}/rhel-workshop/"
        remote_src: true
        owner: "{{ student_name }}"
        group: users

    - name: copy ansible-navigator.yml 
      copy:
        src: ./files/ansible-navigator.yml
        dest: "/home/{{ student_name }}/.ansible-navigator.yml"
        owner: "{{ student_name }}"
        group: users

    - name: copy setup.yml playbook
      copy:
        src: ./files/setup.yml
        dest: "/home/{{ student_name }}/setup.yml"
        owner: "{{ student_name }}"
        group: users  

    - name: clean workshop clone directory
      file:
        path: "/tmp/workshops"
        state: absent

    - name: include image pull tasks
      include_tasks:
        file: ./setup_image_pull.yml

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step004_03
    - software
  tasks:
    - debug:
        msg: "Software checks completed successfully"
