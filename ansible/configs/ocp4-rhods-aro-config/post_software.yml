---
- name: Step 000 Post Software
  hosts: localhost
  connection: local
  become: false
  tags:
    - step001
    - post_software
  tasks:
    - debug:
        msg: "Step 000 Post Software - Starting"

    - name: Print Sandbox Information
      agnosticd_user_info:
        msg:
          - "The resource group 'openenv-{{ guid }}' was created in our Azure organization."
          - "If you have previously accepted an invitation your environment should be available at https://portal.azure.com"
          - "Your Azure account should be SSO enabled, so please log into the portal with your Red Hat Credentials"
          - "Your account now has full access to this resource group.  All resources must be in this resource group or you will see permission denied errors."
          - "When this OPEN environment is deleted, the resource group will be removed and all data will be irrecovably removed."
          - "Please regularly back up your data and script your changes in case you need to rebuild."
          - "Please see this page for more information: https://www.opentlc.com/azure/openenv_documentation.html"

    - name: Print Azure OPEN Environment Details
      when: azpass is defined
      agnosticd_user_info:
        msg:
          - ""
          - "Your Azure environment details:"
          - "Resource Group: openenv-{{ guid }}"
          - "Application: openenv-{{ guid }}"
          - "Application/Client/Service Principal ID: {{ azappsp.service_principals[0].app_id }}"
          - "Password: {{ azpass }}"
          - "Tenant ID: {{ azure_tenant }}"
          - "Subscription ID: {{ azure_subscription_id }}"
          - ""
          - "Azure CLI quickstart:"
          - "export GUID={{ guid }}"
          - "export CLIENT_ID={{ azappsp.service_principals[0].app_id }}"
          - "export PASSWORD='{{ azpass }}'"
          - "export TENANT={{ azure_tenant }}"
          - "export SUBSCRIPTION={{ azure_subscription_id }}"
          - "export RESOURCEGROUP=openenv-{{ guid }}"
          - ""
          - "curl -L https://aka.ms/InstallAzureCli | bash"
          - "az login --service-principal -u $CLIENT_ID -p $PASSWORD --tenant $TENANT"
          - ""
          - "See https://docs.microsoft.com/en-us/cli/azure/install-azure-cli for more info on installing the azure CLI"
          - "See https://docs.microsoft.com/en-us/cli/azure/ for full documentation of the azure CLI"

    - name: Print Info For Manual ARO Installation
      when:
        - not install_aro | bool
        - az_aro_pass is defined
        - azaroappsp is defined
      agnosticd_user_info:
        msg:
          - ""
          - "We have created a user to administer your Azure OPEN Environment in Azure Active Directory."
          - "{{ openenv_admin_upn }} - Has administrative access to the Azure portal for resource group openenv-{{ guid }}."
          - "It has the temporary password: {{ generated_password }}"
          - "You will be prompted to reset the password upon first login, you must do so."
          - ""
          - "When creating ARO clusters, you must specify the following credentials in the az aro create command using this preconfigured service principal:"
          - "Resource Group: openenv-{{ guid }}"
          - "Client ID: {{ azaroappsp.service_principals[0].app_id }}"
          - "Client Secret: {{ az_aro_pass }}"
          - ""
          - "Example ARO installation commands (log in using az login command from above):"
          - "az network vnet create --resource-group openenv-{{ guid }} --name aro-vnet-{{ guid }} --address-prefixes 10.0.0.0/22"
          - "az network vnet subnet create --resource-group openenv-{{ guid }} --vnet-name aro-vnet-{{ guid }} --name master-subnet --address-prefixes 10.0.0.0/23 --service-endpoints Microsoft.ContainerRegistry"
          - "az network vnet subnet create --resource-group openenv-{{ guid }} --vnet-name aro-vnet-{{ guid }} --name worker-subnet --address-prefixes 10.0.2.0/23 --service-endpoints Microsoft.ContainerRegistry"
          - "az network vnet subnet update --name master-subnet --resource-group openenv-{{ guid }} --vnet-name aro-vnet-{{ guid }} --disable-private-link-service-network-policies true"
          - "az aro create --resource-group openenv-{{ guid }} --name aro-cluster-{{ guid }} --vnet aro-vnet-{{ guid }} --master-subnet master-subnet --worker-subnet worker-subnet --client-id {{ azaroappsp.service_principals[0].app_id }} --client-secret '{{ az_aro_pass }}' --pull-secret @/path/to/pull-secret.txt"

        data:
          guid: "{{ guid }}"
          azappid: "{{ azappsp.service_principals[0].app_id }}"
          azpass: "{{ azpass }}"
          azure_tenant: "{{ azure_tenant }}"
          azure_subscription_id: "{{ azure_subscription_id }}"
          aro_clientid: "{{ azaroappsp.service_principals[0].app_id }}"
          az_aro_pass: "{{ az_aro_pass }}"
          openenv_admin_upn: "{{ openenv_admin_upn }}"
          generated_password: "{{ generated_password }}"

    - name: Provide Pre-Installed ARO Information with AAD
      when:
        - install_aro | bool
      agnosticd_user_info:
        msg:
          - ""
          - "We have created two users in your Azure OPEN Environment in Azure Active Directory:"
          - "{{ openenv_admin_upn }} - Has administrative access to the Azure portal for resource group openenv-{{ guid }} and has cluster-admin on the ARO cluster (if AAD was preconfigured)."
          - "{{ openenv_user_upn }} - Only has user level permissions with no useful access to the Azure portal or ARO cluster (if AAD was preconfigured)."
          - ""
          - "Both have the temporary password: {{ generated_password }}"
          - "You will be prompted to reset the password upon first login, you must do so."
          - ""
          - "IMPORTANT: Please review the ARO RHPDS Lab Guide at https://red.ht/ARORHPDS"
          - ""
          - "Your ARO Console: {{ az_aro4_console_url }}"
          - "Your ARO Kubernetes/OpenShift API Endpoint: {{ az_aro4_public_api_url }}"
          - ""
          - "Username 'kubeadmin' Credentials: {{ az_aro4_kubeadmin_password.stdout }}"
          - ""
          - "You can SSH using the following command:"
          - "ssh {{ remote_user }}@bastion.{{ guid }}.{{ cluster_dns_zone }}"
          - "Password: {{ generated_password }}"
          - ""

    - name: Provide installed ARO data
      when:
        - install_aro | bool
      agnosticd_user_info:
        data:
          guid: "{{ guid }}"
          azappid: "{{ azappsp.service_principals[0].app_id }}"
          azpass: "{{ azpass }}"
          azure_tenant: "{{ azure_tenant }}"
          azure_subscription_id: "{{ azure_subscription_id }}"
          aro_console: "{{ az_aro4_console_url }}"
          aro_api: "{{ az_aro4_public_api_url }}"
          aro_kube_password: "{{ az_aro4_kubeadmin_password.stdout }}"
          openenv_user_upn: "{{ openenv_user_upn }}"
          openenv_admin_upn: "{{ openenv_admin_upn }}"
          generated_password: "{{ generated_password }}"
          bastion_ssh_command: "ssh {{ remote_user }}@bastion.{{ guid }}.{{ cluster_dns_zone }}"
          bastion_password: "{{ generated_password }}"

- name: Deploy Infra and Student Workloads
  import_playbook: workloads.yml

- name: Step 002 Post Software
  hosts: localhost
  connection: local
  become: false
  tags:
    - step001
    - post_software
  tasks:
    - debug:
        msg: "Step 002 Post Software - Completed"

- name: Bookbag
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tasks:
  - name: Deploy Bookbag
    when: deploy_bookbag | bool
    include_role:
      name: bookbag
    vars:
      ACTION: create

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
