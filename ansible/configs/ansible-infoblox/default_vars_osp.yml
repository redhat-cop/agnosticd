---
env_type: ansible-infoblox

################################################################################
### OSP Environment variables
################################################################################

ansible_user: cloud-user
remote_user: cloud-user
admin_user: opentlc-mgr

osp_cluster_dns_server: ddns01.opentlc.com
quota_fip: 7
vscode_server_hostname: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"

## per lab variables
email: gejames@redhat.com
key_name: gejames-key
guid: nioslab

# Default variables.  Changning these may break the lab
provider_network: external
osp_default_rootfs_size: 30
all_ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCvZvn+GL0wTOsAdh1ikIQoqj2Fw/RA6F14O347rgKdpkgOQpGQk1k2gM8wcla2Y1o0bPIzwlNy1oh5o9uNjZDMeDcEXWuXbu0cRBy4pVRhh8a8zAZfssnqoXHHLyPyHWpdTmgIhr0UIGYrzHrnySAnUcDp3gJuE46UEBtrlyv94cVvZf+EZUTaZ+2KjTRLoNryCn7vKoGHQBooYg1DeHLcLSRWEADUo+bP0y64+X/XTMZOAXbf8kTXocqAgfl/usbYdfLOgwU6zWuj8vxzAKuMEXS1AJSp5aeqRKlbbw40IkTmLoQIgJdb2Zt98BH/xHDe9xxhscUCfWeS37XLp75J
default_security_groups: []
use_dynamic_dns: false
osp_project_create: true
update_packages: true
used_security_groups:
  - BastionSG
  - VNIOS

repo_method: satellite
network_private: public
multi_network: true
multi_network_primary: "{{ guid }}-LAN-1-network"

default_metadata:
  guid: "{{ guid }}"
  env_type: "{{ env_type }}"

cloud_provider: osp                     # Which AgnosticD Cloud Provider to use

repo_version: 3.8.1-1

software_to_deploy: tower               # Tower deployment from software/tower.yml
tower_version: 3.8.1-1

nios_temp_license: nios IB-V825 dns dhcp enterprise  # Do not change or NIOS deployment will not work

inventory_groups:
  - tower
use_content_view: false
rhel_repos:
  - rhel-7-server-rpms
  - rhel-7-server-rh-common-rpms
  - rhel-7-server-extras-rpms
  - Red_Hat_GPTE_Labs_Extra_Packages_for_Enterprise_Linux_EPEL_RHEL_7
  - rhel-7-server-optional-rpms
  - rhel-server-rhscl-7-rpms
  - rhel-7-server-ansible-2.9-rpms

common_packages:
  - python
  - python-pip
  - python3
  - python3-pip
  - python3-virtualenv
  - libselinux-python3
  - gcc
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at
  - tree
  - nano
  - ansible

pip_packages:
  - infoblox-client
  - psutil
  - ansible==2.9.15

# Default instance type
__instance_type: 2c2g30d

# Default Image

__image: rhel-server-7.8

networks:
  - name: LAN-1
    shared: "false"
    subnet_cidr: 192.168.2.0/24
    gateway_ip: 192.168.2.1
    allocation_start: 192.168.2.10
    allocation_end: 192.168.2.254
    dns_nameservers: []
    create_router: true

  - name: MGMT
    shared: "false"
    subnet_cidr: 172.26.1.0/24
    gateway_ip: 172.26.1.1
    allocation_start: 172.26.1.10
    allocation_end: 172.26.1.254
    dns_nameservers: []
    create_router: false

# Environment Instances
security_groups:
  - name: BastionSG
    rules:
      - name: SSH
        description: "Allow SSH port"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: http
        description: "Allow http port"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: https
        description: "Allow https port"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: VNIOS
    rules:
      - name: vNIOS-HTTP
        description: "Allow HTTP to VNIOS nodes"
        from_port: 80
        to_port: 80
        protocol: tcp
        remote_prefix: 0.0.0.0/0
        rule_type: Ingress

      - name: vNIOS-HTTPs
        description: "Allow HTTPs to VNIOS nodes"
        from_port: 443
        to_port: 443
        protocol: tcp
        remote_prefix: 0.0.0.0/0
        rule_type: Ingress

      - name: vNIOS-SSH
        description: "Allow HTTPs to VNIOS nodes"
        from_port: 22
        to_port: 22
        protocol: tcp
        remote_prefix: 0.0.0.0/0
        rule_type: Ingress

instances:
  - name: "bastion"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(__instance_type) }}"
    security_groups:
      - BastionSG
    networks:
      - LAN-1
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "tower"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: false
    image_id: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "2c4g30d"
    security_groups:
      - BastionSG
    networks:
      - LAN-1
    tags:
      - key: "AnsibleGroup"
        value: "tower,towers"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "nios"
    count: 1
    public_dns: true
    image_id: "nios-851"
    port_security: true
    vnios: true
    flavor:
      osp: "4c8g100d"
    tags:
      - key: "AnsibleGroup"
        value: "nios,network"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{ key_name }}"
    security_groups:
      - VNIOS
    networks:
      - MGMT
      - LAN-1
...
