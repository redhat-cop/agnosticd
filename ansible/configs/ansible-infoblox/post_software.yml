---

- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: false
  become: true
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

- name: Post software tower tasks
  hosts: bastions
  gather_facts: false
  become: true
  tags:
    - post_tower_tasks
  tasks:
    - name: include post software tower tasks
      include_tasks: ./tower_configure.yml
      when: software_to_deploy | d('None') == 'tower'

# this will create a new venv in tower that all NIOS playbooks should run from
- name: setup virtualenv for nios
  hosts: all:!nios
  gather_facts: false
  become: true
  tags:
    - nios-setup
  tasks:
    - name: install pip packages in virtualenv
      pip:
        name: "{{ pip_packages }}"
        umask: "0022"
        virtualenv: /var/lib/awx/venv/nios
        virtualenv_command: virtualenv-3
        virtualenv_site_packages: true

# nios_network.yml is run from the bastion becuse the infoblox-client
# should not be installed on the deployment control node
- name: post software nios tasks
  hosts: bastions
  gather_facts: false
  become: false
  tags:
    - nios-setup
  tasks:
    - name: copy nios_network.yml to bastion
      template:
        src: ./files/nios_network.j2
        dest: ~/nios_network.yml

    - name: install infoblox collection on bastion
      command: sudo -u devops ansible-galaxy collection install infoblox.nios_modules

    - name: run nios_network.yml from bastion
      command: ansible-playbook ~/nios_network.yml -e 'ansible_python_interpreter=/var/lib/awx/venv/nios/bin/python3'

- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: osp user.info
      when:
        - cloud_provider == 'osp'
        - software_to_deploy == ''
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access VScode UI via browser:"
            - "VScode UI URL: https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "VScode UI Password: {{ vscode_user_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Enter ssh password when prompted: {{ student_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              vscode_ui_url: "https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              vscode_ui_password: "{{ vscode_user_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              ssh_password: "{{ student_password }}"

    - name: osp user.info
      when:
        - cloud_provider == 'osp'
        - software_to_deploy == 'tower'
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access Ansible Tower console via browser:"
            - "Ansible Tower URL: https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Ansible Tower Username: admin"
            - "Ansible Tower Admin Password: {{ tower_admin_password }}"
            - "Ansible Environment for NIOS python modules: /var/lib/awx/venv/nios"
            - ""
            - "To Access VScode UI via browser:"
            - "VScode UI URL: https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "VScode UI Password: {{ vscode_user_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Enter ssh password when prompted: {{ student_password }}"
            - ""
            - "To Access NIOS UI via browser:"
            - "NIOS UI URL: https://{{ groups['nios'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "NIOS UI Username: admin"
            - "NIOS UI Password: {{ nios_admin_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              tower_url: "https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              tower_admin_user: "admin"
              tower_admin_password: "Ansible Tower Admin Password: {{ tower_admin_password }}"
              vscode_ui_url: "https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              vscode_ui_password: "{{ vscode_user_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              ssh_password: "{{ student_password }}"
              dns_zone: "{{ osp_cluster_dns_zone }}"
              nios_url: "https://{{ groups['nios'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              nios_admin_user: "admin"
              nios_admin_password: "{{ nios_admin_password }}"
              nios_grid_ip: "{{ hostvars['nios']['private_ip_address'] }}"

        - name: Deploy Bookbag
          when: bookbag_git_repo is defined
          include_role:
            name: bookbag
          vars:
            ACTION: create


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
