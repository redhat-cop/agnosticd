---

- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: false
  become: true
  tasks:
    - debug:
        msg: "Post-Software tasks Started"


- name: Post software tower tasks
  hosts: bastions
  gather_facts: false
  become: true
  tags:
    - post_tower_tasks
  tasks:
    - name: Downloading Manifest from OpenTLC
      get_url:
        url: "{{ satellite_manifest.url }}"
        dest: "/root/{{ satellite_manifest.filename }}"
        username: "{{ satellite_manifest.username | d(omit)}}"
        password: "{{ satellite_manifest.password | d(omit)}}"

    - name: ensure awx.awx 17.0.0 is installed locally or next task will fail
      command: ansible-galaxy collection install awx.awx:=17.0.0 --force
      delegate_to: localhost

    - name: Inject Ansible Tower license manifest
      tower_license:
        manifest: "/root/{{ satellite_manifest.filename }}"
        eula_accepted: true
        tower_config_file: "/root/.tower_cli.cfg"
      when: software_to_deploy | d('None') == 'tower'
      delegate_to: localhost

- name: Configure Infoblox NIOS for lab
  hosts: localhost
  gather_facts: false
  become: true
  tags:
    - nios-setup
  tasks:
    - name: ensure infoblox.nios collection is installed
      command: ansible-galaxy collection install infoblox.nios_modules:==1.0.2 --force

    - name: ensure infoblox-client python client is installed
      pip:
        name: infoblox-client
        executable: "{{ pip_executable }}"

    - name: configure a network container
      nios_network:
        network: 10.0.0.0/8
        container: true
        comment: Created by Ansible NIOS Lab deployment
        state: present
        provider:
          host: "{{ groups['nios'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
          username: admin
          password: "{{ nios_admin_password }}"

- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: osp user.info
      when:
        - cloud_provider == 'osp'
        - software_to_deploy == ''
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access VScode UI via browser:"
            - "VScode UI URL: https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "VScode UI Password: {{ vscode_user_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Enter ssh password when prompted: {{ student_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              vscode_ui_url: "https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              vscode_ui_password: "{{ vscode_user_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              ssh_password: "{{ student_password }}"

    - name: osp user.info
      when:
        - cloud_provider == 'osp'
        - software_to_deploy == 'tower'
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access Ansible Tower console via browser:"
            - "Ansible Tower URL: https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Ansible Tower Username: admin"
            - "Ansible Tower Admin Password: {{ tower_admin_password }}"
            - ""
            - "To Access VScode UI via browser:"
            - "VScode UI URL: https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "VScode UI Password: {{ vscode_user_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Enter ssh password when prompted: {{ student_password }}"
            - ""
            - "To Access NIOS UI via browser:"
            - "NIOS UI URL: https://{{ groups['nios'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "NIOS UI Username: admin"
            - "NIOS UI Password: {{ nios_admin_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              tower_url: "https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              tower_admin_user: "admin"
              tower_admin_password: "Ansible Tower Admin Password: {{ tower_admin_password }}"
              vscode_ui_url: "https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              vscode_ui_password: "{{ vscode_user_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              ssh_password: "{{ student_password }}"
              dns_zone: "{{ osp_cluster_dns_zone }}"
              nios_url: "https://{{ groups['nios'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              nios_admin_user: "admin"
              nios_admin_password: "{{ nios_admin_password }}"

        - name: Deploy Bookbag
          when: bookbag_git_repo is defined
          include_role:
            name: bookbag
          vars:
            ACTION: create


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
