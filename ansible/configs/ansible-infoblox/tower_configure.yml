---
- name: get contents of file tower_cli.cfg
  command: cat ~/.tower_cli.cfg
  register: towercli
- name: display contents of tower_cli.cfg
  debug:
    msg: "{{ towercli.stdout }}"
- debug:
    msg: "Tower url is {{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"

- name: downloading tower manifest from OpenTLC
  get_url:
    url: "{{ satellite_manifest.url }}"
    dest: "/tmp/{{ satellite_manifest.url | regex_search('(\\w+)(\\.\\w+)+(?!.*(\\w+)(\\.\\w+)+)') }}"
    username: "{{ satellite_manifest.username | d(omit) }}"
    password: "{{ satellite_manifest.password | d(omit) }}"

- name: inject tower license manifest
  awx.awx.tower_license:
    manifest: "/tmp/{{ satellite_manifest.url | regex_search('(\\w+)(\\.\\w+)+(?!.*(\\w+)(\\.\\w+)+)') }}"
    eula_accepted: true
    tower_username: admin
    tower_password: "{{ hostvars['localhost']['tower_admin_password'] }}"
    tower_host: "{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
    validate_certs: false

#- name: remove manifest file
#  file:
#    path: "/tmp/{{ satellite_manifest.url | regex_search('(\\w+)(\\.\\w+)+(?!.*(\\w+)(\\.\\w+)+)') }}"
#    state: absent

- name: create nios inventory in tower
  awx.awx.tower_inventory:
    name: "nios"
    description: "NIOS Inventory"
    organization: "Default"
    state: present
    tower_username: admin
    tower_password: "{{ hostvars['localhost']['tower_admin_password'] }}"
    tower_host: "{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
    validate_certs: false
    variables:
      nios_grid_ip: "{{ hostvars['nios']['private_ip_address'] }}"
      nios_grid_url: "{{ groups['nios'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
      ansible_python_interpreter: /usr/bin/python3
      wapi_version: 2.11.1
  register: result
  retries: 25
  delay: 25
  until: result is not failed

- name: create localhost in nios inventory in tower
  awx.awx.tower_host:
    name: "localhost"
    description: "NIOS Grid Member"
    inventory: "nios"
    state: present
    tower_username: admin
    tower_password: "{{ hostvars['localhost']['tower_admin_password'] }}"
    tower_host: "{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
    validate_certs: false
  register: result
  retries: 25
  delay: 25
  until: result is not failed

- name: create nios inventory group in tower
  awx.awx.tower_group:
    name: "nios_grid"
    description: "NIOS Inventory Group"
    hosts:
      - localhost
    inventory: "nios"
    state: present
    tower_config_file: "~/.tower_cli.cfg"
  register: result
  retries: 25
  delay: 25
  until: result is not failed

- name: create custom nios credential type
  awx.awx.tower_credential_type:
    name: "NIOS Custom Credentials"
    description: "NIOS custom credential type"
    kind: cloud
    inputs:
      fields:
        - type: "string"
          id: "username"
          label: "NIOS Username"
        - type: "string"
          secret: true
          id: "password"
          label: "NIOS Password"
    injectors:
      extra_vars:
        nios_grid_username: "{{'{{ username }}'}}"
        nios_grid_password: "{{'{{ password }}'}}"
    state: present
    tower_username: admin
    tower_password: "{{ hostvars['localhost']['tower_admin_password'] }}"
    tower_host: "{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
    validate_certs: false
  register: result
  retries: 25
  delay: 25
  until: result is not failed

- name: create tower nios credential
  awx.awx.tower_credential:
    name: "nios creds"
    description: "Credentials for NIOS Grid"
    organization: Default
    credential_type: "NIOS Custom Credentials"
    inputs:
      username: "admin"
      password: "{{ hostvars['localhost']['nios_admin_password'] }}"
    tower_username: admin
    tower_password: "{{ hostvars['localhost']['tower_admin_password'] }}"
    tower_host: "{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
    validate_certs: false
  register: result
  retries: 25
  delay: 25
  until: result is not failed
