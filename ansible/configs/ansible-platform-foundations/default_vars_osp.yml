---
################################################################################
### OSP Environment variables
################################################################################

cloud_provider: osp                               
ansible_user: cloud-user
remote_user: cloud-user
output_dir: /tmp/output_dir  

osp_cluster_dns_server: ddns01.opentlc.com
use_dynamic_dns: true
osp_project_create: true

# Default instance type
__instance_type: 2c2g30d
__tower_instance_type: 4c16g30d

# Default Image
__image: rhel-8.2

security_groups:

  - name: TowerSG
    rules:
      - name: TowerHTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: TowerHTTPsPorts
        description: "HTTPs Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      
      - name: TowerSSH
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: FromHostsgTCP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: HostSG
        rule_type: Ingress

      - name: FromHostsgUDP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: HostSG
        rule_type: Ingress

  - name: WebserverSG
    rules:
      - name: WebSerHTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: WebSerHTTPsPorts
        description: "HTTPs Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

# Environment Instances
instances:
  - name: "control"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(__instance_type) }}"
    security_groups:
      - BastionSG
      - TowerSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "tower"
    count: "{{ tower_instance_count | default(1) }}"
    public_dns: true
    dns_loadbalancer: true
    image_id: "{{ tower_instance_image | default(__image) }}"
    flavor:
      osp: "{{ __tower_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "tower"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - TowerSG
      - DefaultSG
      - HostSG

  - name: "webserver"
    count: "{{ webserver_instance_count | default(2) }}"
    public_dns: false
    image_id: "{{ webserver_instance_image | default(__image) }}"
    flavor:
      osp: "{{ webserver_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "webservers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - HostSG
      - WebserverSG
      - DefaultSG

quota_fip: 4

...
