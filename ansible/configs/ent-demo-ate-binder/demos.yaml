---

demos:

  - name: Ansible official demo project
    url: https://github.com/rhpds/product-demos/
    inventories:
      - name: Workshop Inventory
    credentials:
      - name: Workshop Credential
        type: Machine
        inputs:
          username: ec2-user
          ssh_key_data: "{{ ate_base_data.ssh_private_key }}"
    templates:

      - name: setup demo - azure
        playbook: setup_demo.yml
        inventory: local-demo
        extra_vars:
          demo: azure
          resource_group_name: "{{ ate_creds_azure_data.resource_group }}"
        credentials:
          - azure-demo
          - controller-demo

      - name: setup demo - cloud
        playbook: setup_demo.yml
        inventory: local-demo
        extra_vars:
          demo: cloud
        credentials:
          - aws-demo
          - controller-demo

      - name: setup demo - linux
        playbook: setup_demo.yml
        inventory: local-demo
        extra_vars:
          demo: linux
        credentials:
          - aws-demo
          - controller-demo

      - name: setup demo - windows
        playbook: setup_demo.yml
        inventory: local-demo
        extra_vars:
          demo: windows
        credentials:
          - aws-demo
          - controller-demo

    launch_templates:
      - name: setup demo - cloud
      - name: setup demo - linux
      - name: setup demo - windows
      - name: setup demo - azure

    workflow:
      name: "Deploy App on Pre-Prod (AWS)"
      extra_vars:
        survey_public_ip: true
        iis_message: "ATE Demo"
        ansible_password: P@ssw0rd
        rhel_public_key: "{{ ate_base_data.ssh_public_key }}"

      steps:

        - name: create-infra-aws
          job_template: Cloud / Create Infra
          extra_vars: {'infra_provider': 'aws', 'aws_public_key': "{{ ate_base_data.ssh_public_key}}"}
          success:
            - identifier: "create-rhel-node1-aws"
            - identifier: "create-rhel-node2-aws"
            - identifier: "create-win-node1-aws"
            - identifier: "create-win-node2-aws"

        - name: create-rhel-node1-aws
          job_template: Cloud / Create VM
          extra_vars: {'vm_name': 'node1', 'vm_owner': 'ATE demo', 'vm_provider': 'aws', 'vm_blueprint': 'rhel7'}
          success:
            - identifier: "rhel-patching-aws"

        - name: create-rhel-node2-aws
          job_template: Cloud / Create VM
          extra_vars: {'vm_name': 'node2', 'vm_owner': 'ATE demo', 'vm_provider': 'aws', 'vm_blueprint': 'rhel8'}
          success:
            - identifier: "rhel-patching-aws"

        - name: create-win-node1-aws
          job_template: Cloud / Create VM
          extra_vars: {'vm_name': 'win1', 'vm_owner': 'ATE demo', 'vm_provider': 'aws', 'vm_blueprint': 'windows_full'}
          success:
            - identifier: "windows-patching-aws"

        - name: create-win-node2-aws
          job_template: Cloud / Create VM
          extra_vars: {'vm_name': 'win2', 'vm_owner': 'ATE demo', 'vm_provider': 'aws', 'vm_blueprint': 'windows_full'}
          success:
            - identifier: "windows-patching-aws"

        - name: rhel-patching-aws
          job_template: LINUX / Patching
          job_type: "run"
          extra_vars: {'HOSTS': 'node*'}
          success:
            - identifier: "rhel-podman-webserver-aws"

        - name: rhel-podman-webserver-aws
          job_template: LINUX / Podman Webserver
          extra_vars: {'HOSTS': 'node2', 'message': 'Hello world'}

        - name: windows-patching-aws
          job_template: WINDOWS / Patching
          job_type: "run"
          extra_vars: {'HOSTS': 'win*'}
          success:
            - identifier: "windows-install-iis-aws"

        - name: windows-install-iis-aws
          job_template: WINDOWS / Install IIS
          job_type: "run"
          extra_vars: {'HOSTS': 'win*'}

        - name: create-infra-azure
          job_template: AZURE / CREATE INFRA
          success:
            - identifier: "create-rhel-node1-azure"
            - identifier: "create-win-node1-azure"

        - name: create-rhel-node1-azure
          job_template: AZURE / RHEL 8 VM
          # success:
          #   - identifier: "rhel-patching-azure"

        - name: create-win-node1-azure
          job_template: AZURE / Windows VM
          # success:
          #   - identifier: "windows-patching-azure"

        # - name: rhel-patching-azure
        #   job_template: LINUX / Patching
        #   job_type: "run"
        #   extra_vars: {'HOSTS': 'node*'}
        #   success:
        #     - identifier: "rhel-podman-webserver-azure"

        # - name: windows-patching-azure
        #   job_template: WINDOWS / Patching
        #   job_type: "run"
        #   extra_vars: {'HOSTS': 'win*'}
        #   success:
        #     - identifier: "windows-install-iis-azure"

        # - name: rhel-podman-webserver-azure
        #   job_template: LINUX / Podman Webserver
        #   extra_vars: {'HOSTS': 'node2', 'message': 'Hello world'}

        # - name: windows-install-iis-azure
        #   job_template: WINDOWS / Install IIS
        #   job_type: "run"
        #   extra_vars: {'HOSTS': 'win*'}
