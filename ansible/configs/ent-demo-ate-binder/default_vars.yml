---
# default vars for the Automate the Enterpise base config
# See README.adoc for full details

env_type: ent-demo-ate-base

output_dir: "/tmp/output_dir/{{ guid }}"      # Writable working scratch directory
project_tag: "{{ env_type }}-{{ guid }}"      # This var is used to identify stack (cloudformation, azure resourcegroup, ...)

# cloud_provider: ec2                           # Default to AWS

email: "{{ env_type }}@opentlc.com"
guid: "{{ env_type }}-00"
uuid: "{{ guid }}"

cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "

# Dump inventories to output_dir - very useful as a dev -i option

agnosticd_inventory_exporter_enable: true # Dump inventory in output_dir

ansible_service_account_user_name: devops
ansible_devops_user_ssh_config: ./files/ssh_config.j2
agd_install_student_user: false
# TODO: Get rid of this ^^^ after validating nothing useful is done


# Software payload section - outmoded pattern

software_to_deploy: none

# Setup inventory group for AAP2 Automation controller bastion
# load-balancers, app_servers, database_servers may be discarded 
# in future iterations (update default_vars_<CLOUD_PROVIDER> as well

inventory_groups:

  - automationcontroller
  - automationhub
  - database
  - load_balancers
  - app_servers
  - database_servers

# Set this to true after validation  
agd_automation_controller_install: false

### Common Host settings

# FTL Settings
install_ftl: false
ftl_use_python3: true

# install_bastion: true
agd_install_bastion_base: true
agd_install_common: true

# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment

deploy_local_ssh_config_location: "{{ output_dir }}/"

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key

env_authorized_key: "{{ guid }}key"
ansible_ssh_private_key_file: ~/.ssh/{{ env_authorized_key }}.pem
agd_set_env_authorized_key: true
set_env_authorized_key: "{{ agd_set_env_authorized_key }}" # Role should default this

# TODO: set_env_authorized_key should be defaulted in TASK [infra-local-create-ssh_key : Generate SSH keys]

common_packages_el8:
  - python3.8

update_packages: true      # Do you want to run a full yum update

agd_bastion_packages:

  - ansible
  - at
  - bash-completion
  - bind-utils
  - git
  - jq
  - python3.9
  - tmux
  - unzip
  - vim-enhanced
  - wget


# TODO: Update the below to AAP 2.current, requires uploading new installer 

control_node_lab_resources:

  - name: Ansible automation controller manifest
    url: "https://www.opentlc.com/ansible-automation-platform-2-assets/automationcontroller_manifest.zip"
    dest: "~{{ lab_user | default('devops') }}/resources/"
    username: "{{ remote_resources_username | default('') }}"
    password: "{{ remote_resources_password | default('') }}"

  - name: Bundled ansible automation controller installer
    url: "https://www.opentlc.com/ansible-automation-platform-2-assets/ansible-automation-platform-setup-2.1.0-1.tar.gz"
    dest: "~{{ lab_user | default('devops') }}/resources/ansible-automation-platform-setup.tar.gz"
    username: "{{ remote_resources_username | default('') }}"
    password: "{{ remote_resources_password | default('') }}"

# TODO: lab_user depreciated perhaps this should become agnosticd_inventory_exporter_enable
#       or do we beed a new demo user or do e.g. demo-admin, demo-readonly 
#       low priority

...
