##### AgnosticV

cloud_provider: ec2
env_type: just-a-bunch-of-nodes

node_instance_image: RHEL8-default
bastion_instance_image: RHEL8-default

# Use the information from the infra-images role to determine the platform
bastion_instance_platform: >-
  {%- if agnosticd_images.bastion.platform_details | default('') == 'Red Hat BYOL Linux' -%}
  Linux/UNIX
  {%- else -%}
  Red Hat Enterprise Linux
  {%- endif -%}

bastion_instance_type:
  ec2: "t3a.small"

node_instance_type:
  # TODO change to gpu later
  #ec2: "g5.xlarge"
  ec2: "t3a.small"

# Use the information from the infra-images role to determine the platform
node_instance_platform: >-
  {%- if agnosticd_images.node.platform_details | default('') == 'Red Hat BYOL Linux' -%}
  Linux/UNIX
  {%- else -%}
  Red Hat Enterprise Linux
  {%- endif -%}

node_instance_count: 1


# Instead of aws_region, specify a list of regions you want to loop on
agnosticd_aws_capacity_reservation_regions:
  - eu-west-3
  - eu-central-1
  - us-east-2
  - us-east-1
  - us-west-2
  - us-west-1

aws_availability_zone: >-
  {{ agnosticd_aws_capacity_reservation_results.reservations.az1.availability_zone }}

agnosticd_aws_capacity_reservation_ttl: 10m

agnosticd_aws_capacity_reservations:
  az1:
    - instance_count: 1
      instance_platform: "{{ bastion_instance_platform }}"
      instance_type: "{{ bastion_instance_type.ec2 }}"
    - instance_count: "{{ node_instance_count }}"
      instance_platform: "{{ node_instance_platform }}"
      instance_type: "{{ node_instance_type.ec2 }}"

# Don't install common packages
install_common: false
