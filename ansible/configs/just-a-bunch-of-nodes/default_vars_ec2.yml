---
node_instance_image: RHEL75GOLD

# DNS settings for environmnet
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{subdomain_base_short}}{{subdomain_base_suffix}}"

zone_internal_dns: "{{guid}}.internal."
chomped_zone_internal_dns: "{{guid}}.internal"

ansible_user: ec2-user
remote_user: ec2-user

### Route 53 Zone ID (AWS)
# This is the Route53 HostedZoneId where you will create your Public DNS entries
# This only needs to be defined if your CF template uses route53
HostedZoneId: Z3IHLWJZOU9SRT

# The region to be used, if not specified by -e in the command line
aws_region: ap-southeast-2
# The key that is used to connect to the AWS instance initially, it should
# exist in your aws account and the private key should exist on the local machine
# you are provisioning from.
#key_name: "default_key_name"

bastion_instance_platform: Red Hat Enterprise Linux
node_instance_platform: Red Hat Enterprise Linux
#bastion_instance_platform: Linux/UNIX
#node_instance_platform: Linux/UNIX

# AWS on-demand capacity reservation
agnosticd_aws_capacity_reservation_regions:
  - "{{ aws_region }}"
  - ap-southeast-1
  - ap-southeast-2
  - eu-west-1
  - eu-west-2
agnosticd_aws_capacity_reservations:
  az1:
    - instance_count: 1
      instance_platform: "{{ bastion_instance_platform }}"
      instance_type: "{{ bastion_instance_type.ec2 }}"
    - instance_count: "{{ node_instance_count }}"
      instance_platform: "{{ node_instance_platform }}"
      instance_type: "{{ node_instance_type.ec2 }}"

# To test on-demand capacity, this should try all regions and all AZ and fail:
# agnosticd_aws_capacity_reservation_regions:
#   - ap-southeast-1
#   - ap-southeast-2
#   - eu-west-1
#   - eu-west-2
# agnosticd_aws_capacity_reservations:
#   az1:
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "a1.xlarge"
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "m5.xlarge"
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "m5.xlarge"
#     - instance_count: 20
#       instance_platform: Linux/UNIX
#       instance_type: "m5a.8xlarge"
#   az2:
#     - instance_count: 10
#       instance_platform: Linux/UNIX
#       instance_type: "m5a.4xlarge"
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "c5.large"
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "m4.4xlarge"
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "m5zn.large"
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "m6g.xlarge"
#     - instance_count: 2
#       instance_platform: Linux/UNIX
#       instance_type: "m5n.large"
