# vim: set ft=yaml.ansible
---
- name: Step 005 Post Software
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
    - step005
    - post_software
  tasks:
    - name: Entering the post_software.yml
      ansible.builtin.debug:
        msg: Entering the post_software.yml
    - debug: var=tap_rosa_provision_data
    - name: Store Cluster's private key
      ansible.builtin.copy:
        content: "{{ item.ssh_private_key }}\n"
        dest: "{{ output_dir }}/{{ item.key_name }}_sshkey.pem"
        mode: '0400'
      loop:
        - key_name: rosa_cluster
          ssh_private_key: "{{ tap_rosa_provision_data.ssh_provision_key }}"

    - name: Add Clusters to run time inventory
      ansible.builtin.add_host:
        name: "{{ item.name }}"
        groups: "{{ item.group }}"
        ansible_ssh_private_key_file: "{{ output_dir }}/{{ item.key_name }}_sshkey.pem"
        ansible_user: "ec2-user"
        remote_user: "ec2-user"
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no"
      loop:
        - name: "{{ tap_rosa_provision_data.targethost }}"
          key_name: rosa_cluster
          group: rosa_cluster


- name: Get argocd access details from hub
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tasks:

    - name: Create exported variable dictionary for Developer Cluster
      ansible.builtin.set_fact:
        __rosa_cluster: "{{ __rosa_cluster | d({}) | combine({ 'rosa_cluster_' + item.key: item.value}) }}"
      when: item.key is in export_rosa_vars_to_showroom
      loop: "{{ tap_rosa_provision_data | dict2items }}"

    - name: Create exported variable dictionary for QA Cluster
      ansible.builtin.set_fact:
        __eks_cluster: "{{ __eks_cluster | d({}) | combine({ 'eks_cluster_' + item.key: item.value}) }}"
      when: item.key is in export_eks_vars_to_showroom
      loop: "{{ tap_eks_provision_data | dict2items }}"

    - name: Print User Access information
      agnosticd_user_info:
        data:
          "{{ __rosa_cluster }}"

    - name: Print User Access information
      agnosticd_user_info:
        data:
          "{{ __eks_cluster }}"


- name: Run Workloads
  hosts: rosa_cluster
  become: true
  gather_facts: false
  tasks:
    - name: Set Ansible Python interpreter to virtualenv
      ansible.builtin.set_fact:
        ansible_python_interpreter: "/opt/virtualenvs/k8s/bin/python"

    - name: Copy authroized key
      ansible.builtin.copy:
        src: /home/ec2-user/.ssh/authorized_keys
        dest: /root/.ssh/authorized_keys
        remote_src: true
        owner: root
        group: root
        mode: '0600'

    - name: Setup showroom
      ansible.builtin.include_role:
        name: showroom
      vars:
        ansible_python_interpreter: /usr/libexec/platform-python


- name: Step 005 Post Software - Report to Cloudforms
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
    - step005
    - post_software
  tasks:
    - name: Print string expected by Cloudforms
      ansible.builtin.debug:
        msg: "Post-Software checks completed successfully"

    - name: Exiting the post_software.yml
      ansible.builtin.debug:
        msg: Exiting the post_software.yml
...
