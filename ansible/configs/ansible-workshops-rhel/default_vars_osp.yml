---
env_type: ansible-workshops-rhel

################################################################################
### OSP Environment variables
################################################################################

cloud_provider:   osp                               
ansible_user:     cloud-user
remote_user:      cloud-user
admin_user:       opentlc-mgr

key_name:         ocpkey
student_name:     student
lab_user:         devops                          # Ansible Service Account

guid: awshop

user_count: 1

osp_cluster_dns_server: ddns01.opentlc.com
use_dynamic_dns: true
osp_project_create: true

vscode_server_hostname: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"


software_to_deploy: none # tower
repo_version: 3.7.3-1
tower_version: 3.7.3-1

inventory_groups:
  - control
  - web

common_packages:
  - python
  - python-pip
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at
  - ansible
  - tree

default_instance_type: 2c2g30d              # Default instance type
default_image: rhel-8.2                     # Default Image

# Environment Instances/Servers

instances:
  - name: "control"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image | default(default_image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(default_instance_type) }}"
    security_groups:
      - BastionSG
      - WebSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "ansible"
    count: "{{ 1 * (user_count | default(1)) }}"
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ ansible_instance_image | default(default_image) }}"
    flavor:
      osp: "{{ ansible_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "control"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - BastionSG
      - DefaultSG
      - WebSG
      - HostSG


  - name: "node"
    count: "{{ 3 * (user_count | default(1)) }}"
    public_dns: false
    image_id: "{{ node_instance_image | default(default_image) }}"
    flavor:
      osp: "{{ node_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "web"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

security_groups:

  - name: WebSG
    rules:
      - name: WebSGHTTPPort
        description: "Allow HTTP port"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: WebSGHTTPsPort
        description: "Allow HTTPs port"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: HostSGTCP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: HostSG
        rule_type: Ingress

      - name: HostSGUDP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: HostSG
        rule_type: Ingress

#### OSP ####
# See cloud_providers/osp_default_vars.yml
# See roles-infra/infra-osp-project-create/defaults/main.yml

# Set this to true if you need to create a new project in OpenStack
# This should almost always be set to true for OpenShift installations
# If it is set to false, the {{ osp_project_name }} must already exist and
# should be able to run whatever you are deploying
#osp_project_create: true

# If osp_project_create is set to yes, define those:
# Quotas to set for new project that is created
quota_num_instances: 25
#quota_num_cores: 72
#quota_memory: 131072 # in MB
#quota_num_volumes: 25
#quota_volumes_gigs: 500
#quota_loadbalancers: #when Octavia is available
#quota_pool: #when Octavia is available
#quota_networks: 3
#quota_subnets: 3
#quota_routers: 3
quota_fip: 25
#quota_sg: 10
#quota_sg_rules: 100

...
