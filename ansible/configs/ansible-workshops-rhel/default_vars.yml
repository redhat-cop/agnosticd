---
env_type: ansible-workshops-rhel
project_tag: "{{ env_type }}-{{ guid }}"    # This var is used to identify stack (cloudformation, azure resourcegroup, ...)

output_dir: "/tmp/output-dir-{{ guid }}"
email: "{{ env_type }}@opentlc.com"
guid: "{{ env_type }}-00"
uuid: "{{ guid }}"

key_name: ocpkey
admin_user: opentlc-mgr

controllerinstall: true
aap_archive: "~/assets/aap.tar.gz"     # Automation controller bundle

inventory_groups:
  - web
  - control

student_total: 1
student_password: change_me_in_your_secrets

# Workshop vars

  # workshop_student_username: student
username: student

  #control_user_name: "{{ lab_user }}"
  #control_user_ssh_config: ./files/ssh_config.j2

  # vscode_user_name: "{{ lab_user }}"  # "{{ control_user_name }}"

cloud_provider: ec2

### Common Host settings

# FTL Settings
install_ftl: false
  #ftl_use_python3: true

# Login Settings
install_ipa_client: false
install_student_user: false

# Do you want to run a full yum update
update_packages: false

# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{ output_dir }}/"

install_bastion: true
install_common: true

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
env_authorized_key: "{{ guid }}key"
ansible_ssh_private_key_file: ~/.ssh/{{ key_name }}.pem
set_env_authorized_key: true

# Is this running from Red Hat Ansible Tower
#tower_run: false

common_packages:
  - python
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at
  - ansible

cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "

...
