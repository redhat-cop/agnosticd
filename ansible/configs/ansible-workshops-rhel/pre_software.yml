---
- name: Step 003 Pre Software
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
    - step003
    - pre_software

  tasks:

    - name: Placeholder debug output
      debug:
        msg:
          - Pre Software playbook pre-software.yml being called
          - tags: step0003, pre_software

- name: Configure common options on managed nodes and control nodes
  hosts: "control:web"
  gather_facts: false
  become: true
  vars:
    username: "{{ workshop_student_username | default('student') }}"

  tasks:

    - name: "Setup repos as repo_method is defined as {{ repo_method }}"
      when: repo_method is defined
      include_role:
        name: "set-repositories"

    # Ansible Workshops expects resources to be made inside the config/repo itself
    # The following block, which could be assumed to be hacky, allows normal AgnosticD behavior
    # But then copies resources e.g. ssh key etc into to the config itself from output dir

    - name: Setup agnosticd config dir to match ansible workshop collection expectations
      block:

        - name: Create within the config subdirectory guid for ansible workshop resources
          file:
            dest: "{{ playbook_dir }}/{{ guid }}"
            state: directory

#        - name: Copy ssh key to match name used by ansible workshops
#          file:
#            src: "{{ output_dir }}/{{ guid}}key"
#            dest: "{{ output_dir }}/{{ guid}}-private.pem"
#            state: link

        - name: Copy ssh key to config dir
          copy:
            src: "{{ output_dir }}/{{ guid}}key"
            dest: "{{ playbook_dir }}/{{ guid }}/{{ guid }}-private.pem"

        - name: Copy inventory to config dir
          copy:
            src: "{{ output_dir }}/inventory.ini"
            dest: "{{ playbook_dir }}/{{ guid }}/{{ username }}-instances.txt"

      delegate_to: localhost
      become: false
      tags:
        - agnosticd_ansible_workshop_customizations


    - name: Setup Workshop user account
      include_role:
        name: ansible.workshops.user_accounts

    - name: Run common workshop role
      include_role:
        name: ansible.workshops.common
      vars:
        short_name: "{{ hostvars[ansible_host].shortname }}"

    - name: Setup control node working around ansible workshop collections multi seat logic
      when: inventory_hostname in groups.control | first
      block:

        - name: Create lab inventory directory
          file:
            state: directory
            path: /home/{{ username }}/lab_inventory
            owner: "{{ username }}"
            group: "{{ username }}"

        - name: Workaround when condition breaking for single seat config
          copy:
            src: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ username }}-instances.txt"
            dest: /home/{{ username }}/lab_inventory/hosts
            owner: "{{ username }}"
            group: "{{ username }}"

- name: configure ansible control node
  hosts: control
  gather_facts: true
  become: true
  vars:
    controllerinstall: false
    tower_node_aws_api_access: false
  tasks:

    - name: Setup Ansible Workshop control node
      include_role:
        name: ansible.workshops.control_node

    - include_role:
        name: ansible.workshops.code_server
      when:
        - code_server is defined
        - code_server
        - controllerinstall is defined
        - controllerinstall

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check

  tasks:

    - name: Output end of Pre-Software debug
      debug:
        msg: "Pre-Software checks completed successfully"
