---
- name: Step 003 Pre Software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004
    - pre_software

  tasks:

    - name: "Step 003 Pre Software"
      ansible.builtin.debug:
        msg: "Step 000 Pre Software"


    - name: Set local ssh key
      when: agd_set_env_authorized_key | default(true) | bool
      ansible.builtin.import_role:
        name: create_ssh_provision_key

# TODO: Remove but kept for now as reference name: infra-local-create-ssh_key

    - name: Setup strongish common passwords for various users and services
      ansible.builtin.set_fact:
        mysql_password:                         "{{ __common_login_password }}"
        student_password:                       "{{ __common_login_password }}"
        vscode_user_password:                   "{{ __common_login_password }}"
        tower_admin_password:                   "{{ __common_login_password }}"
        ansible_service_account_user_password:  "{{ __common_login_password }}"
      vars:
        __common_login_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"

- name: Configure all hosts with Repositories, Common Files and Set environment key
  hosts: bastions,mysqls
  become: true
  gather_facts: false
  tags:
    - step004
    - common_tasks

  tasks:

#    - name: Setup Repositories
#      when: repo_method is defined
#      ansible.builtin.import_role:
#        name: set-repositories
      
    - name: Setup the authorized ssh key
      when: set_env_authorized_key | default(true) | bool
      ansible.builtin.import_role:
        name: set_env_authorized_key

- name: Configuring Bastion Hosts
  hosts: bastions,mysqls
  become: true
  tags:
    - step004
    - bastion_tasks

  tasks:

    - name: Strong password brought from localhost
      ansible.builtin.set_fact:
        mysql_password:                       "{{ hostvars['localhost']['mysql_password'] }}"
        student_password:                       "{{ hostvars['localhost']['student_password'] }}"
        vscode_user_password:                   "{{ hostvars['localhost']['vscode_user_password'] }}"
        tower_admin_password:                   "{{ hostvars['localhost']['tower_admin_password'] }}"
        ansible_service_account_user_password:  "{{ hostvars['localhost']['ansible_service_account_user_password'] }}"

    - name: Install basic bastion configuration
      when: agd_install_bastion_base | default(true) | bool 
      ansible.builtin.import_role:
        name: bastion-base

    - name: Install control student user configuration
      when: agd_user_create_ansible_service_account | default(true) | bool 
      ansible.builtin.include_role:
        name: user-create-ansible-service-account
    
        #  when: agd_install_ansible_devops_user | default(true) | bool 
    # - { role: "vscode-server", when: 'install_vscode_server | default(true) | bool' }

#- name: Enable podman based service on utility group
#  hosts: utility
#  become: true
#  vars:
#    container_service_deploy_name: classroom
#
#    tasks:
#      - name: Setup Podman based Linux Systemd Service
#        import_role:
#          name: container_service_deploy
#        vars:
#          container_service_deploy_url: "{{ container_service_resource_url }}"

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check

  tasks:

    - name: "Pre-Software checks completed successfully"
      ansible.builtin.debug:
        msg: "Pre-Software checks completed successfully"

...
