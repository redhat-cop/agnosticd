---
### AWS EC2 Environment settings

ansible_user: centos
remote_user: centos

aws_region: us-east-1 # The region to be used

### Networking and DNS (AWS) 

## Route 53 Zone ID (AWS)
# This is the Route53 HostedZoneId where you will create your Public DNS entries
# This only needs to be defined if your CF template uses route53

HostedZoneId: Z3IHLWJZOU9SRT

subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{ subdomain_base_short }}{{ subdomain_base_suffix }}"
zone_internal_dns: "{{ guid }}.internal."
chomped_zone_internal_dns: "{{ guid }}.internal"

# Instance Configurations and Resources
# TODO: Validate optimal sizing via AAP2 Controller docs
# TODO: Validate preferred operating system with ATE team      
#       Current ContentView supports RHEL 8 and 9  

default_instance_image: RHEL84GOLD-latest # Default operating system image
default_instance_type: t3.medium # Default instance types

bastion_instance_image: CENTOS79
bastion_instance_type: t3.medium

centos_instance_image: CENTOS79
centos_instance_type: t3.medium

#
# Instances to deploy
#

instances:

  - name: bastion
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    ansible_user: centos
    remote_user: centos
    image: "{{ bastion_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ bastion_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG

  - name: mysql
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    ansible_user: centos
    remote_user: centos
    image: "{{ centos_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ centos_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "mysqls"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ rootfs_size_bastion | default(50) }}"
    security_groups:
      - BastionSG
      - HostSG
      - MysqlSG

security_groups:
  - name: MysqlSG
    rules:
      - name: MYSQLPort
        description: "MYSQL Port"
        from_port: 3306
        to_port: 3306
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: WebSG
    rules:
      - name: HTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: HTTPSPorts
        description: "HTTP Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: FromHostSG
        description: "Allow everything from HostSG nodes"
        from_port: 0
        to_port: 65535
        protocol: -1
        from_group: HostSG
        rule_type: Ingress

...
