---
# default vars for the Automate the Enterpise base config
# See README.adoc for full details

env_type: convert-to-rhel-azure-arc

output_dir: "/tmp/output_dir/{{ guid }}"      # Writable working scratch directory
project_tag: "{{ env_type }}-{{ guid }}"      # This var is used to identify stack (cloudformation, azure resourcegroup, ...)

# cloud_provider: ec2                           # Default to AWS

email: "{{ env_type }}@opentlc.com"
guid: "{{ env_type }}-00"
uuid: "{{ guid }}"

cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "

# Dump inventories to output_dir - very useful as a dev -i option

agnosticd_inventory_exporter_enable: true # Dump inventory in output_dir

ansible_service_account_user_name: devops
ansible_devops_user_ssh_config: ./files/ssh_config.j2
config_user_preferred_python: False

agd_install_student_user: false
agd_bastion_packages: []

# TODO: Get rid of this ^^^ after validating nothing useful is done

# Software payload section - outmoded pattern

software_to_deploy: none

# Setup inventory group for AAP2 Automation controller bastion
# load-balancers, app_servers, database_servers may be discarded 
# in future iterations (update default_vars_<CLOUD_PROVIDER> as well

inventory_groups:
  - bastions
  - mysqls
#  - automationcontroller
#  - automationhub

# FTL Settings
install_ftl: false

# install_bastion: true
agd_install_bastion_base: true
agd_install_common: true

# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment

deploy_local_ssh_config_location: "{{ output_dir }}/"

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key

# agd_set_env_authorized_key: true
set_env_authorized_key: true  #"{{ agd_set_env_authorized_key }}" # Role should default this
env_authorized_key: "{{ guid }}key"
ansible_ssh_private_key_file: ~/.ssh/{{ env_authorized_key }}.pem
ansible_service_account_user_ssh_config: ssh_config.j2

update_packages: false      # Do you want to run a full yum update

...
