#oc patch route console -n openshift-console -p '{"spec":{"host":"console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"}}'
openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes   -keyout example.key -out example.crt -subj "/CN=api.{{ guid }}.{{ cluster_dns_zone }}"   -addext "subjectAltName=DNS:*.apps.{{ guid }}.{{ cluster_dns_zone }}"
oc create secret tls --cert=example.crt --key=example.key -n openshift-config routercerts
#oc create secret tls --cert=example.crt --key=example.key -n openshift-ingress routercerts
#oc create secret tls --cert=cert.pem --key=privkey.pem -n openshift-authentication v4-0-config-system-router-certs --dry-run=client -o yaml | oc patch -f - -p '{ "metadata": { "finalizers": ["kubernetes"] }}' --dry-run=client -o yaml | oc create -f -
oc patch ingresscontroller default -n openshift-ingress-operator --type=merge --patch='{"spec": { "defaultCertificate": { "name": "routercerts" }}}'
#oc patch ingresses.config cluster --type merge -p '{"spec":{"domain": "apps.{{ guid }}.{{ cluster_dns_zone }}"}}'
oc patch ingresses.config cluster --type merge -p '{"spec":{"appsDomain": "apps.{{ guid }}.{{ cluster_dns_zone }}"}}'
#  domain: apps.{{ guid }}.{{ cluster_dns_zone }}
cat <<EOF | oc replace -f -
apiVersion: config.openshift.io/v1
kind: Ingress
metadata:
  name: cluster
spec:
  appsDomain: apps.{{ guid }}.{{ cluster_dns_zone }}
  domain: ocp.example.com
  componentRoutes:
    - name: oauth-openshift
      namespace: openshift-authentication
      hostname: oauth-openshift.apps.{{ guid }}.{{ cluster_dns_zone }}
      servingCertKeyPairSecret:
        name: routercerts

    - name: console
      namespace: openshift-console
      hostname: console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}
      servingCertKeyPairSecret:
        name: routercerts

EOF
