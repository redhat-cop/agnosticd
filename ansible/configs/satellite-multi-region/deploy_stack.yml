---
- debug:
    msg: "stack_file is {{stack_file}}"
- when: stack_file == 'default'
  block:
    - name: Run infra-ec2-template-generate Role (target_regions)
      include_role:
        name: infra-ec2-template-generate
      vars:
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ aws_region }}"

    - set_fact:
        stack_deployed: false
    - name: Run infra-ec2-template-create Role (target_regions)
      include_role:
        name: infra-ec2-template-create
      vars:
        aws_region_loop: "{{ aws_region }}"
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ aws_region }}"

- when: stack_file != 'default'
  block:
    - name: Run infra-ec2-template-generate Role (target_regions)
      include_role:
        name: infra-ec2-template-generate
      vars:
        cloudformation_template_src: "../../configs/{{ env_type }}/files/cloud_providers/{{ stack_file }}"
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ aws_region }}"
 
    - set_fact:
        stack_deployed: false

    - name: Run infra-ec2-template-create Role (target_regions)
      include_role:
        name: infra-ec2-template-create
      vars:
        aws_region_loop: "{{ aws_region }}"
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ aws_region }}"

- name: report Cloudformation error (target_regions)
  fail:
    msg: "FAIL {{ project_tag }} Create Cloudformation"
  when: not cloudformation_out is succeeded
  tags:
    - provision_cf_template

- name: Run infra-ec2-create-inventory Role (target_regions)
  include_role:
    name: infra-ec2-create-inventory

##### Task to append env_type ssh_config to add capsule nodes deffination for removing dependencies on bastion ###########

- name: Add capsule nodes to workdir ssh config file
  blockinfile:
    dest: "{{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"
    marker: "##### {mark} ADDED BASTION PROXY HOST {{ item }} {{ env_type }}-{{ guid }} ######"
    content: |
        Host {{ item }} {{ hostvars[item].shortname |d('')}}
          Hostname  {{ hostvars[item].public_dns_name }}
          IdentityFile {{ ssh_key | default(infra_ssh_key) | default(ansible_ssh_private_key_file) | default(default_key_name)}}
          IdentitiesOnly yes
          User ec2-user
          ControlMaster auto
          ControlPath /tmp/{{ guid }}-%r-%h-%p
          ControlPersist 5m
          StrictHostKeyChecking no
          ConnectTimeout 60
          ConnectionAttempts 10
          UserKnownHostsFile {{ansible_known_host}}
  loop: "{{ groups['capsules'] }}"
  tags:
    - capsule_ssh_config
### End task ####




