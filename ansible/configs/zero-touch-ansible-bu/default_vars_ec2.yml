---
# ---------------------------------------------------------
# AWS Network settings
# ---------------------------------------------------------
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{ subdomain_base_short }}{{ subdomain_base_suffix }}"
zone_internal_dns: "example.com."
chomped_zone_internal_dns: "example.com"

# ---------------------------------------------------------
# AWS EC2 Environment settings & Sizing
# ---------------------------------------------------------
cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "
aws_region: us-east-2
default_instance_image: "RHEL92GOLD-latest"
default_instance_type: "t3a.medium"
default_rootfs_size: 50

# ---------------------------------------------------------
# AWS EC2 Security Groups
# ---------------------------------------------------------
security_groups:
  - name: ZeroRHELSG
    rules:
      - name: ShowroomHTTPS
        description: "Primary showroom endpoint - for reverse proxy"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: SSH
        description: "Ansible and SSH"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

# ---------------------------------------------------------
# AWS EC2 Instances
# ---------------------------------------------------------
instances:
  - name: "{{ bastion_hostname | default('bastion') }}"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ bastion_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ bastion_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ bastion_rootfs_size | default(default_rootfs_size)  }}"
    security_groups:
      - ZeroRHELSG


# ---------------------------------------------------------
# Enable or disable DNS availablity on the VPC after 
# the deployment
# ---------------------------------------------------------
dns_support_state: false

# ---------------------------------------------------------
# Lock down the bastion network for outbound traffic at
# the end of post_software.yml import
# lock_bastion_security_group.yml
# Finaly Inbound Ingress and Outbound Egress rules
# ---------------------------------------------------------
lock_bastion_security_group: true

zero_touch_ingress_rules:
  - ports:
      - 80
      - 443
      - 8443
    proto: tcp
    cidr_ip: "0.0.0.0/0"

zero_touch_egress_rules:
  - ports:
      - 80
    proto: tcp
    cidr_ip: "0.0.0.0/0"

...
