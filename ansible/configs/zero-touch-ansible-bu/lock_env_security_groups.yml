---
- name: Retrieve VPC
  amazon.aws.ec2_vpc_net_info:
    filters:
      tag:Name: "{{ subdomain_base }}"
  register: r_vpcs

- name: Set VPC ID and Name
  ansible.builtin.set_fact:
    _vpc_id: "{{ r_vpcs.vpcs[0].vpc_id }}"
    _vpc_name: "{{ r_vpcs.vpcs[0].tags.Name }}"

- name: Print VPC ID and Name
  ansible.builtin.debug:
    msg: |
      VPC ID: {{ _vpc_id }}
      Name: {{ _vpc_name }}

- name: Retrieve security group
  amazon.aws.ec2_security_group_info:
    filters:
      tag:Name: "{{ _sg_rule.name }}"
  register: r_security_groups

- name: Set Security group Name
  ansible.builtin.set_fact:
    _security_group_name: "{{ r_security_groups.security_groups[0].group_name }}"
    _security_group_description: "{{ r_security_groups.security_groups[0].description }}"

- name: Print security group name
  ansible.builtin.debug:
    msg: "Security Group Name: {{ _security_group_name }}"

# -------------------------------------------------
# Lock Security group to just the bastion IP
# and the two ports for Showroom (80 for Let's
# Encrypt, 443 for Traefik)
# -------------------------------------------------
- name: Update Security Group
  amazon.aws.ec2_security_group:
    state: present
    name: "{{ _security_group_name }}"
    description: "{{ _security_group_description }}"
    vpc_id: "{{ _vpc_id }}"
    purge_rules: true
    rules: "{{ _sg_rule.rules_ingress }}"
    rules_egress: "{{ _sg_rule.rules_egress }}"
  register: r_sg

- name: Disable/Enable DNS support for EC2 instance
  amazon.aws.ec2_vpc_net:
    dns_support: "{{ dns_support_state | bool }}"
    vpc_id: "{{ r_vpcs.vpcs[0].vpc_id }}"
    region: "{{ aws_region }}"

- name: Print updated SG
  ansible.builtin.debug:
    msg: "{{ r_sg }}"
