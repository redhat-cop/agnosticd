---
- name: Step 003 Pre Software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004
    - pre_software

  tasks:

    - name: "Step 003 Pre Software"
      ansible.builtin.debug:
        msg: "Step 000 Pre Software"

    - name: Set local ssh key
      when: agd_set_env_authorized_key | default(true) | bool
      ansible.builtin.import_role:
        name: create_ssh_provision_key

- name: Configure all hosts with Repositories, Common Files and Set environment key
  hosts: all
  become: true
  gather_facts: false
  tags:
    - step004
    - common_tasks

  tasks:

    - name: Setup Repositories
      when: repo_method is defined
      ansible.builtin.import_role:
        name: set-repositories

    - name: Install common packages from common_packages list
      when: agd_install_common | default(true) | bool
      ansible.builtin.import_role:
        name: common

    - name: Setup the authorized ssh key
      when: set_env_authorized_key | default(true) | bool
      ansible.builtin.import_role:
        name: set_env_authorized_key

- name: Configuring Bastion Hosts
  hosts: bastions
  become: true
  tags:
    - step004
    - bastion_tasks

  tasks:

    - name: Install basic bastion configuration
      when: agd_install_bastion_base | default(true) | bool
      ansible.builtin.import_role:
        name: bastion-base

    - name: Create a user for RHEL Zero labs
      when: zero_touch_rhel_user | default(true) | bool
      ansible.builtin.include_role:
        name: zero_touch_rhel_user

    - name: Setup ssh for the zero_touch_rhel_user
      block:
        - name: create /home/{{ zero_touch_rhel_user_user_name }}/.ssh
          ansible.builtin.file:
            dest: /home/{{ zero_touch_rhel_user_user_name }}/.ssh
            mode: 0700
            owner: "{{ zero_touch_rhel_user_user_name }}"
            group: "users"
            state: directory

        - name: copy the environment .pem key
          ansible.builtin.copy:
            src: "{{ hostvars.localhost.env_authorized_key_path }}"
            dest: "/home/{{ zero_touch_rhel_user_user_name }}/.ssh/{{ env_authorized_key }}.pem"
            owner: "{{ zero_touch_rhel_user_user_name }}"
            group: "users"
            mode: 0400

        - name: copy the environment .pub key
          ansible.builtin.copy:
            content: "{{ hostvars.localhost.env_authorized_key_content_pub }}"
            dest: "/home/{{ zero_touch_rhel_user_user_name }}/.ssh/{{ env_authorized_key }}.pub"
            owner: "{{ zero_touch_rhel_user_user_name }}"
            group: "users"
            mode: 0400

        - name: copy .ssh/config template
          ansible.builtin.template:
            src: ./files/ssh_config.j2
            dest: /home/{{ zero_touch_rhel_user_user_name }}/.ssh/config
            owner: "{{ zero_touch_rhel_user_user_name }}"
            group: "users"
            mode: 0400

        - name: Set authorized key from file
          authorized_key:
            user: "{{ zero_touch_rhel_user_user_name }}"
            state: present
            key: "{{ hostvars.localhost.ssh_provision_pubkey_content
              | default(hostvars.localhost.env_authorized_key_content_pub) }}"

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check

  tasks:

    - name: "Pre-Software checks completed successfully"
      ansible.builtin.debug:
        msg: "Pre-Software checks completed successfully"

- name: Run pre_software_validation playbook
  when: >-
    agd_pre_software_validation | default(false) | bool
      or agd_validation | default(false) | bool
  ansible.builtin.import_playbook: pre_software_validation.yml
  tags:
    - pre_software_validation
    - agd_validation

...
