---
- name: Step 005 Post Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Step 005 Post Software"

- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: Save Student SSH password as agnosticd_user_info
      agnosticd_user_info:
        data:
          guid: "{{ guid }}"
          student_ssh_command: "ssh {{ student_user }}@bastion.{{ subdomain_base }}"
          student_ssh_password: "{{ student_password | default(hostvars[groups.bastions.0].student_password) }}"
          student_bastion_hostname: "bastion.{{ subdomain_base }}"

    - name: Sending server login info
      agnosticd_user_info:
        msg:
          - "Access the lab environment via SSH:"
          - "ssh {{ student_user }}@bastion.{{ subdomain_base }}"
          - "The ssh password is: {{ student_password | default(hostvars[groups.bastions.0].student_password) }}"

- name: Showroom deployer
  hosts: bastions[0]
  gather_facts: true
  become: true
  tags:
    - showroom

  tasks:

    # Workaround to generate a showroom password to avoid
    # reusing the rosa user's password. Can be removed
    # once Showroom uses SSH keys to log into the terminal
    - name: Generate showroom user password
      when: showroom_user_password | default("") | length == 0
      ansible.builtin.set_fact:
        showroom_user_password: >-
          {{ lookup('password', '/dev/null chars=ascii_letters,digits '
              ~ 'length=' ~ showroom_user_password_length | default(16)
          ) }}

    - name: Deploy Showroom Web Interface
      when: showroom_git_repo is defined
      ansible.builtin.include_role:
        name: showroom

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
