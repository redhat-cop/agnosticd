---
- name: Step 004 Environment specific Software
  hosts: localhost
  gather_facts: False
  become: false
  tasks:
    - debug:
        msg: "Software tasks Started"

- name: Configure software on bastion
  hosts:
    - bastions
  tasks:

  - name: Pull the UBI image.
    command: podman pull registry.access.redhat.com/ubi8/python-36
    register: r_podman_pull
    until: r_podman_pull.rc == 0
    retries: 20
    delay: 30

  - name: Pull the UBI image for root.
    become: true
    command: podman pull registry.access.redhat.com/ubi8/python-36
    register: r_podman_pull
    until: r_podman_pull.rc == 0
    retries: 20
    delay: 30

  - name: Check for a running lab-guide container.
    command: podman container ls --filter=name=lab-guide --quiet
    register: result

  - name: Debug
    debug: msg="{{ result.stdout }}"

  - name: Pull the workshopper container.
    command: podman pull quay.io/bkozdemb/labguide
    register: r_podman_pull
    until: r_podman_pull.rc == 0
    retries: 20
    delay: 30

  - name: Run the workshopper container.
    command: podman run --restart=always -d -p 8080:10080 --name=lab-guide quay.io/bkozdemb/labguide
    when: result.stdout | length == 0

  - name: Copy files
    copy:
      src: files/bastions
      dest: $HOME/files

- name: Configure Software on nodes
  hosts:
    - nodes
  tasks:

  - name: Pull registry image
    command: podman pull docker.io/library/registry:2
    register: r_podman_pull
    until: r_podman_pull.rc == 0
    retries: 20
    delay: 30

  - name: Check for a running hello container.
    command: podman container ls --filter=name=hello --quiet
    register: r_podman_container_ls

  - name: Show podman container ls result
    debug:
      msg: "{{  r_podman_container_ls.stdout }}"

  - name: Pull and run the hello container.
    command: podman run --restart=always --name=hello -d -p8080:8080 quay.io/bkozdemb/hello:latest
    when: r_podman_container_ls.stdout | length == 0

  - name: Copy files
    copy:
      src: files/nodes
      dest: $HOME/files

  - name: Copying configuration files from templates.
    template:
      src: files/templates/ssl_cert_cnf_template.j2
      dest: $HOME/files/nodes/registry-files/gen-certs/myserver.cnf

- name: Verify services/workloads are running on bastions.
  hosts:
    - bastions
  tasks:

  - name: Check lab guide container is listening.
    uri:
      url: http://localhost:8080/dashboard/

- name: Verify services/workloads are running on nodes.
  hosts:
    - nodes
  tasks:
  - name: Check hello container is listening.
    uri:
      url: http://localhost:8080

- name: Deploy Roles if infra_workloads defined
  hosts:
    - nodes
  gather_facts: false
  run_once: false
  become: yes
  tags:
    - infra_workloads
  tasks:
  - name: apply infra workloads roles on nodes
    when:
    - infra_workloads|d("")|length > 0
    block:
      - name: Apply role "{{ workload_loop_var }}" on nodes
        include_role:
          name: "{{ workload_loop_var }}"
        vars:
          ACTION: "provision"
        loop: "{{ infra_workloads.split(',')|list }}"
        loop_control:
          loop_var: workload_loop_var


- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
