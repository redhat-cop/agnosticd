---
- name: Step 004 Environment specific Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Software tasks Started"

- name: Preconfigure nodes for software
  hosts:
    - nodes
  become: true
  gather_facts: false
  tags:
    - software
  tasks:
    - name: ensure /root/.docker exists
      file:
        path: /root/.docker
        state: directory
        mode: 0700
        owner: root
        group: root

    - name: Create pull secret file
      copy:
        content: "{{ ocp4_pull_secret }}"
        dest: "/root/.docker/config.json"
        mode: 0600
        owner: root
        group: root

    - name: Pull postgres image
      command: podman pull registry.redhat.io/rhel8/postgresql-13:1-109
      register: r_podman_pull
      until: r_podman_pull.rc == 0
      retries: 10

    - name: Pull clair image
      command: podman pull registry.redhat.io/quay/clair-rhel8:v3.8.5
      register: r_podman_pull
      until: r_podman_pull.rc == 0
      retries: 10

    - name: Delete pull secret file
      file:
        path: /root/.docker/config.json
        state: absent

- name: Configure bastion
  hosts:
    - bastions
  become: true
  gather_facts: false
  tags:
    - clone_and_run_ext_playbook
  tasks:
    - name: Install Ansible
      ansible.builtin.dnf:
        name: ansible-core
        state: installed

    - name: Clone course repo
      git:
        repo: "https://github.com/redhat-gpte-labs/practical-intro-to-container-security.git"
        dest: "/root/workshop"
        version: "2023"
        clone: true

    - name: Create gpte-guid config file
      copy:
        dest: "/root/workshop/deploy/config/gpte-guid.txt"
        mode: "444"
        content: "{{ guid }}"

    - name: "Install workshop files on nodes"
      shell:
        chdir: "/root/workshop"
        cmd: "./deploy-lab-nodes.sh"

- name: Deploy Roles if infra_workloads defined
  hosts:
    - nodes
  gather_facts: false
  run_once: false
  become: true
  tags:
    - infra_workloads
  tasks:
    - name: apply infra workloads roles on nodes
      when:
        - infra_workloads | default("") | length > 0
      block:
        - name: Apply role "{{ workload_loop_var }}" on nodes
          include_role:
            name: "{{ workload_loop_var }}"
          vars:
            ACTION: "provision"
          loop: "{{ infra_workloads.split(',') | list }}"
          loop_control:
            loop_var: workload_loop_var


- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
