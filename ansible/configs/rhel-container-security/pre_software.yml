---
- name: Step 003 Pre Software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - pre_software
  tasks:
    - name: "Step 003 Pre Software"
      ansible.builtin.debug:
        msg: "Step 003 Pre Software"

    - name: Set local ssh key
      ansible.builtin.import_role:
        name: infra-local-create-ssh_key
      when: set_env_authorized_key | bool

- name: Configure all hosts with Repositories, Common Files and Set environment key
  hosts:
    - all
  become: true
  gather_facts: false
  tags:
    - common_tasks
  tasks:
    - name: Setup Repositories
      when: repo_method is defined
      ansible.builtin.import_role:
        name: set-repositories

    - name: Install common packages from common_packages list
      when: install_common | default(true) | bool
      ansible.builtin.import_role:
        name: common

    - name: Setup the authorized ssh key
      when: set_env_authorized_key | default(true) | bool
      ansible.builtin.import_role:
        name: set_env_authorized_key

    - name: remove insights nag
      file:
        path: /etc/motd.d/insights-client
        state: absent

- name: Configuring Bastion Hosts
  hosts: bastions
  become: true
  gather_facts: false
  tags:
    - bastion_tasks

  tasks:
    - name: Install basic bastion configuration
      when: install_bastion_base | default(false) | bool
      ansible.builtin.import_role:
        name: bastion-base

    - name: Install full bastion configuration
      when: install_bastion | default(false) | bool
      ansible.builtin.import_role:
        name: bastion

    - name: Install student user
      when: install_student_user | default(true) | bool
      ansible.builtin.import_role:
        name: bastion-student-user

    - name: Install student user ssh on bastion
      block:
        - name: copy the environment .pem key
          copy:
            src: "{{ hostvars.localhost.env_authorized_key_path }}"
            dest: "/home/{{ student_user }}/.ssh/{{env_authorized_key}}.pem"
            owner: "{{ student_user }}"
            group: "users"
            mode: 0400

        - name: copy the environment .pub key
          copy:
            content: "{{ hostvars.localhost.env_authorized_key_content_pub }}"
            dest: "/home/{{ student_user }}/.ssh/{{env_authorized_key}}.pub"
            owner: "{{ student_user }}"
            group: "users"
            mode: 0400

        - name: Copy ssh config template
          template:
            src: "{{ control_user_ssh_config }}"
            dest: /home/{{ student_user }}/.ssh/config
            owner: "{{ student_user }}"
            group: "users"
            mode: 0400
          when: control_user_ssh_config is defined


- name: Configuring Nodes
  hosts: nodes
  become: true
  gather_facts: false
  tags:
    - node_tasks

  tasks:
    - name: Install control user
      when: install_control_user | default(true) | bool
      ansible.builtin.import_role:
        name: control-user

    - name: Set authorized key from file
      authorized_key:
        user: "{{ student_user }}"
        state: present
        key: "{{ hostvars.localhost.env_authorized_key_content_pub }}"


- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check

  tasks:
    - name: "Pre-Software checks completed successfully"
      ansible.builtin.debug:
        msg: "Pre-Software checks completed successfully"
