guid: CHANGEME                          # Your Global UNIQUE Identifier

################################################################################
################################################################################
### Code Ready Container settings
################################################################################
################################################################################

codeready_containers_hacks_crc_version: "1.15.0"
codeready_containers_hacks_haproxy_ip: "0.0.0.0"
codeready_containers_hacks_ocp4_version: latest
codeready_containers_hacks_ocp4_release: latest
codeready_containers_hacks_ocp4_release_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ codeready_containers_hacks_ocp4_release }}/"
ocp4_client: "openshift-client-linux.tar.gz"
# Default memory in MiB
codeready_containers_hacks_memory_crcvm: 24576
# Defaul cpus
codeready_containers_hacks_vcpu_crcvm: 8

################################################################################
################################################################################
### OSP All in One
################################################################################
################################################################################


chomped_zone_internal_dns: "example.com"
domain: "{{ chomped_zone_internal_dns }}"
# The public interface for FIPs
NeutronPublicInterface: eth0
NeutronBridgeMappings: datacentre:br-ctlplane
NeutronPhysicalBridge: br-ctlplane
# The size of the loopback file used by the cinder LVM driver.
CinderLVMLoopDeviceSize: 10280
# Creates a demo provider network. Important to set it to false if ansible.netcommon collection can't be installed
create_demo_provider_network: false

################################################################################
################################################################################
### Grafana settings
################################################################################
################################################################################

grafana_disable_signout_menu: false
grafana_admin_user: "root"
grafana_admin_password: "secret"

################################################################################
################################################################################
### Environment Structure
################################################################################
################################################################################

################
### Env vars ###
################

env_type: osp-stf                       # Name of config to deploy
cloud_provider: osp                     # Which AgnosticD Cloud Provider to use

ansible_user: cloud-user

email: example@example.com               # User info for notifications
output_dir: /tmp/output_dir              # Writable working scratch directory
admin_user: "{{ guid }}-user"            # User created by the project. Leave as {{ guid }}-user
student_name: "{{ guid }}-user"          # This will be used to create a student login ID
# Auto-generated by default
#student_password: "r3dh4t1!"             # Customize the student password here. Keep in mind these systems may be public facing.
install_student_user: true

########################
## Environment Images ##
########################

bastion_image_file: rhel-8.2
osp_image_file: rhel-8.2
crc_image_file: rhel-8.2

########################
## Environment Sizing ##
########################

bastion_instance_type:
#  osp: "m1.small"
  osp: "2c2g30d"

osp_instance_type:
  osp: "sap-4-64"
#  osp: "8-128"

crc_instance_type:
  osp: "8c32g100d"

# Networks
# A list of the private networks and subnets to create in the project
# You can create as many as you want, but at least one is required.
# Use the name of the networks where appropriate in the instance list
networks:
  - name: management_network
    shared: "false"
    subnet_cidr: 192.168.47.0/24
    gateway_ip: 192.168.47.1
    allocation_start: 192.168.47.10
    allocation_end: 192.168.47.100
    dns_nameservers: []
    create_router: true

##### Security Groups ###
security_groups:
  - name: bastionSG
    rules:
      - name: BastionSSHPublic
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
  - name: CRCSG
    rules:
      - name: SSHCRCSG
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: HTTPsCRCSG
        protocol: tcp
        description: "HTTPS Public"
        from_port: 443
        to_port: 443
        cidr: 0.0.0.0/0
        rule_type: Ingress
      - name: HTTPCRCSG
        protocol: tcp
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: 6443CRCSG
        protocol: tcp
        description: "HTTP Public"
        from_port: 6443
        to_port: 6443
        cidr: "0.0.0.0/0"
        rule_type: Ingress
  - name: OSPSG
    rules:
      - name: SSHOSPG
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: FromOSPTCP
        description: "Allow everything from OSPSG nodes"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: OSPSG
        rule_type: Ingress
      - name: FromOSPTCPUDP
        description: "Allow everything from OSPSG nodes"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: OSPSG
        rule_type: Ingress
      - name: OSPBastionUDPPorts
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        group: bastionSG
        rule_type: Ingress
      - name: OSPBastionTCPPorts
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        group: bastionSG
        rule_type: Ingress

# Environment Instances
instances:
  - name: "bastionstf"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: false
    image_id: "{{ bastion_image_file }}"
    create_vol: false
    attach_vol: false
    flavor: "{{ bastion_instance_type }}"
    rootfs_size: 30
    metadata:
      - AnsibleGroup: "bastions"
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - guid: "{{ guid }}"
      - env_type: "{{ env_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    network: management_network
    floating_ip: true
    security_groups:
      - BastionSG

  - name: ospallinone
    count: 1
    unique: true
    dns_loadbalancer: false
    public_dns: true
    floating_ip: true
    image: "{{ osp_image_file }}"
    flavor: "{{ osp_instance_type }}"
    metadata:
      - AnsibleGroup: "osps"
      - function: osp
      - user: "{{ student_name }}"
      - ostype: linux
      - guid: "{{ guid }}"
      - env_type: "{{ env_type }}"
    rootfs_size: 100
    network: management_network
    security_groups:
      - OSPSG

  - name: "stfcrc"
    count: 1
    unique: true
    public_dns: true
    floating_ip: true
    dns_loadbalancer: false
    image: "{{ crc_image_file }}"
    flavor: "{{ crc_instance_type }}"
    metadata:
      - AnsibleGroup: "stfcrcs"
      - function: stfcrc
      - user: "{{ student_name }}"
      - ostype: linux
      - guid: "{{ guid }}"
      - env_type: "{{ env_type }}"
    rootfs_size: 100
    network: management_network
    security_groups:
      - CRCSG

# Stuff that only GPTE cares about:
install_ipa_client: false

################################################################################
################################################################################
### Common Host settings
################################################################################
################################################################################

repo_method: rhn
# Do you want to run a full yum update
update_packages: false
common_packages:
  - bash-completion
  - tmux
  - wget
  - vim-enhanced

rhel_repos:
  - rhel-8-for-x86_64-appstream-rpms
  - rhel-8-for-x86_64-baseos-rpms
  - rhel-8-for-x86_64-highavailability-rpms
  - ansible-2.9-for-rhel-8-x86_64-rpms
  - openstack-16.1-for-rhel-8-x86_64-rpms
  - fast-datapath-for-rhel-8-x86_64-rpms


###V2WORK, these should just be set as default listed in the documentation
install_bastion: true
install_common: true
## SB Don't set software_to_deploy from here, always use extra vars (-e) or "none" will be used
#software_to_deploy: none


## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another.
# Using GUID is required, if it is not passed in the command line or uncommented
# here the deployment will fail
#guid: defaultguid

###V2WORK, these should just be set as default listed in the documentation
# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"


### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})

###V2WORK, these should just be set as default listed in the documentation
use_own_key: true
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true

###V2WORK THIS SHOULD MOVE INTO THE ROLE
# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"
