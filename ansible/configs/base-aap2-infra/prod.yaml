---
purpose: production

__meta__:
  deployer:
    scm_ref: ate-base-0.2.0
    # scm_ref: ate-0.0.7 preserved for easy rollback of last minute changes! tok@redhat.com

deploy_automationcontroller_installer_url: https://gpte-public.s3.amazonaws.com/aap2/ansible-automation-platform-setup-bundle-2.3-1.2.tar.gz

default_instance_image: RHEL84GOLD
bastion_instance_image: RHEL84GOLD
automation_controller_instance_image: RHEL84GOLD
automation_database_instance_image: RHEL84GOLD
automation_hub_instance_image: RHEL84GOLD

update_packages: false
repo_method: satellite
set_repositories_satellite_ha: true
set_repositories_satellite_url: labsat-ha.opentlc.com
set_repositories_satellite_org: Red_Hat_GPTE_Labs
set_repositories_satellite_activationkey: ent-demo-automate-the-enterprise

#
# Instances to deploy
#

instances:

  - name: bastion
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ bastion_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ bastion_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - BookbagSG

  - name: aap-controller
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ automation_controller_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ automation_controller_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "automationcontroller"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ rootfs_size_bastion | default(50) }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG

  - name: aap-hub
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ automation_hub_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ automation_hub_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "automationhub"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG

  - name: aap-database
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: true
    floating_ip: false
    image: "{{ automation_database_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ automation_database_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "automationcontroller_database"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - HostSG

security_groups:

  - name: WebSG
    rules:
      - name: HTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: HTTPSPorts
        description: "HTTP Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress


  - name: BookbagSG
    rules:

      - name: BookbagMain
        description: "Bookbag main port"
        from_port: 8080
        to_port: 8080
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: FromHostSG
        description: "Allow everything from HostSG nodes"
        from_port: 0
        to_port: 65535
        protocol: -1
        from_group: HostSG
        rule_type: Ingress
...
