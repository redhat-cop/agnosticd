---
- name: Step 002 - Post Infrastructure
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
  - step002
  - post_infrastructure
  tasks:
  - name: OpenStack Post Infrastructure
    when: cloud_provider is match("osp")
    environment:
      OS_AUTH_URL: "{{ osp_auth_url }}"
      OS_USERNAME: "{{ osp_auth_username }}"
      OS_PASSWORD: "{{ osp_auth_password }}"
      OS_PROJECT_NAME: "{{ osp_project_name }}"
      OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
      OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"
    block:
    - name: OpenShift Floating IPs on OpenStack
      include_role:
        name: ocp-infra-osp-fip

  - name: GCP Post Infrastructure
    when: cloud_provider is match("gcp")
    block:
    - name: Create secret for SSH Key
      include_role:
        name: infra-gcp-ssh-key

  - name: EC2 Post Infrastructure
    when: cloud_provider is match("ec2")
    block:
    - name: get Route53User credentials from stack outputs
      set_fact:
        route53user: "{{ cloudformation_out_final.stack_outputs.Route53User }}"
        route53user_access_key: "{{ cloudformation_out_final.stack_outputs.Route53UserAccessKey }}"
        route53user_secret_access_key: "{{ cloudformation_out_final.stack_outputs.Route53UserSecretAccessKey }}"
      when:
      - cloudformation_out_final is defined
      - cloudformation_out_final.stack_outputs.Route53UserAccessKey is defined
      - cloudformation_out_final.stack_outputs.Route53UserSecretAccessKey is defined

  - name: Azure Post Infrastructure
    when: cloud_provider is match("azure")
    block:
    - name: Store SSH Key in shared keyvault
      include_role:
        name: infra-azure-ssh-key

    - name: Set FQDN for the bastion VM
      when: item.name is match('bastion')
      set_fact:
        rhel_remote_host: "{{item.fqdns|d(item.publicIps)|d('')}}"
      with_items: "{{vm_list}}"
    - name: Set FQDN for each Windows VM
      set_fact:
        windows_remote_hosts: ""
    - name: Set FQDN for each Windows VM
      when: item.name is match ('vmwin*')
      set_fact:
        windows_remote_hosts: "{{item.fqdns|d(item.publicIps)|d('')}},{{windows_remote_hosts}}"
      with_items: "{{vm_list}}"

    - name: Print Host Information
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
      - "Remote User: {{ remote_user }}"
      - "RHEL Bastion Host: {{ rhel_remote_host }}"
      - "Windows Host(s): {{ windows_remote_hosts }}"
      - "Windows Password: {{ windows_password }}"
      when: ocp4_cluster_show_access_user_info | bool

- name: Add the Azure user to the Subscription
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  environment:
    AZURE_CLIENT_ID: "{{ azure_service_principal }}"
    AZURE_SUBSCRIPTION_ID: "{{ azure_subscription_id }}"
    AZURE_SECRET: "{{ azure_password }}"
    AZURE_TENANT: "{{ azure_tenant }}"
    AZURE_CONFIG_DIR: "{{ azure_config_dir }}"
  tasks:
  - name: Run the azure add user to subscription
    include_role:
      name: open-env-azure-add-user-to-subscription

  - name: Print Azure OPEN Environment Details
    when:
    - azpass is defined
    - not enable_aap_email | default(false) | bool
    agnosticd_user_info:
      msg: |

        Your Azure environment details:
        Resource Group: openenv-{{ guid }}
        DNS Zone: {{ guid }}.{{ azure_root_dns_zone }}
        Application: openenv-{{ guid }}
        Application/Client/Service Principal ID: {{ azapp.applications[0].app_id }}
        Password: {{ azpass }}
        Tenant ID: {{ azure_tenant }}
        Subscription ID: {{ assignedsubscription.subscriptions[0].subscription_id }}

  - name: Update user info
    agnosticd_user_info:
      data:
        azure_tenant: "{{ azure_tenant }}"
        azure_subscription: "{{ assignedsubscription.subscriptions[0].subscription_id }}"
        azure_resource_group: "openenv-{{ guid }}"
        azure_dns_zone: "{{ guid }}.{{ azure_root_dns_zone }}"
        azure_application: "openenv-{{ guid }}"
        azure_service_principal_id: "{{ azapp.applications[0].app_id }}"
        azure_service_principal_password: "{{ azpass }}"
        azure_tenant_id: "{{ azure_tenant }}"
