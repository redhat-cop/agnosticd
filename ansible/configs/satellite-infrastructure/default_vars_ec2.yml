################################################################################
### Environment Settings for aws
################################################################################
## Environment Sizing

cloud_provider: ec2                     # Which AgnosticD Cloud Provider to use                # User info for notifications
HostedZoneId: Z3IHLWJZOU9SRT
aws_region: ap-southeast-2


# How many do you want for each instance type
bastion_instance_type: "t3.medium"
bastion_instance_image: RHEL75

satellite_instance_count: 1
satellite_instance_type: "m5.2xlarge"

security_groups:
  - name: BastionSG
    rules:
      - name: BasSSHPublic
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: SatelliteSG
    rules:
      - name: SatHTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: SatHTTPSPorts
        description: "HTTPS Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: SatcommplexPorts
        description: "commplex Public"
        from_port: 5000
        to_port: 5000
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: SatvfmobilePorts
        description: "vfmobile Public"
        from_port: 5646
        to_port: 5646
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: SatvfmobileSPorts
        description: "vfmobileS Public"
        from_port: 5647
        to_port: 5647
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: BastionUDPPorts
        description: "Only from bastion"
        from_port: 0
        to_port: 65535
        protocol: udp
        from_group: DefaultSG
        rule_type: Ingress
      - name: BastionTCPPorts
        description: "Only from bastion"
        from_port: 0
        to_port: 65535
        protocol: tcp
        from_group: DefaultSG
        rule_type: Ingress
 
# Environment Instances
instances:
  - name: "bastion"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: false
    security_groups:
      - BastionSG
      - DefaultSG
    image: "{{ bastion_instance_image }}"
    flavor:
      ec2: "{{bastion_instance_type}}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "satellite"
    count: "{{satellite_instance_count}}"
    public_dns: true
    security_groups: 
      - SatelliteSG
      - DefaultSG
    flavor:
      ec2: "{{satellite_instance_type}}"
    tags:
      - key: "AnsibleGroup"
        value: "satellites"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

# DNS settings for environmnet
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{subdomain_base_short}}{{subdomain_base_suffix}}"

zone_internal_dns: "{{guid}}.internal."
chomped_zone_internal_dns: "{{guid}}.internal"

