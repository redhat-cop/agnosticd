- hosts: undercloud
  become_user: stack
  become: true
  gather_facts: False
  vars:
    create_webserver_sh: !unsafe |
      cat >webserver.sh <<\EOF
      #!/bin/sh

      MYIP=$(/sbin/ifconfig eth0|grep 'inet addr'|awk -F: '{print $2}'| awk '{print $1}');
      OUTPUT_STR="Welcome to $MYIP\r"
      OUTPUT_LEN=${#OUTPUT_STR}

      while true; do
          echo -e "HTTP/1.0 200 OK\r\nContent-Length: ${OUTPUT_LEN}\r\n\r\n${OUTPUT_STR}" | sudo nc -l -p 80
      done
      EOF
    create_heat_example_2: |
      cat >heat_example.yaml <<\EOF
      heat_template_version: rocky

      description: >
        Provision a instance with a floating ip

      # Set parameters for input and stack provision time
      parameters:
        KeyName:
          description: Name of an existing SSH keypair to inject into the instance
          type: string
          constraints:
        FlavorSize:
          description: The flavor required for the instance
          type: string
          default: "m1.small"
        TemplateName:
          description: The name of an image to deploy
          type: string
          default: "rhel-8.1"
        PrivateNet:
          type: string
          description: Private Network (From openstack network list)
        PrivateSubnet:
          type: string
          description: Private Subnet (From openstack subnet list)
        PublicNet:
          type: string
          description: Public Network (From openstack network list)
        SecurityGroup:
          type: string
          description: Security group
          default: "student"
        VolumeSize:
          type: number
          description: Size of the volume to be created.
          default: 1
          constraints:
            - range: { min: 1, max: 10 }
              description: must be between 1 and 10 Gb.
      resources:
        # Create an Instance
        instance0:
          type: OS::Nova::Server
          properties:
            flavor: { get_param: FlavorSize }
            image: { get_param: TemplateName }
            key_name: { get_param: KeyName }
            networks:
              - port: { get_resource: instance0_port0 }
        # Create a Network Port for that instance
        instance0_port0:
          type: OS::Neutron::Port
          properties:
            network: { get_param: PrivateNet }
            fixed_ips:
              - subnet: { get_param: PrivateSubnet }
            security_groups:
              - { get_param: SecurityGroup }
        # Associate a floating IP to that instance
        instance0_public:
          type: OS::Neutron::FloatingIP
          properties:
            floating_network: { get_param: PublicNet }
            port_id: { get_resource: instance0_port0 }

        DataVolume:
          type: OS::Cinder::Volume
          properties:
           size: { get_param: VolumeSize }
           name:  datavolume
           description: Cinder Volume Test
        MountPoint:
            type: OS::Cinder::VolumeAttachment
            properties:
              instance_uuid: { get_resource: instance0 }
              volume_id: { get_resource: DataVolume }
              mountpoint: /dev/vdb


      outputs:
        # Output our fixed and floating IPs - This will be shown in 'openstack stack output list'
        instance0_private_ip:
          description: IP address of instance0 in private network
          value: { get_attr: [ instance0, first_address ] }
        instance0_public_ip:
          description: Floating IP address of instance0 in public network
          value: { get_attr: [ instance0_public, floating_ip_address ] }
      EOF
    create_clouds_yaml: |
      cat >clouds.yaml <<\EOF
      clouds:
        student:
          auth:
            auth_url: http://overcloud.localdomain:5000
            project_name: studentproject
            username: student
            password: r3dh4t1!
            user_domain_name: gpte
            project_domain_name: Default
          region_name: regionOne
        localstudent:
          auth:
            auth_url: http://overcloud.localdomain:5000
            project_name: studentproject
            username: localstudent
            password: r3dh4t1!
            user_domain_name: Default
            project_domain_name: Default
          region_name: regionOne
      EOF

    create_heat_example: |
      cat >heat_example.yaml <<\EOF
      heat_template_version: rocky

      description: >
        Provision a instance with a floating ip

      # Set parameters for input and stack provision time
      parameters:
        KeyName:
          description: Name of an existing SSH keypair to inject into the instance
          type: string
          constraints:
        FlavorSize:
          description: The flavor required for the instance
          type: string
          default: "m1.small"
        TemplateName:
          description: The name of an image to deploy
          type: string
          default: "rhel-8.1"
        PrivateNet:
          type: string
          description: Private Network (From openstack network list)
        PrivateSubnet:
          type: string
          description: Private Subnet (From openstack subnet list)
        PublicNet:
          type: string
          description: Public Network (From openstack network list)
        SecurityGroup:
          type: string
          description: Security group
          default: "student"
      resources:
        # Create an Instance
        instance0:
          type: OS::Nova::Server
          properties:
            flavor: { get_param: FlavorSize }
            image: { get_param: TemplateName }
            key_name: { get_param: KeyName }
            networks:
              - port: { get_resource: instance0_port0 }
        # Create a Network Port for that instance
        instance0_port0:
          type: OS::Neutron::Port
          properties:
            network: { get_param: PrivateNet }
            fixed_ips:
              - subnet: { get_param: PrivateSubnet }
            security_groups:
              - { get_param: SecurityGroup }
        # Associate a floating IP to that instance
        instance0_public:
          type: OS::Neutron::FloatingIP
          properties:
            floating_network: { get_param: PublicNet }
            port_id: { get_resource: instance0_port0 }


      outputs:
        # Output our fixed and floating IPs - This will be shown in 'openstack stack output list'
        instance0_private_ip:
          description: IP address of instance0 in private network
          value: { get_attr: [ instance0, first_address ] }
        instance0_public_ip:
          description: Floating IP address of instance0 in public network
          value: { get_attr: [ instance0_public, floating_ip_address ] }
      EOF
    undercloud_mysql_command: >-
      sudo podman exec -ti mysql mysql -uroot -p$(grep undercloud_mysql_root_password undercloud-passwords.conf |cut -d" " -f2)
    create_hieradata: |
        cat >/home/stack/hieradata.yaml <<\EOF
        ironic::config::ironic_config:
          ipmi/use_ipmitool_retries:
            value: True
        EOF
  tasks:
    - name: 03_Explore_Undercloud_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_03
      loop:
        - sudo -l
        - rpm -q python3-tripleoclient
        - cat undercloud.conf
        - ip a s dev eth0
        - sudo ovs-vsctl show
        - ip a s dev br-ctlplane
        - cat ~/stackrc
        - source ~/stackrc && openstack network list --name ctlplane
        - source ~/stackrc && openstack subnet list --network ctlplane --long
        - cat ~/containers-prepare-parameter.yaml
        - grep container_images_file ~/undercloud.conf
        - curl -s http://192.0.2.1:8787/v2/_catalog | jq "."
        - sudo podman ps
        - source ~/stackrc && openstack catalog list
        - source ~/stackrc && openstack catalog list

    - name: Output 03_Explore_Undercloud_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_03.results }}"


    - name: 04_Explore_Overcloud_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_04
      loop:
        - cat ~/deploy.sh
        - source ~/stackrc && openstack stack list
        - source ~/stackrc && openstack overcloud plan list
        - source ~/stackrc && openstack server list
        - cat ~/templates/node-info.yaml
        - source ~/stackrc && openstack overcloud roles list
        - source ~/stackrc && openstack overcloud roles show Controller
        - source ~/stackrc && openstack overcloud roles generate Controller Compute
        - cat ~/templates/roles_data.yaml
        - source ~/stackrc && openstack network list
        - source ~/stackrc && openstack subnet list
        - cat ~/templates/network_data.yaml
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane ip a
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo ovs-vsctl show
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane jq "." /etc/os-net-config/config.json
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane grep overcloud-controller-0 /etc/hosts
        - cat ~/overcloudrc
        - source ~/stackrc && openstack port list |grep virtual_ip
        - cat ~/templates/environments/ips-from-pool-all.yaml
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo pcs status|grep " ip"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo pcs status
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-novacompute-0.ctlplane sudo podman ps
        - source ~/overcloudrc && openstack hypervisor list
        - source ~/overcloudrc && openstack compute service list
        - source ~/overcloudrc && openstack network agent list
        - source ~/overcloudrc && openstack service list


    - name: Output 04_Explore_Overcloud_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_04.results }}"

    - name: 05_Database_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_05
      loop:
        - cat undercloud-passwords.conf
        - sudo podman ps -f name=mysql
        - "{{ undercloud_mysql_command }} -e 'SELECT User, Host, Password FROM mysql.user;'"
        - "{{ undercloud_mysql_command }} -e 'show databases;'"
        - "{{ undercloud_mysql_command }} -e 'use nova;SHOW TABLES;'"
        - "{{ undercloud_mysql_command }} -e 'use nova;SHOW TABLES WHERE Tables_in_nova LIKE \"instance%\";'"
        - "{{ undercloud_mysql_command }} -e 'use nova;describe instances;'"
        - "{{ undercloud_mysql_command }} -e 'use nova;select display_name from instances group by display_name;'"
        - "source ~/stackrc && openstack stack environment show overcloud|grep Password:"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo pcs status |grep "Container bundle set.* galera-bundle" -A3
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=galera

    - name: Output 05_Database_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_05.results }}"


    - name: 06_Messaging_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_06
      loop:
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo pcs status |grep "Container bundle set.* rabbitmq-bundle" -A3
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=rabbitmq
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti \$(sudo podman ps -f name=rabbitmq -q) rabbitmqctl cluster_status"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo crudini --get  /var/lib/config-data/puppet-generated/nova/etc/nova/nova.conf  DEFAULT transport_url
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo crudini --get  /var/lib/config-data/puppet-generated/neutron/etc/neutron/neutron.conf  DEFAULT transport_url
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=memcached
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman exec -ti memcached memcached-tool overcloud-controller-0 display
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo crudini --get  /var/lib/config-data/puppet-generated/nova/etc/nova/nova.conf  keystone_authtoken memcached_servers
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo crudini --get  /var/lib/config-data/puppet-generated/neutron/etc/neutron/neutron.conf  keystone_authtoken memcached_servers
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo grep ^CACHES -A11  /var/lib/config-data/puppet-generated/horizon/etc/openstack-dashboard/local_settings

    - name: Output 06_Messaging_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_06.results }}"

    - name: 08_Keystone
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_08
      loop:
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=keystone
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo egrep -v '^#|^$' /var/lib/config-data/puppet-generated/keystone/etc/keystone/keystone.conf"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo egrep -v '^#|^$' /var/lib/config-data/puppet-generated/keystone/etc/httpd/conf.d/10-keystone_wsgi.conf"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo egrep -v '^#|^$' /var/lib/config-data/puppet-generated/keystone/etc/keystone/domains/keystone.gpte.conf"
        - cat ~/templates/keystone_domain_specific_ldap_backend.yaml
        - source ~/overcloudrc && openstack project list
        - source ~/overcloudrc && openstack project create --description "Student Project" studentproject
        - source ~/overcloudrc && openstack quota show studentproject
        - source ~/overcloudrc && openstack domain list
        - source ~/overcloudrc && openstack user list --domain gpte
        - source ~/overcloudrc && openstack user list --domain Default
        - source ~/overcloudrc && openstack user create --password r3dh4t1! --email student@example.com --project studentproject localstudent
        - source ~/overcloudrc && openstack role list
        - source ~/overcloudrc && openstack role add  --user localstudent --project studentproject member
        - sed -e 's/OS_USERNAME=admin/OS_USERNAME=localstudent/' -e 's/OS_PROJECT_NAME=admin/OS_PROJECT_NAME=studentproject/' -e 's/OS_PASSWORD=.*/OS_PASSWORD=r3dh4t1!/' -e 's/OS_CLOUDNAME=overcloud/OS_CLOUDNAME=localstudent/' overcloudrc | tee localstudentrc
        - source ~/localstudentrc && openstack project list
        - source ~/overcloudrc && openstack role add  --user student --user-domain gpte --project studentproject member
        - sed -e 's/OS_USER_DOMAIN_NAME=Default/OS_USER_DOMAIN_NAME=gpte/' -e 's/OS_USERNAME=admin/OS_USERNAME=student/' -e 's/OS_PROJECT_NAME=admin/OS_PROJECT_NAME=studentproject/' -e 's/OS_PASSWORD=.*/OS_PASSWORD=r3dh4t1!/' -e 's/OS_CLOUDNAME=overcloud/OS_CLOUDNAME=student/' overcloudrc | tee studentrc
        - source ~/studentrc && openstack project list
        - "{{ create_clouds_yaml }}"
        - openstack --os-cloud localstudent user show localstudent
        - openstack --os-cloud student user show student

    - name: Output 08_Keystone
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_08.results }}"

    - name: 09_Ironic_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_09
      loop:
        - sudo podman ps -f name=ironic
        - sudo ls /var/log/containers/ironic
        - sudo ls /var/log/containers/ironic-inspector/
        - cat ~/nodes.json
        - source ~/stackrc && openstack baremetal node list
        - source ~/stackrc && openstack baremetal node show ctrl01
        - source ~/stackrc && openstack baremetal introspection list
        - source ~/stackrc && openstack baremetal introspection data save ctrl01 | jq "."
        - source ~/stackrc && openstack overcloud profiles list
        - source ~/stackrc && openstack image list
        - ls -l ~/images/
        - ls -l /var/lib/ironic/httpboot/
        - egrep -v "(^#|^$)" /var/lib/config-data/puppet-generated/ironic/etc/ironic/ironic.conf
        - source ~/stackrc && openstack baremetal driver list
        - sudo egrep -v "(^#|^$)" /var/lib/config-data/puppet-generated/ironic_inspector/etc/ironic-inspector/inspector.conf

    - name: Output 09_Ironic_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_09.results }}"

    - name: 10_Nova_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_10
      loop:
        - sudo podman ps -f name=nova
        - sudo ls /var/log/containers/nova
        - source ~/stackrc && openstack compute service list
        - sudo grep  ^compute_driver /var/lib/config-data/nova/etc/nova/nova.conf
        - source ~/stackrc && openstack server list
        - source ~/stackrc && openstack baremetal node list
        - source ~/stackrc && openstack flavor list
        - source ~/stackrc && openstack flavor show baremetal
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=nova
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-novacompute-0.ctlplane sudo podman ps -f name=nova
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-novacompute-0.ctlplane sudo grep  ^compute_driver /var/lib/config-data/puppet-generated/nova_libvirt/etc/nova/nova.conf
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-novacompute-0.ctlplane sudo grep  ^novncproxy_base_url /var/lib/config-data/puppet-generated/nova_libvirt/etc/nova/nova.conf
        - source ~/overcloudrc && openstack compute service list
        - source ~/overcloudrc && openstack hypervisor list
        - source ~/overcloudrc && openstack hypervisor list --long
        - source ~/overcloudrc && openstack hypervisor stats show
        - source ~/overcloudrc && openstack availability zone list --long

    - name: Output 10_Nova_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_10.results }}"

    - name: 11_Neutron_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_11
      loop:
        - source ~/overcloudrc && openstack network agent list
        - source ~/overcloudrc && openstack catalog show neutron
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=ovn
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo ovs-vsctl show
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-novacompute-0.ctlplane sudo podman ps -f name=ovn
        - source ~/overcloudrc && (openstack network create public --share --external --provider-physical-network datacentre --provider-network-type flat ||  openstack network create public --share --external --provider-physical-network datacentre --provider-network-type flat)
        - source ~/overcloudrc && openstack subnet create public --no-dhcp --network public --subnet-range 10.0.0.0/24   --allocation-pool start=10.0.0.220,end=10.0.0.230 --gateway 10.0.0.1 --dns-nameserver 8.8.8.8
        - source ~/studentrc && openstack network create private_student
        - source ~/studentrc && openstack subnet create sub_private_student --network private_student --subnet-range 172.16.0.0/24
        - source ~/studentrc && (openstack router create router_student || openstack router create router_student)
        - source ~/studentrc && (openstack router set --external-gateway public router_student || openstack router set --external-gateway public router_student)
        - source ~/studentrc && (openstack router add subnet router_student sub_private_student || openstack router add subnet router_student sub_private_student)
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo crudini --get  /var/lib/config-data/puppet-generated/neutron/etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo crudini --get  /var/lib/config-data/puppet-generated/neutron/etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane ss -4l | grep 6641
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane ss -4l | grep 6642
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') show"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') list logical_switch_port | head -16"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-sbctl --db=tcp:\$(ss -4l | grep 6642 | awk '{print \$5}') list datapath_binding"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-sbctl --db=tcp:\$(ss -4l | grep 6642 | awk '{print \$5}') lflow-list private_student"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-sbctl --db=tcp:\$(ss -4l | grep 6642 | awk '{print \$5}') --ovs lflow-list private_student | head"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') list Logical_Switch"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') list Logical_Switch_Port"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') list acl"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') list Logical_Router"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') list Logical_Router_Port"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-sbctl --db=tcp:\$(ss -4l | grep 6642 | awk '{print \$5}') list Chassis"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-sbctl --db=tcp:\$(ss -4l | grep 6642 | awk '{print \$5}')  list Encap"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-sbctl --db=tcp:\$(ss -4l | grep 6642 | awk '{print \$5}') list Port_Binding"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo podman exec -ti ovn_controller ovn-nbctl --db=tcp:\$(ss -4l | grep 6641 | awk '{print \$5}') list NAT"

    - name: Output 11_Neutron_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_11.results }}"


    - name: 12_Glance
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_12
      loop:
        - source ~/overcloudrc && openstack catalog show image
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=glance
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo egrep -v '(^$|^#)' /var/lib/config-data/puppet-generated/glance_api/etc/glance/glance-api.conf |grep '\[default_backend\]' -A7"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane "sudo grep 'listen glance' -A11 /var/lib/config-data/puppet-generated/haproxy/etc/haproxy/haproxy.cfg"
        - ssh -o StrictHostKeyChecking=no heat-admin@overcloud-controller-0.ctlplane sudo ls -1 /var/log/containers/glance
        - curl -O http://www.opentlc.com/download/osp16_ca/rhel-8.1-x86_64-kvm.qcow2
        - file rhel-8.1-x86_64-kvm.qcow2
        - source ~/overcloudrc && openstack image create --disk-format qcow2 --container-format bare --public --file rhel-8.1-x86_64-kvm.qcow2  rhel-8.1
        - source ~/overcloudrc && openstack image list
        - source ~/overcloudrc && openstack image show rhel-8.1
        - qemu-img convert -f qcow2 -O raw rhel-8.1-x86_64-kvm.qcow2 rhel-8.1-x86_64-kvm.raw
        - file rhel-8.1-x86_64-kvm.raw
        - ls -lhtr rhel-8.1-x86_64-kvm.raw
        - du -hs rhel-8.1-x86_64-kvm.raw
        - source ~/overcloudrc && openstack image create --disk-format raw --container-format bare --public --file rhel-8.1-x86_64-kvm.raw  rhel-8.1-raw

    - name: Output 12_Neutron_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_12.results }}"


    - name: 13_OpenStack_Instance
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_13
      loop:
        - source ~/studentrc && openstack security group create student --description "WEB and SSH"
        - source ~/studentrc && openstack security group rule create --protocol tcp --dst-port 22 student
        - source ~/studentrc && openstack security group rule create --protocol tcp --dst-port 443 student
        - source ~/studentrc && openstack security group show student
        - source ~/studentrc && openstack keypair create studentkey > studentkey.pem
        - source ~/overcloudrc && openstack flavor list
        - source ~/overcloudrc && openstack flavor create m1.small --ram 512 --disk 20 --vcpus 1
        - source ~/overcloudrc && openstack flavor list
        - source ~/studentrc && openstack image list
        - source ~/studentrc && openstack server create --flavor m1.small --image rhel-8.1 --key-name studentkey --security-group student --network private_student rhel_instance01 --wait
        - source ~/studentrc && openstack floating ip create public
        - source ~/studentrc && openstack floating ip list
        - source ~/studentrc && openstack server add floating ip rhel_instance01 $(openstack floating ip list -c "Floating IP Address" -f value)
        - source ~/studentrc && openstack server list
        - source ~/studentrc && openstack console log show rhel_instance01 | tail -n35
        - chmod 600 studentkey.pem
        - sleep 60
        - source ~/studentrc && ssh -o StrictHostKeyChecking=no -i studentkey.pem cloud-user@$(openstack floating ip list -c "Floating IP Address" -f value) hostname
        - source ~/overcloudrc && openstack availability zone list --long
        - source ~/studentrc && openstack availability zone list
        - source ~/overcloudrc && openstack aggregate create --zone my-zone my-aggregate
        - source ~/overcloudrc && openstack aggregate add host my-aggregate overcloud-novacompute-1.localdomain
        - source ~/studentrc && openstack availability zone list
        - source ~/studentrc && openstack server create --flavor m1.small --image rhel-8.1 --key-name studentkey --security-group student --network private_student rhel_instance02 --availability-zone my-zone --wait
        - source ~/studentrc && openstack server show -c id -f value rhel_instance02 > /tmp/SERVERID
        - source ~/overcloudrc && openstack server show -c OS-EXT-SRV-ATTR:host -f value $(cat /tmp/SERVERID)
        - source ~/overcloudrc && openstack aggregate remove host my-aggregate overcloud-novacompute-1.localdomain

    - name: Output 13_OpenStack_Instance
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_13.results }}"


    - name: 14_Cinder
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_14
      loop:
        - source ~/overcloudrc && openstack volume service list  --service cinder-volume
        - source ~/overcloudrc && cinder get-capabilities hostgroup@tripleo_iscsi
        - source ~/overcloudrc && openstack catalog show volumev3
        - ssh heat-admin@overcloud-controller-0.ctlplane "sudo egrep -v '(^$|^#)' /var/lib/config-data/puppet-generated/cinder/etc/cinder/cinder.conf | head -19"
        - ssh heat-admin@overcloud-controller-0.ctlplane "sudo egrep -v '(^$|^#)' /var/lib/config-data/puppet-generated/cinder/etc/cinder/cinder.conf | tail -8"
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo pcs status|grep cinder
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=cinder
        - ssh heat-admin@overcloud-controller-0.ctlplane "sudo grep 'listen cinder' -A11 /var/lib/config-data/puppet-generated/haproxy/etc/haproxy/haproxy.cfg"
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo ls /var/log/containers/cinder
        - source ~/studentrc && openstack volume list
        - source ~/studentrc && openstack volume create --size 1 rhel_instance02_vol_01
        - source ~/studentrc && openstack volume list
        - source ~/studentrc && openstack volume show rhel_instance02_vol_01
        - source ~/studentrc && openstack server list
        - source ~/studentrc && openstack server add volume rhel_instance02 rhel_instance02_vol_01
        - source ~/studentrc && openstack volume list
        - source ~/studentrc && openstack server add floating ip rhel_instance02 $(openstack floating ip list -c "Floating IP Address" -f value)
        - source ~/studentrc && ssh-keygen -R $(openstack floating ip list -c "Floating IP Address" -f value)
        - source ~/studentrc && ssh -o StrictHostKeyChecking=no -i studentkey.pem cloud-user@$(openstack floating ip list -c "Floating IP Address" -f value) fdisk -l
        - source ~/studentrc && openstack server remove volume rhel_instance02 rhel_instance02_vol_01
        - source ~/studentrc && openstack volume backup create --name backup_rhel_instance02_vol_01 rhel_instance02_vol_01
        - source ~/studentrc && openstack volume backup list
        - source ~/studentrc && openstack volume backup show backup_rhel_instance02_vol_01 -c fail_reason -f value
        - source ~/overcloudrc && openstack role add  --user student --user-domain gpte --project studentproject swiftoperator
        - source ~/studentrc && openstack volume backup create --name backup_rhel_instance02_vol_01_new rhel_instance02_vol_01
        - sleep 60
        - source ~/studentrc && openstack volume backup list --name backup_rhel_instance02_vol_01_new

    - name: Output 14_OpenStack_Instance
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_14.results }}"


    - name: 15_Swift
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_15
      loop:
        - source ~/overcloudrc && openstack catalog show swift
        - ssh heat-admin@overcloud-controller-0.ctlplane cat /var/lib/config-data/puppet-generated/swift/etc/swift/account-server.conf
        - ssh heat-admin@overcloud-controller-0.ctlplane cat /var/lib/config-data/puppet-generated/swift/etc/swift/object-server.conf
        - ssh heat-admin@overcloud-controller-0.ctlplane cat /var/lib/config-data/puppet-generated/swift/etc/swift/container-server.conf
        - ssh heat-admin@overcloud-controller-0.ctlplane cat /var/lib/config-data/puppet-generated/swift/etc/rsyncd.conf
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=swift
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo podman exec -ti swift_object_server swift-ring-builder /etc/swift/object.ring.gz
        - ssh heat-admin@overcloud-controller-0.ctlplane "sudo grep 'listen swift' -A12 /var/lib/config-data/puppet-generated/haproxy/etc/haproxy/haproxy.cfg"
        - source ~/studentrc && swift stat
        - source ~/studentrc && swift auth
        - source ~/studentrc && openstack container list
        - source ~/studentrc && openstack object list volumebackups
        - for i in `seq 1 5`; do head -c 64 /dev/urandom > data$i.file; done && ls -l data*
        - source ~/studentrc && openstack container create my-container
        - source ~/studentrc && openstack object create my-container data*.file
        - source ~/studentrc && openstack object list my-container --long
        - ssh heat-admin@overcloud-controller-0.ctlplane "find /srv/node/ -name '*.data' -cmin -5 -ls"

    - name: Output 15_Swift
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_15.results }}"

    - name: 16_Heat_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_16
      loop:
        - source ~/overcloudrc && openstack catalog show heat
        - ssh heat-admin@overcloud-controller-0.ctlplane  "sudo egrep -v '(^$|^#)' /var/lib/config-data/puppet-generated/heat/etc/heat/heat.conf"
        - ssh heat-admin@overcloud-controller-0.ctlplane cat /var/lib/config-data/puppet-generated/heat_api/etc/httpd/conf.d/10-heat_api_wsgi.conf
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=heat
        - ssh heat-admin@overcloud-controller-0.ctlplane "sudo grep 'listen heat' -A13 /var/lib/config-data/puppet-generated/haproxy/etc/haproxy/haproxy.cfg"
        - "{{ create_heat_example }}"
        - source ~/studentrc && openstack stack create example1 -t heat_example.yaml --parameter KeyName=studentkey --parameter PublicNet=public --parameter PrivateNet=private_student --parameter PrivateSubnet=sub_private_student --parameter FlavorSize=m1.small --parameter SecurityGroup=student --parameter TemplateName=rhel-8.1 --wait
        - source ~/studentrc && openstack stack list
        - source ~/studentrc && openstack stack show example1
        - sleep 120
        - source ~/studentrc && ssh -o StrictHostKeyChecking=no -i studentkey.pem cloud-user@$(openstack stack output show example1 instance0_public_ip -f value|grep 10.0) hostname
        - source ~/studentrc && openstack stack resource list example1
        - source ~/studentrc && openstack stack output list example1
        - source ~/studentrc && openstack stack output show example1 instance0_public_ip
        - "{{ create_heat_example_2 }}"
        - source ~/studentrc && openstack stack update example1 -t heat_example.yaml --parameter KeyName=studentkey --parameter PublicNet=public --parameter PrivateNet=private_student --parameter PrivateSubnet=sub_private_student --parameter FlavorSize=m1.small --parameter SecurityGroup=student --parameter VolumeSize=5 --parameter TemplateName=rhel-8.1 --wait
        - source ~/studentrc && openstack stack resource list example1
        - source ~/studentrc && openstack volume list
        - source ~/studentrc && ssh -o StrictHostKeyChecking=no -i studentkey.pem cloud-user@$(openstack stack output show example1 instance0_public_ip -f value|grep 10.0) sudo fdisk -l
        - source ~/studentrc && openstack stack delete example1 --yes --wait

    - name: Output 16_Heat_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_16.results }}"

    - name: 18_Octavia_Lab
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_18
      loop:
        - source ~/studentrc && openstack server delete rhel_instance01 rhel_instance02
        - cat /usr/share/openstack-tripleo-heat-templates/environments/services/octavia.yaml
        - source ~/studentrc && openstack security group create sg-web
        - source ~/studentrc && openstack security group rule create --protocol tcp --dst-port 22 sg-web
        - source ~/studentrc && openstack security group rule create --protocol tcp --dst-port 80 sg-web
        - source ~/studentrc && openstack security group rule create --protocol icmp sg-web
        - source ~/overcloudrc && openstack flavor create --ram 128 --disk 1 --vcpus 1 m1.tiny
        - curl -L http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img -O
        - source ~/studentrc && openstack image create --disk-format qcow2 --file cirros-0.4.0-x86_64-disk.img cirros
        - "{{ create_webserver_sh }}"
        - source ~/studentrc && openstack server create --image cirros --flavor m1.tiny --security-group sg-web --nic net-id=private_student --user-data webserver.sh web01  --wait
        - source ~/studentrc && openstack server create --image cirros --flavor m1.tiny --security-group sg-web --nic net-id=private_student --user-data webserver.sh web02  --wait
        - source ~/studentrc && openstack server list
        - source ~/studentrc && openstack loadbalancer create --name lbweb --vip-subnet-id sub_private_student
        - source ~/studentrc && openstack loadbalancer list
        - sleep 180
        - source ~/studentrc && openstack loadbalancer listener create --name listenerweb --protocol HTTP --protocol-port 80 lbweb
        - source ~/studentrc && openstack loadbalancer pool create --name poolweb --protocol HTTP  --listener listenerweb --lb-algorithm ROUND_ROBIN
        - source ~/studentrc && openstack loadbalancer member create --name web01 --address $(openstack server show web01 -c addresses -f value | cut -d"=" -f2) --protocol-port 80 poolweb
        - source ~/studentrc && openstack loadbalancer member create --name web02 --address $(openstack server show web02 -c addresses -f value | cut -d"=" -f2) --protocol-port 80 poolweb
        - source ~/studentrc && openstack floating ip create --port $(openstack port list --fixed-ip ip-address=$(openstack loadbalancer show lbweb -c vip_address -f value -c ID) -c ID -f value) public --tag octavia
        - source ~/studentrc && curl $(openstack floating ip list -c "Floating IP Address" -f value --tags octavia)
        - source ~/studentrc && curl $(openstack floating ip list -c "Floating IP Address" -f value --tags octavia)
        - source ~/overcloudrc && openstack loadbalancer amphora list
        - source ~/overcloudrc && openstack server list --project service
        - source ~/overcloudrc && openstack catalog show octavia
        - ssh heat-admin@overcloud-controller-0.ctlplane "sudo grep 'listen octavia' -A11 /var/lib/config-data/puppet-generated/haproxy/etc/haproxy/haproxy.cfg"
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f name=octavia
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo ls -l /var/log/containers/octavia/
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo tail -20 /var/log/containers/octavia/worker.log

    - name: Output 18_Octavia_Lab
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_18.results }}"


    - name: 19_Barbican
      shell: "{{ item }}"
      args:
        chdir: /home/stack/
      register: output_19
      loop:
        - cat /usr/share/openstack-tripleo-heat-templates/environments/services/barbican.yaml
        - grep BarbicanSimpleCryptoGlobalDefault ~/templates/node-info.yaml
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo podman ps -f "name=barbican*"
        - source ~/overcloudrc && openstack catalog show key-manager
        - source ~/overcloudrc && openstack secret store --name rootPassword --payload 'r3dh4t1!'
        - source ~/overcloudrc && openstack secret get $(openstack secret list --name rootPassword -c "Secret href" -f value) --payload
        - source ~/overcloudrc && openstack volume type create --encryption-provider nova.volume.encryptors.luks.LuksEncryptor --encryption-cipher aes-xts-plain64 --encryption-key-size 256 --encryption-control-location front-end encryptedvolume
        - source ~/overcloudrc && openstack volume create --size 1 --image cirros --type encryptedvolume volume_encrypted_example
        - source ~/overcloudrc && openstack secret list
        - sleep 30
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo lvscan
        - ssh heat-admin@overcloud-controller-0.ctlplane sudo hexdump -n4 -c  /dev/cinder-volumes/volume-*

    - name: Output 19_Barbican
      include_tasks: test_output.yml
      loop_control:
        loop_var: output
      loop: "{{ output_19.results }}"
