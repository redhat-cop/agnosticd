---
# -------------------------------------------------------------------
# Default Variables for VMC
# -------------------------------------------------------------------

# The type of cloud provider this will be deployed to
cloud_provider: vmc


# This is the user that Ansible will use to connect to the nodes it is
# configuring from the admin/control host
ansible_user: cloud-user

# -------------------------------------------------------------------
# VMC Infrastructure
# -------------------------------------------------------------------

# See cloud_providers/osp_default_vars.yml
# See roles-infra/infra-osp-project-create/defaults/main.yml

# Packages to install on all of the hosts deployed as part of the agnosticd config
# This invokes the "common" role
install_common: true

# As part of the "common" role, this cause it to do a yum update on the host
update_packages: true

# Run the bastion-lite role
install_bastion: true


# Use Dynamic DNS. Always true
use_dynamic_dns: true

# Whether to wait for an ack from the DNS servers before continuing
wait_for_dns: true

# The base domain
# osp_cluster_dns_zone needs to come from secrets
# subdomain_base_suffix: "{{ osp_cluster_dns_zone }}"

# Provision Public IPs for API and Ingress
#additional_publicips: []
additional_publicip_ocp:
  - name: ocp_api
    dns: "api.{{ guid }}"
    nthhost: 201
  - name: ocp_ingress
    dns: "*.apps.{{ guid }}"
    nthhost: 202

additional_publicips_default:
  - name: wildcard
    dns: "*.{{ guid }}"
    nthhost: 10

additional_publicips: "{% if ocp_dns|default(False) %}{{ additional_publicip_ocp }}{% else %}{{ additional_publicips_default }}{% endif %}"

# Bastion Configuration
bastion_instance_template: rhel86-tpl
# Root Filesystem Size
bastion_rootfs_size: 30

# Instances to be provisioned in new project
# Provide these as a list.
# Each instance type can have any number of replicas deployed with the same
# configuration.
instances:
  - name: "bastion-{{ guid }}"
    count: 1
    unique: true
    public_dns: true
    alt_name: bastion
    template: "{{ bastion_instance_template }}"
    floating_ip: true
    attributes:
      - name: "AnsibleGroup"
        value: "bastions"
      - name: "ostype"
        value: "linux"
      - name: "project"
        value: "{{ env_type }}-{{ guid }}"

    rootfs_size: "{{ bastion_rootfs_size }}"
    security_groups:
      - bastion_sg
