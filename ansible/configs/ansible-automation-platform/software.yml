---
- name: Step 00xxxxx software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Software tasks Started"

- name: dump all variables and deploy CA trust
  hosts: all
  gather_facts: true
  tasks:
    - name: Dump all variables
      local_action:
        module: template
        src: dumpall.j2
        dest: /tmp/ansible_dump.all
      run_once: true
      when: dump_vars|default(false)|bool

    - name: deploy Let's Encrypt CA trust
      include_role:
        name: letsencrypt_ca_trust

- name: Install Ansible automation controller
  hosts: bastions[0]
  gather_facts: false
  become: true

  tasks:

    - name: Install code-server
      include_role:
        name: vscode-server

    - name: Download Manifest for Controller
      get_url:
        url: "{{ controller_manifest.url }}"
        dest: /tmp
        username: "{{ controller_manifest.username | default(omit) }}"
        password: "{{ controller_manifest.password | default(omit) }}"

    - name: Install Ansible Automation Platform with controller and/or private hub
      include_role:
        name: aap_deploy

    # note that we remove YUM/RPM installed ansible before installing
    # automationcontroller, now we install it back to avoid needing EPEL
    - name: install ansible on the bastion (avoiding EPEL)
      dnf:
        name: ansible
        state: present
        disablerepo: epel

    - name: install AAP development tools when required
      include_role:
        name: aap_devel_tools

- name: Install license and LE certs on autoctl nodes
  hosts: automationcontroller
  gather_facts: false
  become: true

  tasks:

    - name: License autoctl nodes (config role)
      include_role:
        # role formerly known as  tower-license-injector_cfg
        name: aap_controller_manifest_load
      run_once: true

    - name: call issue_cert role (config role)
      include_role:
        name: aap_controller_cert_issue

- name: install Let's Encrypt certificate on PAH
  hosts: pah
  gather_facts: false
  become: true

  tasks:

    - name: call issue_cert role (config role)
      include_role:
        name: aap_pah_cert_issue

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
