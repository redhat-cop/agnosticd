---
- name: Step 00xxxxx post software
  hosts: support
  gather_facts: false
  become: true
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

- name: PostSoftware flight-check
  hosts: bastions
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - name: define the load balanced name for the Tower cluster
      set_fact:
        tower_hostname: "{{ tower_instance_name }}.{{ subdomain_base }}"
    - name: validate the Tower setup (config role)
      import_role:
        name: tower_validate_cfg
      tags:
        - tower_validate

- name: Output user_info
  hosts: localhost
  connection: local
  gather_facts: false
  become: false

  tags:
    - step005

  tasks:

    - name: Do very annoying normalization of domain name
      set_fact:
        agnosticd_domain_name: >-
          {% if cloud_provider == 'osp' -%}
            {{ guid }}.{{ osp_cluster_dns_zone }}
          {% elif cloud_provider == 'ec2' -%}
            {{ guid }}{{ subdomain_base_suffix }}
          {%- endif %}

    - name: setting some variables only existing inside RHPDS environment
      when: student_name is not defined
      set_fact:
        student_name: "JAMES_BOND"
        student_password: LicenseToKill

    - name: Output user_info for osp or ec2 based deploys
      agnosticd_user_info:
        msg: |
            To Access VScode UI via browser:
            URL: https://bastion.{{ agnosticd_domain_name }}
            Password: {{ hostvars[groups['bastions'][0]]['tower_admin_password'] }}

            To Access Ansible controller UI via browser:
            URL: https://{{ tower_instance_name }}1.{{ agnosticd_domain_name }}
            Username: {{ automationcontroller_admin_user | default('admin') }}
            Admin Password: {{ hostvars[groups['bastions'][0]]['tower_admin_password'] }}

            To Access Control node via SSH:
            ssh {{ student_name }}@bastion.{{ agnosticd_domain_name }}
            Enter ssh password when prompted: {{ hostvars[groups['bastions'][0]]['tower_admin_password'] }}

    - name: Deploy Bookbag
      when: bookbag_git_repo is defined
      include_role:
        name: bookbag
      vars:
        ACTION: create
