heat_template_version: rocky

description: >
  Creates a port on the {{network.name}} network, using a map of IPs per role.
  Each role has a map of IPs in <Role>IPs parameters, with a list of IPs by
  network (lower_name or lower case). For example:
  ControllerIPs:
    external:
    - 1.2.3.4 # First controller
    - 1.2.3.5 # Second controller

parameters:
  {{network.name}}NetName:
    description: The name of the {{network.name_lower}} network.
    default: {{network.name_lower}}
    type: string
  PortName:
    description: Name of the port
    default: ''
    type: string
  FixedIPs:
    description: >
        Control the IP allocation for the VIP port. E.g.
        [{'ip_address':'1.2.3.4'}]
    default: []
    type: json
  ControlPlaneIP: # Here for compatibility with noop.yaml
    description: IP address on the control plane
    default: ''
    type: string
  ControlPlaneSubnetCidr: # Here for compatibility with noop.yaml
    description: >
      The subnet CIDR of the control plane network. (The parameter is
      automatically resolved from the ctlplane subnet's cidr attribute.)
    type: string
    default: ''
  ControlPlaneNetwork: # Here for compatibility with ctlplane_vip.yaml
    description: The name of the undercloud Neutron control plane
    default: ctlplane
    type: string
  ControlPlaneSubnet: # Here for compatibility with ctlplane_vip.yaml
    description: The name of the undercloud Neutron control plane subnet
    default: ctlplane-subnet
    type: string
  IPPool: # Set in <Role>IPs map, see environments/ips-from-pool-all.yaml
    default: {}
    type: json
  NodeIndex: # First node in the role will get first IP, and so on...
    default: 0
    type: number
  {{network.name}}NetCidr:
    default: {{network.ip_subnet}}
    description: Cidr for the {{network.name_lower}} network.
    type: string

outputs:
  ip_address:
    description: {{network.name}} network IP
    value: {get_param: [IPPool, {get_param: {{network.name}}NetName}, {get_param: NodeIndex}]}
  ip_address_uri:
    description: {{network.name}} network IP (with brackets for IPv6 URLs)
    value:
      str_replace:
        template:
          make_url:
            host: {get_param: [IPPool, {get_param: {{network.name}}NetName}, {get_param: NodeIndex}]}
        params:
          //: ''
  ip_subnet:
    description: IP/Subnet CIDR for the {{network.name}} network IP
    value:
      list_join:
      - ''
      - - {get_param: [IPPool, {get_param: {{network.name}}NetName}, {get_param: NodeIndex}]}
        - '/'
        - {str_split: ['/', {get_param: {{network.name}}NetCidr}, 1]}
  host_routes:
    description: Host routes of the ports subnet
    value: {{network.routes|default([])}}
  mtu:
    description: The maximum transmission unit (MTU)
    value: {{network.mtu|default('1500')}}
  gateway_ip:
    description: Gateway IP of the ports subnet
{%- if network.ipv6|default(false) and network.gateway_ipv6|default(false) %}
    value: {{network.gateway_ipv6|default('')}}
{%- else %}
    value: {{network.gateway_ip|default('')}}
{%- endif %}

