heat_template_version: rocky

description: >
  Storage network definition (automatically generated).

parameters:
  # the defaults here work for static IP assignment (IPAM) only
  StorageNetCidr:
    default: "172.18.0.0/24"
    description: Cidr for the storage network.
    type: string
  StorageNetValueSpecs:
    default: {'provider:physical_network': 'storage', 'provider:network_type': 'flat'}
    description: Value specs for the storage network.
    type: json
  StorageNetEnableDHCP:
    default: false
    description: Whether to enable DHCP on the associated subnet (IPv4 only).
    type: boolean
  StorageNetAdminStateUp:
    default: false
    description: The admin state of the network.
    type: boolean
  StorageNetShared:
    default: false
    description: Whether this network is shared across all tenants.
    type: boolean
  StorageNetName:
    default: storage
    description: The name of the storage network.
    type: string
  StorageSubnetName:
    default: storage_subnet
    description: The name of the storage subnet in Neutron.
    type: string
  StorageAllocationPools:
    default: [{'start': '172.18.0.4', 'end': '172.18.0.250'}]
    description: Ip allocation pool range for the storage network.
    type: json
  StorageInterfaceDefaultRoute:
    default: ""
    description: default route for the storage network
    type: string
  StorageNetworkVlanID:
    default: 30
    description: Vlan ID for the storage network traffic.
    type: number
  StorageRoutes:
    default: []
    description: >
      Routes for the storage network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Routes are added to the host_routes property on the subnet in neutron
      when the network and subnet is created.
    type: json
  StorageMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      Storage network.
    type: number
  ManageNetworks:
    default: true
    type: boolean
    description: >
      Manage the network and related resources (subnets and segments) with
      either create, update, or delete operations (depending on the stack
      operation). Does not apply to ports which will always be managed as
      needed. Defaults to true. For multi-stack use cases where the network
      related resources have already been managed by a separate stack, this
      parameter can be set to false.

conditions:
  manage_networks: {get_param: ManageNetworks}

resources:
  StorageNetwork:
    type: OS::Neutron::Net
    condition: manage_networks
    properties:
      admin_state_up: {get_param: StorageNetAdminStateUp}
      name: {get_param: StorageNetName}
      shared: {get_param: StorageNetShared}
      value_specs:
        map_merge:
          - {get_param: StorageNetValueSpecs}
          - {'mtu': {get_param: StorageMtu}}

  StorageSubnet:
    type: OS::Neutron::Subnet
    condition: manage_networks
    properties:
      enable_dhcp: {get_param: StorageNetEnableDHCP}
      cidr: {get_param: StorageNetCidr}
      name: {get_param: StorageSubnetName}
      network: {get_resource: StorageNetwork}
      allocation_pools: {get_param: StorageAllocationPools}
      gateway_ip: {get_param: StorageInterfaceDefaultRoute}
      host_routes: {get_param: StorageRoutes}
      # All networks have an implicit network segment when created, map this subnet to that segment.
      segment: {get_attr: [StorageNetwork, segments, 0, id]}



outputs:
  OS::stack_id:
    description: storage network
    value: {get_resource: StorageNetwork}
  network_cidrs:
    description: List of Storage network's subnets in CIDR notation.
    value:
      list_concat:
        if:
          - manage_networks
          - - - {get_attr: [StorageSubnet, cidr]}
            -
          - -
              - "172.18.0.0/24"
            -