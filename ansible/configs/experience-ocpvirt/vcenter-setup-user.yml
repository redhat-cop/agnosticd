- name: Set student facts
  ansible.builtin.set_fact:
    vcenter_student_username: "ocpvirt-{{ guid }}"
    vcenter_student_password: >-
      {{- lookup('password', '/dev/null length=1 chars=letters') -}}
      {{- lookup('password', '/dev/null length=10') -}}
      {{- lookup('password', '/dev/null length=1 chars=digits') -}}

- name: Debug user and password
  ansible.builtin.debug:
    msg: "User: '{{ vcenter_student_username }}' with password '{{ vcenter_student_password }}' on VCenter Domain '{{ vcenter_domain }}' will be created."

# yamllint disable rule:line-length
- name: Run playbook in the LDAP jumphost to create the user
  ansible.builtin.command: |
    ansible-playbook
    /home/{{ vmware_ibm_ldap_jumphost_user }}/sandbox_ad_user.yaml
    -e '{"vmware_add_create_user":{"name":"{{ vcenter_student_username }}","firstname":"{{ vcenter_student_username }}","surname":"{{ vcenter_student_username }}","password":"{{ hostvars.localhost.vcenter_student_password }}","group":"sandbox-users"}}'
  delegate_to: jumphostldap
  register: r_create_user
# yamllint enable rule:line-length

- name: Print result of create user
  ansible.builtin.debug:
    msg: "Result of creating user: {{ r_create_user.stdout }}"

- name: Assign user to roles for different objects on VCenter
  community.vmware.vmware_object_role_permission:
    validate_certs: false
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    role: "{{ vcenter_role }}"
    principal: "{{ vcenter_student_username }}@{{ vcenter_domain }}"
    recursive: "{{ true if item.key == 'Folder' else false }}"
    object_name: "{{ item.value }}"
    object_type: "{{ item.key }}"
  register: r_vmware_object_role_permission
  until: r_vmware_object_role_permission is success
  retries: 1
  delay: 5
  loop: "{{ vcenter_permissions | dict2items }}"
