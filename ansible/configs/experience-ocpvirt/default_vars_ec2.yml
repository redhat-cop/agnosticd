---
### AWS EC2 Environment settings

### Route 53 Zone ID (AWS)
# This is the Route53 HostedZoneId where you will create your Public DNS entries
# This only needs to be defined if your CF template uses route53
# HostedZoneId: Z3IHLWJZOU9SRT
# The region to be used, if not specified by -e in the command line
# aws_region: us-east-1
# The key that is used to

## Networking (AWS)
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{ subdomain_base_short }}{{ subdomain_base_suffix }}"
zone_internal_dns: "{{ guid }}.internal."
chomped_zone_internal_dns: "{{ guid }}.internal"
project_tag: "{{ env_type }}-{{ guid }}"

# zone_internal_dns: "example.com."
# chomped_zone_internal_dns: "example.com"

## Environment Sizing
# Instance Type
# instance_type: "{{ hypervisor_type }}"
instance_type: "c5.metal"

# bastion_instance_type: "t3a.medium"
# Image ID
# __image: RHELAMI

control_user_ssh_config: ./files/ssh_config.j2

security_groups:

  - name: HypervisorSG
    rules:
      - name: HypervisorHTTPSPorts
        description: "Hypervisor HTTPS Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: HypervisorHTTPPorts
        description: "Hypervisor HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: HypervisorSSHPorts
        description: "Hypervisor SSH Public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: HypervisorBastionPorts
        description: "Hypervisor Bastion Public"
        from_port: 8000
        to_port: 8000
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress


ocp4_aio_ssh_key_path: "{{ env_authorized_key_path }}"
rootfs_size_workstation: 30
rootfs_size_node: 30
# rhel8lab_device1: /dev/xvdb

# Instance type

###
instances:
  - name: hypervisor
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ hypervisor_os }}"
    image: "{{ hypervisor_os }}"
#    image_id: "{{ hypervisor_os }}"
#    image: "{{ hypervisor_os }}"
#    image:
#      name: RHEL-8.7*
#      architecture: arm64
#      aws_filters:
#        is-public: true

    flavor:
      ec2: "{{ instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions,hypervisor"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ guid }}"
    rootfs_size: "1000"
    security_groups:
      - HypervisorSG

vcenter_role: "Sandbox User"
vcenter_permissions:
  Datacenter: SDDC-Datacenter
  ClusterComputeResource: Cluster-1
  Folder: "{{ env_type }}-{{ guid }}"
  Datastore: WorkloadDatastore
  Network: segment-migrating-to-ocpvirt
