---
# azure user domain: purpose?
# is this the red hat Azure AD?
azure_user_domain: azure.opentlc.com

# deploy a bastion - not required for a basic open-env
azure_deploy_bastion: false

# prepare the environment for ARO install, but do not actually install ARO
aro_install_prep_only: false

# Automatically install ARO on top of OPEN Environment?
install_aro: false
az_aro_version: 4.11.26

# For OC client
ocp4_installer_root_url: https://mirror.openshift.com/pub/openshift-v4/clients

# OpenShift client install root URL
ocp4_tools_root_url: "{{ ocp4_installer_root_url }}"

# Set to true if you have azcollection > v1.13.0 (2022-05-27)
install_aro_with_azcollection: false

# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"

# Temporary directory used by Azure CLI
output_dir: "/tmp/output-dir-{{ guid }}"

# Hostname for pool handler API
az_function_hostname: handlerexample.azurewebsites.net

# Azure Pool Management API Secret
azure_pool_api_secret: secret

az_resource_group: "openenv-{{ guid }}"
az_dnszone_resource_group: "{{ az_resource_group }}"
dns_delegation: false
dns_bastion: true

# Azure Function that allocates a new pool ID and provides it as stdout
az_function_get: "https://{{az_function_hostname}}/api/get/"

# Azure Function that releases a pool ID
az_function_release: "https://{{az_function_hostname}}/api/release/"

# Azure Function that only shows an existing pool ID
az_function_show: "https://{{az_function_hostname}}/api/show/"

# Azure open env pool default
az_pool_id: "00"

# Azure Tenant
azure_tenant: example.onmicrosoft.com

# Azure Service Principal
azure_service_principal: api://example

# Azure Password/Secret
azure_password: secret

# Azure Subscription ID
azure_subscription_id: 0000-0000-0000-0000-0000

# Azure CLI Config dir
azure_config_dir: "/tmp/azure-{{ guid }}"

# Azure Default root DNS Zone
azure_root_dns_zone: azure.redhatworkshops.io
cluster_dns_zone: azure.redhatworkshops.io
HostedZoneId: "{{ azure_root_dns_zone }}"

# Azure DNS resource group
azure_dns_resource_group: rhpds-dns-handler

# bastion install stuff
bastion_user_name: azure
remote_user: "{{ bastion_user_name }}"
ansible_user: "{{ bastion_user_name }}"

# Remove motd (register for insights) prompt from bastion
bastion_remove_insights_motd: false

# Add a custom motd to the bastion. Only set when specified
# bastion_custom_motd: Welcome to the Red Hat ARO Workshop!

repo_method: satellite
update_packages: true
install_common: true
common_packages_el9:
- python39
- git

# Extra packages to install. Override in AgV
common_extra_packages: {}

# Install helm on the bastion
aro_install_helm: false

rhel_vm_size: Standard_DS1_v2

# Enable RHEL Gold Image
#  rhel_publisher: redhat
#  rhel_offer: rhel-byos
#  rhel_sku: rhel-lvm91-gen2
#  rhel_version: latest
#  rhel_plan_name: rhel-lvm91-gen2
#  rhel_plan_publisher: redhat
#  rhel_plan_product: rhel-byos

# Enable RHEL NON Gold Image until we have gold images for all subs
# az vm image list --publisher RedHat --all --output table
# az vm image show --location eastus --urn RedHat:RHEL:9_1:latest
# x64             RHEL        RedHat       9_1        RedHat:RHEL:9_1:9.1.2023041316              9.1.2023041316
rhel_publisher: RedHat
rhel_offer: RHEL
rhel_sku: "9_1"
azure_bastion_rhel_sku: "{{ rhel_sku }}"
rhel_version: latest
# Only set plan info if you actually need it
# rhel_plan_name: ""
# rhel_plan_publisher: ""
# rhel_plan_product: ""

# --------------------------------------------------------------------
# Showroom
# --------------------------------------------------------------------
# Deploy Showroom - if true the showroom_git_* vars need to
# be set accordingly
showroom_deploy: false
# Deploy Showroom to shared cluster
showroom_deploy_shared_cluster_enable: false

# showroom_git_repo: https://github.com/rhpds/bookbag-aro-mobb.git
# showroom_git_ref: showroom

# Set a password for the showroom user
# If not set then a password with given length (default 16 characters)
# will be created
# showroom_user_password: ""
# showroom_user_password_length: 16

# User to log into Showroom (azure)
showroom_ssh_username: "{{ bastion_user_name }}"
showroom_default_ssh_user: "{{ bastion_user_name }}"
showroom_ssh_method: sshkey     # password | sshkey
showroom_ssh_key_type: ed25519  # ed25519 | rsa
# For method = password provide a password
# showroom_ssh_password: "{{ _showroom_user_password }}"
showroom_host: "bastion.{{ guid }}.{{ cluster_dns_zone }}"
