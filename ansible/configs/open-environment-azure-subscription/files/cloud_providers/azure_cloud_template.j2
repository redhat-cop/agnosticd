{% set temp_guid = guid.lower() %}
{% set temp1_guid = temp_guid.replace("-","") %}
{% set temp2_guid = temp1_guid.replace("_","") %}
{% set storage_guid = temp2_guid[:8]+temp2_guid[-8:] %}
{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "guid": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "GUID of the environment"
            }
        },
        "location": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location where the deployment will happen."
            }
        },
        "DNSZone": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "none",
            "metadata": {
                "description": "dns zone of the environment, to update or create"
            }
        },
        "adminUsername": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "azure",
            "metadata": {
                "description": "Username for the Virtual Machines."
            }
        },
        "sshKeyData": {
            "type": "securestring",
            "metadata": {
                "description": "SSH RSA public key file as a string."
            }
        }
    },
    "variables": {
        "tenantId": "[subscription().tenantId]",
        "diagnosticStorageAccountName": "[concat('diagstor', '{{ storage_guid }}')]",
        "networkSecurityGroupName": "default-nsg",
        "subnetName": "default-subnet",
        "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('subnetName'))]",
        "addressPrefix": "10.249.0.0/16",
        "subnetPrefix": "10.249.0.0/24",
        "publicIPAddressType": "Static",
        "virtualNetworkName": "default-virtualnetwork",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "nicRhelName": "bastionnic",
        "publicIPRhelAddressName": "bastionpublicip",
        "vmNameRhel": "[concat('bastion', '-', parameters('guid'))]",
        "linuxConfiguration": {
          "disablePasswordAuthentication": false,
          "ssh": {
            "publicKeys": [ {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('sshKeyData')]"
            } ]
          }
        },
        "rhelImage": {
            "publisher": "{{rhel_publisher | default("redhat")}}",
            "offer": "{{rhel_offer | default("rhel-byos")}}",
            "sku": "{{rhel_sku | default("rhel-lvm81-gen2")}}",
            "version": "{{rhel_version | default("latest")}}"
        }
    },
    "resources": [
    {
      "name": "[variables('diagnosticStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "dependsOn": [],
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "guid": "{{ guid }}",
        "Project": "{{project_tag}}"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPRhelAddressName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "guid": "{{ guid }}",
        "Project": "{{project_tag}}"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('vmNameRhel')]"
        }
      }
    },
    {
      "comments":  "Default Network Security Group",
      "type":  "Microsoft.Network/networkSecurityGroups",
      "apiVersion":  "2019-08-01",
      "name":  "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "guid": "{{ guid }}",
        "Project": "{{project_tag}}"
      },
      "properties": {
                "securityRules" : [
                    {
                        "name" : "default-allow-showroom",
                        "properties" : {
                            "protocol" : "Tcp",
                            "sourcePortRange" : "*",
                            "destinationPortRange" : "443",
                            "sourceAddressPrefix" : "*",
                            "destinationAddressPrefix" : "*",
                            "access" : "Allow",
                            "priority" : 2000,
                            "direction" : "Inbound"
                        }
                    },
                    {
                        "name" : "default-allow-mosh",
                        "properties" : {
                            "protocol" : "Udp",
                            "sourcePortRange" : "*",
                            "destinationPortRange" : "60001-61000",
                            "sourceAddressPrefix" : "*",
                            "destinationAddressPrefix" : "*",
                            "access" : "Allow",
                            "priority" : 2001,
                            "direction" : "Inbound"
                        }
                    },
                    {
                        "name" : "default-allow-openshift-master",
                        "properties" : {
                            "protocol" : "Tcp",
                            "sourcePortRange" : "*",
                            "destinationPortRange" : "8443",
                            "sourceAddressPrefix" : "*",
                            "destinationAddressPrefix" : "*",
                            "access" : "Allow",
                            "priority" : 2002,
                            "direction" : "Inbound"
                        }
                    },
                    {
                        "name" : "default-allow-ssh",
                        "properties" : {
                            "protocol" : "Tcp",
                            "sourcePortRange" : "*",
                            "destinationPortRange" : "22",
                            "sourceAddressPrefix" : "*",
                            "destinationAddressPrefix" : "*",
                            "access" : "Allow",
                            "priority" : 2003,
                            "direction" : "Inbound"
                        }
                    }
                ]
            }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "guid": "{{ guid }}",
        "Project": "{{project_tag}}"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[variables('nicRhelName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "guid": "{{ guid }}",
        "Project": "{{project_tag}}"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPRhelAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPRhelAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmNameRhel')]",
      "location": "[parameters('location')]",
      "tags": {
        "Name": "[variables('vmNameRhel')]",
        "guid": "{{ guid }}",
        "owner": "{{ email | default('unknownuser') }}",
        "AnsibleGroup": "bastions",
        "ostype": "linux",
        "internaldns": "[concat(variables('vmNameRhel'), '.{{azure_region}}.cloudapp.azure.com')]",
        "canonical_name": "[variables('vmNameRhel')]",
        "Project": "{{project_tag}}"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicRhelName'))]"
      ],
      {% if rhel_plan_name is defined %}
      "plan": {
        "name": "{{ rhel_plan_name | default("rhel-lvm81-gen2") }}",
        "publisher": "{{ rhel_plan_publisher | default("redhat") }}",
        "product": "{{ rhel_plan_product | default("rhel-byos") }}"
      },
      {% endif %}
      "properties": {
        "hardwareProfile": {
          "vmSize": "{{ rhel_vm_size }}"
        },
        "osProfile": {
          "computerName": "[variables('vmNameRhel')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "{{ generated_password }}",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('rhelImage')]",
          "osDisk": {
            "name": "[concat(variables('vmNameRhel'), 'OsDisk')]",
            "createOption": "FromImage"
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicRhelName'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {}
}
