---
- name: Step 005 software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
  - ansible.builtin.debug:
      msg: "Software tasks Started"

- name: Install ARO
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
  - name: Install ARO
    when: ( install_aro | default(false) | bool )
    ansible.builtin.include_role:
      name: open-env-azure-install-aro

- name: Install OC client and helm
  hosts: bastions
  become: true
  gather_facts: false
  tasks:
  - name: Install OC client
    when: install_aro | default(false) | bool
    block:
    - name: Set URL for OpenShift GA release
      ansible.builtin.set_fact:
        ocp4_client_url: >-
          {{ '{0}/ocp/{1}/openshift-client-linux-{1}.tar.gz'.format(
            ocp4_installer_root_url | default("https://mirror.openshift.com/pub/openshift-v4/clients"),
            az_aro_version
          ) }}

    - name: Ensure ocp4_client_url is set
      ansible.builtin.assert:
        that: ocp4_client_url | default('') | length > 0

    - name: Install OpenShift CLI
      become: true
      ansible.builtin.unarchive:
        src: "{{ ocp4_client_url }}"
        remote_src: true
        dest: /usr/bin
        mode: "0775"
        owner: root
        group: root
      retries: 10
      register: r_client
      until: r_client is success
      delay: 30

    - name: Set URL for helm
      ansible.builtin.set_fact:
        helm_url: >-
          {{ '{0}/helm/latest/helm-linux-amd64.tar.gz'.format(
            ocp4_installer_root_url | default("https://mirror.openshift.com/pub/openshift-v4/clients")
          ) }}

    - name: Install helm command
      become: true
      ansible.builtin.unarchive:
        src: "{{ helm_url }}"
        remote_src: true
        dest: /usr/bin
        mode: "0775"
        owner: root
        group: root
      retries: 10
      register: r_client
      until: r_client is success
      delay: 30

- name: Install Kubeconfig
  hosts: bastions
  become: true
  become_user: "{{ remote_user }}"
  gather_facts: false
  tasks:
  - name: Login with azure admin service principal
    when: env_type == 'open-environment-azure-subscription'
    ansible.builtin.command: >-
      az login --service-principal -u "{{ hostvars.localhost.azapp.applications[0].app_id }}"
      -p="{{ hostvars.localhost.azpass }}" --tenant="{{ azure_tenant }}"
    no_log: true

  - name: Install OC client
    when: ( install_aro | default(false) | bool )
    block:
    - name: Run kubeconfig task
      vars:
        kube_config_root: "/home/{{ remote_user }}"
      ansible.builtin.include_tasks:
        file:
          ../../roles/open-env-azure-install-aro/tasks/create-kubeconfig.yml

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - post_flight_check
  tasks:
  - ansible.builtin.debug:
      msg: "Software checks completed successfully"
