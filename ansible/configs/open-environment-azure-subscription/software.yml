---
- name: Step 004 software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
  - ansible.builtin.debug:
      msg: "Software tasks Started"


- name: Install ARO
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
  - name: Install ARO
    when: install_aro | default(false) | bool
    ansible.builtin.include_role:
      name: open-env-azure-install-aro

- name: Install CLI tools on bastion
  hosts: bastions
  become: true
  gather_facts: false
  tasks:
  - name: Install Helm
    when: aro_install_helm | default(false) | bool
    ansible.builtin.include_tasks: install_helm.yml

  - name: Install OC client
    when: install_aro | default(false) | bool
    block:
    - name: Set URL for OpenShift GA release
      ansible.builtin.set_fact:
        ocp4_client_url: >-
          {{ '{0}/ocp/{1}/openshift-client-linux-{1}.tar.gz'.format(
            ocp4_installer_root_url | default("https://mirror.openshift.com/pub/openshift-v4/clients"),
            az_aro_version
          ) }}

    - name: Install OpenShift CLI
      become: true
      ansible.builtin.unarchive:
        src: "{{ ocp4_client_url }}"
        remote_src: true
        dest: /usr/bin
        mode: "u=rwx,g=rwx,o=rx"
        owner: root
        group: root
      retries: 10
      register: r_client
      until: r_client is success
      delay: 30


- name: Create Kubeconfig
  hosts: bastions
  become: true
  become_user: "{{ remote_user }}"
  gather_facts: false
  tasks:
    - name: Create .kube directory
      ansible.builtin.file:
        state: directory
        path: "{{ azure_kube_config_root }}/.kube"
        mode: "u=rwx,g-rwx,o-rwx"

    - name: Set kubeconfig path
      ansible.builtin.set_fact:
        kubeconfig_path: "{{ azure_kube_config_root }}/.kube/config"

    - name: Login with azure admin service principal
      ansible.builtin.command: >-
        az login --service-principal
        -u "{{ azure_service_principal }}"
        -p "{{ azure_password }}"
        --tenant "{{ azure_tenant }}"
      no_log: true

    - name: Create KUBECONFIG
      ansible.builtin.command: >-
        az aro get-admin-kubeconfig
        --subscription "{{ hostvars.localhost.assignedsubscription.subscriptions[0].subscription_id }}"
        --resource-group "openenv-{{ guid }}"
        --name "aro-cluster-{{ guid }}"
        --file "{{ kubeconfig_path }}"

    # - name: Wait for cluster to be ready
    #   ansible.builtin.pause:
    #     minutes: 10

    - name: Kubeconfig test block
      vars:
        ansible_python_interpreter: /opt/virtualenvs/azure/bin/python
      block:
        - name: Check ClusterOperators status
          kubernetes.core.k8s_info:
            api_version: config.openshift.io/v1
            kind: clusteroperator
          register: r_clusteroperator_auth
          vars:
            _query: '[].status.conditions[?type ==`Progressing`].status'
          until:
          - 'r_clusteroperator_auth.resources is defined'
          - 'r_clusteroperator_auth.resources | length | int > 0'
          - '"True" not in r_clusteroperator_auth.resources | to_json |from_json | json_query(_query) | join'
          delay: 10
          retries: 240

        # - name: Check Authentication ClusterOperator status
        #   kubernetes.core.k8s_info:
        #     api_version: config.openshift.io/v1
        #     kind: clusteroperator
        #     name: "{{ item }}"
        #   register: r_clusteroperator_auth
        #   vars:
        #     _query:
        #       degraded: '[?type == `Degraded`].status'
        #       progressing: '[?type == `Progressing`].status'
        #       available: '[?type == `Available`].status'
        #   loop:
        #   - authentication
        #   - kube-apiserver
        #   - kube-controller-manager
        #   - kube-scheduler
        #   - ingress
        #   - network
        #   until:
        #   - 'r_clusteroperator_auth.resources is defined'
        #   - 'r_clusteroperator_auth.resources | length | int > 0'
        #   - 'r_clusteroperator_auth.resources.0.status is defined'
        #   - 'r_clusteroperator_auth.resources.0.status.conditions is defined'
        #   - 'r_clusteroperator_auth.resources.0.status.conditions | to_json | from_json | json_query(_query.degraded) | join == "False"'
        #   - 'r_clusteroperator_auth.resources.0.status.conditions | to_json | from_json | json_query(_query.progressing) | join == "False"'
        #   - 'r_clusteroperator_auth.resources.0.status.conditions | to_json | from_json | json_query(_query.available) | join == "True"'
        #   delay: 10
        #   retries: 120

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - post_flight_check
  tasks:
  - ansible.builtin.debug:
      msg: "Software checks completed successfully"
