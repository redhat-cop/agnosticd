---
- name: Install workloads
  hosts: bastions
  gather_facts: false
  run_once: true
  become: false
  tasks:

  - name: Setup k8s virtualenv
    vars:
      ansible_become: true
      host_virtualenv_path: /opt/virtualenvs/k8s
      host_virtualenv_requirements: [requirements_k8s.txt]
    ansible.builtin.include_role:
      name: host_virtualenv

  - name: Set ansible python interpreter to k8s virtualenv
    ansible.builtin.set_fact:
      ansible_python_interpreter: /opt/virtualenvs/k8s/bin/python

  - name: Generate cluster api
    ansible.builtin.set_fact:
      rosa_api_server_url: "https://api{{ rosa_console_url.stdout | regex_search('(?<=\\.apps).*') }}:6443"

  - name: Run authentication
    community.okd.openshift_auth:
      validate_certs: false
      host: "{{ rosa_api_server_url }}"
      username: cluster-admin
      password: "{{ rosa_admin_result.stdout }}"
    register: _r_kube_auth
    retries: 30
    delay: 120
    until:
    - _r_kube_auth is defined
    - _r_kube_auth.k8s_auth is defined
    - _r_kube_auth.k8s_auth.api_key is defined

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: ~/.kube
      state: directory
      mode: 0755

  - name: Generate kubeconfig
    ansible.builtin.template:
      src: templates/kubeconfig.j2
      dest: ~/.kube/config

  - name: Install ocp-infra-workloads
    vars:
      ACTION: "provision"
      ocp_username: "system:admin"
    ansible.builtin.include_role:
      name: "{{ workload_loop_var }}"
    loop: "{{ infra_workloads }}"
    loop_control:
      loop_var: workload_loop_var
