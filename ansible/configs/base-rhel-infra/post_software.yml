---
- name: Step 005 post software
  hosts: localhost
  gather_facts: false
  become: true
  tags:
    - step005
    - post_software

  tasks:

    - name: "Post-Software tasks Started"
      ansible.builtin.debug:
        msg: "Post-Software tasks Started"

    - name: Output ssh user_info for osp or ec2 based deploys
      block:

        - name: Set ssh user_info
          agnosticd_user_info:
            msg: "{{ __user_info }}"
          loop:
            - "To Access Control node via SSH:"
            - "ssh {{ ansible_service_account_user_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Enter ssh password when prompted: {{ student_password }}"
            - ""
          loop_control:
            loop_var: __user_info

        - name: Set agnosticd_user_info ssh data
          agnosticd_user_info:
            data:
              ssh_command: "ssh {{ ansible_service_account_user_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              ssh_password: "{{ student_password }}"

    - name: Deploy Bookbag
      when: bookbag_git_repo is defined
      ansible.builtin.include_role:
        name: bookbag
      vars:
        ACTION: create


- name: Run post_software_validation playbook
  when: >-
    agd_post_software_validation | default(false) | bool
      or agd_validation | default(false) | bool
  ansible.builtin.import_playbook: post_software_validation.yml
  tags:
    - post_software_validation
    - agd_validation

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:

    - name: "Post-Software checks completed successfully"
      ansible.builtin.debug:
        msg: "Post-Software checks completed successfully"
...
