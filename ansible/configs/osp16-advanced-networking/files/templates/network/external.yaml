heat_template_version: rocky

description: >
  External network definition (automatically generated).

parameters:
  # the defaults here work for static IP assignment (IPAM) only
  ExternalNetCidr:
    default: "10.0.0.0/24"
    description: Cidr for the external network.
    type: string
  ExternalNetValueSpecs:
    default: {'provider:physical_network': 'external', 'provider:network_type': 'flat'}
    description: Value specs for the external network.
    type: json
  ExternalNetEnableDHCP:
    default: false
    description: Whether to enable DHCP on the associated subnet (IPv4 only).
    type: boolean
  ExternalNetAdminStateUp:
    default: false
    description: The admin state of the network.
    type: boolean
  ExternalNetShared:
    default: false
    description: Whether this network is shared across all tenants.
    type: boolean
  ExternalNetName:
    default: external
    description: The name of the external network.
    type: string
  ExternalSubnetName:
    default: external_subnet
    description: The name of the external subnet in Neutron.
    type: string
  ExternalAllocationPools:
    default: [{'start': '10.0.0.4', 'end': '10.0.0.250'}]
    description: Ip allocation pool range for the external network.
    type: json
  ExternalInterfaceDefaultRoute:
    default: "10.0.0.1"
    description: default route for the external network
    type: string
  ExternalNetworkVlanID:
    default: 10
    description: Vlan ID for the external network traffic.
    type: number
  ExternalRoutes:
    default: []
    description: >
      Routes for the external network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Routes are added to the host_routes property on the subnet in neutron
      when the network and subnet is created.
    type: json
  ExternalMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      External network.
    type: number
  ManageNetworks:
    default: true
    type: boolean
    description: >
      Manage the network and related resources (subnets and segments) with
      either create, update, or delete operations (depending on the stack
      operation). Does not apply to ports which will always be managed as
      needed. Defaults to true. For multi-stack use cases where the network
      related resources have already been managed by a separate stack, this
      parameter can be set to false.

conditions:
  manage_networks: {get_param: ManageNetworks}

resources:
  ExternalNetwork:
    type: OS::Neutron::Net
    condition: manage_networks
    properties:
      admin_state_up: {get_param: ExternalNetAdminStateUp}
      name: {get_param: ExternalNetName}
      shared: {get_param: ExternalNetShared}
      value_specs:
        map_merge:
          - {get_param: ExternalNetValueSpecs}
          - {'mtu': {get_param: ExternalMtu}}

  ExternalSubnet:
    type: OS::Neutron::Subnet
    condition: manage_networks
    properties:
      enable_dhcp: {get_param: ExternalNetEnableDHCP}
      cidr: {get_param: ExternalNetCidr}
      name: {get_param: ExternalSubnetName}
      network: {get_resource: ExternalNetwork}
      allocation_pools: {get_param: ExternalAllocationPools}
      gateway_ip: {get_param: ExternalInterfaceDefaultRoute}
      host_routes: {get_param: ExternalRoutes}
      # All networks have an implicit network segment when created, map this subnet to that segment.
      segment: {get_attr: [ExternalNetwork, segments, 0, id]}



outputs:
  OS::stack_id:
    description: external network
    value: {get_resource: ExternalNetwork}
  network_cidrs:
    description: List of External network's subnets in CIDR notation.
    value:
      list_concat:
        if:
          - manage_networks
          - - - {get_attr: [ExternalSubnet, cidr]}
            -
          - -
              - "10.0.0.0/24"
            -