heat_template_version: rocky

description: >
  Management network definition (automatically generated).

parameters:
  # the defaults here work for static IP assignment (IPAM) only
  ManagementNetCidr:
    default: "10.0.1.0/24"
    description: Cidr for the management network.
    type: string
  ManagementNetValueSpecs:
    default: {'provider:physical_network': 'management', 'provider:network_type': 'flat'}
    description: Value specs for the management network.
    type: json
  ManagementNetEnableDHCP:
    default: false
    description: Whether to enable DHCP on the associated subnet (IPv4 only).
    type: boolean
  ManagementNetAdminStateUp:
    default: false
    description: The admin state of the network.
    type: boolean
  ManagementNetShared:
    default: false
    description: Whether this network is shared across all tenants.
    type: boolean
  ManagementNetName:
    default: management
    description: The name of the management network.
    type: string
  ManagementSubnetName:
    default: management_subnet
    description: The name of the management subnet in Neutron.
    type: string
  ManagementAllocationPools:
    default: [{'start': '10.0.1.4', 'end': '10.0.1.250'}]
    description: Ip allocation pool range for the management network.
    type: json
  ManagementInterfaceDefaultRoute:
    default: ""
    description: default route for the management network
    type: string
  ManagementNetworkVlanID:
    default: 60
    description: Vlan ID for the management network traffic.
    type: number
  ManagementRoutes:
    default: []
    description: >
      Routes for the management network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Routes are added to the host_routes property on the subnet in neutron
      when the network and subnet is created.
    type: json
  ManagementMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      Management network.
    type: number
  ManageNetworks:
    default: true
    type: boolean
    description: >
      Manage the network and related resources (subnets and segments) with
      either create, update, or delete operations (depending on the stack
      operation). Does not apply to ports which will always be managed as
      needed. Defaults to true. For multi-stack use cases where the network
      related resources have already been managed by a separate stack, this
      parameter can be set to false.

conditions:
  manage_networks: {get_param: ManageNetworks}

resources:
  ManagementNetwork:
    type: OS::Neutron::Net
    condition: manage_networks
    properties:
      admin_state_up: {get_param: ManagementNetAdminStateUp}
      name: {get_param: ManagementNetName}
      shared: {get_param: ManagementNetShared}
      value_specs:
        map_merge:
          - {get_param: ManagementNetValueSpecs}
          - {'mtu': {get_param: ManagementMtu}}

  ManagementSubnet:
    type: OS::Neutron::Subnet
    condition: manage_networks
    properties:
      enable_dhcp: {get_param: ManagementNetEnableDHCP}
      cidr: {get_param: ManagementNetCidr}
      name: {get_param: ManagementSubnetName}
      network: {get_resource: ManagementNetwork}
      allocation_pools: {get_param: ManagementAllocationPools}
      gateway_ip: {get_param: ManagementInterfaceDefaultRoute}
      host_routes: {get_param: ManagementRoutes}
      # All networks have an implicit network segment when created, map this subnet to that segment.
      segment: {get_attr: [ManagementNetwork, segments, 0, id]}



outputs:
  OS::stack_id:
    description: management network
    value: {get_resource: ManagementNetwork}
  network_cidrs:
    description: List of Management network's subnets in CIDR notation.
    value:
      list_concat:
        if:
          - manage_networks
          - - - {get_attr: [ManagementSubnet, cidr]}
            -
          - -
              - "10.0.1.0/24"
            -