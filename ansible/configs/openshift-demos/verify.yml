---
- name: Verify Coolstore Microservices Demo Deployment
  hosts: localhost
  gather_facts: false
  run_once: true
  tasks:
  - include_role:
      name: openshift_common_facts
    vars:
      set_hostname_suffix: false
      
  # verify default project
  - name: check if project {{ project_default }} exists
    shell: "{{ openshift_cli }} get project {{ project_default }}"
    register: result
    ignore_errors: true
    changed_when: false

  - include_tasks: verify_tasks.yml project_name={{ project_default }}
    when: result|success

  # verify cicd project
  - name: check if project {{ project_cicd }} exists
    shell: "{{ openshift_cli }} get project {{ project_cicd }}"
    register: result
    ignore_errors: true
    changed_when: false

  - include_tasks: verify_tasks.yml project_name={{ project_cicd }}
    when: result|success

  # verify prod project
  - name: check if project {{ project_prod }} exists
    shell: "{{ openshift_cli }} get project {{ project_prod }}"
    register: result
    ignore_errors: true
    changed_when: false

  - include_tasks: verify_tasks.yml project_name={{ project_prod }}
    when: result|success

  # verify stage project
  - name: check if project {{ project_stage }} exists
    shell: "{{ openshift_cli }} get project {{ project_stage }}"
    register: result
    ignore_errors: true
    changed_when: false

  - include_tasks: verify_tasks.yml project_name={{ project_default }}
    when: result|success

  # verify test project
  - name: check if project {{ project_test }} exists
    shell: "{{ openshift_cli }} get project {{ project_test }}"
    register: result
    ignore_errors: true
    changed_when: false

  - include_tasks: verify_tasks.yml project_name={{ project_test }}
    when: result|success

  # verify dev project
  - name: check if project {{ project_dev }} exists
    shell: "{{ openshift_cli }} get project {{ project_dev }}"
    register: result
    ignore_errors: true
    changed_when: false

  - include_tasks: verify_tasks.yml project_name={{ project_dev }}
    when: result|success