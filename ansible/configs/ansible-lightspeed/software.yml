---
- name: Step 004 software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004_01
    - software
  tasks:
    - name: Print stage
      ansible.builtin.debug:
        msg: "Software tasks Started"

- name: Configuring Bastion Hosts
  hosts: bastions
  become: true
  tags:
    - step004
    - bastion_tasks

  tasks:
    - name: Install pip3
      ansible.builtin.package:
        name: python3-pip

    - name: Install certbot
      ansible.builtin.pip:
        name: certbot
        state: present

    - name: Generate letsencrypt certificate
      ansible.builtin.command: >-
        /usr/local/bin/certbot certonly
        --standalone
        -d {{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}
        -m rhpds-admins@redhat.com
        --agree-tos
        -n

    - name: Download noVNC
      ansible.builtin.get_url:
        url: https://github.com/novnc/noVNC/archive/refs/tags/v{{ novnc_version }}.tar.gz
        dest: /usr/local/src/v{{ novnc_version }}.tar.gz
        mode: '644'

    - name: Unarchive noVNC
      ansible.builtin.unarchive:
        src: /usr/local/src/v{{ novnc_version }}.tar.gz
        dest: /usr/local/src/
        remote_src: true

    - name: Copy novnc.service
      ansible.builtin.template:
        src: novnc.service
        dest: /etc/systemd/system/novnc.service
        mode: '644'

    - name: Enable and start service
      ansible.builtin.service:
        name: novnc
        state: started
        enabled: true

    - name: Git clone ansible lightspeed repo
      become_user: "{{ student_name }}"
      ansible.builtin.git:
        repo: https://github.com/redhat-gpte-devopsautomation/ansible-lightspeed.git
        dest: "/home/{{ student_name }}/ansible-lightspeed"
        version: main

    - name: Remove .git file
      ansible.builtin.file:
        path: "/home/{{ student_name }}/ansible-lightspeed/.git"
        state: absent

    - name: Set vscode repository
      ansible.builtin.yum_repository:
        name: code
        description: Visual Studio Code
        file: vscode
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        enabled: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        gpgcheck: true

    - name: Update rhel host
      ansible.builtin.package:
        name: '*'
        state: latest

    - name: Install code package
      ansible.builtin.package:
        name:
          - code
          - firefox
          - ansible-core
        state: present

    - name: Install ansible-lint
      ansible.builtin.pip:
        name: ansible-lint
        state: present

    - name: Create directory ~/.config/autostart
      ansible.builtin.file:
        path: "/home/{{ student_name }}/.config/autostart"
        state: directory
        mode: '755'
        owner: "{{ student_name }}"
        group: "{{ student_name }}"

    - name: Copy code.desktop to autostart
      ansible.builtin.copy:
        src: /usr/share/applications/code.desktop
        dest: "/home/{{ student_name }}/.config/autostart/code.desktop"
        remote_src: true
        mode: "644"
        owner: "{{ student_name }}"
        group: "{{ student_name }}"

    - name: Add --password-store=basic option to code.desktop
      ansible.builtin.lineinfile:
        path: "/home/{{ student_name }}/.config/autostart/code.desktop"
        regexp: "^Exec="
        firstmatch: true
        line: "Exec=/usr/share/code/code --unity-launch %F --password-store=basic"

    - name: Create extensions directory
      ansible.builtin.file:
        path: /tmp/extensions
        state: directory
        mode: '0755'
        owner: "{{ student_name }}"
        group: "{{ student_name }}"

    - name: Download vscode extensions
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "/tmp/extensions/"
        validate_certs: false
        mode: '644'
        owner: "{{ student_name }}"
        group: "{{ student_name }}"
      loop: "{{ vscode_server_extension_urls }}"

    - name: Install vscode extensions in given order
      become_user: "{{ student_name }}"
      ansible.builtin.command: >-
          /usr/bin/code
          --install-extension
          /tmp/extensions/{{ item }}
      loop: "{{ vscode_server_extension_urls | map('urlsplit', 'path') | map('basename') | list }}"

    - name: VScode copy default settings
      ansible.builtin.template:
        src: ./files/settings.json.j2
        dest: "/home/{{ student_name }}/.config/Code/User/settings.json"
        mode: '644'
        owner: "{{ student_name }}"
        group: "{{ student_name }}"

    - name: Include rhel-graphical role
      when: install_rhel_graphical | bool
      ansible.builtin.include_role:
        name: rhel-graphical

    - name: Stop and disable firewalld
      ansible.builtin.service:
        name: firewalld
        state: stopped
        enabled: false

    - name: Create /etc/dconf/db/local.d directory
      ansible.builtin.file:
        path: /etc/dconf/db/local.d
        state: directory
        mode: '755'

    - name: Create /etc/dconf/db/local.d/00-logout
      ansible.builtin.copy:
        src: 00-logout
        dest: /etc/dconf/db/local.d/00-logout
        mode: '644'

    - name: Update dconfig
      ansible.builtin.command: dconf update

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - name: Print stage
      ansible.builtin.debug:
        msg: "Software checks completed successfully"
