---

- name: Step 005 post software
  hosts: localhost
  gather_facts: false
  become: true
  tags:
    - step005_01
    - post_software
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

- name: Configuring Bastion Hosts
  hosts: bastions 
  become: true
  tags:
    - step005_02
    - post_software
 
  roles:
    - when: install_rhel_graphical | bool
      role: rhel-graphical
 
- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005_02
    - post_software
  tasks:
    - name: Set code server hostname in a variable
      set_fact:
        code_server_hostname: "{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}"

    - name: print out user.info
      agnosticd_user_info:
        msg: |
          noVNC Web URL: http://{{ code_server_hostname }}:6080/vnc.html?host={{ code_server_hostname }}&port=6080&autoconnect=true&resize=remote
          noVNC Password: {{ student_password }}
          SSH Host: ssh {{ student_name }}@{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}
          SSH Password: {{ student_password }}

    - name: Save user data
      agnosticd_user_info:
        data:
          novnc_web_url: "http://{{ code_server_hostname }}:6080/vnc.html?host={{ code_server_hostname }}&port=6080&autoconnect=true&resize=remote"
          novnc_user_password: "{{ student_password }}"
          ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}"
          ssh_password: "{{ student_password }}"
          ssh_username: "{{ student_name }}"
          cloud_provider: "{{ cloud_provider }}"
          hostname: "{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}"
          subdomain_base: "{{ subdomain_base }}"
          subdomain_internal: "{{ aws_dns_zone_private_chomped | default('') }}"

- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: ec2 user.info
      when: 
        - cloud_provider == 'ec2'
      block:
        - name: Set client hostname in a variable
          set_fact:
            client_hostname: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"

        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ client_hostname }}"
            - "Enter ssh password when prompted: {{ student_password }}"
            - ""
            - "Access to the noVNC:"
            - "https://{{ client_hostname }}:6080/vnc.html?host={{ client_hostname }}&port=6080&autoconnect=true&resize=remote"
            - "Enter VNC password when prompted: {{ student_password }}"


        - name: Save user data
          agnosticd_user_info:
            data:
              cloud_provider: "{{ cloud_provider }}"
              ssh_command: "ssh {{ student_name }}@{{ client_hostname }}"
              ssh_password: "{{ student_password }}"
              ssh_username: "{{ student_name }}"
              guid: "{{ guid }}"
              targethost: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              subdomain: "{{ guid }}{{ subdomain_base_suffix }}"
              subdomain_internal: "{{ chomped_zone_internal_dns | default('') }}"
              
        - name: Deploy Bookbag
          when: bookbag_git_repo is defined
          include_role:
            name: bookbag
          vars:
            ACTION: create


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step005_03
    - post_software
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"

