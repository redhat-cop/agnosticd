---

- name: Step 005 post software
  hosts: localhost
  gather_facts: false
  become: true
  tags:
    - step005_01
    - post_software
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

# - name: Configuring Bastion Hosts
#   hosts: bastions 
#   become: true
#   tags:
#     - step005_02
#     - post_software
 
#   roles:
#     - when: install_rhel_graphical | bool
#       role: rhel-graphical
 
- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005_02
    - post_software
  tasks:
    - name: Set code server hostname in a variable
      set_fact:
        code_server_hostname: "{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}"

    - name: Print information to the user for EC2
      when: cloud_provider == "ec2"
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: |
              SSH Host: ssh {{ student_name }}@{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}
              SSH Password: {{ student_password }}

        - name: Save user data
          agnosticd_user_info:
            data:
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}"
              ssh_password: "{{ student_password }}"
              ssh_username: "{{ student_name }}"
              cloud_provider: "{{ cloud_provider }}"
              hostname: "{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}"
              subdomain_base: "{{ subdomain_base }}"
              subdomain_internal: "{{ aws_dns_zone_private_chomped | default('') }}"

    - name: Print information to the user for CNV
      when: cloud_provider == "openshift_cnv"
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: |
              SSH Host: ssh {{ student_name }}@{{ openshift_cnv_ssh_address }} -p {{ hostvars[groups['bastions'][0]].bastion_ssh_port }}
              SSH Password: {{ student_password }}

        - name: Save user data
          agnosticd_user_info:
            data:
              ssh_command: >
                ssh {{ student_name }}@{{ openshift_cnv_ssh_address }}
                -p {{ hostvars[groups['bastions'][0]].bastion_ssh_port }}
              ssh_password: "{{ student_password }}"
              ssh_username: "{{ student_name }}"
              bastion_ssh_port: "{{ hostvars[groups['bastions'][0]].bastion_ssh_port }}"
              cloud_provider: "{{ cloud_provider }}"
              hostname: "{{ groups['bastions'][0].split('.')[0] }}.{{ subdomain_base }}"
              subdomain_base: "{{ subdomain_base }}"
              subdomain_internal: "{{ aws_dns_zone_private_chomped | default('') }}"

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step005_03
    - post_software
  tasks:

    - name: Deploy Showroom on shared cluster
      when: showroom_deploy_shared_cluster_enable | default(false) | bool
      include_role:
        name: ocp4_workload_showroom

    - debug:
        msg: "Post-Software checks completed successfully"
