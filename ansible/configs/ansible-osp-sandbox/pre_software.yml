---
- name: Step 003 - Create env key
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step003
    - generate_env_keys

  tasks:

    - name: Setup ssh keys
      when: set_env_authorized_key | bool
      block:

        - name: Generate SSH keys
          shell: ssh-keygen -b 2048 -t rsa -f "{{ output_dir }}/{{ env_authorized_key }}" -q -N ""
          args:
            creates: "{{ output_dir }}/{{ env_authorized_key }}"

        - name: Set ssh key permissions
          file:
            path: "{{ output_dir }}/{{ env_authorized_key }}"
            mode: 0400

        - name: Generate SSH pub key
          shell: >-
            ssh-keygen -y -f "{{ output_dir }}/{{ env_authorized_key }}"
            > "{{ output_dir }}/{{ env_authorized_key }}.pub"
          args:
            creates: "{{ output_dir }}/{{ env_authorized_key }}.pub"

- name: Configure Bastion with Repositories, Common Files and Set environment key
  hosts: bastions
  become: true
  tags:
    - step004
    - bastion_tasks

  roles:
    - { role: "set-repositories", when: 'repo_method is defined' }
    - { role: "set_env_authorized_key", when: 'set_env_authorized_key | bool' }
    - { role: "common", when: 'install_common | default(true) | bool' }
    - { role: "bastion-lite", when: 'install_bastion | default(true) | bool' }
    - { role: "bastion-student-user", when: 'install_student_user | default(true) | bool' }
    - { role: "control-user", when: 'install_control_user | default(true) | bool' }
      # - { role: "vscode-server", when: 'install_vscode_server | default(true) | bool' }

  tasks:

    - name: Add GUID to /etc/skel/.bashrc
      lineinfile:
        path: "/etc/skel/.bashrc"
        regexp: "^export GUID"
        line: "export GUID={{ guid }}"

    - name: Setup student .ssh
      when:
        - student_name is defined
        - env_authorized_key is defined
      block:

        - name: Copy SSH private key to student user .ssh directory
          copy:
            src: "/root/.ssh/{{ env_authorized_key }}.pem"
            dest: "/home/{{ student_name }}/.ssh/{{ env_authorized_key }}.pem"
            mode: 0600
            owner: "{{ student_name }}"
            remote_src: true

        - name: Copy SSH public key to student user .ssh directory
          copy:
            src: "/root/.ssh/{{ env_authorized_key }}.pub"
            dest: "/home/{{ student_name }}/.ssh/{{ env_authorized_key }}.pub"
            mode: 0600
            owner: "{{ student_name }}"
            remote_src: true

        - name: Copy SSH config to student user .ssh directory
          copy:
            src: "/root/.ssh/config"
            dest: "/home/{{ student_name }}/.ssh/config"
            mode: 0600
            owner: "{{ student_name }}"
            remote_src: true

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check

  tasks:

    - name: Pre-Software checks completed successfully
      debug:
        msg: "Pre-Software checks completed successfully"
