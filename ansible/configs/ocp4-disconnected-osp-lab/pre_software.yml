---
- name: Step 003 - Create env key
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - step003
  - generate_env_keys
  tasks:
  - name: Generate SSH keys
    shell: ssh-keygen -b 2048 -t rsa -f "{{output_dir}}/{{env_authorized_key}}" -q -N ""
    args:
      creates: "{{output_dir}}/{{env_authorized_key}}"
    when: set_env_authorized_key | bool

  - name: fix permission
    file:
      path: "{{output_dir}}/{{env_authorized_key}}"
      mode: 0400
    when: set_env_authorized_key | bool

  - name: Generate SSH pub key
    shell: ssh-keygen -y -f "{{output_dir}}/{{env_authorized_key}}" > "{{output_dir}}/{{env_authorized_key}}.pub"
    args:
      creates: "{{output_dir}}/{{env_authorized_key}}.pub"
    when: set_env_authorized_key | bool

- name: Configure all hosts with Repositories, Common Files and Set environment key
  hosts:
  - all:!windows
  become: true
  gather_facts: False
  tags:
  - step004
  - common_tasks
  roles:
  - { role: "set-repositories",       when: 'repo_method is defined' }
  - { role: "common",                 when: 'install_common | bool' }
  - { role: "set_env_authorized_key", when: 'set_env_authorized_key | bool' }

- name: Configuring Bastion Hosts
  hosts: bastions
  become: true
  roles:
  - { role: "bastion-lite",         when: 'install_bastion | bool' }
  - { role: "bastion-student-user", when: 'install_student_user | bool' }
  tags:
  - step004
  - bastion_tasks
  tasks:
    - name: Copy SSH private key to student user .ssh directory
      copy:
        src: "/root/.ssh/{{env_authorized_key}}.pem"
        dest: "/home/{{ student_name }}/.ssh/{{env_authorized_key}}.pem"
        mode: 0600
        owner: "{{ student_name }}"
        remote_src: true
      when: 
        - student_name is defined
        - env_authorized_key is defined

    - name: Copy SSH public key to student user .ssh directory
      copy:
        src: "/root/.ssh/{{env_authorized_key}}.pub"
        dest: "/home/{{ student_name }}/.ssh/{{env_authorized_key}}.pub"
        mode: 0600
        owner: "{{ student_name }}"
        remote_src: true
      when: 
        - student_name is defined
        - env_authorized_key is defined

    - name: Copy SSH config to student user .ssh directory
      copy:
        src: "/root/.ssh/config"
        dest: "/home/{{ student_name }}/.ssh/config"
        mode: 0600
        owner: "{{ student_name }}"
        remote_src: true
      when: 
        - student_name is defined
        - env_authorized_key is defined

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - flight_check
  tasks:
  - debug:
      msg: "Pre-Software checks completed successfully"
