---
- name: Step 00xxxxx software
  hosts: bastions
  gather_facts: false
  become: true
  tasks:
    - when: cloud_provider == "osp"
      block:
        - name: Install packages for OpenStack CLI
          package:
            name:
              - gcc
              - python3-devel
        
        - name: Copy requirements.txt
          copy:
            src: "./files/openstack_requirements.txt"
            dest: "/root/requirements.txt"

        - name: Install python requirements for OpenStack CLI
          command: "pip3 install -r /root/requirements.txt"

        - name: Remove requirements.txt
          file:
            path: "/root/requirements.txt"
            state: absent

        - name: Create .config directory
          file:
            path: /home/{{ student_name }}/.config/openstack
            state: directory
# This has a var set in a fact for local_host...need to get that from there.
        - name: Create clouds.yaml file
          template:
            src: "./files/clouds.yaml.j2"
            dest: "/home/{{ student_name }}/.config/openstack/clouds.yaml"

# TODO: Add this for utilityVM
    - name: Install slirp4netns
      package:
        name: slirp4netns

    - name: update max_user_namespaces in sysctl
      sysctl:
        name: user.max_user_namespaces
        value: 28633
        sysctl_file: /etc/sysctl.d/userns.conf
        reload: yes

# - name: Step 00xxxxx software
#   hosts: localhost
#   gather_facts: false
#   become: false
#   tasks:
#     # NOT Pre-installed
#     - name: Print Student aws access as user.info
#       debug:
#         msg: "{{ item }}"
#       with_items:
#         - "user.info: Top level domain: {{ subdomain_base_suffix }}"
#         - "user.info: "
#         - "user.info: WARNING: with great power comes great responsibility. We monitor usage."
#         - "user.info: Your AWS programmatic access:"
#         - "user.info: aws_access_key_id = {{ student_access_key_id }}"
#         - "user.info: aws_secret_access_key = {{ student_secret_access_key }}"
#       when:
#         - not install_ocp4 | bool
#         - student_access_key_id is defined
#         - student_secret_access_key is defined

#     - when:
#         - install_student_user | bool
#         - student_name is defined
#         - student_password is defined or hostvars[groups.bastions.0].student_password is defined
#       block:
#         - name: Print Student SSH access as user.info
#           debug:
#             msg: "{{ item }}"
#           with_items:
#             - "user.info: "
#             - "user.info: SSH Access: ssh {{ student_name }}@bastion.{{ guid }}{{ subdomain_base_suffix }}"

#         - name: Print Student SSH password as user.info
#           debug:
#             msg: "user.info: SSH password: {{ student_password | d(hostvars[groups.bastions.0].student_password) }}"
#           when: print_student_password | default(true) | bool
