output_dir: /tmp/output_dir

## Common repositories
repo_method: satellite                      # Default method
set_repositories_rhel9_lock_release: '9.2'    # Default Version Lock
# rhel_repos: will be only be added. The purge code in the role is not working (purge at the wrong place)  
rhel_repos_zstream:
   - "rhel-9-for-x86_64-baseos-rpms"
   - "rhel-9-for-x86_64-appstream-rpms"
#   - "rhel-9-for-x86_64-sap-netweaver-rpms"
#   - "rhel-9-for-x86_64-sap-solutions-rpms"
rhel_repos_e4s:
   - "rhel-9-for-x86_64-baseos-e4s-rpms"
   - "rhel-9-for-x86_64-appstream-e4s-rpms"
   - "rhel-9-for-x86_64-sap-solutions-e4s-rpms"
   - "rhel-9-for-x86_64-sap-netweaver-e4s-rpms"
#   - "ansible-2-for-rhel-8-x86_64-rpms"
#   - "ansible-2.9-for-rhel-8-x86_64-rpms"

rhel_lock_release_sap: 9.2

## Networking
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{ subdomain_base_short}}{{subdomain_base_suffix }}"

### Common Host settings
install_ipa_client: false
install_student_user: false

# Do you want to run a full yum update
update_packages: false

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another "just like it"
guid: defaultguid

# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"

# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"

install_bastion: true
install_common: true

# Variable used to identify the request being made by a Red Hatter or Partner (external)
rh_internal: true

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
env_authorized_key: "{{guid}}key"
#ansible_ssh_private_key_file: ~/.ssh/{{key_name}}.pem
set_env_authorized_key: true

# Is this running from Red Hat Ansible Tower
tower_run: false

# commented packages are installed by standard
common_extra_packages:
  # unzip
  # bash-completion
  # tmux
  # bind-utils
  # wget
  # git
  # vim-enhanced
  - at
  - python3-pip
  # required for SAP
  - langpacks-en
  - glibc-langpack-en

cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "

### Variables of the role to download AAP2 ###
aap_download_client_id: rhsm_api
#aap_download_client_id: cloud-services
aap_pull_secret: "{{ ocp4_ai_pull_secret }}"
# offline_token: "{{ rhsm_api_offline_token }}" # defined in playbook

# AA2 Downloadfile
# https://access.redhat.com/downloads/content/480/ver=2.5/rhel---9/2.5/x86_64/product-software
provided_sha_value: 'a9ad4c98b913cf43c5331293c572379c8a1096b392f56e3e095cbfea2282ae71' # RHEl 9 2.5 Containerized Bundle

# EPEL
#ansible_tower_epel_download_url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"
ansible_tower_epel_gpg_download_url: "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}"
ansible_tower_epel_download_url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
### Disable GPG check for epel ###
#ansible_tower_epel_disable_gpg_check: "yes"
ansible_tower_epel_disable_gpg_check: 'no'

# Do not install OpenShift
install_ocp4: false