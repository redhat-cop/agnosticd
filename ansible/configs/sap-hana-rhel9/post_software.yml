- name: Print out information for the user to consume the lab
  hosts: localhost
  gather_facts: False
  become: false
  tasks:
    - name: Print Student Information
      when:
        - install_student_user | bool
        - cloud_provider != "openshift_cnv"
      block:
      - name: Store bastion and tower hostname as a fact
        ansible.builtin.set_fact:
          bastion_hostname: "{{ groups['bastions'].0 }}"
          tower_hostname: "{{ groups['towers'].0 }}"

      - name: Get tower admin password
        ansible.builtin.set_fact:
          tower_password: "{{ hostvars[tower_hostname]['tower_password'] | d('not_set') }}"

      - name: Report user info # noqa syntax-check[unknown-module]
        agnosticd_user_info:
          msg: "{{ item }}"
        loop:
        - "You can access your bastion via SSH:"
        - "ssh {{ student_name }}@bastion-{{ guid }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
        - ""
        - "Make sure you use the username '{{ student_name }}' and the password '{{ hostvars[bastion_hostname]['student_password'] }}' when prompted."
        - ""
        - "You can access your Tower:"
        - "https://{{ tower_public_dns_chomped | d('not_deployed') }}"
        - "Make sure you are using the following credentials:"
        - ""
        - "Username: admin"
        - "Password: '{{ tower_password }}''"
        
    - name: Print Student Information
      when:
        - install_student_user | bool
        - cloud_provider == "openshift_cnv"
      block:
      - name: Store bastion hostname as a fact
        set_fact:
          bastion_hostname: "{{groups['bastions'].0 }}"
          tower_hostname: "{{ groups['towers'].0 }}"
      - name: Get tower admin password
        ansible.builtin.set_fact:
          tower_password: "{{ hostvars[tower_hostname]['tower_password'] | d('not_set') }}"

      - name: Report user info
        agnosticd_user_info:
          msg: "{{ item }}"
        loop:
        - "You can access your bastion via SSH:"
        - "ssh {{ student_name }}@{{ openshift_cnv_ssh_address }} -p {{ hostvars[groups['bastions'][0]].bastion_ssh_port }}"
        - ""
        - "Make sure you use the username '{{ student_name }}' and the password '{{ hostvars[bastion_hostname]['student_password'] }}' when prompted."
        - ""
        - "You can access your Tower:"
        - "https://{{ tower_public_dns_chomped | d('undefined') }}"
        - "Make sure you are using the following credentials:"
        - ""
        - "Username: admin"
        - "Password: '{{ tower_password }}'"
        
    - name: Set agnosticd user info data for tower
      when:
        - tower_instance_count > 0
        - cloud_provider != "openshift_cnv"
      agnosticd_user_info:
        data:
          tower_url: "https://tower-{{ guid }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
          tower_username: "admin"
          tower_password: "{{ tower_password| d('not_deployed') }}"

    - name: Set agnosticd user info data for tower
      when:
        - tower_instance_count > 0
        - cloud_provider == "openshift_cnv"
      agnosticd_user_info:
        data:
          tower_url: "https://tower-{{ guid }}.{{ guid }}.{{ sandbox_openshift_apps_domain }}"
          tower_username: "admin"
          tower_password: "{{ tower_password | d('not_deployed') }}"

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully - Stage {{ purpose | d('undefined') }}"
