# The type of cloud provider this will be deployed to
cloud_provider: osp

# Authenication credentials for OpenStack in order to create the things.
# These should be included with your secrets, but are listed here for reference
# osp_auth_url:
# osp_auth_username:
# osp_auth_password:
# osp_auth_cloud:
# osp_auth_project_domain: #usually set to "default"
# osp_auth_user_domain: #usually set to "default"

# This is an account that must exist in OpenStack.
# It is used to create projects, access, Heat templates
admin_user: opentlc-mgr

# This is the user that Ansible will use to connect to the nodes it is
# configuring from the admin/control host
ansible_user: cloud-user
remote_user: cloud-user

# The domain that you want to add DNS entries to
osp_cluster_dns_zone: blue.osp.opentlc.com

# The dynamic DNS server you will add entries to.
# NOTE: This is only applicable when {{ use_dynamic_dns}} is true
osp_cluster_dns_server: ddns01.opentlc.com

# Whether to wait for an ack from the DNS servers before continuing
wait_for_dns: true

# Authenticaion for DDNS, Must be set in secrets
# ddns_key_name:
# ddns_key_algorithm:                # default value set to: "hmac-md5"
# ddns_secret_name:

# Set this to true if you want a FIPs provisioned for an OpenShift on OpenStack install
# This will provision an API and Ingress FIP
openshift_fip_provision: True

# This requires DDNS or other DNS solution configured
# If enabled, it will add DNS entries for the API and Ingress FIPs
openshift_fip_dns: True

# The external network in OpenStack where the floating IPs (FIPs) come from
provider_network: external

# Instance type & image
clientvm_instance_type: "2c2g30d"
clientvm_instance_image: rhel-server-7.7-update-2
rootfs_size_clientvm: 200

# Docker Root Device
docker_device: /dev/vdb

# See cloud_providers/osp_default_vars.yml
# See roles/infra-osp-project-create/defaults/main.yml

# Set this to true if you need to create a new project in OpenStack
# This should almost always be set to true for OpenShift installations
# If it is set to false, the {{ osp_project_name }} must already exist and
# should be able to run whatever you are deploying
osp_project_create: true

# The name of the project that will be created in OpenStack for the user
osp_project_name: "{{ guid }}-project"

# A list of the private networks and subnets to create in the project
# You can create as many as you want, but at least one is required.
# Use the name of the networks where appropriate in the instance list
networks:
- name: ocp
  shared: "false"
  subnet_cidr: 192.168.47.0/24
  gateway_ip: 192.168.47.1
  allocation_start: 192.168.47.10
  allocation_end: 192.168.47.254
  dns_nameservers: []
  create_router: true

# If osp_project_create is set to yes, define those:
# Quotas to set for new project that is created
quota_num_instances: 1
quota_num_cores: 4
quota_memory: 4096 # in MB
quota_num_volumes: 3
quota_volumes_gigs: 500
quota_fip: 1
quota_sg: 5

# Instances to be provisioned in new project
# Provide these as a list.
# Each instance type can have any number of replicas deployed with the same
# configuration.
# Metadata in OpenStack is equivelent to tags in AWS
# These instances will be created with Cinder persistent volumes
instances:
- name: clientvm
  count: 1
  unique: yes
  alt_name: bastion
  image_id: "{{ clientvm_instance_image }}"
  floating_ip: yes
  flavor:
    osp: "{{ clientvm_instance_type }}"
  metadata:
  - AnsibleGroup: "bastions,clientvms"
  - function: clientvm
  - user: "{{ student_name }}"
  - project: "{{ project_tag }}"
  - ostype: linux
  - Purpose: "{{ purpose }}"
  rootfs_size: "{{ rootfs_size_clientvm }}"
  network: ocp
  security_groups:
  - clientvm_sg

# Security groups and associated rules. This will be provided
#when the Heat template is generated separate groups and rules
security_groups:
- name: clientvm_sg
  description: Client VM security group allows basic icmp and SSH ingress and egress to *
  rules:
  - protocol: icmp
    direction: ingress
  - protocol: tcp
    direction: ingress
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0
