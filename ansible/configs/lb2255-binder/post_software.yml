# vim: set ft=yaml.ansible
---
- name: Step 005 Post Software
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
    - step005
    - post_software
  tasks:
    - name: Entering the post_software.yml
      ansible.builtin.debug:
        msg: Entering the post_software.yml

    - name: Store Cluster's private key
      ansible.builtin.copy:
        content: "{{ item.ssh_private_key }}\n"
        dest: "{{ output_dir }}/{{ item.key_name }}_sshkey.pem"
        mode: '0400'
      loop:
        - key_name: ocp_cluster
          ssh_private_key: "{{ lb2255_ocp_cluster_data.ssh_provision_key }}"
        - key_name: rhel_arm
          ssh_private_key: "{{ lb2255_rhel_arm_data.ssh_provision_key }}"

    - name: Add Clusters to run time inventory
      ansible.builtin.add_host:
        name: "{{ item.name }}"
        groups: "{{ item.group }}"
        ansible_ssh_private_key_file: "{{ output_dir }}/{{ item.key_name }}_sshkey.pem"
        ansible_user: "ec2-user"
        remote_user: "ec2-user"
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no"
      loop:
        - name: "{{ lb2255_ocp_cluster_data.bastion_public_hostname }}"
          key_name: ocp_cluster
          group: ocp_cluster
        - name: "{{ lb2255_rhel_arm_data.bastion_public_hostname }}"
          key_name: rhel_arm
          group: rhel_arm


- name: Export user data from components
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tasks:

    - name: Create exported variable dictionary for OCP Cluster
      ansible.builtin.set_fact:
        __ocp_cluster: "{{ __ocp_cluster | d({}) | combine({ 'ocp_cluster_' + item.key: item.value}) }}"
      when: item.key is in export_ocp_cluster_vars_to_showroom
      loop: "{{ lb2255_ocp_cluster_data | dict2items }}"

    - name: Create exported variable dictionary for RHEL ARM
      ansible.builtin.set_fact:
        __rhel_arm: "{{ __rhel_arm | d({}) | combine({ 'rhel_arm_' + item.key: item.value}) }}"
      when: item.key is in export_rhel_arm_vars_to_showroom
      loop: "{{ lb2255_rhel_arm_data | dict2items }}"

    - name: Print User Access information
      agnosticd_user_info:
        data:
          "{{ __ocp_cluster }}"

    - name: Print User Access information
      agnosticd_user_info:
        data:
          "{{ __rhel_arm }}"


- name: Run Workloads
  hosts: ocp_cluster
  become: true
  gather_facts: false
  tasks:
    - name: Set Ansible Python interpreter to k8s virtualenv
      set_fact:
        ansible_python_interpreter: /opt/virtualenvs/k8s/bin/python

    - name: Create showroom
      ansible.builtin.include_role:
        name: ocp4_workload_showroom

- name: Step 005 Post Software - Report to Cloudforms
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
    - step005
    - post_software
  tasks:
    - name: Print string expected by Cloudforms
      ansible.builtin.debug:
        msg: "Post-Software checks completed successfully"

    - name: Exiting the post_software.yml
      ansible.builtin.debug:
        msg: Exiting the post_software.yml
...
