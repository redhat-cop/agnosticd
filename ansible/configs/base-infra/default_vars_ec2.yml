---
### AWS EC2 Environment settings

ansible_user: ec2-user
remote_user: ec2-user
aws_region: us-east-2

### Networking and DNS (AWS)

subdomain_base_short: "{{ guid }}"

subdomain_base: "{{ subdomain_base_short }}{{ subdomain_base_suffix }}"
zone_internal_dns: "{{ guid }}.internal."
chomped_zone_internal_dns: "{{ guid }}.internal"

cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "

# Instance Configurations and Resources
# 2023-02-21 tonykay@redhat.com Validated optimal sizing via AAP2 Controller docs
# https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1/html/red_hat_ansible_automation_platform_installation_guide/planning-installation?extIdCarryOver=true&sc_cid=701f2000001OH7YAAW

bastion_instance_image: RHEL87GOLD-latest
bastion_instance_type: t3a.medium

#
# Instances to deploy
#

instances:

  - name: bastion
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ bastion_instance_image | default(default_instance_image) }}"
    flavor:
      ec2: "{{ bastion_instance_type | default(default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG

security_groups:

  - name: WebSG
    rules:

      - name: HTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: HTTPSPorts
        description: "HTTP Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG

    rules:
      - name: FromHostSG
        description: "Allow everything from HostSG nodes"
        from_port: 0
        to_port: 65535
        protocol: -1
        from_group: HostSG
        rule_type: Ingress
...
