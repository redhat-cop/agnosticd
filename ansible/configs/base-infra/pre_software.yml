---
- name: Step 003 Pre Software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004
    - pre_software

  tasks:

    - name: "Step 003 Pre Software"
      ansible.builtin.debug:
        msg: "Step 000 Pre Software"

# ----------------------------------------------------------------------
# Pre-Software Workloads as role
# ----------------------------------------------------------------------
- name: Import Pre-software workloads
  import_playbook: workloads.yml
  vars:
    _workload_title_: "Pre Software"
    _workloads_: "{{ pre_software_workloads | default([]) }}"

- name: Create local ssh keys
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004
    - pre_software

  tasks:

    - name: Set local ssh key
      when: agd_set_env_authorized_key | default(true) | bool
      ansible.builtin.import_role:
        name: create_ssh_provision_key

- name: Configure all hosts with Repositories, Common Files and Set environment key
  hosts: all:!windows
  become: true
  gather_facts: false
  tags:
    - step004
    - common_tasks

  tasks:

    - name: Setup Repositories
      when: repo_method is defined
      ansible.builtin.import_role:
        name: set-repositories

    - name: Install common packages from common_packages list
      when: agd_install_common | default(true) | bool
      ansible.builtin.import_role:
        name: common

    - name: Setup the authorized ssh key
      when: set_env_authorized_key | default(true) | bool
      ansible.builtin.import_role:
        name: set_env_authorized_key

- name: Configuring Bastion Hosts
  hosts: bastions
  become: true
  tags:
    - step004
    - bastion_tasks

  tasks:

    - name: Install basic bastion configuration
      when: agd_install_bastion_base | default(true) | bool
      ansible.builtin.import_role:
        name: bastion-base

    - name: Install control student user configuration
      when: agd_user_create_ansible_service_account | default(true) | bool
      ansible.builtin.include_role:
        name: user-create-ansible-service-account

    - name: Inject assets onto host(s)
      when:
        - asset_injector_assets is defined
        - asset_injector_assets | length > 0
      ansible.builtin.include_role:
        name: asset_injector

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check

  tasks:

    - name: "Pre-Software checks completed successfully"
      ansible.builtin.debug:
        msg: "Pre-Software checks completed successfully"
...
