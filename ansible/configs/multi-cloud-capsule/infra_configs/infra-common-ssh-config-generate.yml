---

- name: Store hostname as a fact
  set_fact:
    ansible_ssh_config: "{{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"
    ansible_known_host: "{{output_dir}}/{{ env_type }}_{{ guid }}_ssh_known_hosts"

- name: Store hostname as a fact
  set_fact:
      remote_user: ec2-user
  when: "cloud_provider == 'ec2'"

- name: Store hostname as a fact
  set_fact:
      remote_user: cloud-user
  when: "cloud_provider == 'osp'"


- name: delete local ssh config and know_host file. start fresh 
  file:
    dest: "{{ item }}"
    state: absent
  loop:
    - "{{ansible_known_host}}"
    - "{{ ansible_ssh_config }}"

- name: Create empty local ssh config
  file:
    dest: "{{ ansible_ssh_config }}"
    state: touch
  when: secondary_stack is not defined

- name: Add proxy config to workdir ssh config file
  blockinfile:
    dest: "{{ ansible_ssh_config }}"
    marker: "##### {mark} ADDED PROXY HOST {{ item }} {{ env_type }}-{{ guid }} ######"
    content: |
        Host {{ item }} {{ hostvars[item].shortname |d('')}}
          Hostname {{ hostvars[item].public_ip_address }}
          IdentityFile {{ ssh_key | default(infra_ssh_key) | default(ansible_ssh_private_key_file) | default(default_key_name)}}
          IdentitiesOnly yes
          User {{ remote_user }}
          ControlMaster auto
          ControlPath /tmp/{{ guid }}-%r-%h-%p
          ControlPersist 5m
          StrictHostKeyChecking no
          ConnectTimeout 60
          ConnectionAttempts 10
          UserKnownHostsFile {{ansible_known_host}}
  loop: "{{ groups['capsules'] }} "
  tags:
    - proxy_config_main

...