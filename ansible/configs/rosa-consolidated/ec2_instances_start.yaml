---
- name: Get all EC2 instances
  amazon.aws.ec2_instance_info:
    filters:
      "tag:guid": "{{ guid }}"
      "tag:env_type": "{{ env_type }}"
      instance-state-name: stopped
  register: r_stopped_instances

# WK: Don't wait for instances to be running. Otherwise this is
#     a very sequential task. Just start the instances.
#     The next task will wait until all instances are running - but
#     this happens now in parallel instead of sequentially.
- name: Ensure EC2 instances are running
  when: r_stopped_instances.instances | length > 0
  amazon.aws.ec2_instance:
    instance_ids: "{{ item.instance_id }}"
    state: started
    wait: false
  loop: "{{ r_stopped_instances.instances }}"

- name: Wait until all EC2 instances are running
  when: r_stopped_instances.instances | length > 0
  amazon.aws.ec2_instance_info:
    filters:
      "tag:guid": "{{ guid }}"
      "tag:env_type": "{{ env_type }}"
      instance-state-name: running
  register: r_running_instances
  until: r_running_instances.instances | length | int >= r_stopped_instances.instances | length | int
  delay: 10
  retries: 60
