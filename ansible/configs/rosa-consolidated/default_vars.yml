---
###### VARIABLES YOU SHOULD CONFIGURE FOR YOUR DEPLOYEMNT
###### OR PASS as "-e" args to ansible-playbook command

env_type: rosa-consolidated

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another "just like it"
guid: defaultguid

# Project Tag for all generated resources
project_tag: "{{ env_type }}-{{ guid }}"

# Do you want to run a full yum update
update_packages: false

# To be added as an additional tag on resources
purpose: development

# Tags to be added to VMs
cloud_tags:
  env_type: "{{ env_type }}"
  guid: "{{ guid }}"
  platform: "{{ platform | default( 'unknown' ) }}"

# Bastion user
bastion_user_name: rosa
bastion_user_enable_sudo: false
bastion_user_use_password: false
bastion_user_password: ""
bastion_user_password_length: 12

# Deploy Rosa - set to false for manual installation
rosa_deploy: true

# Deploy ROSA using Hosted Control Planes
rosa_deploy_hcp: false

# ROSA Cluster Name
rosa_cluster_name: "rosa-{{ guid }}"

# Version of ROSA to deploy
# ONLY change if you know what you're doing
# Options are:
# - "": default version (usually not the latest)
# - latest: latest available version as reported by 'rosa list versions'
# - 4.x.x: A specific version. Definitely only set for special
#          cases because specific versions routinely disappear from
#          the list of available versions
rosa_version: ""

# ROSA CLI version
rosa_installer_version: latest

# Where to download the ROSA installer from
rosa_installer_url: >-
  https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/rosa/{{ rosa_installer_version }}/rosa-linux.tar.gz

# OpenShift client install root URL
ocp4_tools_root_url: >-
  https://mirror.openshift.com/pub/openshift-v4/clients

# ROSA Token
# This should come from a secret and is only used if the rosa_token does not come from the demo dot dialog
gpte_rosa_token: ""
# This should come from a demo dot dialog, if not, gpte_rosa_token is used from secret
rosa_token: ""

# Set up Cluster Admin User
#
# Note: Custom admin user and password does not seem to work on HCP at the moment
#       So for HCP clusters use `rosa_setup_cluster_admin: true` and `rosa_cluster_admin_username: ""`
#
# There are three options:
# - rosa_setup_cluster_admin=false: don't setup an admin user
# - rosa_setup_cluster_admin=true and rosa_cluster_admin_username not set: just run the
#   'rosa create admin' command to create a user cluster-admin
# - rosa_setup_cluster_admin=true and rosa_cluster_admin_username set: Create
#   an admin user with specified username
#   Password will be generated if rosa_cluster_admin_password="" or set to what is specified
rosa_setup_cluster_admin: true
# Empty user name / password will use the default
rosa_cluster_admin_username: ""
# The password must
# - Be at least 14 characters (ASCII-standard) without whitespaces
# - Include uppercase letters, lowercase letters, and numbers or symbols (ASCII-standard characters only)
rosa_cluster_admin_password: ""
rosa_cluster_admin_password_length: 14

# Remove kubeadmin secret from kube-system namespace if it exists
rosa_setup_remove_kubeadmin: false

# Log cluster admin user into OpenShift on the Bastion VM
# When set to true a .kube/config is created for the admin user
# This is useful to immediately run oc commands on the bastion
# or to deploy workloads using the kubernetes.core collection
rosa_setup_cluster_admin_login: false

# Install helm on the bastion
rosa_install_helm: true

# Install terraform on the bastion (necessary for HCP deploy)
rosa_install_terraform: true
rosa_terraform_version: "1.5.7"
rosa_terraform_url: >-
  https://releases.hashicorp.com/terraform/{{ rosa_terraform_version }}/terraform_{{ rosa_terraform_version }}_linux_amd64.zip
rosa_terraform_repo: https://github.com/openshift-cs/terraform-vpc-example
rosa_terraform_repo_branch: main

# Extra software packages to install
install_tektoncd_cli: false
install_github_cli: false

# YAML List of Infrastructure Workloads.
# REQUIRES Ansible 2.7+ on the deployer host
# Requires rosa_deploy == true
# Empty by default - to be set by specific configurations
infra_workloads: []

# --------------------------------------------------------------------
# Bookbag
# --------------------------------------------------------------------
deploy_bookbag: false
# bookbag_git_repo: https://github.com/rhpds/rosa-ilt.git
# bookbag_git_version: main

# --------------------------------------------------------------------
# Showroom
# --------------------------------------------------------------------
showroom_deploy: false
showroom_git_repo: https://github.com/rhpds/aro-ilt.git
showroom_tab_services:
- single_terminal
- docs_aro

# Internal Vars. Don't set
_rosa_cluster_admin: ""
_rosa_cluster_admin_password: ""
_rosa_hcp_regions: ""
_rosa_version_to_install: ""
_rosa_ocp_cli_version: ""
_rosa_create_cluster_extra_args: ""
