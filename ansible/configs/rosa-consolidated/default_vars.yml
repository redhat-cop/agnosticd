---
###### VARIABLES YOU SHOULD CONFIGURE FOR YOUR DEPLOYEMNT
###### OR PASS as "-e" args to ansible-playbook command

env_type: rosa-consolidated

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another "just like it"
guid: defaultguid

# Project Tag for all generated resources
project_tag: "{{ env_type }}-{{ guid }}"

# Do you want to run a full yum update
update_packages: false

# To be added as an additional tag on resources
purpose: development

# Tags to be added to VMs
cloud_tags:
  env_type: "{{ env_type }}"
  guid: "{{ guid }}"
  platform: "{{ platform | default( 'unknown' ) }}"

# Bastion user
bastion_user_name: rosa
bastion_user_enable_sudo: false
bastion_user_password: ""
bastion_user_password_length: 12

# Remove motd (register for insights) prompt from bastion
bastion_remove_insights_motd: false

# Add a custom motd to the bastion. Only set when specified
# bastion_custom_motd: Welcome to the Red Hat OpenShift Service on AWS Hands On Experience!

# Remove the file /etc/ssh/sshd_config.d/50-cloud-init.conf
# This file (on RHEL 9.3) prevents password logins to the bastion
bastion_remove_cloud_init_conf: true

# Deploy Rosa - set to false for manual installation
rosa_deploy: true

# Deploy ROSA using Hosted Control Planes
rosa_deploy_hcp: false

# ROSA Cluster Name
rosa_cluster_name: "rosa-{{ guid }}"

# Version of ROSA to deploy
# ONLY change if you know what you're doing
# Options are:
# - default: default version (usually not the latest)
# - latest: latest available version as reported by 'rosa list versions'
# - latest-upgrade: latest available version that has an upgrade path defined
#                   Can be used to provision an environment that is upgradeable
# - 4.x.x: A specific version. Definitely only set for special
#          cases because specific versions routinely disappear from
#          the list of available versions
rosa_version: default

# Set the base of the version to be upgraded from when using `latest-upgrade` for rosa_version.
# The logic will search for the latest version within that base
# version that has available_upgrades set (use 'rosa list versions -o json' for examples)
rosa_version_base: "openshift-v4.14"

# ROSA CLI version
rosa_installer_version: latest

# Where to download the ROSA installer from
rosa_installer_url: >-
  https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/rosa/{{ rosa_installer_version }}/rosa-linux.tar.gz

# OpenShift client install root URL
ocp4_tools_root_url: >-
  https://mirror.openshift.com/pub/openshift-v4/clients

# ROSA Token
# This should come from a secret and is only used if the rosa_token does not come from the demo dot dialog
gpte_rosa_token: ""
# This should come from a demo dot dialog, if not, gpte_rosa_token is used from secret
rosa_token: ""

# Set up a cluster admin user
rosa_setup_cluster_admin: true

# Log cluster admin user into OpenShift on the Bastion VM
# When set to true a .kube/config is created for the admin user
# This is useful to immediately run oc commands on the bastion
# or to deploy workloads using the kubernetes.core collection
rosa_setup_cluster_admin_login: false

# Delete cluster admin after workloads have been executed
# This is useful if one of the workloads sets up an alternative
# authentication provider like Red Hat SSO or AWS Cognito
rosa_setup_cluster_admin_delete_after_workloads: false

# ROSA Cluster Settings
# If these are not specified the defaults are used
# If they are specified they have to be set to a supported value
# rosa_compute_machine_type: m5.xlarge
# rosa_compute_worker_disk_size: 200GiB

# Replicas can not be less than 2
# Replicas also can not be set when autoscaling is enabled
# rosa_compute_replicas: 2

# Enable Autoscaling. Further autoscaling options are only used if true
# HCP does not support autoscaling. Turning it on will have no effect
# rosa_compute_enable_autoscaling: false
# rosa_compute_autoscaling_scaledown_enabled: true

# Minimum number of replicas is 2
# rosa_compute_autoscaling_min_replicas: 2
# rosa_compute_autoscaling_max_replicas: 4

# Install helm on the bastion
rosa_install_helm: true

# Install terraform on the bastion (necessary for HCP deploy)
rosa_install_terraform: true
rosa_terraform_version: "1.6.4"
rosa_terraform_url: >-
  https://releases.hashicorp.com/terraform/{{ rosa_terraform_version }}/terraform_{{ rosa_terraform_version }}_linux_amd64.zip
rosa_terraform_repo: https://github.com/openshift-cs/terraform-vpc-example
rosa_terraform_repo_branch: main

# Lockdown the Security Group for the Bastion to allow
# ssh only from itself (showroom)
rosa_lock_bastion_security_group: false

# Extra software tools to install on the bastion
install_tektoncd_cli: false
install_github_cli: false
install_argocd_cli: false
argocd_cli_version: v2.10.4

# YAML List of Infrastructure Workloads.
# REQUIRES Ansible 2.7+ on the deployer host
# Requires rosa_deploy == true
# Empty by default - to be set by specific configurations
infra_workloads: []

# --------------------------------------------------------------------
# Bookbag
# --------------------------------------------------------------------
# Deploy Bookbag - if true the bookbag_git_* vars need to
# be set accordingly
deploy_bookbag: false
# bookbag_git_repo: https://github.com/rhpds/rosa-ilt.git
# bookbag_git_version: main

# --------------------------------------------------------------------
# Showroom
# --------------------------------------------------------------------
# Deploy Showroom - if true the showroom_git_* vars need to
# be set accordingly
showroom_deploy: false
# showroom_git_repo: https://github.com/rhpds/showroom-rosa-ops-hoe.git
# showroom_git_ref: main

# Set a password for the showroom user
# If not set then a password with given length (default 16 characters)
# will be created
# showroom_user_password: ""
# showroom_user_password_length: 16

# User to log into Showroom (rosa)
showroom_ssh_username: "{{ bastion_user_name }}"
showroom_default_ssh_user: "{{ bastion_user_name }}"
showroom_ssh_method: sshkey     # password | sshkey
showroom_ssh_key_type: ed25519  # ed25519 | rsa
# For method = password provide a password
# showroom_ssh_password: "{{ _showroom_user_password }}"
showroom_ssh_host: "bastion.{{ subdomain_base }}"

# --------------------------------------------------------------------
# Internal Vars. Don't set
# --------------------------------------------------------------------
_rosa_cluster_admin_password: ""
_rosa_hcp_regions: ""
_rosa_version_to_install: ""
_rosa_version_to_upgrade_to: ""
_rosa_ocp_cli_version: ""
_showroom_user_password: ""
