---
# Cloudformation or Heat template or equivalent should tag all hosts with Project:{{ env_type }}-{{ guid }}
- name: Configure all hosts with Repositories, Common Files and Set environment key
  hosts: all
  become: true
  gather_facts: false
  tags:
  - step004
  - common_tasks
  roles:
  - role: common
    when: install_common | default( true ) | bool
  tasks:
  - name: Add GUID to /etc/skel/.bashrc
    ansible.builtin.lineinfile:
      path: "/etc/skel/.bashrc"
      regexp: "^export GUID"
      line: "export GUID={{ guid }}"

  - name: Add GUID to ~{{ ansible_user }}
    ansible.builtin.lineinfile:
      path: "~{{ ansible_user }}/.bashrc"
      regexp: "^export GUID"
      line: "export GUID={{ guid }}"

  - name: Generate user password if not defined
    ansible.builtin.set_fact:
      rosa_user_password: >-
        {{ lookup('password', '/dev/null length={{ bastion_user_password_length }} chars=ascii_letters,digits') }}

  - name: Create user with password
    ansible.builtin.user:
      state: present
      name: "{{ bastion_user_name }}"
      password: "{{ rosa_user_password | password_hash('sha512') }}"
      password_lock: false
      comment: ROSA User
      group: users
      groups: "{{ 'wheel' if bastion_user_enable_sudo | bool else '' }}"
      shell: /bin/bash

  - name: Enable password authentication
    ansible.builtin.lineinfile:
      line: PasswordAuthentication yes
      regexp: '^ *PasswordAuthentication'
      path: /etc/ssh/sshd_config

  - name: Remove PasswordAuthentication line from 50-cloud-init.conf
    when: bastion_remove_cloud_init_conf | default(true) | bool
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config.d/50-cloud-init.conf
      regexp: PasswordAuthentication
      state: absent

  - name: Restart sshd
    ansible.builtin.service:
      name: sshd
      state: restarted

  - name: Remove register for insights motd
    when: bastion_remove_insights_motd | bool
    ansible.builtin.file:
      state: absent
      path: /etc/motd.d/insights-client

  - name: Add a custom motd to the bastion
    when: bastion_custom_motd | default("") | length > 0
    ansible.builtin.copy:
      dest: /etc/motd.d/agnosticd
      owner: root
      group: root
      mode: "o=rw,g=rw,o=r"
      content: "{{ bastion_custom_motd }}"

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - flight_check
  tasks:
  - name: Print pre-software checks message
    ansible.builtin.debug:
      msg: "Pre-Software checks completed successfully"
