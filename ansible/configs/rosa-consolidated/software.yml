---
- name: Step 00xxxxx software
  hosts: bastions
  gather_facts: false
  become: false
  tasks:
  - name: Install and configure AWS cli
    ansible.builtin.include_tasks: install_aws_cli.yml

  - name: Install Helm
    when: rosa_install_helm | default(true) | bool
    ansible.builtin.include_tasks: install_helm.yml

  - name: Install Terraform
    when: rosa_install_terraform | default(true) | bool
    become: true
    ansible.builtin.unarchive:
      src: "{{ rosa_terraform_url }}"
      remote_src: true
      dest: /usr/local/bin
      mode: "0775"
      owner: root
      group: root
    retries: 10
    register: r_terraform
    until: r_terraform is success
    delay: 30

  - name: Install additional tools
    ansible.builtin.include_tasks: install_additional_tools.yml

  - name: Install ROSA CLI
    ansible.builtin.include_tasks: install_rosa_cli.yml

  - name: Setup ROSA token
    when: rosa_token == ""
    ansible.builtin.set_fact:
      rosa_token: "{{ gpte_rosa_token }}"

  - name: Login to ROSA
    ansible.builtin.command: >-
      /usr/local/bin/rosa login --token {{ rosa_token }}

  - name: Set up rosa user's bastion home directory
    ansible.builtin.include_tasks: install_rosa_user.yml

  - name: Install ROSA
    when: rosa_deploy | default(true) | bool
    block:
    - name: Install ROSA - Common pre-install tasks
      ansible.builtin.include_tasks: install_rosa_common_pre.yml

    - name: Install ROSA (STS)
      when: not rosa_deploy_hcp | default(false) | bool
      ansible.builtin.include_tasks: install_rosa_sts.yml

    - name: Install ROSA (Hosted Control Planes)
      when: rosa_deploy_hcp | default(false) | bool
      ansible.builtin.include_tasks: install_rosa_hcp.yml

    - name: Install ROSA - Common post-install tasks
      ansible.builtin.include_tasks: install_rosa_common_post.yml

  - name: Install OpenShift CLI
    ansible.builtin.include_tasks: install_ocp_cli.yml

  - name: Set ROSA token warning boolean true
    when: rosa_token == gpte_rosa_token
    ansible.builtin.set_fact:
      rosa_token_warning: true

  - name: Set ROSA token warning boolean false
    when: rosa_token != gpte_rosa_token
    ansible.builtin.set_fact:
      rosa_token_warning: false

  - name: Save ROSA user data when ROSA has been installed
    when: rosa_deploy | default(true) | bool
    block:
    - name: Save ROSA user data when ROSA has been installed
      agnosticd_user_info:
        data:
          rosa_sandbox_account_id: "{{ hostvars.localhost.sandbox_account_id }}"
          rosa_console_user_name: "{{ hostvars.localhost.rosa_console_user_name }}"
          rosa_console_password: "{{ hostvars.localhost.rosa_console_password }}"
          rosa_bastion_user_name: "{{ bastion_user_name }}"
          rosa_subdomain_base: "{{ subdomain_base }}"
          rosa_user_password: "{{ rosa_user_password }}"
          rosa_console_url: "{{ rosa_console_url }}"
          rosa_api_url: "{{ rosa_api_url }}"
          rosa_admin_user: "{{ _rosa_cluster_admin }}"
          rosa_admin_password: "{{ _rosa_cluster_admin_password }}"
          rosa_token_warning: "{{ rosa_token_warning }}"

    - name: Print ROSA user data when ROSA has been installed
      when: print_agnosticd_user_info | default(true) | bool
      agnosticd_user_info:
        msg: |

          *NOTE:* With great power comes great responsibility. We monitor usage.

          == AWS web console access:
          * URL: https://{{ hostvars.localhost.sandbox_account_id }}.signin.aws.amazon.com/console
          * User: {{ hostvars.localhost.rosa_console_user_name }}
          * Password: {{ hostvars.localhost.rosa_console_password }}

          *IMPORTANT:* Please be very careful to not expose AWS credentials in GIT repos or anywhere else that could be public!
          If your credentials are compromised, your environment will be deleted without warning.

          == Bastion SSH access:
          * ssh {{ bastion_user_name }}@bastion.{{ subdomain_base }}
          * Password: {{ rosa_user_password }}
          * Your AWS credentials are preconfigured in `~/.aws/credentials` on the bastion host.
          * The ROSA CLI is preinstalled on the bastion host in `/usr/local/bin`. There is no need to use root.

          == OpenShift console access:
          * URL: {{ rosa_console_url }}
          * User: {{ _rosa_cluster_admin }}
          * Password: {{ _rosa_cluster_admin_password }}

  - name: Save ROSA user data when ROSA has not been installed
    when: not rosa_deploy | default(true) | bool
    block:
    - name: Save ROSA user data when ROSA has not been installed
      agnosticd_user_info:
        data:
          rosa_sandbox_account_id: "{{ hostvars.localhost.sandbox_account_id }}"
          rosa_console_user_name: "{{ hostvars.localhost.rosa_console_user_name }}"
          rosa_console_password: "{{ hostvars.localhost.rosa_console_password }}"
          rosa_bastion_user_name: "{{ bastion_user_name }}"
          rosa_subdomain_base: "{{ subdomain_base }}"
          rosa_user_password: "{{ rosa_user_password }}"
          rosa_token_warning: "{{ rosa_token_warning }}"
          rosa_console_url: "none"

    - name: Print ROSA user data when ROSA has not been installed
      when: print_agnosticd_user_info | default(true) | bool
      agnosticd_user_info:
        msg: |

          *NOTE:* With great power comes great responsibility. We monitor usage.

          == AWS web console access:
          * URL: https://{{ hostvars.localhost.sandbox_account_id }}.signin.aws.amazon.com/console
          * User: {{ hostvars.localhost.rosa_console_user_name }}
          * Password: {{ hostvars.localhost.rosa_console_password }}

          *IMPORTANT:* Please be very careful to not expose AWS credentials in GIT repos or anywhere else that could be public!
          If your credentials are compromised, your environment will be deleted without warning.

          == Bastion SSH access:
          * ssh {{ bastion_user_name }}@bastion.{{ subdomain_base }}
          * Password: {{ rosa_user_password }}
          * Your AWS credentials are preconfigured in `~/.aws/credentials` on the bastion host.
          * The ROSA CLI is preinstalled on the bastion host in `/usr/local/bin`. There is no need to use root.
          * The ROSA CLI is already logged in using a ROSA token.
          * You can now install a ROSA cluster manually from the bastion host running the `rosa` CLI.
          * Please see the ROSA CLI documentation on necessary steps after `rosa login`.

  - name: Print ROSA token warning
    when: rosa_token_warning | bool
    agnosticd_user_info:
      msg: |

        *IMPORTANT:* You did not provide a ROSA token.

        This is fine as long as you do not need to access the managment console at
        https://console.redhat.com/openshift. It is recommended that you generate and provide your own ROSA token when deploying
        this catalog item so that you have full functionality and control of your cluster. You can generate a rosa token from
        your Red Hat console account here: https://console.redhat.com/openshift/token/rosa
