---
- name: Retrieve VPC for worker nodes
  amazon.aws.ec2_vpc_net_info:
    filters:
      tag:Name: "{{ rosa_cluster_name }}-vpc"
  register: r_vpcs

- name: Print VPC id and name
  ansible.builtin.debug:
    msg: "VPC ID: {{ r_vpcs.vpcs[0].vpc_id }}, Name: {{ r_vpcs.vpcs[0].tags.Name }}"

- name: Retrieve Worker Node security group
  amazon.aws.ec2_security_group_info:
    filters:
      vpc-id: "{{ r_vpcs.vpcs[0].vpc_id }}"
      tag:red-hat-clustertype: rosa

  register: r_security_groups

- name: Print security group name
  ansible.builtin.debug:
    msg: "{{ r_security_groups.security_groups[0].group_name }}"

- name: Debug Security Group before change
  ansible.builtin.debug:
    msg: "{{ r_security_groups.security_groups[0] }}"

- name: Set empty egress_rules variable
  ansible.builtin.set_fact:
    _worker_egress_rules: []

- name: Add passed rules
  when: rosa_cluster_security_group_egress_rules | default([]) | length > 0
  ansible.builtin.set_fact:
    _worker_egress_rules: "{{ _worker_egress_rules + rosa_cluster_security_group_egress_rules }}"

- name: Update Security Group egress rules
  amazon.aws.ec2_security_group:
    state: present
    name: "{{ r_security_groups.security_groups[0].group_name }}"
    description: "{{ r_security_groups.security_groups[0].description }}"
    vpc_id: "{{ r_vpcs.vpcs[0].vpc_id }}"
    purge_rules: false
    purge_rules_egress: true
    rules_egress: "{{ _ssh_egress_rules }}"
  register: r_sg

- name: Debug SG
  ansible.builtin.debug:
    msg: "{{ r_sg }}"
