---
# Need to run as a block with become: true
# because include_role can't have a become statement
- name: Setup virtualenv on bastion
  become: true
  block:
  - name: Check if virtualenv is already installed
    ansible.builtin.stat:
      path: /opt/virtualenvs/k8s/bin/python
    register: r_virtualenv

  - name: Setup k8s virtualenv if no virtualenv exists
    when: not r_virtualenv.stat.exists
    vars:
      host_virtualenv_path: /opt/virtualenvs/k8s
      host_virtualenv_requirements:
      - requirements_k8s.txt
    ansible.builtin.include_role:
      name: host_virtualenv

- name: Set ansible python interpreter to k8s virtualenv
  ansible.builtin.set_fact:
    ansible_python_interpreter: /opt/virtualenvs/k8s/bin/python

- name: Debug login
  ansible.builtin.debug:
    msg: >-
      oc login -u cluster-admin
      -p {{ _rosa_cluster_admin_password }}
      {{ rosa_api_url }}

- name: Log into OpenShift
  environment:
    K8S_AUTH_VERIFY_SSL: false
  community.okd.openshift_auth:
    validate_certs: false
    host: "{{ rosa_api_url }}"
    username: cluster-admin
    password: "{{ _rosa_cluster_admin_password }}"
  register: r_kube_auth
  retries: 60
  delay: 30
  until:
  - r_kube_auth is defined
  - r_kube_auth.k8s_auth is defined
  - r_kube_auth.k8s_auth.api_key is defined

- name: Create .kube directory if it does not exist
  ansible.builtin.file:
    path: "~{{ ansible_user }}/.kube"
    owner: "{{ ansible_user }}"
    state: directory
    mode: "0755"

- name: Generate kubeconfig file
  ansible.builtin.template:
    src: templates/kubeconfig.j2
    dest: "~{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    mode: "0600"
