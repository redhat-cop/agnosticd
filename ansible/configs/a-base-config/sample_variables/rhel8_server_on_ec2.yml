---
# -------------------------------------------------------------------
# RHEL 8 Server on OpenStack.
# This example creates a single RHEL 8 server, with examples included to build additonal servers.
# -------------------------------------------------------------------

# -------------------------------------------------------------------
# Mandatory Variables
# -------------------------------------------------------------------
cloud_provider: ec2                  # This var file is meant for an openstack deployment
env_type: a-base-config              # Name of the config to deploy
software_to_deploy: none             # Not deploying any software onto the environment
# -------------------------------------------------------------------
# End Mandatory Variables
# -------------------------------------------------------------------

# -------------------------------------------------------------------
# Environment Variables
# -------------------------------------------------------------------
# guid is the deployment unique identifier, it will be appended to all tags,
# files and anything that identifies this environment from another "just like it"
# The current value is an example guid based on a openstack project name.

guid: f7d9
email: example@example.com               # User info for notifications
output_dir: /tmp/output_dir              # Writable working scratch directory
admin_user: "{{ guid }}-user"            # User created by the project. Leave as {{ guid }}-user
student_name: "{{ guid }}-user"          # This will be used to create a student login ID
student_password: "r3dh4t1!"             # Customize the student password here. Keep in mind these systems may be public facing.
key_name: ocpkey                         # SSH keyname must exist in AWS

### Route 53 Zone ID (AWS)
# This is the Route53 HostedZoneId where you will create your Public DNS entries
#
# HostedZoneId needs to come from the account that is being used. It also needs to match
# subdomain_base_suffix
HostedZoneId: Z3IHLWJZOU9SRT

subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{subdomain_base_short}}{{subdomain_base_suffix}}"
zone_internal_dns: "{{guid}}.internal."
chomped_zone_internal_dns: "{{guid}}.internal"


# Security groups and associated rules. This will be provided
# when the Heat template is generated separate groups and rules
security_groups:
- name: nodeSG
  description: Node security group allows basic icmp and SSH ingress and egress.
  rules:
    - name: MoshPublic
      description: "Public Mosh Access for bastions"
      from_port: 60000
      to_port: 61000
      protocol: udp
      cidr: "0.0.0.0/0"
      rule_type: Ingress
    - name: SSHPublic
      description: "Public Access for bastions"
      from_port: 22
      to_port: 22
      protocol: tcp
      cidr: "0.0.0.0/0"
      rule_type: Ingress


# Example additonal security group
# - name: workstationSG
#   description: Node security group allows basic icmp and SSH ingress and egress.
#   rules:
#   - protocol: icmp
#     description: "Ping"
#     direction: ingress
#     rule_type: Ingress

# Instances to be provisioned in project
# Provide these as a list.
# Each instance type can have any number of replicas deployed with the same
# configuration.
# Metadata in OpenStack is equivelent to tags in AWS
# These instances will be created with Cinder persistent volumes

instances:
- name: node
  count: "{{ node_instance_count }}"
  unique: true
  alt_name: "bastion"
  public_dns: true
  dns_loadbalancer: false
  floating_ip: true
  image: "{{ node_instance_image }}"
  flavor:
    ec2: "{{ node_instance_type }}"
  tags:
  - key: "AnsibleGroup"
    value: "bastions,nodes"
  - key: "function"
    value: "nodes"
  - key: "User"
    value: "{{ student_name }}"
  - key: "ostype"
    value: "linux"
  rootfs_size: "{{ node_rootfs_size }}"
  volumes:
    - name: '/dev/sda1'
      size: 40
  security_groups:
  - nodeSG

# Example additonal instance, Ensure to define the variables as well
# - name: "workstation"
#   count: "{{ workstation_instance_count }}"
#   public_dns: false
#   image: "{{ workstation_instance_image }}"
#   flavor:
#     ec2: "{{ workstation_instance_type }}"
#   tags:
#     - key: "AnsibleGroup"
#       value: "workstations"
#     - key: "ostype"
#       value: "linux"
#     - key: "instance_filter"
#       value: "{{ env_type }}-{{ email }}"
#   key_name: "{{key_name}}"
#   security_groups:
#     - workstationSG
#     - DefaultSG


# Instance Variables
rhel_image: RHEL81GOLD                   # Image within ec2 to use for systems
node_instance_count: 1                   # The number of nodes to deploy for this environment
node_instance_image: "{{ rhel_image }}"  # Image to use for the node_instance defined in the default_vars.yml
node_instance_type: t3.medium            # Existing ec2 flavor
node_rootfs_size: 30                     # Size of the root filesystem

# Packages

rhel_repos:                              # Repositories that will be available in the environment.
  - rhel-8-for-x86_64-baseos-rpms
  - rhel-8-for-x86_64-appstream-rpms

update_packages: false                   # Update all packages on system after configuration. true/false

common_packages:                         # Packages to be installed on each node
  - python
  - unzip
  - bash-completion
  - tmux
  - wget
  - git
  - vim-enhanced
  - at
