---
# sample vars configuration file

env_type: ansible-multitier-infra           # Name of config to deploy
cloud_provider: osp                     # Which AgnosticD Cloud Provider to use

repo_version: 3.7.3-1

software_to_deploy: tower               # Tower deployment from software/tower.yml
tower_version: 3.7.3-1

inventory_groups:
  - app_servers
  - load_balancers
  - database_servers
  - tower

common_packages:
  - python
  - python-pip
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at
  - ansible
  - tree

# Default instance type

__instance_type: 2c2g30d 

# Default Image

__image: rhel-server-7.7-update-2  

# Environment Instances

instances:
  - name: "control"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(__instance_type) }}"
    security_groups:
      - BastionSG
      - WebSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "tower"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "2c4g30d"
    security_groups:
      - BastionSG
      - WebSG
    tags:
      - key: "AnsibleGroup"
        value: "tower,towers"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "frontend1"
    count: "{{ frontend_instance_count | default(1) }}"
    public_dns: true
    dns_loadbalancer: true
    image_id: "{{ frontend_instance_image | default(__image) }}"
    flavor:
      osp: "{{ frontend_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "load_balancers"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG


  - name: "app"
    count: "{{ app_instance_count | default(2) }}"
    public_dns: false
    image_id: "{{ app_instance_image | default(__image) }}"
    flavor:
      osp: "{{ app_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "app_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

  - name: "appdb1"
    count: "{{ appdb_instance_count | default(1) }}"
    public_dns: false
    image_id: "{{ appdb_instance_image | default(__image) }}"
    flavor:
       osp: "{{ appdb_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "database_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG


#### OSP ####
# See cloud_providers/osp_default_vars.yml
# See roles-infra/infra-osp-project-create/defaults/main.yml

# Set this to true if you need to create a new project in OpenStack
# This should almost always be set to true for OpenShift installations
# If it is set to false, the {{ osp_project_name }} must already exist and
# should be able to run whatever you are deploying
#osp_project_create: true

# If osp_project_create is set to yes, define those:
# Quotas to set for new project that is created
#quota_num_instances: 15
#quota_num_cores: 72
#quota_memory: 131072 # in MB
#quota_num_volumes: 25
#quota_volumes_gigs: 500
#quota_loadbalancers: #when Octavia is available
#quota_pool: #when Octavia is available
#quota_networks: 3
#quota_subnets: 3
#quota_routers: 3
quota_fip: 7
#quota_sg: 10
#quota_sg_rules: 100
...







...
