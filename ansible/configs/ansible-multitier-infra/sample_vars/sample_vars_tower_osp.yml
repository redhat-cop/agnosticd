---
# sample vars configuration file

env_type: ansible-multitier-infra           # Name of config to deploy
output_dir: /tmp/output_dir             # Writable working scratch directory
email: name@example.com                 # User info for notifications
guid: guid01                            # Your Global UNIQUE Identifier
cloud_provider: osp                     # Which AgnosticD Cloud Provider to use
ansible_user: cloud-user
remote_user: cloud-user 
osp_cluster_dns_zone: red.osp.opentlc.com

repo_version: 3.7.0-4
own_repo_path: http://admin.example.com/repos/tower

vscode_user_name: "{{ control_user_name }}"
vscode_server_hostname: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"

inventory_groups:
  - app_servers
  - load_balancers
  - database_servers
  - tower

# Environment Instances

instances:
  - name: "control"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(__instance_type) }}"
    security_groups:
      - BastionSG
      - WebSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "tower"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(__instance_type) }}"
    security_groups:
      - BastionSG
      - WebSG
    tags:
      - key: "AnsibleGroup"
        value: "tower"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "frontend"
    count: "{{ frontend_instance_count | default(1) }}"
    public_dns: true
    dns_loadbalancer: true
    image_id: "{{ frontend_instance_image | default(__image) }}"
    flavor:
      osp: "{{ frontend_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "load_balancers"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG


  - name: "app"
    count: "{{ app_instance_count | default(2) }}"
    public_dns: false
    image_id: "{{ app_instance_image | default(__image) }}"
    flavor:
      osp: "{{ app_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "app_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

  - name: "appdb"
    count: "{{ appdb_instance_count | default(1) }}"
    public_dns: false
    image_id: "{{ appdb_instance_image | default(__image) }}"
    flavor:
       osp: "{{ appdb_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "database_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG


...
