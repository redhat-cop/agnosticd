---
################################################################################
### Default Environment variables
################################################################################
student_password: r3dh4t1!
devops_password_tower: r3dh4t1!

inventory_groups:
  - tower
  - webservers

security_groups:
  - name: TowerSG
    rules:
      - name: TowerHTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: TowerHTTPsPorts
        description: "HTTPs Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      
      - name: TowerSSH
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: FromHostsgTCP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: HostSG
        rule_type: Ingress

      - name: FromHostsgUDP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: HostSG
        rule_type: Ingress

  - name: WebserverSG
    rules:
      - name: WebSerHTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: WebSerHTTPsPorts
        description: "HTTPs Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

# Environment Instances
instances:
  - name: "control"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ bastion_instance_image | default(image) }}"
    flavor:
      ec2: "{{ bastion_instance_type | default(instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - TowerSG 

  - name: "tower"
    count: 1 
    unqiue: true
    public_dns: true
    dns_loadbalancer: true
    image: "{{ tower_instance_image | default(image) }}"
    flavor:
      ec2: "{{ tower_instance_type | default(instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "tower"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - TowerSG
      - DefaultSG
      - HostSG

  - name: "webserver"
    count: "{{ node_instance_count | default(2) }}"
    public_dns: false
    image: "{{ webserver_instance_image | default(image) }}"
    flavor:
      ec2: "{{ webserver_instance_type | default(instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "webservers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - HostSG
      - WebserverSG
      - DefaultSG

common_packages_el8:
  - python3
  - python3-pip
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at
  - gcc
  - ansible

update_packages: true

# Repositories that will be available in the environment when using repo_methods rhn & file.
# rhel_repos:
#   - rhel-8-for-x86_64-baseos-rpms
#   - rhel-8-for-x86_64-appstream-rpms
#   - ansible-2.9-for-rhel-8-x86_64-rpms

...