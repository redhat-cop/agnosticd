---
################################################################################
### EC2 Environment variables
################################################################################
env_type: ansible-multitier-infra       # Name of config to deploy
output_dir: /tmp/output_dir             # Writable working scratch directory
email: "{{ env_type }}@example.com"     # User info for notifications
guid: guid01                            # Your Global UNIQUE Identifier
cloud_provider: ec2                     # Which AgnosticD Cloud Provider to use

ansible_automation_platform_labs: true

install_bastion: false
install_common: true
install_bastion_lite: true

# Default instance type 
instance_type: "t2.medium" 
tower_instance_type: "t2.xlarge"

# Default Image
image: RHEL81GOLD

# If using repo_methods rhn or file add location for epel
# custom_epel_repo: FROMSECRET

software_to_deploy: tower

tower_version: 3.7.1-1
tower_hostname: "tower1.{{ subdomain_base }}"

# Tower Configuration Dictionaries, correspond with configure_tower.yml
tower_user_accounts: 
  - user: devops
    password: "{{ devops_password_tower }}"
    email: devops@example.com
    firstname: Devon
    lastname: Operations
    superuser: yes

tower_projects:
  - name: Webserver SCM
    description: Webserver Deployment Project
    organization: Default
    scm_url: https://github.com/wilson-walrus/ansible-automation-platform-labs.git
    scm_type: git
    state: present
    tower_host: "{{ tower_hostname }}"  
    tower_username: admin
    tower_password: "{{ tower_admin_password }}"

tower_inventories:
  - name: Webserver Inventory
    description: Webserver Inventory
    organization: Default

tower_inventory_source:
  - name: Webserver Static
    description: Sourced from project
    inventory: Webserver Inventory
    source: scm
    source_project: Webserver SCM
    source_path: hosts-ec2
    update_on_launch: yes
    state: present

tower_credentials:
  - name: Webserver Private Key
    username: ec2-user
    description: Private key to connect to Webservers
    organization: Default
    type: ssh
    become_method: sudo
    state: present
    ssh_key_data: "{{ lookup('file', '{{ output_dir}}/{{ guid }}key') }}"

tower_job_templates:
  - name: Webserver Deploy
    description: Deploy Webservers
    inventory: Webserver Inventory
    credential: Webserver Private Key
    project: Webserver SCM
    playbook: main.yml
    become: yes
    ask_extra_vars: no

...
