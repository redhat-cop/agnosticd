---
# -------------------------------------------------
# Infra variables
# -------------------------------------------------
env_type: ansible-rhel-workshop
# Writable working scratch directory
output_dir: /tmp/workdir/{{ guid }}
email: "{{ env_type }}@opentlc.com"
guid: "{{ env_type }}"
uuid: "{{ guid }}"
cloud_provider: ec2
#[ Login Settings ]
install_ipa_client: false
#[ Run a full yum update ]
update_packages: false
#[ This var is used to identify stack (cloudformation, azure resourcegroup, ...) ]
project_tag: "{{ env_type }}-{{ guid }}"
#[ Variables you should ***NOT*** Configure for you deployment ]
#[ You can, but you usually wouldn't need to. ]
admin_user: opentlc-mgr
ansible_user: ec2-user
remote_user: ec2-user
#[ Is this running from Red Hat Ansible Tower ]
tower_run: false
software_to_deploy: none

# -------------------------------------------------
# FTL Settings
# -------------------------------------------------
install_ftl: false
ftl_use_python3: true

# -------------------------------------------------
# Role: control-user
# -------------------------------------------------
env_authorized_key: "{{guid}}key"
install_control_user: true
student_name: student1
student_password: "{{ common_password }}"
control_user_name: "{{ student_name }}"
control_user_password: "{{ common_password }}"
control_user_private_group: "{{ omit }}"
control_user_ssh_config: ./files/ssh_config.j2

# -------------------------------------------------
# Role: bastion-lite
# -------------------------------------------------
install_bastion_lite: true

# -------------------------------------------------
# Role: set-repositories
# -------------------------------------------------
repo_method: satellite
use_content_view: true

# -------------------------------------------------
# Role: common
# -------------------------------------------------
install_common: true
common_packages_el8:
  - python3
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - nano
  - git
  - vim-enhanced
  - httpd-tools
  - python3-pip
  - tree

# -------------------------------------------------
# Role: automation_platform_loader
# -------------------------------------------------
controller_credential_types:
  - name: Satellite_Collection
    description: Credential for redhat.satellite collection
    inputs:
      fields:
        - id: username
          type: string
          label: Satellite Username
        - id: password
          type: string
          label: Satellite Password
          secret: true
        - id: host
          type: string
          label: Satellite Hostname
      required:
        - username
        - password
        - host
    injectors:
      env:
        SATELLITE_PASSWORD: !unsafe '{{ password }}'
        SATELLITE_USERNAME: !unsafe '{{ username }}'
        SATELLITE_SERVER_URL: !unsafe '{{ host }}'
        SATELLITE_VALIDATE_CERTS: 'false'

  - name: GitHub_Personal_Access_Token
    description: Credential for GitHub repo operations automation
    inputs:
      fields:
        - id: personal_access_token
          type: string
          label: Personal Access Token
          secret: true
          help_text: GitHub Personal Access Token
          multiline: true
      required:
        - personal_access_token
    injectors:
      env:
        MY_PA_TOKEN: !unsafe '{{ personal_access_token }}'

  - name: Splunk HEC Token
    description: Credential to send event data to a Splunk deployment
    kind: cloud
    inputs:
      fields:
        - type: string
          id: splunk_url
          label: Splunk URL
          help_text: URL of the Splunk HTTP Event Collector
        - type: string
          id: splunk_index
          label: Splunk Index
          help_text: Splunk index to which events will be collected
        - type: string
          id: splunk_hectoken
          label: Splunk HEC Token
          secret: true
          help_text: HTTP Event Collector tokens used for Splunk platform authentication
      required:
        - splunk_url
        - splunk_index
        - splunk_hectoken
    injectors:
      extra_vars:
        splunk_url: !unsafe '{{ splunk_url }}'
        splunk_index: !unsafe '{{ splunk_index }}'
        splunk_hectoken: !unsafe '{{ splunk_hectoken }}'
