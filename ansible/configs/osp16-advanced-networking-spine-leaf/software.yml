---
- name: Step 005 Environment specific Software
  hosts: localhost
  gather_facts: False
  become: false
  tasks:
    - debug:
        msg: "Software tasks Started"

- name: Configure ipmi-host
  hosts: ipmi-host
  tags: build
  become: true
  tasks:
    - name: Install dhcprelay
      yum:
        name: dhcp-relay
        state: present
    - name: Configure dhcrelay.service
      copy:
        src: dhcrelay.service
        dest: /usr/lib/systemd/system/dhcrelay.service

    - name: Reload systemd
      shell: systemctl daemon-reload
    - name: Enable and start dhcp-relay
      service:
        name: dhcrelay
        state: restarted
        enabled: true

    - name: Install kernel-modules-extra
      yum:
        name: "kernel-modules-extra-{{ansible_kernel}}"
        state: present

    - name: Enable module sch_netem
      modprobe:
        name: sch_netem
        state: present

    - name: Install iproute-tc
      yum:
        name: iproute-tc
        state: present

    - name: Creates a cron for TC latency
      cron:
        name: "eth4 20ms latency"
        special_time: reboot
        job: "/sbin/tc qdisc add dev eth4 root netem delay 20ms"

    - name: Run the command  for tc
      command: /sbin/tc qdisc add dev eth4 root netem delay 20ms

- name: Install overcloud
  hosts: undercloud
  become: true
  become_user: stack
  tags: build
  tasks:
    - name: Configure and install overcloud
      when: deployed_version_lab|default(False) and (purpose == "development" or purpose == "build")
      block:
        - name: Copy files to /home/stack
          synchronize:
            use_ssh_args: True
            src: "{{ item }}"
            dest: "/home/stack/{{ item }}"
          loop:
            - undercloud.conf
            - nodes.json
            - deploy.sh
            - templates/
            - dcn0/

        - name: Change owner and group of the files
          command: sudo chown -R stack:stack .
          args:
            chdir: /home/stack/

        - name: Adding routes for 192.0.{3,4,100}.0/24
          become_user: root
          copy:
            dest: /etc/sysconfig/network-scripts/route-br-ctlplane
            content: |
              192.0.3.0/24 via 192.0.2.253 dev br-ctlplane
              192.0.4.0/24 via 192.0.2.253 dev br-ctlplane
              192.0.100.0/24 via 192.0.2.253 dev br-ctlplane
              172.20.100.0/24 via 192.0.2.253 dev br-ctlplane

        - name: Restart network service
          become_user: root
          service:
            name: network
            state: restarted

        - name: Reconfigure undercloud to use different leafs
          shell: openstack undercloud install
          args:
            chdir: /home/stack/

        - name: Import nodes
          shell: source ~/stackrc && openstack overcloud node import --introspect --provide nodes.json
          args:
            chdir: /home/stack/

        - name: Tag nodes
          shell: source ~/stackrc && {{ item }}
          args:
            chdir: /home/stack/
          loop:
            - openstack baremetal node set ctrl01 --property capabilities=node:controller-0,boot_option:local
            - openstack baremetal node set ctrl02 --property capabilities=node:controller-1,boot_option:local
            - openstack baremetal node set ctrl03 --property capabilities=node:controller-2,boot_option:local
            - openstack baremetal node set compute01 --property capabilities=node:compute0-0,boot_option:local
            - openstack baremetal node set compute02 --property capabilities=node:compute1-0,boot_option:local
            - openstack baremetal node set compute03 --property capabilities=node:compute2-0,boot_option:local
            - openstack baremetal node set computeaz1 --property capabilities=node:computeaz1-0,boot_option:local
            - openstack baremetal node manage compute02
            - openstack baremetal node manage compute03
            - openstack baremetal node manage computeaz1
            - openstack baremetal port set --physical-network leaf1 $(openstack baremetal port list --node compute02 -c UUID -f value)
            - openstack baremetal port set --physical-network leaf2 $(openstack baremetal port list --node compute03 -c UUID -f value)
            - openstack baremetal port set --physical-network az1 $(openstack baremetal port list --node computeaz1 -c UUID -f value)
            - openstack overcloud node provide --all-manageable

        - name: Deploy Overcloud
          shell: source ~/stackrc && sh -x deploy.sh
          args:
            chdir: /home/stack/
          async: 100000
          poll: 0
          register: install_overcloud

        - name: "install overcloud - check on async task"
          async_status:
            jid: "{{ install_overcloud.ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: 600

        - name: Configure dcn
          shell: source ~/stackrc && {{ item }}
          args:
            chdir: /home/stack/
          loop:
            - mkdir -p dcn-common
            - source ~/stackrc && openstack overcloud export --config-download-dir /var/lib/mistral/overcloud --stack overcloud --output-file ~/dcn-common/central-export.yaml
            - sudo openstack tripleo container image prepare -r ~/dcn0/roles_data.yaml -e ~/dcn-common/central-export.yaml -e ~/containers-prepare-parameter.yaml --output-env-file ~/dcn0/dcn0-images-env.yaml

        - name: Deploy DCN
          shell: source ~/stackrc && sh -x deploy-dcn.sh
          args:
            chdir: /home/stack/dcn0/
          async: 100000
          poll: 0
          register: install_overcloud_dcn

        - name: "install overcloud - dcn - check on async task"
          async_status:
            jid: "{{ install_overcloud_dcn.ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: 600

        - name: Discover nodes on the cell
          shell: source ~/stackrc && TRIPLEO_PLAN_NAME=overcloud ANSIBLE_HOST_KEY_CHECKING=False ansible -i /usr/bin/tripleo-ansible-inventory nova_api[0] -b -a "/usr/bin/podman exec -it nova_api nova-manage cell_v2 discover_hosts --by-service --verbose"
          args:
            chdir: /home/stack/

- name: Configure httpd
  hosts: bastions
  become: true
  tasks:
    - name: Install httpd
      yum:
        name: httpd

    - name: Copy horizon.conf
      template:
        src: httpd/horizon.conf
        dest: /etc/httpd/conf.d/horizon.conf

    - name: Allow SELinux to httpd to bind to port 6080
      shell: semanage port -m -t http_port_t -p tcp 6080
    - name: Allow SELinux rule to allow httpd to connect network
      shell: setsebool -P httpd_can_network_connect 1

    - name: Start and enable httpd
      service:
        name: httpd
        state: restarted
        enabled: yes

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
