---

- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: false
  become: true
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

- name: Output user_info
  hosts: localhost
  connection: local
  gather_facts: false
  become: false

  tags:
    - step005

  tasks:

    - name: Do very annoying normalization of domain name 
      set_fact:
        agnosticd_domain_name: >
          {% if cloud_provider == 'osp' -%}
            .{{ osp_cluster_dns_zone }}
          {% elif cloud_provider == 'ec2' -%}
            {{ subdomain_base_suffix }}
          {% endif %}

    - name: Output user_info for osp or ec2 based deploys
      agnosticd_user_info:
        msg: |
          {% if install_vscode_server is true %}
            To Access VScode UI via browser:
            VScode UI URL: https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}
            VScode UI Password: {{ vscode_user_password | default('password_not_set') }}

          {% endif %}
          {% if software_to_deploy == "ansible_controller" %}
            To Access Ansible controller console via browser:
            Ansible controller URL: https://{{ groups['ansible_controllers'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}
            Ansible controller Username: admin
            Ansible controller Admin Password: {{ ansible_controller_admin_password }}

          {% endif %}
          To Access Control node via SSH:
          ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}
          Enter ssh password when prompted: {{ student_password }}

    - name: Set visual studio code agnosticd_user_info data
      when: install_vscode_server | default(false) | bool
      agnosticd_user_info:
        data: 
          vscode_ui_url: "https://{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}"
          vscode_ui_password: "{{ vscode_user_password }}"

    - name: Set agnosticd_user_info ansible_controller data
      when: software_to_deploy == "ansible_controller" | default("none") 
      agnosticd_user_info:
        data: 
          ansible_controller_url: "https://{{ groups['ansible_controllers'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}"
          ansible_controller_admin_name: "{{ ansible_controller_admin_name | default('admin') }}"
          ansible_controller_admin_password: "{{ ansible_controller_admin_password }}"

    - name: Set agnosticd_user_info ssh data
      agnosticd_user_info:
        data: 
          ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ agnosticd_domain_name }}"
          ssh_password: "{{ student_password }}"

    - name: Deploy Bookbag
      when: bookbag_git_repo is defined
      include_role:
        name: bookbag
      vars:
        ACTION: create

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
