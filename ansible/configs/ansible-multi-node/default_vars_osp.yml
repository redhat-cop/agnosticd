---
env_type: ansible-multi-node

################################################################################
### OSP Environment variables
################################################################################

cloud_provider:   osp                               
ansible_user:     cloud-user
remote_user:      cloud-user
admin_user:       opentlc-mgr

osp_cluster_dns_server: ddns01.opentlc.com
use_dynamic_dns: true
osp_project_create: true

software_to_deploy:         none # tower                # Ansible controller
# tower_version:              3.7.3-1

install_vscode_server:      false                       # Use container version?

inventory_groups:
  - webservers
  - tower
  - controller

# vscode_server_hostname: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"

default_flavor:             2c2g30d       # Default instance types 
control_flavor:             2c4g30d   
webserver_flavor:           "{{ default_flavor }}"

default_image:              rhel-8.4      # Default operating system image

# Environment Instances

instances:
  - name: "control"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ control_system_image | default(default_image) }}"
    flavor:
      osp: "{{ control_flavor | default(default_flavor) }}"
    security_groups:
      - BastionSG
      - WebSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions,tower,controller"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "frontend1"
    count: "{{ frontend_instance_count | default(1) }}"
    public_dns: true
    dns_loadbalancer: true
    image_id: "{{ frontend_system_image | default(default_image) }}"
    flavor:
      osp: "{{ frontend_flavor | default(default_flavor) }}"
    tags:
      - key: "AnsibleGroup"
        value: "load_balancers"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG


  - name: "app"
    count: "{{ app_instance_count | default(2) }}"
    public_dns: false
    image_id: "{{ app_system_image | default(default_image) }}"
    flavor:
      osp: "{{ app_flavor | default(default_flavor) }}"
    tags:
      - key: "AnsibleGroup"
        value: "app_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

  - name: "appdb1"
    count: "{{ appdb_instance_count | default(1) }}"
    public_dns: false
    image_id: "{{ appdb_system_image | default(default_image) }}"
    flavor:
      osp: "{{ appdb_flavor | default(default_flavor) }}"
    tags:
      - key: "AnsibleGroup"
        value: "database_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

security_groups:

  - name: WebSG
    rules:
      - name: WebSGHTTPPort
        description: "Allow HTTP port"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
        
      - name: WebSGHTTPsPort
        description: "Allow HTTPs port"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: HostSGTCP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: HostSG
        rule_type: Ingress

      - name: HostSGUDP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: HostSG
        rule_type: Ingress

  - name: PostgresSG
    rules:
      - name: PostgresPort
        description: "Allow HTTP port"
        from_port: 5432
        to_port: 5432
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

common_packages:

  - python
  - python-pip
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at
  - ansible
  - tree

...
