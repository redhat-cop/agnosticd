---
#  Hands-on with Ansible Automation Platform 2
#
#  2021-10-27 Add support for Private Automation Hub

env_type: ansible-multi-node
cloud_provider: osp                         # Cloud Provider to use

hands_on_aap2: true # Runs the setup-hands-on-aap2.yml during software.yml

student_name: devops # user_info will use this for devops user
control_user_name: devops

install_student_user: false

agnosticd_inventory_exporter_enable: true # Dump inventory in output_dir

software_to_deploy: none
automationcontroller_install: false # Leave this task for student
install_vscode_server: false # Use container version?

inventory_groups:

  - automationcontroller
  - automationhub
  - load_balancers
  - app_servers
  - database_servers

common_packages:

  - at
  - bash-completion
  - bind-utils
  - git
  - nc
  - python
  - tmux
  - tree
  - unzip
  - vim-enhanced
  - wget

    #  - python3.8
    #- python-pip

control_node_lab_resources:

  - name: Ansible automation controller manifest
    url: "https://www.opentlc.com/ansible-automation-platform-2-assets/automationcontroller_manifest.zip"
    dest: "~{{ lab_user | default('devops') }}/resources/"
    username: "{{ remote_resources_username | default('') }}"
    password: "{{ remote_resources_password | default('') }}"

  - name: Bundled ansible automation controller installer
    url: "https://www.opentlc.com/ansible-automation-platform-2-assets/ansible-automation-platform-setup-2.1.0-1.tar.gz"
    dest: "~{{ lab_user | default('devops') }}/resources/ansible-automation-platform-setup.tar.gz"
    username: "{{ remote_resources_username | default('') }}"
    password: "{{ remote_resources_password | default('') }}"

#  - name: Bundled ansible automation controller installer
#    url: "https://www.opentlc.com/ansible-automation-platform-2-assets/ansible-automation-platform-setup-bundle-2.1.0-1.tar.gz"
#    dest: "~{{ lab_user | default('devops') }}/resources/ansible-automation-platform-setup-bundle.tar.gz"
#    username: "{{ remote_resources_username | default('') }}"
#    password: "{{ remote_resources_password | default('') }}"

# Instance Configurations and Resources

default_image: rhel-8.5 # Default operating system image
default_flavor: 2c2g30d # Default instance types

control_flavor: 2c4g30d # Resourced for podman and Execution Environments
control_system_image: rhel-8.5

automationcontroller_flavor: 4c8g30d # Sized for Ansible automation controller
automationhub_flavor: 4c8g30d

instances:

  - name: bastion
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ control_system_image | default(default_image) }}"
    flavor:
      osp: "{{ control_flavor | default(default_flavor) }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: auto-ctrl
    count: 1
    unique: true
    public_dns: true
    floating_ip: true
    image_id: "{{ automationcontroller_image | default(default_image) }}"
    flavor:
      osp: "{{ automationcontroller_flavor | default(default_flavor) }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG
    tags:
      - key: "AnsibleGroup"
        value: "automationcontroller"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: auto-hub
    count: 1
    # unique: true
    public_dns: true
    floating_ip: true
    image_id: "{{ automationhub_image | default(default_image) }}"
    flavor:
      osp: "{{ automationhub_flavor | default(default_flavor) }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG
    tags:
      - key: "AnsibleGroup"
        value: "automationhub"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: frontend
    count: "{{ frontend_count | default(1) }}"
    floating_ip: true
    public_dns: false
    image_id: "{{ frontend_image | default(default_image) }}"
    flavor:
      osp: "{{ frontend_flavor | default(default_flavor) }}"
    tags:
      - key: "AnsibleGroup"
        value: "load_balancers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

  - name: app-0
    count: "{{ app_servers_count | default(2) }}"
    floating_ip: false
    public_dns: false
    image_id: "{{ app_servers_image | default(default_image) }}"
    flavor:
      osp: "{{ app_servers_flavor | default(default_flavor) }}"
    tags:
      - key: "AnsibleGroup"
        value: "app_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

  - name: database-01
    count: "{{ database_servers_count | default(1) }}"
    floating_ip: false
    public_dns: false
    image_id: "{{ database_servers_image | default(default_image) }}"
    flavor:
      osp: "{{ database_servers_flavor | default(default_flavor) }}"
    tags:
      - key: "AnsibleGroup"
        value: "database_servers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - PostgresSG
      - HostSG

...
