---
#  Ansible Automation Platform 2 Foundations vars

env_type:                   ansible-multi-node
cloud_provider:             osp                         # Cloud Provider to use

# This config depreciates software_to_deploy in favor of direct call to role deploy_ansiblecontroller

software_to_deploy:         none 

automationcontroller_install: true
automationcontroller_admin_user:  admin
automationcontroller_admin_password: r3dhat1!

install_vscode_server:      false                       # Use container version?

inventory_groups:
  - webservers
  - automationcontroller
  - automationcontroller_database

common_packages:
  - python
  - python-pip
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at
  - tree

    #  - ansible


default_flavor:             2c2g30d       # Default instance types 
control_flavor:             2c4g30d   
webserver_flavor:           "{{ default_flavor }}"

default_image:              rhel-8.4      # Default operating system image

# Environment Instances

instances:

  - name: "bastion"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ control_system_image | default(default_image) }}"
    flavor:
      osp: "{{ control_flavor | default(default_flavor) }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "webserver"
    count: "{{ webserver_count | default(2) }}"
    floating_ip: true
    public_dns: false
    image_id: "{{ webserver_image | default(default_image) }}"
    flavor:
      osp: "{{ webserver_flavor | default(default_flavor) }}"
    tags:
      - key: "AnsibleGroup"
        value: "webservers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

  - name: acontroller
    count: 3
    # unique: true
    public_dns: false
    floating_ip: true
    image_id: "{{ control_system_image | default(default_image) }}"
    flavor:
      osp: "{{ control_flavor | default(default_flavor) }}"
    security_groups:
      - BastionSG
      - WebSG
      - HostSG
    tags:
      - key: "AnsibleGroup"
        value: "automationcontroller"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: "acontroller-database"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: true
    floating_ip: false
    image_id: "{{ control_system_image | default(default_image) }}"
    flavor:
      osp: "{{ control_flavor | default(default_flavor) }}"
    security_groups:
      - BastionSG
      - HostSG
    tags:
      - key: "AnsibleGroup"
        value: "automationcontroller_database"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

        #osp_project_create: true

# If osp_project_create is set to yes, define those:
# Quotas to set for new project that is created
#quota_num_instances: 15
#quota_num_cores: 72
#quota_memory: 131072 # in MB
#quota_num_volumes: 25
#quota_volumes_gigs: 500
#quota_loadbalancers: #when Octavia is available
#quota_pool: #when Octavia is available
#quota_networks: 3
#quota_subnets: 3
#quota_routers: 3
quota_fip: 10
#quota_sg: 10
#quota_sg_rules: 100

...
