---
################################################################################
### OSP Environment variables
################################################################################

cloud_provider: osp                               
ansible_user: cloud-user
remote_user: cloud-user

osp_cluster_dns_server: ddns01.opentlc.com
use_dynamic_dns: true
osp_project_create: true

# Quotas to set for new project that is created
quota_num_instances: 15
quota_num_cores: 92
quota_memory: 418000 # in MB
quota_num_volumes: 35
quota_volumes_gigs: 6000
#quota_loadbalancers: #when Octavia is available
#quota_pool: #when Octavia is available
quota_networks: 5
quota_subnets: 5
quota_routers: 3
quota_fip: 10
quota_sg: 10
quota_sg_rules: 100

# Networks, Router and subnets
networks:
  - name: default
    shared: "false"
    subnet_cidr: 192.168.50.0/24
    gateway_ip: 192.168.50.1
    allocation_start: 192.168.50.10
    allocation_end: 192.168.50.254
    dns_nameservers: []
    create_router: true
  - name: dev
    shared: "false"
    subnet_cidr: 192.168.51.0/24
    gateway_ip: 192.168.51.1
    allocation_start: 192.168.51.10
    allocation_end: 192.168.51.20
    dns_nameservers: []
    create_router: false
    router_name: default
  - name: prod
    shared: "false"
    subnet_cidr: 192.168.52.0/24
    gateway_ip: 192.168.52.1
    allocation_start: 192.168.52.10
    allocation_end: 192.168.52.20
    dns_nameservers: []
    router_name: default
    create_router: false
  - name: tower
    shared: "false"
    subnet_cidr: 192.168.53.0/24
    gateway_ip: 192.168.53.1
    allocation_start: 192.168.53.10
    allocation_end: 192.168.53.20
    dns_nameservers: []
    router_name: default
    create_router: false

# Security Groups
security_groups:
  - name: WebSG
    rules:
      - name: WebSGHTTPPort
        description: "Allow HTTP port"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: WebSGHTTPsPort
        description: "Allow HTTPs port"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: WebSGhaHTTPPort
        description: "Allow haHTTP port"
        from_port: 8080
        to_port: 8080
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: WebSGhasHTTPPort
        description: "Allow hasHTTP port"
        from_port: 8443
        to_port: 8443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: WebSGexHTTPPort
        description: "Allow exHTTP port"
        from_port: 8929
        to_port: 8929
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress


  - name: HostSG
    rules:
      - name: HostSGTCP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: HostSG
        rule_type: Ingress
      - name: HostSGUDP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: HostSG
        rule_type: Ingress

# Default instance type
__instance_type: 2c4g30d 

# Default Image
__image: rhel-8.3

# For bastion node
rootfs_size_bastion: 100
bastion_instance_type: GLOBAL-CPU_2_Memory_10240_Disk_60_flavor

# For satellite nodes
satellite_instance_image: ansible-dev-images-satellite-68-v2
satellite_instance_type: GLOBAL-CPU_4_Memory_32768_Disk_60_flavor

# For Utilityvm
utilityvm_instance_type: GLOBAL-CPU_4_Memory_8192_Disk_30_flavor

# Environment Instances
instances:
  - name: "{{ bastion_instance_name | default('control') }}"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(__instance_type) }}"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - HostSG
      - WebSG
    tags:
      - key: "AnsibleGroup"
        value: "bastions,{{ bastion_group_name | default('controls') }}"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"

  - name: satellite
    count: "{{ satellite_instance_count | default(1) }}"
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ satellite_instance_image | default(__image) }}"
    flavor:
      osp: "{{ satellite_instance_type | default(__instance_type) }}"
    rootfs_size: "{{ rootfs_size_satellite | default(100)  }}"
    tags:
      - key: "AnsibleGroup"
        value: "satellites"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG
      - WebSG
      - HostSG

inventory_groups:
  - bastions
  - satellites

...
