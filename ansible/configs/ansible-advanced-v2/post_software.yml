- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: False
  become: true
  tasks:
    - debug:
        msg: "Post-Software tasks Started"


- name: Post software config
  hosts: bastions 
  become: true
  tags:
    - bastion_post_tasks
  tasks:
    - name: Insert DNS IP
      command: >-
        nmcli connection modify "System eth0"
        ipv4.ignore-auto-dns yes
        ipv4.dns {{ ansible_default_ipv4.address }}
        +ipv4.dns {{ ansible_dns.nameservers.0 }}
        +ipv4.dns 8.8.8.8
    
    - name: Restart NetworkManager
      service:
        name: NetworkManager
        state: restarted


- name: Deploy userinfo setup
  hosts: localhost
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: set user.info for user email template
      set_fact:
        __bastion_node: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}"
        __bastion_user: "{{ student_name }}"
        __bastion_password: "{{ student_password }}"
        __satellite_server: "{{ groups['satellites'][0] | regex_replace('\\..*$') }}"
        __satellite_user: "{{ satellite_user_name }}"
        __satellite_password: "{{ satellite_user_password }}"

    - name: set domain for osp cloud provider
      set_fact:
        __subdomain: "{{ osp_cluster_dns_zone }}"
      when: cloud_provider == 'osp'

    - name: Add variables to /etc/skel/.bashrc and ~{{ control_user_name }}/.bashrc
      become: true
      lineinfile:
        path: "{{ item }}"
        regexp: 'EOF'
        line: |
          export GUID={{ guid }}
          export SUBDOMAIN={{ __subdomain }}
          export OPENTLC_USER_ID={{ __bastion_user }}
          export OPENTLC_USER_EMAIL={{ email }}
          export LAB_MGR_DIR={{ lab_mgr_dir }}
          export CLOUD_PROVIDER={{ cloud_provider }}
          export INTERNAL_DOMAIN=example.com
      loop:
        - "/etc/skel/.bash_profile"
        - "~{{ control_user_name }}/.bash_profile"
        - "~{{ student_name }}/.bash_profile"
      delegate_to: "{{ groups['bastions'][0] }}"

    - name: User's login details
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Unique Identifier (GUID)-- {{ guid }}"
        - "Domain for the cluster (SUBDOMAIN)-- {{ __subdomain }}"
        - ""
        - "Satellite Web UI via browser:"
        - "Satellite URL: https://{{ __satellite_server }}.{{ guid }}.{{ __subdomain }}"
        - "Satellite Username: {{ __satellite_user }}"
        - "Satellite Password: {{ __satellite_password }}"
        - ""
        - "To Access Control node via SSH:"
        - "ssh {{ __bastion_user }}@{{ __bastion_node }}.{{ guid }}.{{ __subdomain }}"
        - "Enter ssh password when prompted: {{ __bastion_password }}"


    - name: Save user data
      agnosticd_user_info:
        data:
          ssh_command: "ssh {{ __bastion_user }}@{{ __bastion_node }}.{{ guid }}.{{ __subdomain }}"
          ssh_password: "{{ __bastion_password }}"
          satellite URL: "https://{{ __satellite_server }}.{{ guid }}.{{ __subdomain }}"
          satellite_user: "{{ __satellite_user }}"
          satellite_password: "{{ __satellite_password }}"


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
