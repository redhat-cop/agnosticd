---
- name: Step 003 Pre Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Step 003 Pre Software"
    - import_role:
        name: infra-local-create-ssh_key
      when: set_env_authorized_key | bool
    - name: Setup strong passwords
      set_fact:
        strong_login_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"
    - name: Setup strong passwords
      set_fact:
        student_password: "{{ strong_login_password }}"
        vscode_user_password: "{{ strong_login_password }}"
        gitlab_server_root_password: "{{ strong_login_password }}"


- name: Clean up Satellite Image Deployment
  hosts: satellites
  become: true
  gather_facts: true
  tasks:
    - name: Clean up Satellite Deployment
      include_tasks: ./satellite_clean_up.yml


- name: Set ssh authorized key for all hosts
  hosts: all
  become: true
  tags:
    - step004
    - common_tasks
  roles:
    - { role: "set_env_authorized_key", when: 'set_env_authorized_key | bool' }


- name: Configure all hosts with Repositories
  hosts: all:!satellites
  become: true
  tags:
    - step004
    - common_tasks
  roles:
    - { role: "set-repositories", when: 'repo_method is defined' }


- name: Configuring Bastion Hosts
  hosts: bastions 
  become: true
  tags:
    - step004
    - bastion_tasks
  pre_tasks:
    - name: Strong password brought from localhost 
      set_fact: 
        student_password: "{{ hostvars['localhost']['student_password'] }}"
        vscode_user_password: "{{ hostvars['localhost']['vscode_user_password'] }}"
  roles:
    - { role: "common", when: 'install_common | default(true) | bool' }
    - { role: "bastion", when: 'install_bastion | default(true) |bool' }
    - { role: "bastion-student-user", when: 'install_student_user | default(true) | bool' }
    - { role: "control-user", when: 'install_control_user | default(true) | bool' }
  post_tasks:
    - name: Install ansible
      yum:
        name:
          - ansible
          - python3-openstackclient
          - python3-openstacksdk
          - python3-certbot
          - python3-heatclient
        state: installed

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check
  tasks:
    - debug:
        msg: "Pre-Software checks completed successfully"
