---
## INSTALL PACKAGES FOR POD ORCHESTRATION
- name: Install podman runtime packages
  yum:
    name: 
      - podman-2.2.1-7*
      - python3
    state: present

- name: Install python library podman-compose for orchestration
  pip:
    name: podman-compose==0.1.5
    state: present

## Set Default Pod Variables
- name: Pod's variables
  set_fact:
    pods:
      - name: bind9
        dockerfile: true
        volumes:
          - /var/named/
          - /etc/
        config_templates:
          - src: example.com.zone.j2
            dest: /var/named/example.com.zone
        config_files:
          - src: named.conf
            dest: /etc/named.conf
      - name: gitlab
        volumes:
          - /etc/gitlab
          - /var/log/gitlab
          - /var/opt/gitlab
      - name: haproxy
        dockerfile: true
        enabled: false
        state: stopped
        volumes:
          - /etc/haproxy
          - /etc/ssl/certs
        config_templates:
          - src: haproxy.cfg.j2
            dest: /etc/haproxy/haproxy.cfg
  when: 'pods is not defined'

## Common Pod Tasks
- name: Create podman orchestration directory
  file:
    path: "/opt/podman/pods/{{ __pod.name }}-pod/"
    state: directory
    owner: root
    group: root
    recurse: true
    mode: "u=rwx,g=rx,o=rx"
  loop: "{{ pods }}"
  loop_control:
    loop_var: __pod

- name: Create podman volume directories
  file:
    path: "/opt/podman/volumes/{{ __volume.0.name }}-volume/{{ __volume.1 }}"
    state: directory
    owner: root
    group: root
    recurse: true
    mode: "u=rwx,g=rx,o=rx"
  loop: "{{ pods|subelements('volumes') }}"
  loop_control:
    loop_var: __volume

- name: Copy Dockerfile in orchestration dir
  copy:
    src: ./files/pods/{{ __pod.name }}/Dockerfile
    dest: "/opt/podman/pods/{{ __pod.name }}-pod/"
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
  when: __pod.dockerfile | default(false) | bool
  loop: "{{ pods }}"
  loop_control:
    loop_var: __pod

- name: Copy podman-compose file in orchestration dir
  copy:
    src: ./files/pods/{{ __pod.name }}/podman-compose.yml
    dest: "/opt/podman/pods/{{ __pod.name }}-pod/"
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
  loop: "{{ pods }}"
  loop_control:
    loop_var: __pod

- name: Copy podman systemd service config
  template:
    src: ./files/pods/{{ __pod.name }}/service.j2
    dest: "/usr/lib/systemd/system/{{ __pod.name }}-pod.service"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  loop: "{{ pods }}"
  loop_control:
    loop_var: __pod

- name: Copy pods config templates
  template:
    src: ./files/pods/{{ __pod.0.name }}/{{ __pod.1.src }}
    dest: "/opt/podman/volumes/{{ __pod.0.name }}-volume/{{ __pod.1.dest }}"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: __pod.0.config_templates is defined
  loop: "{{ pods|subelements('config_templates', skip_missing=True) }}"
  loop_control:
    loop_var: __pod

- name: Copy pods config files
  copy:
    src: ./files/pods/{{ __pod.0.name }}/{{ __pod.1.src }}
    dest: "/opt/podman/volumes/{{ __pod.0.name }}-volume/{{ __pod.1.dest }}"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  when: __pod.0.config_files is defined
  loop: "{{ pods|subelements('config_files', skip_missing=True) }}"
  loop_control:
    loop_var: __pod

## POD SERVICES
- name: Enable and Start pods
  service:
    name: "{{ __service.name }}-pod"
    enabled: "{{ __service.enabled | default(true) }}"
    state: "{{ __service.state | default('started') }}"
  async: 3000
  poll: 30
  loop: "{{ pods }}"
  loop_control:
    loop_var: __service

