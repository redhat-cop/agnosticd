
- name: Import clusters into hub
  when:
    - hybrid_cloud_binder_import_clusters_enable is true
  block:

  - name: create namespaces on hub for clusters
    k8s:
      host: "{{ __r_aws_hub_cluster.k8s_auth.host }}"
      username: "{{ __r_aws_hub_cluster.k8s_auth.username }}"
      api_key: "{{ __r_aws_hub_cluster.k8s_auth.api_key }}"
      validate_certs: false
      state: present
      kind: Namespace
      name: "{{ item }}"
      api_version: v1
    loop:
    - 'aws-dev-cluster'
    - 'aws-prod-cluster'

  - name: Import AWS OCP4 Dev Cluster to Hub
    vars:
      __managed_cluster_name: 'aws-dev-cluster'
      __managed_cluster_token: "{{ __r_aws_dev_cluster.k8s_auth.api_key }}"
      __managed_cluster_api_url: "{{ __r_aws_dev_cluster.k8s_auth.host }}"
    k8s:
      host: "{{ __r_aws_hub_cluster.k8s_auth.host }}"
      username: "{{ __r_aws_hub_cluster.k8s_auth.username }}"
      api_key: "{{ __r_aws_hub_cluster.k8s_auth.api_key }}"
      validate_certs: false
      state: present
      definition: "{{ lookup('template', item ) | from_yaml }}"
    loop:
    - './templates/managed-cluster.yaml.j2'
    - './templates/auto-import-secret.yaml.j2'
    - './templates/klusterlet-addon-config.yaml.j2'
    register: __r_import_aws_dev_cluster
    retries: 240
    delay: 15
      # TODO: need a better test
      #until:
      #- __r_import_aws_dev_a is defined

  - name: Import AWS OCP4 Prod Cluster to Hub
    vars:
      __managed_cluster_name: 'aws-prod-cluster'
      __managed_cluster_token: "{{ __r_aws_prod_cluster.k8s_auth.api_key }}"
      __managed_cluster_api_url: "{{ __r_aws_prod_cluster.k8s_auth.host }}"
    k8s:
      host: "{{ __r_aws_hub_cluster.k8s_auth.host }}"
      username: "{{ __r_aws_hub_cluster.k8s_auth.username }}"
      api_key: "{{ __r_aws_hub_cluster.k8s_auth.api_key }}"
      validate_certs: false
      state: present
      definition: "{{ lookup('template', item ) | from_yaml }}"
    loop:
    - './templates/managed-cluster.yaml.j2'
    - './templates/auto-import-secret.yaml.j2'
    - './templates/klusterlet-addon-config.yaml.j2'
    register: __r_import_aws_prod
    retries: 240
    delay: 15
      # TODO: need a better test
      #until:
      #- __r_import_azure_dev_a is defined

  # - name: Validate Clusters Joined - aws-dev-cluster
  #   k8s_info:
  #     host: "{{ __r_aws_hub_cluster.k8s_auth.host }}"
  #     username: "{{ __r_aws_hub_cluster.k8s_auth.username }}"
  #     api_key: "{{ __r_aws_hub_cluster.k8s_auth.api_key }}"
  #     validate_certs: false
  #     api_version: cluster.open-cluster-management.io/v1
  #     kind: managedcluster
  #     name: aws-dev-cluster
  #     namespace: aws-dev-cluster
  #   register: __r_wait_aws_dev_cluster
  #   ignore_errors: true
  #   retries: 240
  #   delay: 15
  #   until:
  #   - __r_wait_aws_dev_cluster.resources is defined
  #   - __r_wait_aws_dev_cluster.resources | length | int > 0
  #   - __r_wait_aws_dev_cluster.resources[0].status is defined
  #   - __r_wait_aws_dev_cluster.resources[0].status.conditions is defined
  #   - ( __r_wait_aws_dev_cluster.resources[0].status | to_json | from_json |
  #     json_query('conditions[?type == `ManagedClusterConditionAvailable`].status') | join ) == "True"

  # - name: Validate Clusters Joined - aws-prod-cluster
  #   ignore_errors: true
  #   k8s_info:
  #     host: "{{ __r_aws_hub_cluster.k8s_auth.host }}"
  #     username: "{{ __r_aws_hub_cluster.k8s_auth.username }}"
  #     api_key: "{{ __r_aws_hub_cluster.k8s_auth.api_key }}"
  #     validate_certs: false
  #     api_version: cluster.open-cluster-management.io/v1
  #     kind: managedcluster
  #     name: aws-prod-cluster
  #     namespace: aws-prod-cluster
  #   register: __r_wait_aws_prod_cluster
  #   retries: 240
  #   delay: 15
  #   until:
  #   - __r_wait_aws_prod_cluster.resources is defined
  #   - __r_wait_aws_prod_cluster.resources | length | int > 0
  #   - __r_wait_aws_prod_cluster.resources[0].status is defined
  #   - __r_wait_aws_prod_cluster.resources[0].status.conditions is defined
  #   - (__r_wait_aws_prod_cluster.resources[0].status | to_json | from_json |
  #     json_query('conditions[?type == `ManagedClusterConditionAvailable`].status') | join ) == "True"

  - name: include validation role
    include_role: 
      name: ocp_application_validation
    vars:
      ocp_application_validation_list:
        - cluster: 
            name: hub
            host: "{{ aws_hub_provision_data.openshift_api_url }}"
            username: "{{ aws_hub_provision_data.openshift_cluster_admin_username }}"
            password: "{{ aws_hub_provision_data.openshift_cluster_admin_password }}"
          validations:
            - kind: ManagedCluster
              api_version: cluster.open-cluster-management.io/v1
              name: aws-dev-cluster
              namespace: aws-dev-cluster
              retries: 240
              delay: 15
              conditions:
                - _r_validate_universal.resources is defined
                - _r_validate_universal.resources | length | int > 0
                - _r_validate_universal.resources[0].status is defined
                - _r_validate_universal.resources[0].status.conditions is defined
                - ( _r_validate_universal.resources[0].status | to_json | from_json | 
                  json_query('conditions[?type == `ManagedClusterConditionAvailable`].status') | join ) == "True"

            - kind: ManagedCluster
              api_version: cluster.open-cluster-management.io/v1
              name: aws-prod-cluster
              namespace: aws-prod-cluster
              retries: 240
              delay: 15
              conditions:
                - _r_validate_universal.resources is defined
                - _r_validate_universal.resources | length | int > 0
                - _r_validate_universal.resources[0].status is defined
                - _r_validate_universal.resources[0].status.conditions is defined
                - ( _r_validate_universal.resources[0].status | to_json | from_json | 
                  json_query('conditions[?type == `ManagedClusterConditionAvailable`].status') | join ) == "True"

  rescue:
    - name: Cluster Import failed/timed out
      ansible.builtin.debug:
        msg: "One or more cluster imports failed/timed out"

