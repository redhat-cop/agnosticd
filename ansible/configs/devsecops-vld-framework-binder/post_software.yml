# vim: set ft=yaml.ansible
---
- name: Step 005 Post Software
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
  - step005
  - post_software
  tasks:
  - name: Entering the devsecops-vld-framework-binder post_software.yml
    debug:
      msg:
      - Entering the devsecops-vld-framework-binder post_software.yml

###############################################################################
#### Setup Cluster Connections
###############################################################################

  - name: add aws_hub to inventory
    ansible.builtin.add_host:
      name: "{{ aws_hub_provision_data.bastion_public_hostname }}"
      groups: ohc_hub
      ansible_connection: ssh
      # need full path to key because not creating ssh_config file
      ansible_ssh_private_key_file: "~/.ssh/opentlc_admin_backdoor.pem"
      ansible_user: "ec2-user"
      remote_user: "ec2-user"
        # ansible_ssh_extra_args: "{{ ansible_ssh_extra_args|d() }} -F {{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"

  - name: add aws_dev_cluster to inventory
    ansible.builtin.add_host:
      name: "{{ aws_dev_cluster_provision_data.bastion_public_hostname }}"
      groups: aws_dev_cluster
      ansible_connection: ssh
        # ansible_ssh_extra_args: "{{ ansible_ssh_extra_args|d() }} -F {{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"
      ansible_ssh_private_key_file: "~/.ssh/opentlc_admin_backdoor.pem"
      ansible_user: "ec2-user"
      remote_user: "ec2-user"

  - name: Log into Hub
    k8s_auth:
      host: "{{ aws_hub_provision_data.openshift_api_url }}"
      username: "{{ aws_hub_provision_data.openshift_cluster_admin_username }}"
      password: "{{ aws_hub_provision_data.openshift_cluster_admin_password }}"
      validate_certs: false
    register: __r_hub
    retries: 240
    delay: 15
    until:
    - __r_hub.k8s_auth.api_key is defined

  - name: Log into AWS OCP4 Prod Cluster
    k8s_auth:
      host: "{{ aws_prod_cluster_provision_data.openshift_api_url }}"
      username: "{{ aws_prod_cluster_provision_data.openshift_cluster_admin_username }}"
      password: "{{ aws_prod_cluster_provision_data.openshift_cluster_admin_password }}"
      validate_certs: false
    register: __r_aws_prod
    retries: 240
    delay: 15
    until:
    - __r_aws_prod.k8s_auth.api_key is defined

  - name: Log into AWS OCP4 Dev Cluster
    k8s_auth:
      host: "{{ aws_dev_cluster_provision_data.openshift_api_url }}"
      username: "{{ aws_dev_cluster_provision_data.openshift_cluster_admin_username }}"
      password: "{{ aws_dev_cluster_provision_data.openshift_cluster_admin_password }}"
      validate_certs: false
    register: __r_aws_dev_cluster
    retries: 240
    delay: 15
    until:
    - __r_aws_dev_cluster.k8s_auth.api_key is defined

###############################################################################
#### Import Clusters into Hub
###############################################################################

  - name: Include Import tasks
    include_tasks: import_clusters_to_hub.yaml


###############################################################################
#### Setup Cool Store Apps
###############################################################################

- name: Setup coolstore
  hosts: ohc_aws_dev_a
  become: true
  gather_facts: false
  tasks:

    - name: hybrid_cloud_binder_setup_coolstore
      when: hybrid_cloud_binder_setup_coolstore is true
      block:

      - name: Check if desired virtualenv is available on the host
        stat:
          path: "/opt/virtualenvs/k8s/bin/python"
        register: r_virtualenv

      - name: Set Ansible Python interpreter to virtualenv
        when: r_virtualenv.stat.exists
        set_fact:
          ansible_python_interpreter: "/opt/virtualenvs/k8s/bin/python"

      - name: Setup CoolStore
        vars:
          ocp4_workload_coolstore_backoffice_demo_ohc_central_stackrox_host: "{{ aws_hub_provision_data.acs_route | urlsplit('hostname') }}"
        include_role:
          name: ocp4_workload_coolstore_backoffice_demo_ohc

      - name: Object detection AI ML OHC role
        vars:
          ocp4_workload_object_detection_ai_ml_ohc_central_stackrox_host: "{{ aws_hub_provision_data.acs_route | urlsplit('hostname') }}"
        include_role:
          name: ocp4_workload_object_detection_ai_ml_ohc

      rescue:
        - name: Dev A cluster Cool Store Setup failed
          ansible.builtin.debug:
            msg: "Dev A cluster Cool Store setup failed"

- name: Step 005 Post Software - Report to Cloudforms
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
  - step005
  - post_software
  tasks:

  - name: Print string expected by Cloudforms
    debug:
      msg: "Post-Software checks completed successfully"

  - name: Exiting the open-hybrid-cloud-binder post_software.yml
    debug:
      msg:
      - Exiting the open-hybrid-cloud-binder post_software.yml
...
