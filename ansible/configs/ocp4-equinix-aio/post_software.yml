---
- name: Step 005 Post Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Step 005 Post Software"

- name: Deploy some operators
  hosts: bastion-vm
  tasks:
    - name: Make .kube directory
      ansible.builtin.file:
        path: /root/.kube/
        state: directory
      when: ocp4_aio_deploy_type == 'sno'

    - name: Make rhacm the default cluster for bastion oc commands
      when: ocp4_aio_deploy_type == 'sno'
      ansible.builtin.copy:
        remote_src: true
        src: /root/sno-rhacm/auth/kubeconfig
        dest: /root/.kube/config

    - name: Setting up NFS Storage
      include_role:
        name: ocp4_aio_role_nfsmount

    - name: Setting up OCS Storage
      include_role:
        name: ocp4_aio_role_ocs
      when: ocp4_aio_deploy_ocs and ocp4_aio_deploy_type == 'ipi'

    - name: Enable internal registry
      include_role:
        name: ocp4_aio_role_imgreg

    - name: Installing ACM Operator
      include_role:
        name: ocp4_aio_role_acm
      when: ocp4_aio_deploy_acm or ocp4_aio_deploy_ocp_plus or ocp4_aio_deploy_sno

    - name: Installing ACS operator
      include_role:
        name: ocp4_aio_role_acs
      when: ocp4_aio_deploy_acs or ocp4_aio_deploy_ocp_plus or ocp4_aio_deploy_sno

## TODO : need to figure out how to make this work to replace our modules
    # - name: Installing ACS Central
    #   include_role:
    #     name: ocp4_workload_stackrox_central
    #   when: ocp4_aio_deploy_acs or ocp4_aio_deploy_ocp_plus or ocp4_aio_deploy_sno

    # - name: Installing ACS sensors
    #   include_role:
    #     name: ocp4_workload_stackrox_sensor
    #   when: ocp4_aio_deploy_acs or ocp4_aio_deploy_ocp_plus or ocp4_aio_deploy_sno

    # - name: Prepare for sensors install on edge1
    #   when: ocp4_aio_deploy_sno
    #   ansible.builtin.copy:
    #     remote_src: yes
    #     src: /root/sno-edge1/auth/kubeconfig
    #     dest: /root/.kube/config

    # - name: Installing ACS sensors on Edge1
    #   when: ocp4_aio_deploy_sno
    #   include_role:
    #     name: ocp4_workload_stackrox_sensor

    # - name: Prepare for sensors install on edge2
    #   when: ocp4_aio_deploy_sno
    #   ansible.builtin.copy:
    #     remote_src: yes
    #     src: /root/sno-edge2/auth/kubeconfig
    #     dest: /root/.kube/config

    # - name: Installing ACS sensors on Edge2
    #   when: ocp4_aio_deploy_sno
    #   include_role:
    #     name: ocp4_workload_stackrox_sensor

    - name: Installing CNV Operator
      include_role:
        name: ocp4_aio_role_cnv
      when: ocp4_aio_deploy_cnv

    - name: Setting up Openshift Virtualisation Lab
      include_role:
        name: ocp4_aio_workload_cnvlab
      vars:
        - ocp4_aio_console_url: "https://console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"
      when: ocp4_aio_deploy_cnvlab

- name: Print informations
  hosts: localhost
  tasks:

    - name: Print Bastion Connection Information
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Host you will be using for lab : {{ hostvars['hypervisor']['public_ip_address'] }}"
        - "SSH User : {{ student_name }}"
        - "SSH Password : {{ hostvars['hypervisor']['student_password'] }}"
        - "Bastion/CNV VMs root password : {{ hostvars['passwd_holder']['root_password'] }}"
#        - "OpenShift web console : https://console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"
#        - "kubeadmin user Password : {{ hostvars['kube_holder']['kubeadmin_password'] }}"

    - when: ocp4_aio_deploy_cnvlab
      name: Print Openshift Virtualization lab infos
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Lab instructions : https://{{ hostvars['cnvlab_holder']['route'] }}"

    - name: Print Guacamole Information
      when: ocp4_aio_deploy_guacamole
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "As you've enabled Guacamole support, you can access everything you need without a proxy."
        - "To access the environment via your web-browser only (Guacamole)"
        - "Use this URL: http://{{ hostvars['hypervisor']['public_ip_address'] }}:8080/guacamole"
        - "Username: guacadmin"
        - "Password: {{ hostvars['guac_holder']['guac_shared_password'] }}"
        - "The 'Lab Desktop' will give you a GNOME desktop environment, and 'Bastion SSH' just CLI access."

    - name: Print Kube Configuration for IPI
      when: ocp4_aio_deploy_ipi
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "The console is available at: https://console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"
        - "The kubeadmin password is: {{ hostvars['kube_holder']['kubeadmin_password'] }}"
        - "If you'd like CLI access, the bastion host will have already been setup - `ssh root@192.168.123.100`"
        - "You should then automatically have oc/kubectl access to the cluster. Check out ~/ocp-install/auth/."

    - name: Display infos
      when: ocp4_aio_deploy_sno
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "To access the environment via a Squid Proxy, setup the following proxy in your browser :"
        - "proxy.{{ guid }}.{{ cluster_dns_zone }}:3128"
        - "The console for rhacm cluster is available without proxy at: https://console-openshift-console.apps.{{ guid }}.{{ cluster_dns_zone }}"
        - "The kubeadmin password for the rhacm cluster  is: {{ hostvars['rhacm_holder']['kubeadmin_password'] }}"
        - "The console for edge1 cluster is available using the proxy at: https://console-openshift-console.apps.edge1.example.com"
        - "The kubeadmin password for edge1 cluster is: {{ hostvars['edge1_holder']['kubeadmin_password'] }}"
        - "The console for edge2 cluster is available using the proxy at: https://console-openshift-console.apps.edge2.example.com"
        - "The kubeadmin password for edge2 cluster is: {{ hostvars['edge2_holder']['kubeadmin_password'] }}"
        - "If you'd like CLI access, the bastion host will have already been setup - `ssh root@192.168.123.100`"
        - "You should then automatically have oc/kubectl access to the cluster."

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
