---
- hosts: all
  become: yes
  become_method: sudo

  # vars:
  #   ANSIBLE_VERSION: "2.9"

  tasks:
  # - name: Enable Ansible {{ ANSIBLE_VERSION }} repository
  #   yum_repository:
  #     name: ansible-{{ ANSIBLE_VERSION }}-for-rhel-8-x86_64-rpms
  #     file: redhat # To use the same file as the subscription-manager
  #     description: "Red Hat Ansible Engine {{ ANSIBLE_VERSION }} for RHEL 8 x86_64 (RPMs)"
  #     baseurl: https://cdn.redhat.com/content/dist/layered/rhel8/x86_64/ansible/{{ ANSIBLE_VERSION }}/os
  #     gpgcheck: no
  #   when: ansible_distribution == 'RedHat'  # i.e. RHEL, not Fedora

  - name: Ensure SCAP Security Guide dependencies are installed
    package:
      name:
      - git
      - make
      - cmake
      - openscap-utils
      - openscap-scanner
      - scap-workbench
      - wget  # needed for the NIST test suite for SSG
      - ansible  # needed for Ansible validation
      - gedit
      - nano
      state: installed

  - name: Ensure SCAP Security Guide dependencies are installed (RHEL7)
    package:
      name:
      - python-jinja2  # needed for the new SSG yaml/jinja2 port
      - PyYAML
      - python-pip
      state: installed
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == "7"

  - name: Ensure SCAP Security Guide Tests dependencies are installed (RHEL7)
    pip:
      name:
      - pytest
      - docker
    when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == "7"

  - name: Ensure that package dependencies are installed (RHEL8, Fedora)
    package:
      name:
      - python3-jinja2
      - python3-pytest  # needed for unit tests + coverage
      - python3-PyYAML
      - python3-psutil  # needed for the later dconf setting (to tweak the Gnome session)
      - dbus-tools  # ditto
      - dbus-daemon  # ditto
      - podman  # needed for tests
      state: installed
    when: (ansible_distribution == 'RedHat' and ansible_distribution_major_version == "8") or ansible_distribution == 'Fedora'

  - name: Ensure that Fedora-specific convenience packages are installed (Fedora)
    package:
      name:
      - qemu-guest-agent
      - spice-vdagent
    when: ansible_distribution == 'Fedora'

  # - name: Ensure that {{ student_name }} exists
  #   user:
  #     name: "{{ student_name }}"
  #     groups: wheel
  #     password: $6$slKF3uSy7AUr0NS3$jS23cqtNIGmj2reBpyvc0O7pXDl10tUYNDZELRcVGwMAAWeNajOQMHStLr3mYemOFv7P5vPmrsKCfUWDRMyZg1  # r3dh4t1!
  #     update_password: on_create

  # # Taken from https://stackoverflow.com/questions/33359404/ansible-best-practice-for-maintaining-list-of-sudoers
  # - name: Ensure that {{ student_name }} can do passwordless sudo
  #   lineinfile:
  #     dest: /etc/sudoers
  #     state: present
  #     regexp: '^{{ student_name }}'
  #     line: '{{ student_name }} ALL=(ALL)       NOPASSWD: ALL'
  #     validate: visudo -cf %s

  - name: Mark Gnome initial setup as done
    become: yes
    become_user: "{{ student_name }}"
    lineinfile:
      dest: /home/{{ student_name }}/.config/gnome-initial-setup-done
      state: present
      regexp: '^yes$'
      line: 'yes'
      create: yes

  - name: Disable Gnome screen locking
    become: yes
    become_user: "{{ student_name }}"
    dconf:
      key: "/org/gnome/desktop/screensaver/lock-enabled"
      value: "false"
      state: present

  - name: Disable Gnome screensaver
    become: yes
    become_user: "{{ student_name }}"
    dconf:
      key: "/org/gnome/desktop/session/idle-delay"
      value: "uint32 0"
      state: present

  - name: Set up Gnome favorites
    become: yes
    blockinfile:
      create: yes
      path: /etc/dconf/db/local.d/00-favorite-apps
      block: |
        [org/gnome/shell]
        favorite-apps = ['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop', 'scap-workbench.desktop']

  - name: Set up Gnome favorites 2
    become: yes
    lineinfile:
      create: yes
      path: /etc/dconf/db/local.d/locks/favorite-apps
      line: /org/gnome/shell/favorite-apps
      state: present

  - name: Dconf update
    become: yes
    command: dconf update

  - name: Permanently Disable Gnome Getting Started Window during Welcome Tour
    become: yes
    replace:
      path: /usr/libexec/gnome-welcome-tour
      regexp: "yelp help:gnome-help/getting-started"
      replace: "#yelp help:gnome-help/getting-started"

  - name: Kill any yelp window that might have been opened during login session
    become: yes
    ignore_errors: true
    shell: "killall yelp"
