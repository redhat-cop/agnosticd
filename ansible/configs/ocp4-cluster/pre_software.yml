---
- name: Step 003 - Pre Software
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - step003
  tasks:
  - debug:
      msg: "Step 003 - Pre Software"

- name: Configure all hosts with repositories, common files and set environment key
  hosts:
  - all:!windows
  become: true
  gather_facts: false
  tags:
  - step003
  - common_tasks
  roles:
  - { role: "set-repositories",       when: 'repo_method is defined'        }
  - { role: "common",                 when: 'install_common | bool'         }
  - { role: "set_env_authorized_key", when: 'set_env_authorized_key | bool' }
  tasks:
  - name: Add GUID to /etc/skel/.bashrc
    lineinfile:
      path: "/etc/skel/.bashrc"
      regexp: "^export GUID"
      line: "export GUID={{ guid }}"

- name: Step 003.1 - Configuring Bastion Hosts
  hosts: bastions
  become: true
  roles:
  - { role: "bastion-lite",         when: 'install_bastion | bool'      }
  - { role: "bastion-student-user", when: 'install_student_user | bool' }
  tags:
  - step003.1
  - bastion_tasks
  tasks:
  - name: Setup Student SSH Key
    when:
    - install_student_user | bool
    - student_name is defined
    - env_authorized_key is defined
    block:
    - name: Copy SSH private key to student user .ssh directory
      copy:
        src: "/root/.ssh/{{env_authorized_key}}.pem"
        dest: "/home/{{ student_name }}/.ssh/{{env_authorized_key}}.pem"
        mode: 0600
        owner: "{{ student_name }}"
        remote_src: true

    - name: Copy SSH public key to student user .ssh directory
      copy:
        src: "/root/.ssh/{{env_authorized_key}}.pub"
        dest: "/home/{{ student_name }}/.ssh/{{env_authorized_key}}.pub"
        mode: 0600
        owner: "{{ student_name }}"
        remote_src: true

    - name: Copy SSH config to student user .ssh directory
      copy:
        src: "/root/.ssh/config"
        dest: "/home/{{ student_name }}/.ssh/config"
        mode: 0600
        owner: "{{ student_name }}"
        remote_src: true

- name: Create a Python3 VirtualEnv for use in the k8s Ansible tasks
  hosts: bastions
  gather_facts: false
  become: true
  tasks:
  - name: Setup pre-requisite python3 packages
    package:
      state: present
      name:
      - git
      - python3-pip

  - name: Setup pre-requisite pip3 packages
    pip:
      name:
      - virtualenv
      state: present
      executable: /usr/bin/pip3

  - name: Copy requirements.txt to target for k8s virtualenv
    copy:
      src: ./files/requirements_k8s.txt
      dest: /tmp/requirements_k8s.txt

  - name: "Create virtualenv k8s"
    pip:
      requirements: /tmp/requirements_k8s.txt
      virtualenv: "/opt/virtualenvs/k8s"
      virtualenv_site_packages: false
      virtualenv_command: /usr/local/bin/virtualenv

  - name: Ensure system Python3 has selinux library installed
    pip:
      state: present
      executable: /usr/bin/pip3
      name: selinux
      version: 0.2.1

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - flight_check
  tasks:
  - debug:
      msg: "Pre-Software checks completed successfully"
