---
- name: Step 003 - Pre Software
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - step003
  tasks:
  - name: Print debug message
    ansible.builtin.debug:
      msg: "Step 003 - Pre Software"

- name: Step 003.1 Configure all hosts with repositories, common files and set environment key
  hosts:
  - all:!windows
  become: true
  gather_facts: false
  tags:
  - step003
  - common_tasks
  roles:
  - when: repo_method is defined
    role: set-repositories
  - when: install_common | bool
    role: common
  - when: set_env_authorized_key | bool
    role: set_env_authorized_key
  tasks:
  - name: Add GUID to /etc/skel/.bashrc
    ansible.builtin.lineinfile:
      path: "/etc/skel/.bashrc"
      regexp: "^export GUID"
      line: "export GUID={{ guid }}"

- name: Step 003.2 - Configuring Bastion Hosts
  hosts: bastions
  become: true
  roles:
  - when: install_bastion | bool
    role: bastion-lite
  - when: install_student_user | bool
    role: bastion-student-user
  tags:
  - step003.2
  - bastion_tasks
  tasks:
  - name: Setup Student SSH Key
    when:
    - install_student_user | bool
    - student_name is defined
    - env_authorized_key is defined
    block:
    - name: Copy SSH private key to student user .ssh directory
      ansible.builtin.copy:
        src: "/root/.ssh/{{ env_authorized_key }}.pem"
        dest: "~{{ student_name }}/.ssh/{{ env_authorized_key }}.pem"
        mode: u=rw,go=
        owner: "{{ student_name }}"
        remote_src: true

    - name: Copy SSH public key to student user .ssh directory
      ansible.builtin.copy:
        src: "/root/.ssh/{{ env_authorized_key }}.pub"
        dest: "~{{ student_name }}/.ssh/{{ env_authorized_key }}.pub"
        mode: u=rw,go=
        owner: "{{ student_name }}"
        remote_src: true

    - name: Copy SSH config to student user .ssh directory
      ansible.builtin.copy:
        src: "/root/.ssh/config"
        dest: "~{{ student_name }}/.ssh/config"
        mode: u=rw,go=
        owner: "{{ student_name }}"
        remote_src: true

- name: Step 003.3 Create a Python3 VirtualEnv for use in the k8s Ansible tasks
  hosts: bastions
  gather_facts: true
  become: true
  tasks:
  - name: Setup k8s virtualenv (EL9)
    when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "9"
    ansible.builtin.include_role:
      name: host_virtualenv
    vars:
      host_virtualenv_path: /opt/virtualenvs/k8s
      # Merge base k8s requirements with cloud provider specific requirements
      host_virtualenv_requirements:
      - requirements_k8s_el9.txt
      - requirements_{{ cloud_provider }}_el9.txt

  - name: Setup k8s virtualenv (EL8)
    when: ansible_distribution != "RedHat" or ansible_distribution_major_version != "9"
    ansible.builtin.include_role:
      name: host_virtualenv
    vars:
      host_virtualenv_path: /opt/virtualenvs/k8s
      # Merge base k8s requirements with cloud provider specific requirements
      host_virtualenv_requirements:
      - requirements_k8s.txt
      - requirements_{{ cloud_provider }}.txt

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
  - flight_check
  tasks:
  - name: Print debug message
    ansible.builtin.debug:
      msg: "Pre-Software checks completed successfully"
