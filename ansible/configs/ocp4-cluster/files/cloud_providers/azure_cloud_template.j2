{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "guid": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "GUID of the environment"
            }
        },
        "location": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location where the deployment will happen."
            }
        },
        "DNSZone": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "none",
            "metadata": {
                "description": "dns zone of the environment, to update or create"
            }
        },
        "adminUsername": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "azure",
            "metadata": {
                "description": "Username for the Virtual Machines."
            }
        },
        "adminPassword": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "{{windows_password}}",
            "metadata": {
                "description": "Password for Windows Virtual Machines."
            }
        },
        "sshKeyData": {
            "type": "securestring",
            "metadata": {
                "description": "SSH RSA public key file as a string."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "allowedValues": [
                "Basic_A2",
                "Basic_A3",
                "Standard_A2",
                "Standard_A2m_v2",
                "Standard_A2_v2",
                "Standard_A3",
                "Standard_A4m_v2",
                "Standard_A4_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D2",
                "Standard_D2as_v4",
                "Standard_D2a_v4",
                "Standard_D2s_v3",
                "Standard_D2_v2",
                "Standard_D2_v3",
                "Standard_D3",
                "Standard_D3_v2",
                "Standard_D4as_v4",
                "Standard_D4a_v4",
                "Standard_D4s_v3",
                "Standard_D4_v3",
                "Standard_DC2s",
                "Standard_DC4s",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_E2as_v4",
                "Standard_E2a_v4",
                "Standard_E2s_v3",
                "Standard_E2_v3",
                "Standard_E4-2s_v3",
                "Standard_E4as_v4",
                "Standard_E4a_v4",
                "Standard_E4s_v3",
                "Standard_E4_v3",
                "Standard_F2s_v2",
                "Standard_F4s_v2"
            ],
            "metadata": {
                "description": "The size of all Virtual Machines."
            }
        }
    },
    "variables": {
        "tenantId": "[subscription().tenantId]",
        "diagnosticStorageAccountName": "[concat('diagstorage',parameters('guid'))]",
        "networkSecurityGroupName": "default-nsg",
        "subnetName": "default-subnet",
        "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('subnetName'))]",
        "addressPrefix": "10.249.0.0/16",
        "subnetPrefix": "10.249.0.0/24",
        "publicIPAddressType": "Dynamic",
        "virtualNetworkName": "default-virtualnetwork",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "nicRhelName": "nicbastion",
        "publicIPRhelAddressName": "publicipbastion",
        "vmNameRhel": "bastion",
        "linuxConfiguration": {
          "disablePasswordAuthentication": true,
          "ssh": {
            "publicKeys": [ {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('sshKeyData')]"
            } ]
          }
        },
        "rhelImage": {
            "publisher": "Redhat",
            "offer": "RHEL",
            "sku": "{{rhel_sku | default("7-LVM")}}",
            "version": "latest"
        },
        "windowsImage": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "{{windows_sku | default("2019-Datacenter")}}",
            "version": "latest"
        },
        "vmNameWindows": "vmwin",
        "nicWindowsName": "nicwindows",
        "publicIPWindowsAddressName": "publicipwindows",
        "vmNameWindows": "vmwin",
        "sQuote": "\""
    },
    "resources": [
    {
      "name": "[variables('diagnosticStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "dependsOn": [],
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "Project": "{{project_tag}}"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPRhelAddressName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "Project": "{{project_tag}}"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('vmNameRhel'), '-', parameters('guid'))]"
        }
      }
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPWindowsAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "Project": "{{project_tag}}"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('vmNameWindows'), '-', parameters('guid'))]"
        }
      }
    },
    {
      "comments":  "Default Network Security Group",
      "type":  "Microsoft.Network/networkSecurityGroups",
      "apiVersion":  "2019-08-01",
      "name":  "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "Project": "{{project_tag}}"
      },
      "properties": {
        "securityRules": [
          {
            "name":  "default-allow-22",
            "properties": {
              "priority":  1000,
              "access":  "Allow",
              "direction":  "Inbound",
              "destinationPortRange":  "22",
              "protocol":  "Tcp",
              "sourcePortRange":  "*",
              "sourceAddressPrefix":  "*",
              "destinationAddressPrefix":  "*"
            }
          },{
            "name":  "default-allow-all",
            "properties": {
              "priority":  1001,
              "access":  "Allow",
              "direction":  "Inbound",
              "destinationPortRange":  "*",
              "protocol":  "Tcp",
              "sourcePortRange":  "*",
              "sourceAddressPrefix":  "*",
              "destinationAddressPrefix":  "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "Project": "{{project_tag}}"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('nicWindowsName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "Project": "{{project_tag}}"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPWindowsAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPWindowsAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[variables('nicRhelName')]",
      "location": "[parameters('location')]",
      "tags": {
        "owner": "{{ email | default('unknownuser') }}",
        "Project": "{{project_tag}}"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPRhelAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPRhelAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmNameWindows')]",
      "location": "[parameters('location')]",
      "tags": {
        "Name": "[variables('vmNameWindows')]",
        "owner": "{{ email | default('unknownuser') }}",
        "AnsibleGroup": "windows",
        "ostype": "windows",
        "internaldns": "[concat(variables('vmNameWindows'), '-', parameters('guid'), '.{{azure_region}}.cloudapp.azure.com')]",
        "canonical_name": "[variables('vmNameWindows')]",
        "ignore-Project": "{{project_tag}}"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicWindowsName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNameWindows')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('windowsImage')]",
          "osDisk": {
            "name": "[concat(variables('vmNameWindows'), 'OsDisk')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('vmNameWindows'), 'DataDisk1')]",
              "diskSizeGB": "1023",
              "lun": "1",
              "createOption": "Empty"
            },
            {
              "name": "[concat(variables('vmNameWindows'), 'DataDisk2')]",
              "diskSizeGB": "1023",
              "lun": "2",
              "createOption": "Empty"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicWindowsName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmNameRhel')]",
      "location": "[parameters('location')]",
      "tags": {
        "Name": "[variables('vmNameRhel')]",
        "owner": "{{ email | default('unknownuser') }}",
        "AnsibleGroup": "bastions",
        "ostype": "linux",
        "internaldns": "[concat(variables('vmNameRhel'), '-', parameters('guid'), '.{{azure_region}}.cloudapp.azure.com')]",
        "canonical_name": "[variables('vmNameRhel')]",
        "Project": "{{project_tag}}"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicRhelName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNameRhel')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('rhelImage')]",
          "osDisk": {
            "name": "[concat(variables('vmNameRhel'), 'OsDisk')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "RhelDataDisk1",
              "diskSizeGB": "512",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicRhelName'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "bastion": {
      "type": "string",
      "value": "[reference(variables('publicIPRhelAddressName')).dnsSettings.fqdn]"
    },
    "vmwin": {
      "type": "string",
      "value": "[reference(variables('publicIPWindowsAddressName')).dnsSettings.fqdn]"
    }
  }
}

