# -------------------------------------------------------------------
# ocp4-cluster on AWS. OpenShift 4 installed.
# Customizations:
# - htpasswd Authentication Provider
# - Let's Encrypt Certificates on Ingress Controllers
# - Create a Machineset for one Infra Node and move infra components to that Infranode
# - Create a Machineset for one Elasticsearch Node
# - Deploy Logging to the Elasticsearch Node
# - Also specify the OpenStack flavors for VMs
# -------------------------------------------------------------------

# -------------------------------------------------------------------
# Mandatory Variables
# -------------------------------------------------------------------
cloud_provider: ec2
env_type: ocp4-cluster
software_to_deploy: openshift4
# -------------------------------------------------------------------
# End Mandatory Variables
# -------------------------------------------------------------------

# guid is the deployment unique identifier, it will be appended to all tags,
# files and anything that identifies this environment from another "just like it"
guid: defaultguid

platform: labs
purpose: development

# OpenShift Installer version to use
ocp4_installer_version: 4.4.3

# The Pull Secret to pull OpenShift images. Get from try.openshift.com
ocp4_pull_secret: 'FROM_SECRET'

# -------------------------------------------------------------------
# Repos
# -------------------------------------------------------------------

# Satellite is used for RHEL repos
repo_method: satellite

# Satellite
satellite_url: FROM_SECRET
satellite_org: FROM_SECRET
satellite_activationkey: FROM_SECRET

# Update RHEL to the latest packages (and reboot)
update_packages: true

# -------------------------------------------------------------------
# OpenShift Cluster Customization
# -------------------------------------------------------------------

# Customize the cluster with Authentication and
# Let's Encrypt certificates for the Ingress Controllers
infra_workloads:
- ocp4_workload_authentication
- ocp4_workload_le_certificates
- ocp4_workload_machinesets
- ocp4_workload_logging

# Do not run any student customization.
# This will result in a default OpenShift 4 installation.
student_workloads: []

# -------------------------------------------------------------------
# Infra Workload Variables
# -------------------------------------------------------------------

# Authentication (HT Passwd)
ocp4_workload_authentication_idm_type: htpasswd
ocp4_workload_authentication_admin_user: admin
# When no password specified it is generated
# ocp4_workload_authentication_htpasswd_admin_password: ocp_admin
ocp4_workload_authentication_htpasswd_user_base: student
# When no password specified it is generated
# ocp4_workload_authentication_htpasswd_user_password: ocp_student

# Create 5 student users
ocp4_workload_authentication_htpasswd_user_count: 5

# Remove the standard kubeadmin user
ocp4_workload_authentication_remove_kubeadmin: true

# Create two additional machinesets
ocp4_workload_machinesets_machineset_groups:
- name: infra
  autoscale: false
  total_replicas: 1
  total_replicas_min: 1
  total_replicas_max: 1
  role: infra
  taints:
  - key: infra
    value: reserved
    effect: NoSchedule
  - key: infra
    value: reserved
    effect: NoExecute
  instance_type: "m5a.4xlarge"
- name: elasticsearch
  autoscale: false
  total_replicas: 1
  total_replicas_min: 1
  total_replicas_max: 1
  role: elasticsearch
  taints:
  - key: elasticsearch
    value: reserved
    effect: NoSchedule
  - key: elasticsearch
    value: reserved
    effect: NoExecute
  instance_type: "m5a.4xlarge"

# Deploy Logging using the Elasticsearch Nodes
ocp4_workload_logging_node_role: "elasticsearch"
ocp4_workload_logging_elasticsearch_replicas: 1

# -------------------------------------------------------------------
# AWS VM configuration
# -------------------------------------------------------------------

# Bastion Configuration
bastion_instance_type: "t3a.medium"
bastion_instance_image: RHEL81GOLD
# Root Filesystem Size
bastion_rootfs_size: 30

# Master Configuration
master_instance_type: "m5a.2xlarge"
master_instance_count: 3
master_storage_type: "gp2"

# Worker Configuration
worker_instance_type: "m5a.4xlarge"
worker_instance_count: 2
worker_storage_type: "gp2"

# -------------------------------------------------------------------
# AWS specific settings (from secrets usually)
# -------------------------------------------------------------------

# AWS Credentials
aws_access_key_id: FROM_SECRET
aws_secret_access_key: FROM_SECRET

# HostedZoneId must match subdomain_base_suffix
HostedZoneId: FROM_SECRET
subdomain_base_suffix: .example.com

# -------------------------------------------------------------------
# AgnosticV Settings
# -------------------------------------------------------------------

# Deploy in a Ansible 2.9 Virtualenv
agnosticv_meta:
  virtualenv: aws-ansible-2.9
