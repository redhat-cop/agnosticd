---
- name: Set up environment for destroy
  hosts: localhost
  connection: local
  become: false
  tasks:
    - name: Set facts for ssh provision SSH key
      ansible.builtin.include_role:
        name: create_ssh_provision_key
      when:
        - ssh_provision_key_name is undefined

    - name: Locate environment SSH key
      ansible.builtin.include_role:
        name: locate_env_authorized_key

    - name: Run infra-azure-create-inventory role
      ansible.builtin.include_role:
        name: infra-azure-create-inventory

    - name: SSH config setup
      when:
        - groups["bastions"] is defined
        - groups["bastions"] | length > 0
      ansible.builtin.include_role:
        name: infra-common-ssh-config-generate

- name: Set ssh extra args for all hosts, use ssh_config just created
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  ignore_errors: false
  tasks:
    - name: add -F option ansible_ssh_extra_args
      set_fact:
        ansible_ssh_extra_args: "{{ ansible_ssh_extra_args|default() }} -F {{ hostvars['localhost'].ansible_ssh_config }}"


- name: Start Azure VMs
  hosts: localhost
  connection: local
  become: false
  tasks:
    - name: Initialize Azure Lifecycle role
      ansible.builtin.include_role:
        name: infra-azure-lifecycle
        tasks_from: initialize

    - name: Start Azure VMs
      ansible.builtin.include_role:
        name: infra-azure-lifecycle
        tasks_from: start

- name: Have the OpenShift installer cleanup what it did
  hosts: bastions
  gather_facts: false
  become: false
  tasks:
    - name: Test the bastion host is available, if not skip host-ocp4-destroy
      wait_for_connection:
        timeout: 60
      register: bwait
      ignore_errors: true

    - name: Call role to destroy the OpenShift cluster
      when: bwait is successful
      ansible.builtin.include_role:
        name: host-ocp4-destroy

- name: Import default cloud provider destroy playbook
  import_playbook: "../../cloud_providers/{{ cloud_provider }}_destroy_env.yml"
