---
- name: Step 000 - Pre Infrastructure
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
  - step000
  - pre_infrastructure
  tasks:
  - debug:
      msg: "Step 000 Pre Infrastructure"

  - name: Ensure variables are set
    assert:
      that:
      - ocp4_pull_secret is defined
      - ocp4_pull_secret | default("") | length > 0
      fail_msg: ocp4_pull_secret variable must be defined
      success_msg: ocp4_pull_secret variable is defined

  - name: GCP Pre Infrastructure tasks
    when: cloud_provider == 'gcp'
    block:
    - name: Run add user to GCP project role
      include_role:
        name: open-env-gcp-add-user-to-project
    - name: Create GCP Credentials File
      include_role:
        name: infra-gcp-credentials-file
    - name: Get Google Cloud SDK
      include_role:
        name: infra-gcp-install-sdk

  - name: Azure Pre Infrastructure tasks
    when: cloud_provider == 'azure'
    block:
    - name: if windows_password is not defined, generate one
      when: windows_password is not defined
      block:
      - name: Generate windows Administrator password if not already defined
        command: openssl rand -base64 25
        register: password_gen_r
      - name: set_fact generated_windows_password (just generated)
        set_fact:
          generated_windows_password: "{{ password_gen_r.stdout }}"

  - name: AWS Pre Infrastructure tasks
    when: cloud_provider == 'ec2'
    block:
    # Find and set the AWS Availability Zones using on-demand capacity reservations
    - name: Run infra-aws-capacity-reservation
      include_role:
        name: infra-aws-capacity-reservation
      vars:
        ACTION: 'provision'

    - name: Set availability zones for Cloudformation and install-config.yml
      when: agnosticd_aws_capacity_reservation_results.reservations | default({}) | length > 0
      block:
      - name: Set availability zone for bastion, masters and workers
        vars:
          _r: "{{ agnosticd_aws_capacity_reservation_results.reservations }}"
        set_fact:
          # Cloudformation (bastion)
          aws_availability_zone: "{{ _r.az1.availability_zone }}"
          # masters
          # Support several logical mapping (masters, masters1-3)
          openshift_controlplane_aws_zones_odcr: >-
            {{ [
              _r.masters.availability_zone | default(None),
              _r.masters1.availability_zone | default(None),
              _r.masters2.availability_zone | default(None),
              _r.masters3.availability_zone | default(None),
            ] | select() | list }}
          # workers
          # Support up to 4 zones
          openshift_machineset_aws_zones_odcr: >-
            {{ [
              _r.workers.availability_zone | default(None),
              _r.workers1.availability_zone | default(None),
              _r.workers2.availability_zone | default(None),
              _r.workers3.availability_zone | default(None),
              _r.workers4.availability_zone | default(None),
            ] | select() | list }}
