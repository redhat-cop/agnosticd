---
# -------------------------------------------------------------------
# Default Variables for OpenShift CNV
# -------------------------------------------------------------------

# The type of cloud provider this will be deployed to
cloud_provider: openshift_cnv

# This is the user that Ansible will use to connect to the nodes it is
# configuring from the admin/control host
ansible_user: cloud-user
remote_user: cloud-user

# Use Dynamic DNS. Always true
use_dynamic_dns: true

# Whether to wait for an ack from the DNS servers before continuing
wait_for_dns: true

# The base domain
# osp_cluster_dns_zone needs to come from secrets
# subdomain_base_suffix: "{{ osp_cluster_dns_zone }}"
ocp4_base_domain: "{{ osp_cluster_dns_zone }}"

# Container image to use in Ceph cleanup job
ceph_cleanup_job_image: registry.redhat.io/odf4/rook-ceph-rhel9-operator:v4.15

# User info settings
ocp4_cluster_show_default_user_info: true
ocp4_cluster_show_access_user_info: "{{ ocp4_cluster_show_default_user_info }}"

# Bastion Configuration
bastion_instance_image: rhel-8.2
bastion_cores: 2
bastion_memory: 2G
bastion_rootfs_size: 30Gi
bastion_extra_networks: []
bastion_networks: "{{ ['default'] + bastion_extra_networks }}"

networks:
- name: cluster

instances:
- name: bastion
  count: 1
  unique: true
  alt_name: bastion
  memory: "{{ bastion_memory }}"
  cores: "{{ bastion_cores }}"
  image_size: "{{ bastion_rootfs_size }}"
  image: "{{ bastion_instance_image }}"
  networkdata: |
    network:
      version: 2
      ethernets:
        eth0:
          dhcp4: yes
        eth1:
          dhcp4: no
          addresses:
            - 10.10.10.1/24
  userdata: |
    #cloud-config
    write_files:
      - path: /etc/sysctl.d/99-ip-forwarding.conf
        content: |
          net.ipv4.ip_forward=1
      - path: /etc/systemd/system/masquerade.service
        content: |
          [Unit]
          Description=Enable NAT Masquerading
          After=network.target

          [Service]
          Type=oneshot
          ExecStart=/usr/sbin/iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
          ExecStart=/usr/sbin/iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT
          ExecStart=/usr/sbin/iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
          RemainAfterExit=yes
          ExecStop=/usr/sbin/iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
          ExecStop=/usr/sbin/iptables -D FORWARD -i eth1 -o eth0 -j ACCEPT
          ExecStop=/usr/sbin/iptables -D FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT

          [Install]
          WantedBy=multi-user.target

    runcmd:
      - sysctl --system
      - systemctl daemon-reload
      - systemctl enable --now masquerade.service

  metadata:
  - AnsibleGroup: "bastions"
  - function: bastion
  - user: "{{ student_name }}"
  - project: "{{ project_tag }}"
  - ostype: linux
  - Purpose: "{{ purpose }}"
  tags:
  - key: "AnsibleGroup"
    value: "bastions"
  - key: "ostype"
    value: "linux"
  - key: "instance_filter"
    value: "{{ env_type }}-{{ guid }}"
  networks: "{{ bastion_networks }}"
