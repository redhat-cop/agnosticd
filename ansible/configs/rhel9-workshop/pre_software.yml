---
- name: Step 003 Pre Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Step 003 Pre Software"

    - name: Setup strong passwords
      set_fact:
        strong_login_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"

    - name: Setup strong passwords
      set_fact:
        student_password:         "{{ strong_login_password }}"

# Cloudformation template or equivalent should tag all hosts with Project:{{ env_type }}-{{ guid }}
- name: Configure all hosts with repositories, common files and set environment key
  hosts:
  - all:!windows
  become: true
  gather_facts: false
  tags:
  - step003
  - common_tasks
  roles:
  - role: set-repositories
    when: repo_method is defined
  - role: common
    when: install_common | bool
  - role: set_env_authorized_key
    when: set_env_authorized_key | bool

- name: Step 003.1 - Configuring Bastion Hosts
  hosts: bastions
  become: true
  roles:
  - role: bastion-lite
    when: install_bastion | bool
  - role: bastion-student-user
    when: install_student_user | bool
  tags:
  - step003.1
  - bastion_tasks
  tasks:
  - name: Setup Student SSH Key
    when:
    - install_student_user | bool
    - student_name is defined
    - env_authorized_key is defined
    block:
    - name: Copy SSH private key to student user .ssh directory
      copy:
        src: "/root/.ssh/{{ env_authorized_key }}.pem"
        dest: "~{{ student_name }}/.ssh/{{ env_authorized_key }}.pem"
        mode: u=rw,go=
        owner: "{{ student_name }}"
        remote_src: true

    - name: Copy SSH public key to student user .ssh directory
      copy:
        src: "/root/.ssh/{{ env_authorized_key }}.pub"
        dest: "~{{ student_name }}/.ssh/{{ env_authorized_key }}.pub"
        mode: u=rw,go=
        owner: "{{ student_name }}"
        remote_src: true

    - name: Copy SSH config to student user .ssh directory
      copy:
        src: "/root/.ssh/config"
        dest: "~{{ student_name }}/.ssh/config"
        mode: u=rw,go=
        owner: "{{ student_name }}"
        remote_src: true

##
##      BEGIN: RHEL 9 Workshop Pre-Software Steps
##      

  tasks:

    - name: Install ansible
      yum: name=ansible-core,rhel-system-roles,tmux state=installed

    - name: Clone course repo
      git:
        repo: "https://github.com/xtophd/RHEL9-Workshop.git"
        dest: "/root/RHEL9-Workshop"
        version: "rhel92-dev"
        clone: yes

    - name: Create link to config file
      file:
        src:   "/root/RHEL9-Workshop/sample-configs/gpte/master-config.yml"
        dest:  "/root/RHEL9-Workshop/config/master-config.yml"
        owner: root
        group: root
        state: link
      ## While debugging things, ignore if this fails
      ignore_errors: yes

    - name: Create gpte-guid config file
      copy:
        dest: "/root/RHEL9-Workshop/config/gpte-guid.txt"
        mode: "400"
        content: "{{ guid }}"
      ## While debugging things, ignore if this fails
      ignore_errors: yes

    - name: Create gpte-studentpw config file
      copy:
        dest: "/root/RHEL9-Workshop/config/gpte-studentpw.txt"
        mode: "400"
        content: "{{ student_password }}"
      ## While debugging things, ignore if this fails
      ignore_errors: yes

#    - name: Create gpte-targethost config file
#      vars:
#        targethost: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
#      copy:
#        dest: "/root/RHEL9-Workshop/config/gpte-targethost.txt"
#        mode: "400"
#        content: "{{ targethost }}"
#      ## While debugging things, ignore if this fails
#      ignore_errors: yes

    - name: Create gpte-pub-fqdn-shortname config files
      vars:
        shortname: "{{ item | regex_replace('\\..*$') }}"
        hostname: "{{ item | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
      copy:
        dest: "/root/RHEL9-Workshop/config/gpte-pub-fqdn-{{ shortname }}.txt"
        mode: "400"
        content: "{{ hostname }}"
      ## While debugging things, ignore if this fails
      ignore_errors: yes
      with_items:
        - "{{ groups['bastions'][0] }}"
        - "{{ groups['nodes'] }}"

    - name: "rhel9-prep : RUN the workshop installer"
      shell:
        chdir: "/root/RHEL9-Workshop"
        cmd:   "./rhel9-workshop.sh all"



#    - name: Copy the ec2 template into config directory
#      copy:
#        src: "{{output_dir}}/{{ env_type }}.{{ guid }}.{{cloud_provider}}_cloud_template"
#        dest: "/root/RHEL9-Workshop/config/gpte-ec2-template.yml"
#        mode: "400"



  ##
  ##      END: RHEL 9 Workshop Pre-Software Steps
  ##      


- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check
  tasks:
    - debug:
        msg: "Pre-Software checks completed successfully"
