---
# sample configuration file
#
# Usage: ansible-playbook main.yml -e @configs/multi-region-example/sample.yml
#
# Ideally keep your copy OUTSIDE your repo, especially if using Cloud Credentials

env_type: multi-region-tower       # Name of config to deploy
output_dir: /tmp/workdir                # Writable working scratch directory
email: name@example.com                 # User info for notifications

#guid: guid02                             # Unique string used in FQDN
subdomain_base_suffix: .example.opentlc.com      # Your domain used in FQDN

# Path to yum repos
#own_repo_path: http://...

# Cloud specfic settings - example given here for AWS

cloud_provider: ec2                     # Which AgnosticD Cloud Provider to use
HostedZoneId: Z3IHLWJZOU9SRT            # You will need to change this
key_name: ocpkey                        # Keyname must exist in AWS

tower_version: 3.5.0-1                 # tower version you want to install 
software_to_deploy: tower


# target_regions:                         ### Set dictionaries for installing ansible tower and isolated node.                              
#   - region: us-east-1                   ### First region will be the one where master tower cluster will be installed
#     stack: default                      ### Other regions will be place where isolated nodes will be installed.
#     vpc_cidr: 10.1.0.0/16
#     subnet_cidr: 10.1.0.0/24
#     name: na
#   - region: eu-central-1
#     stack: worker.j2
#     name: frankfurt
#     vpc_cidr: 10.2.0.0/16
#     subnet_cidr: 10.2.0.0/24
#   - region: ap-southeast-2
#     stack: worker.j2
#     name: sydney
#     vpc_cidr: 10.3.0.0/16
#     subnet_cidr: 10.3.0.0/24


#####Ansible Tower related variables
tower_admin_password: change_me
                               
#worker_instance_count: 0              # Set 0 to not to provision worker(isolated) nodes.



# tower_license: >                     #Set the tower licencse in the same format. Do not forget to add "eula_accepted: true".
#   {
#     "eula_accepted": true,
#     "company_name": "Red Hat",
#     "contact_email": "name@redhat.com",
#     "contact_name": "some person"
#     "hostname": "70a415ef832159a36413fa599",
#     "instance_count": 50,
#     "license_date": 16581423619,
#     "license_key":
#     "eea1b84d1e39cfEXAMPLE5739066069e60c6d0aEXAMPLE2c29cc61b2aEXAMPLE",
#     "license_type": "enterprise",
#     "subscription_name": "Ansible Tower by Red Hat (50 Managed Nodes), RHT Internal",
#     "trial": true
#   }

# tower_accounts:                                      #Define users you want to create. Set superuser: yes to make user system wide System Administrator
#   - user: babylon
#     password: changeme
#     email: babylon@example.com
#     firstname: test1
#     lastname: one
#     superuser: yes
#   - user: babylon-viewer
#     password: changeme
#     email: babylon1@example.com
#     firstname: Babylon
#     lastname: Viewer

# tower_organization:
#   - name: gpte
#   - name: BU 

# tower_projects:
#   - name: project1
#     description: Project1 Deployer
#     organization: test
#     scm_url: https://github.com/<your>/<scm>.git
#     scm_update_on_launch: true


# tower_inventories:
#   - name: null-inventory-sydney
#     description: Sydney Region 
#     instance_group: sydney
#   - name: null-inventory-frankfurt
#     description: Frankfurt Region 
#     instance_group: frankfurt
#   - name: null-inventory-default
#     description: Default Region 

# tower_job_templates:
#   - name: job_template name
#     description: description
#     project: project1
#     playbook: playbook.yml
#     become: yes

# AWS Credentials. These are required (don't sync them to your fork)
# aws_access_key_id:
# aws_secret_access_key:
...
