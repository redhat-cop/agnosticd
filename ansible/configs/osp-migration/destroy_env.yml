---
- import_playbook: ../../setup_runtime.yml

- name: Teardown OpenStack project and resources
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  environment:
    OS_AUTH_URL: "{{ osp_auth_url }}"
    OS_USERNAME: "{{ osp_auth_username }}"
    OS_PASSWORD: "{{ osp_auth_password }}"
    OS_PROJECT_NAME: "admin"
    OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
    OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"
  tasks:
    - set_fact:
        osp_project_name: >-
          {{ project
          | replace('-bp','')
          }}-{{ guid }}

    - name: Check if project exists
      environment:
        OS_AUTH_URL: "{{ osp_auth_url }}"
        OS_USERNAME: "{{ osp_auth_username }}"
        OS_PASSWORD: "{{ osp_auth_password }}"
        OS_PROJECT_NAME: "admin"
        OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
        OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"
      os_project_info:
        name: "{{ osp_project_name }}"
      register: project_exists

    - meta: end_play
      when: project_exists.openstack_projects | length == 0

    - name: Gather instance facts
      environment:
        OS_PROJECT_NAME: "{{ osp_project_name }}"
      os_server_facts:
        server: "*"
        filters:
          metadata:
            guid: "{{ guid }}"
      register: r_osp_facts

    - name: Delete objects inside the project
      environment:
        OS_PROJECT_NAME: "{{ osp_project_name }}"
      os_stack:
        name: "create-objects-{{ osp_project_name }}"
        state: absent
        wait: true

    - name: Delete project and unassign permission
      os_stack:
        name: "create-project-{{ osp_project_name }}"
        state: absent
        wait: true

    - name: Iterate over all instances and delete DNS entries
      loop: "{{ r_osp_facts.ansible_facts.openstack_servers }}"
      loop_control:
        loop_var: _instance
      vars:
        _infra_osp_dns_default_ttl: 300
        _dns_state: absent

      include_tasks: instance_loop.yml
