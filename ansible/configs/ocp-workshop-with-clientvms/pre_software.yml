---
- name: Step 003 - Create env key
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step003
    - generate_env_keys
  tasks:
    - name: Generate SSH keys
      shell: ssh-keygen -b 2048 -t rsa -f "{{output_dir}}/{{env_authorized_key}}" -q -N ""
      args:
        creates: "{{output_dir}}/{{env_authorized_key}}"
      when: set_env_authorized_key | bool

    - name: fix permission
      file:
        path: "{{output_dir}}/{{env_authorized_key}}"
        mode: 0400
      when: set_env_authorized_key | bool

    - name: Generate SSH pub key
      shell: ssh-keygen -y -f "{{output_dir}}/{{env_authorized_key}}" > "{{output_dir}}/{{env_authorized_key}}.pub"
      args:
        creates: "{{output_dir}}/{{env_authorized_key}}.pub"
      when: set_env_authorized_key | bool

# Cloudformation template or equivalent should tag all hosts with Project:{{ env_type }}-{{ guid }}

- name: Configure all hosts with Repositories, Common Files and Set environment key
  hosts:
    - all:!windows
  become: true
  gather_facts: False
  tags:
    - step004
    - common_tasks
  pre_tasks:
    - name: add rhel-7-server-ansible-2.4-rpms repo for OCP 3.9 and 3.10
      set_fact:
        rhel_repos: "{{ rhel_repos + ['rhel-7-server-ansible-2.4-rpms'] }}"
      when:
      - osrelease is version_compare('3.9', '>=')
      - osrelease is version_compare('3.11', '<')
    - name: add rhel-7-server-ansible-2.6-rpms repo for OCP 3.11
      set_fact:
        rhel_repos: "{{ rhel_repos + ['rhel-7-server-ansible-2.6-rpms'] }}"
      when:
      - osrelease is version_compare('3.11', '>=')
    - name: add rhel-7-fast-datapath-rpms repo for OCP 3.9, 3.10
      set_fact:
        rhel_repos: "{{ rhel_repos + ['rhel-7-fast-datapath-rpms'] }}"
      when:
      - osrelease is version_compare('3.9', '>=')
      - osrelease is version_compare('3.11', '<')
  roles:
    - role: set-repositories
      when: repo_method is defined
    - role: common
      when: install_common | bool
    - role: set_env_authorized_key
      when: set_env_authorized_key | bool

- name: Install Let's Encrypt Wildcard Certificates
  hosts: bastions
  run_once: true
  become: true
  gather_facts: false
  tasks:
  - name: Create Let's Encrypt Certificates
    include_role:
      name: host-lets-encrypt-certs
    vars:
    - acme_domain: "{{ master_lb_dns }}"
    - acme_wildcard_domain: "*.{{ cloudapps_suffix }}"
    - acme_aws_access_key: "{{ hostvars['localhost'].route53user_access_key }}"
    - acme_aws_secret_access_key: "{{ hostvars['localhost'].route53user_secret_access_key }}"
    - acme_production: "{{ lets_encrypt_production|d(False)|bool}}"
    - acme_remote_dir: "/root"
    - acme_install_dir: "/root/certificates"
    - acme_cache_cert_file: "{{output_dir}}/{{guid}}.cert"
    - acme_cache_key_file: "{{output_dir}}/{{guid}}.key"
    - acme_cache_archive_file: "{{output_dir}}/{{guid}}_acme.tgz"
    - acme_cache_ca_file: "{{output_dir}}/{{guid}}_ca.cert"
    - acme_cache_fullchain_file: "{{output_dir}}/{{guid}}_fullchain.cer"
    - acme_renew_automatically: True
    - acme_force_issue: False
    when: install_lets_encrypt_certificates | d(False) | bool

- name: Configuring Bastion Hosts
  hosts: bastions
  become: true
  gather_facts: false
  roles:
    - role: bastion
      when: install_bastion | bool
    - role: bastion-student-user
      when: install_student_user | bool
  tags:
    - step004
    - bastion_tasks

- name: Configuring Bastion Hosts
  hosts: clientvms
  become: true
  gather_facts: false
  roles:
    - role: bastion-student-user
      when: install_student_user | bool
    - role: ocp-client-vm
      when: install_clientvm | bool
  tags:
    - step004
    - bastion_tasks
    - clientvms

- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check
  tasks:
    - debug:
        msg: "Pre-Software checks completed successfully"

- name: Copy lets encrypt certificates for SSO
  hosts: masters
  gather_facts: False
  become: yes
  tags:
    - env-specific
    - project_request
  tasks:
    # https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt
    - name: Copy over the letsencrypt certificate
      copy:
        src: ./files/lets-encrypt-x3-cross-signed.pem.txt
        dest: /etc/origin/master/
      when: >-
        'ssodev' in install_idms

- name: Set up vm.max_map_count Kernel setting on all Nodes
  hosts: nodes
  gather_facts: False
  become: yes
  tags:
    - env-specific
    - service_mesh
  tasks:
  - name: Create file /etc/sysctl.d/99-elasticsearch.conf
    lineinfile:
      path: /etc/sysctl.d/99-elasticsearch.conf
      line: 'vm.max_map_count = 262144'
      create: yes
  - name: Set vm.max_map_count on running Nodes
    command: sysctl vm.max_map_count=262144

