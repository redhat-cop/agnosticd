---
- import_playbook: ../../include_vars.yml

######################### env-specific specific
- name: ocp-workshop tests
  hosts: masters[0]
  become: yes
  tags: [ env-specific, cf_integration ]
  tasks:

## This need to be completed

  - name: Can authenticate at the master console with admin user
    shell: "oc login  master.{{subdomain_base}} -u {{admin_user}} -p {{admin_user_password}} --insecure-skip-tls-verify=true"
    register: health_authenticate_to_master

  - name: Admin user can create projects
    shell: "oc new-project envtests"
    ignore_errors: true

  # - name: Admin user can deploy Jenkins with  application
  #   shell: 'oc new-app jenkins-persistent -p JENKINS_PASSWORD=testmctestface  -n envtests'
  #   register: health_jenkins-persistent_new-app
  #   ignore_errors: true

  - name: Admin user can deploy an application
    shell: 'oc new-app https://github.com/StefanoPicozzi/cotd.git   -n envtests'
    register: health_cotd_new-app
    ignore_errors: true

  - name: Expose deployed application route for testing
    shell: 'oc expose service cotd'
    ignore_errors: true


  - name: wait for application port to open
    wait_for:
      host: "cotd-envtests.{{cloudapps_suffix}}"
      port: 80
      #delay: 60
      timeout: 360

  - name: fetch
    uri:
      url: 'http://cotd-envtests.{{cloudapps_suffix}}/item.php'
      return_content: yes
      #validate_certs: false
    register: health_cotd_curl_output

  - name: Fail if content isn't displayed as expected
    fail:
    when: "'COTD' not in health_cotd_curl_output.content"




#  - name: Router is configured on each Infranodes

  # - name: Different PVs are available for users to consume
  # - name: There are 3 Masters Working
  # - name: There are 3 EtcD Instances working
  # - name: There is Loadbalancer to access the Masters
  # - name: There is a Load Balancer/DNS for both Infranodes
  # - name: There are at least 2 Infranodes
  # - name: Multitenancy is configured and working
  # - name: Node Selector is defined in the "default" Namespace
  # - name: Node Selector is defined in the "openshift-infra" and "logging" Projects
  # - name: Aggregated logging is configured and working
  # - name: Metrics Collection is configured and working
  # - name: Jenkins pod is running with Persistent Volume
  # - name: Deploy openshift-tasks app using Jenkins
  # - name: Create A CICD workflow Using Jenkins OpenShift Plugin
  # - name: HPA configured and working on production deployment of openshift-tasks
  #
  # - name: Multiple Clients created
  # - name: Multiple Registries, Dedicated Registry per Client
  # - name: Dedicated node for ClientC
  # - name: admissionControl plugin sets specific limits per label (client)
  # - name: A new-project template is modified so that it includes a LimitRange
  # - name: A new-user template is used to create a user object with the specific label value.
  # - name: On Boarding new client documentation
  # - name: Deploy ticket master or similar (multi pod) application..
  # - name: Create a Jenkins Workflow using "Jenkins Pipeline" and Jenkins-OpenShift Plugin
  # - name: Create a Nexus Pod
  # - name: Create a SonarQ Pod
  # - name: Deploy using Jenkins in "dev" and make it pass all the unit tests
  # - name: Display Unit Test and Code Coverage results in Jenkins
  # - name: Deploy using Jenkins in "test" Pass an integration test to an AMQ or similar component
  # - name: Display Integration tests results in Jenkins Console
  # - name: Artifacts should be stored and pulled in Nexus/Jenkins
