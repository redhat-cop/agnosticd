guid: CHANGEME # Your Global UNIQUE Identifier

################
### Env vars ###
################

env_type: osp16-director-deployment # Name of config to deploy
cloud_provider: osp # Which AgnosticD Cloud Provider to use

ansible_user: cloud-user
ssh_provision_key_name: "{{ env_authorized_key }}"

email: example@example.com # User info for notifications
output_dir: /tmp/output_dir # Writable working scratch directory
admin_user: "{{ guid }}-user" # User created by the project. Leave as {{ guid }}-user
student_name: "{{ guid }}-user" # This will be used to create a student login ID
# Auto-generated by default
#student_password: "r3dh4t1!"             # Customize the student password here. Keep in mind these systems may be public facing.
install_student_user: true

default_metadata:
  owner: "{{ email | default('unknownuser') }}"
  Project: "{{ project_tag }}"
  env_type: "{{ env_type }}"
multi_network: true
multi_network_primary: "{{ guid }}-external-network"

osp_migration_report_labconsole: true
osp_migration_labconsole_url: https://console.apps.open.redhat.com/

########################
## Quotas             ##
########################

quota_networks: 10
quota_subnets: 10

########################
## Environment Images ##
########################

__undercloud_instance_image: "{{ undercloud_instance_image }}"
__ipmihost_instance_image: "{{ ipmihost_instance_image }}"
__workstation_instance_image: "{{ workstation_instance_image }}"
__ctrl01_instance_image: "{{ ctrl01_instance_image  }}"
__ctrl02_instance_image: "{{ ctrl02_instance_image  }}"
__ctrl03_instance_image: "{{ ctrl03_instance_image  }}"
__compute01_instance_image: "{{ compute01_instance_image }}"
__compute02_instance_image: "{{ compute02_instance_image }}"

########################
## Environment Sizing ##
########################
#
__workstation_instance_flavor:
  osp: "{{ workstation_instance_flavor  }}"

__ipmihost_instance_flavor:
  osp: "{{ ipmihost_instance_flavor  }}"

__undercloud_instance_flavor:
  osp: "{{ undercloud_instance_flavor  }}"

__ctrl01_instance_flavor:
  osp: "{{ ctrl01_instance_flavor  }}"

__ctrl02_instance_flavor:
  osp: "{{ ctrl02_instance_flavor  }}"

__ctrl03_instance_flavor:
  osp: "{{ ctrl03_instance_flavor  }}"

__compute01_instance_flavor:
  osp: "{{ compute01_instance_flavor  }}"

__compute02_instance_flavor:
  osp: "{{ compute02_instance_flavor  }}"

# Networks
# A list of the private networks and subnets to create in the project
# You can create as many as you want, but at least one is required.
# Use the name of the networks where appropriate in the instance list
networks:
  - name: ctlplane
    shared: "false"
    subnet_cidr: 192.0.2.0/24
    enable_dhcp: False
    allocation_start: 192.0.2.240
    allocation_end: 192.0.2.250
    gateway_ip: 192.0.2.254
    dns_nameservers: [8.8.8.8]
    create_router: false
    router_network: external

  - name: storage
    shared: "false"
    subnet_cidr: 172.16.1.0/24
    enable_dhcp: False
    gateway_ip: 172.16.1.1
    allocation_start: 172.16.1.2
    allocation_end: 172.16.1.10
    dns_nameservers: []
    create_router: false
    router_network: external

  - name: storagemgmt
    shared: "false"
    subnet_cidr: 172.16.3.0/24
    enable_dhcp: False
    gateway_ip: 172.16.3.1
    allocation_start: 172.16.3.2
    allocation_end: 172.16.3.10
    dns_nameservers: []
    create_router: false
    router_network: external

  - name: internalapi
    shared: "false"
    subnet_cidr: 172.16.2.0/24
    enable_dhcp: False
    gateway_ip: 172.16.2.1
    allocation_start: 172.16.2.2
    allocation_end: 172.16.2.10
    dns_nameservers: []
    create_router: false
    router_network: external

  - name: tenant
    shared: "false"
    subnet_cidr: 172.16.0.0/24
    enable_dhcp: False
    gateway_ip: 172.16.0.1
    allocation_start: 172.16.0.2
    allocation_end: 172.16.0.10
    dns_nameservers: []
    create_router: false
    router_network: external

  - name: external
    shared: "false"
    subnet_cidr: 10.0.0.0/24
    gateway_ip: 10.0.0.1
    allocation_start: 10.0.0.2
    allocation_end: 10.0.0.10
    dns_nameservers: []
    create_router: true
    router_network: external

##### Security Groups ###
#      - {port_range_max: 22, port_range_min: 22, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
#      - {port_range_max: 80, port_range_min: 80, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
#      - {port_range_max: 6080, port_range_min: 6080, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}

security_groups:
  - name: workstationSG
    rules:
      - name: workstationSSHPublic
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: workstationWEBPublic
        description: "WEB public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: workstationVNCPublic
        description: "VNC public"
        from_port: 6080
        to_port: 6080
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

# Environment Instances
instances:
  - name: "workstation"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: false
    image_id: "{{ __workstation_instance_image }}"
    flavor: "{{ __workstation_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
    metadata:
      - AnsibleGroup: "bastions"
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - guid: "{{ guid }}"
      - env_type: "{{ env_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - external
    floating_ip: true
    floating_ip_network: "external"
    security_groups:
      - workstationSG
    fixed_ips:
      external: "10.0.0.252"

  - name: "ipmi-host"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ __ipmihost_instance_image }}"
    flavor: "{{ __ipmihost_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      runcmd:
        - sleep 180
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False
    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - api_user: "{{ osp_auth_username_member }}"
      - api_pass: "{{ osp_auth_password_member }}"
      - api_url: "{{ osp_auth_url }}"
      - project_name: "{{  osp_project_name}}"
      - pxe_image: "pxeboot"

    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - ctlplane
    floating_ip: false
    fixed_ips:
      ctlplane: "192.0.2.253"

  - name: "undercloud"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ undercloud_instance_image }}"
    flavor: "{{ __undercloud_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      hostname: undercloud.example.com
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - AnsibleGroup: "undercloud"
      - ostype: "linux"
      - guid: "{{ guid }}"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - ctlplane
      - external
    floating_ip: false
    fixed_ips:
      ctlplane: "192.0.2.1"
      external: "10.0.0.253"

  - name: "ctrl01"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ ctrl01_instance_image }}"
    flavor: "{{ __ctrl01_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:192.0.2.221 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - ctlplane
      - storage
      - storagemgmt
      - internalapi
      - tenant
      - external
    floating_ip: false
    fixed_ips:
      ctlplane: "192.0.2.201"
      external: "10.0.0.201"
      internalapi: "172.16.2.201"
      storage: "172.16.1.201"
      storagemgmt: "172.16.3.201"
      tenant: "172.16.0.201"
    fixed_macs:
      ctlplane: "2c:c2:60:01:02:02"

  - name: "ctrl02"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ ctrl02_instance_image }}"
    flavor: "{{ __ctrl02_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:192.0.2.222 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - ctlplane
      - storage
      - storagemgmt
      - internalapi
      - tenant
      - external
    floating_ip: false
    fixed_ips:
      ctlplane: "192.0.2.202"
      external: "10.0.0.202"
      internalapi: "172.16.2.202"
      storage: "172.16.1.202"
      storagemgmt: "172.16.3.202"
      tenant: "172.16.0.202"
    fixed_macs:
      ctlplane: "2c:c2:60:01:02:03"

  - name: "ctrl03"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ ctrl03_instance_image }}"
    flavor: "{{ __ctrl03_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:192.0.2.223 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - ctlplane
      - storage
      - storagemgmt
      - internalapi
      - tenant
      - external
    floating_ip: false
    fixed_ips:
      ctlplane: "192.0.2.203"
      external: "10.0.0.203"
      internalapi: "172.16.2.203"
      storage: "172.16.1.203"
      storagemgmt: "172.16.3.203"
      tenant: "172.16.0.203"
    fixed_macs:
      ctlplane: "2c:c2:60:01:02:04"

  - name: "compute01"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ compute01_instance_image }}"
    flavor: "{{ __compute01_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:192.0.2.224 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - ctlplane
      - storage
      - storagemgmt
      - internalapi
      - tenant
      - external
    floating_ip: false
    fixed_ips:
      ctlplane: "192.0.2.211"
      external: "10.0.0.211"
      internalapi: "172.16.2.211"
      storage: "172.16.1.211"
      storagemgmt: "172.16.3.211"
      tenant: "172.16.0.211"
    fixed_macs:
      ctlplane: "2c:c2:60:01:02:05"

  - name: "compute02"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ compute02_instance_image }}"
    flavor: "{{ __compute02_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         ssh_pwauth: True
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:192.0.2.225 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - ctlplane
      - storage
      - storagemgmt
      - internalapi
      - tenant
      - external
    floating_ip: false
    fixed_ips:
      ctlplane: "192.0.2.212"
      external: "10.0.0.212"
      internalapi: "172.16.2.212"
      storage: "172.16.1.212"
      storagemgmt: "172.16.3.212"
      tenant: "172.16.0.212"
    fixed_macs:
      ctlplane: "2c:c2:60:01:02:06"

# Stuff that only GPTE cares about:
install_ipa_client: false

################################################################################
################################################################################
### Common Host settings
################################################################################
################################################################################

#repo_method: ""
# Do you want to run a full yum update
update_packages: false
common_packages:
  - bash-completion
  - tmux
  - wget
  - vim-enhanced

rhel_repos:
  - rhel-8-for-x86_64-appstream-eus-rpms
  - rhel-8-for-x86_64-baseos-eus-rpms
  - rhel-8-for-x86_64-highavailability-eus-rpms
  - ansible-2.9-for-rhel-8-x86_64-rpms
  - openstack-16.2-for-rhel-8-x86_64-rpms
  - fast-datapath-for-rhel-8-x86_64-rpms
  - advanced-virt-for-rhel-8-x86_64-rpms

###V2WORK, these should just be set as default listed in the documentation
install_bastion: true
install_common: false
## SB Don't set software_to_deploy from here, always use extra vars (-e) or "none" will be used
#software_to_deploy: none

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another.
# Using GUID is required, if it is not passed in the command line or uncommented
# here the deployment will fail
#guid: defaultguid

###V2WORK, these should just be set as default listed in the documentation
# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})

###V2WORK, these should just be set as default listed in the documentation
use_own_key: true
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true

###V2WORK THIS SHOULD MOVE INTO THE ROLE
# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"
