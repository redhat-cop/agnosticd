---
- name: Step 005 - Post software
  hosts: bastions
  become: false
  gather_facts: false
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  tasks:
  - debug:
      msg: "Post-Software Steps starting"

# Deploy Workloads
- name: Step 005.2 - Deploy Infra and Student Workloads
  import_playbook: workloads.yml

# Workarounds to enable cluster shutdown before 24h are over
- name: Step 005.3 - Enable Cluster Shutdown and Resume
  hosts: bastions
  run_once: true
  gather_facts: false
  become: false
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  tasks:
  - when:
    - install_ocp4 | default( false ) | bool
    - ocp4_enable_cluster_shutdown | default( false ) | bool
    block:
    - name: Set Ansible Python interpreter to k8s virtualenv
      set_fact:
        ansible_python_interpreter: /opt/virtualenvs/k8s/bin/python
    - name: Create Daemon Set to renew Bootstrap Credentials
      k8s:
        state: present
        definition: "{{ lookup('file', './files/kubelet-bootstrap-cred-manager-ds.yaml' ) | from_yaml }}"
    - name: Delete initial Bootstrap Secrets to force regeneration
      k8s:
        state: absent
        api_version: v1
        kind: Secret
        name: "{{ item }}"
        namespace: openshift-kube-controller-manager-operator
      loop:
      - "csr-signer-signer"
      - "csr-signer"

- name: Step 005.4 Run performance test (optional)
  hosts: bastions
  gather_facts: false
  become: false
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig
  tasks:
  - name: Run fio tests for etcd performance
    when: test_deploy_results | default( false ) | bool
    block:
    - name: Set Ansible Python interpreter to k8s virtualenv
      set_fact:
        ansible_python_interpreter: /opt/virtualenvs/k8s/bin/python

    - name: Get metadata.json
      stat:
        path: /home/{{ ansible_user }}/{{ cluster_name }}/metadata.json
      register: r_metadata

    - name: Get the infra ID
      shell: jq -r .infraID /home/{{ ansible_user }}/{{ cluster_name }}/metadata.json
      register: r_infra_id
      when: r_metadata.stat.exists

    - name: create fio testing project
      k8s:
        name: fio-test
        api_version: v1
        kind: Namespace
        state: present

    - name: give default sa privileged scc
      shell: oc adm policy add-scc-to-user privileged system:serviceaccount:fio-test:default

    - name: run job pod with fio-etcd-osp container
      k8s:
        state: present
        definition: "{{ lookup('template', './files/fio-test-job.yaml.j2') }}"
      vars:
        INFRA_ID: "{{ r_infra_id.stdout }}"

    - name: Wait for job if defined (1h max)
      when: test_deploy_runs is defined
      block:
      - name: Check on status of job
        k8s_facts:
          api_version: batch/v1
          kind: Job
          name: fio-test
          namespace: fio-test
        register: r_fio_test_job
        retries: 60
        delay: 60
        until: r_fio_test_job.resources[0].status.conditions | json_query(fio_query) | bool
        vars:
          fio_query: >-
            [?type=='Complete'].status[] | [0]
          INFRA_ID: "{{ r_infra_id.stdout }}"

      - name: Remove job
        k8s:
          name: fio-test
          kind: Job
          api_version: batch/v1
          namespace: fio-test
          state: absent

      - name: Remove fio testing project
        k8s:
          name: fio-test
          kind: Namespace
          api_version: v1
          state: absent


- name: Step 005.6 Print Student Info
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
  - name: Print Access Information
    when:
    - install_student_user | bool
    - ocp4_cluster_show_access_user_info | bool
    block:
    - name: Store bastion hostname as a fact
      set_fact:
        bastion_hostname: "{{groups['bastions'].0 }}"
    - name: Print access user info
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
      - "You can access your bastion via SSH:"
      - "ssh {{ student_name }}@bastion.{{ guid }}{{ subdomain_base_suffix if cloud_provider == 'ec2' else '.'+ocp4_base_domain }}"
      - ""
      - "Make sure you use the username '{{ student_name }}' and the password '{{ hostvars[bastion_hostname]['student_password'] }}' when prompted."


- name: Step 005.7 Tell CloudForms we are done
  hosts: localhost
  run_once: true
  gather_facts: false
  become: false
  tasks:
  - debug:
      msg: "Post-Software checks completed successfully"
