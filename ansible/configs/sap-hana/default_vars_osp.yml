## Environment Sizing and OS

bastion_instance_image: rhel-8.1
bastion_instance_type: "sap-2-16"
bastion_instance_count: 1
rootfs_size_bastion: "{{ rootfs_size_bastion }}"

hana_instance_image: rhel-8.1
hana_instance_type: "sap-4-64"
hana_instance_count: 1
rootfs_size_hana: "{{ rootfs_size_hana }}"
pv_size_hana: 500

s4hana_instance_image: rhel-8.1
s4hana_instance_type: "sap-4-32"
s4hana_instance_count: 1
rootfs_size_s4hana: "{{ rootfs_size_s4hana }}"
pv_size_s4hana: 200

## Variables required when deploying Ansible Tower alongside the HANA and bastion instances
tower_instance_image: rhel-8.1
tower_instance_type: "sap-4-32"
tower_instance_count: "{{ tower_instance_count }}"
rootfs_size_tower: "{{ rootfs_size_tower }}"

sap_extra_device: vdb
sap_software_device: vdb

ansible_user: cloud-user
remote_user: cloud-user

# SAP Software image and variables
sap_software_image: sap-software-v1.2
sap_software_size: "{{ sap_software_size }}"

# OSP Security Groups
security_groups:
  - name: HanaSG
    rules:
      - name: HanaSSHPrivate
        description: "SSH private"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
        group: BastionSG
      - name: HanaUDPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        group: BastionSG
        rule_type: Ingress
      - name: HanaTCPPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        group: BastionSG
        rule_type: Ingress
  - name: BastionSG
    rules:
      - name: BastionUDPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        group: HanaSG
        rule_type: Ingress
      - name: BastionTCPPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        group: HanaSG
        rule_type: Ingress
  - name: TowerSG
    rules:
      - name: TowerHTTP
        description: "Tower HTTP"
        from_port: 80
        to_port: 80
        protocol: tcp
        rule_type: Ingress
      - name: TowerHTTPS
        description: "Tower HTTPS"
        from_port: 443
        to_port: 443
        protocol: tcp
        rule_type: Ingress
      - name: TowerSSHPrivate
        description: "SSH private"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
        group: BastionSG
      - name: TowerUDPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        group: BastionSG
        rule_type: Ingress
      - name: TowerTCPPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        group: BastionSG
        rule_type: Ingress

instances:
  - name: "bastion-{{ guid }}"
    count: "{{ bastion_instance_count }}"
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image }}"
    sofware_image_id: "{{ sap_software_image }}"
    flavor:
      osp: "{{ bastion_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "50"
    softwarefs_size: "{{ sap_software_size }}"
    security_groups:
      - BastionSG

  - name: "hana-{{ guid }}"
    count: "{{ hana_instance_count }}"
    public_dns: false
    dns_loadbalancer: false
    floating_ip: false
    image_id: "{{ hana_instance_image }}"
    flavor:
      osp: "{{ hana_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "hanas"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "100"
    volumes:
      - volume_name: "hana_pv"
        volume_size: "{{ pv_size_hana }}"
    security_groups:
      - HanaSG

  - name: "s4hana-{{ guid }}"
    count: "{{ s4hana_instance_count }}"
    public_dns: true
    dns_loadbalancer: false
    floating_ip: true
    image_id: "{{ s4hana_instance_image }}"
    flavor:
      osp: "{{ s4hana_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "s4hanas"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "100"
    volumes:
      - volume_name: "s4hana_pv"
        volume_size: "{{ pv_size_s4hana }}"
    security_groups:
      - HanaSG

  - name: "tower-{{ guid }}"
    count: "{{ tower_instance_count }}"
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ tower_instance_image }}"
    flavor:
      osp: "{{ tower_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "towers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "200"
    security_groups:
      - TowerSG


zone_internal_dns: "{{guid}}.internal."
chomped_zone_internal_dns: "{{guid}}.internal"

bastion_public_dns: "bastion-{{ guid }}.{{subdomain_base}}."
bastion_public_dns_chomped: "bastion-{{ guid }}.{{subdomain_base}}"
tower_public_dns_chomped: "tower-{{ guid }}.{{subdomain_base}}"
vpcid_cidr_block: "192.168.0.0/16"
vpcid_name_tag: "{{subdomain_base}}"


rtb_public_name_tag: "{{subdomain_base}}-public"
rtb_private_name_tag: "{{subdomain_base}}-private"

ansible_hana1_hostname: "hana-{{ guid }}1"
ansible_hana2_hostname: "hana-{{ guid }}2"
ansible_hana_hostname: "hana-{{ guid }}"
ansible_s4hana_hostname: "s4hana-{{ guid }}"
