## Environment Sizing and OS

bastion_instance_image: rhel-9.3
bastion_instance_type: "sap-2-16"
bastion_instance_count: 1

hana_instance_image: rhel-9.2
hana_instance_type: "sap-4-64"
hana_instance_count: 2
pv_size_hana: 500

s4hana_instance_image: rhel-9.2
s4hana_instance_type: "sap-4-32"
s4hana_instance_count: 1
pv_size_s4hana: 200

## Variables required when deploying Ansible Tower alongside the HANA and bastion instances
tower_instance_image: rhel-9.3
tower_instance_type: "sap-4-32"
tower_instance_count: "{{ tower_instance_count }}"

sap_extra_device: vdb
sap_software_device: vdb

ansible_user: cloud-user
remote_user: cloud-user

# SAP Software image and variables
sap_software_image: sap-software-v1.2
sap_software_size: "{{ sap_software_size }}"
networks:
  - name: sap

instances:
  - name: "bastion-{{ guid }}"
    count: "{{ bastion_instance_count }}"
    cores: 2
    memory: "16G"
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ bastion_instance_image }}"
    image_size: "50G"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ guid }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    networks:
      - sap
      - default
    networkdata: |
      version: 2
      ethernets:
        eth0:
          addresses:
          - 192.168.47.10/24

    disks:
      - metadata:
          name: "sapsoftware{{ guid }}"
        spec:
          source:
            pvc:
              name: "{{ sap_software_image }}"
              namespace: cnv-images
          pvc:
            accessModes:
              - ReadWriteMany
            volumeMode: Block
            resources:
              requests:
                storage: "{{ sap_software_size }}Gi"



  - name: "hana-{{ guid }}1"
    cores: 4
    memory: "40G"
    public_dns: false
    dns_loadbalancer: false
    floating_ip: false
    image: "{{ hana_instance_image }}"
    image_size: "100G"
    networks:
      - sap
      - default
    networkdata: |
      version: 2
      ethernets:
        eth0:
          addresses:
          - 192.168.47.28/24
    tags:
      - key: "AnsibleGroup"
        value: "hanas"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ guid }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    disks:
      - metadata:
          name: "INSTANCENAME-{{ guid }}2"
        spec:
          source:
            blank: {}
          pvc:
            accessModes:
              - ReadWriteMany
            volumeMode: Block
            resources:
              requests:
                storage: "{{ pv_size_hana }}Gi"

  - name: "hana-{{ guid }}2"
    cores: 4
    memory: "40G"
    public_dns: false
    dns_loadbalancer: false
    floating_ip: false
    image: "{{ hana_instance_image }}"
    image_size: "100G"
    networks:
      - sap
      - default
    networkdata: |
      version: 2
      ethernets:
        eth0:
          addresses:
          - 192.168.47.135/24
    tags:
      - key: "AnsibleGroup"
        value: "hanas"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ guid }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    disks:
      - metadata:
          name: "INSTANCENAME-{{ guid }}2"
        spec:
          source:
            blank: {}
          pvc:
            accessModes:
              - ReadWriteMany
            volumeMode: Block
            resources:
              requests:
                storage: "{{ pv_size_hana }}Gi"



  - name: "s4hana-{{ guid }}"
    count: "{{ s4hana_instance_count }}"
    cores: 2
    memory: "16G"
    public_dns: true
    dns_loadbalancer: false
    floating_ip: true
    image: "{{ s4hana_instance_image }}"
    image_size: "100G"
    tags:
      - key: "AnsibleGroup"
        value: "s4hanas"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ guid }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    networks:
      - sap
      - default
    networkdata: |
      version: 2
      ethernets:
        eth0:
          addresses:
            - 192.168.47.150/24
    disks:
      - metadata:
          name: "s4hanapv-{{ guid }}"
        spec:
          source:
            blank: {}
          pvc:
            accessModes:
              - ReadWriteMany
            volumeMode: Block
            resources:
              requests:
                storage: "{{ pv_size_s4hana }}Gi"


  - name: "tower-{{ guid }}"
    count: "{{ tower_instance_count }}"
    cores: 4
    memory: "32G"
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ tower_instance_image }}"
    image_size: "200G"
    tags:
      - key: "AnsibleGroup"
        value: "towers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ guid }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    networks:
      - sap
      - default
    networkdata: |
      version: 2
      ethernets:
        eth0:
          addresses:
          - 192.168.47.11/24
    services:
      - name: tower-svc
        ports:
          - port: 443
            protocol: TCP
            targetPort: 443
            name: tower-https
          - port: 80
            protocol: TCP
            targetPort: 80
            name: tower-http
    routes:
      - name: "tower-{{ guid }}"
        service: tower-svc
        targetPort: 443
        tls: true
      - name: "tower-{{ guid }}-http"
        host: "tower-{{ guid }}"
        service: tower-svc
        targetPort: 80
        tls: false
        path: "/.well-known/"

zone_internal_dns: "{{guid}}.internal."
chomped_zone_internal_dns: "{{guid}}.internal"

bastion_public_dns: "bastion-{{ guid }}.{{ guid }}.{{ sandbox_openshift_apps_domain }}."
bastion_public_dns_chomped: "bastion-{{ guid }}.{{ guid }}.{{ sandbox_openshift_apps_domain }}"
tower_public_dns_chomped: "tower-{{ guid }}.{{ guid }}.{{ sandbox_openshift_apps_domain }}"
vpcid_cidr_block: "192.168.0.0/16"
vpcid_name_tag: "{{ subdomain_base }}"


rtb_public_name_tag: "{{ subdomain_base }}-public"
rtb_private_name_tag: "{{ subdomain_base }}-private"

ansible_hana1_hostname: "{{ hostvars[groups.hanas[0]].ansible_hostname }}"
ansible_hana1_fqdn_hostname: "{{ hostvars[groups.hanas[0]].ansible_fqdn }}"
ansible_hana1_ip: "{{ hostvars[groups.hanas[0]].ansible_eth0.ipv4.address }}"
ansible_hana2_hostname: "{{ hostvars[groups.hanas[1]].ansible_hostname }}"
ansible_hana2_fqdn_hostname: "{{ hostvars[groups.hanas[1]].ansible_fqdn }}"
ansible_hana2_ip: "{{ hostvars[groups.hanas[1]].ansible_eth0.ipv4.address }}"
ansible_hana_hostname: "hana-{{ guid }}"
ansible_s4hana_hostname: "s4hana-{{ guid }}"
bastion_hostname: "bastion-{{ guid }}"
deployment_db_host: "hana-{{ guid }}1"

#__run_aap_deployment: true
