## Common repositories
rhel_repos:
   - "rhel-8-for-x86_64-baseos-e4s-rpms"
   - "rhel-8-for-x86_64-appstream-e4s-rpms"
   - "ansible-2-for-rhel-8-x86_64-rpms"
   - "rhel-8-for-x86_64-sap-solutions-e4s-rpms"
   - "rhel-8-for-x86_64-sap-netweaver-e4s-rpms"

### Common Host settings

install_ipa_client: false

install_student_user: false

# Do you want to run a full yum update
update_packages: false

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another "just like it"
guid: defaultguid

# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"

# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"

install_bastion: true
install_common: true

# Variable used to identify the request being made by a Red Hatter or Partner (external)
rh_internal: true

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})
use_own_key: true
env_authorized_key: "{{guid}}key"
#ansible_ssh_private_key_file: ~/.ssh/{{key_name}}.pem
set_env_authorized_key: true

# Is this running from Red Hat Ansible Tower
tower_run: false

## Networking
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{subdomain_base_short}}{{subdomain_base_suffix}}"

## Environment Sizing and OS

bastion_instance_image: rhel-8.1
bastion_instance_type: "sap-2-16"
bastion_instance_count: 1
rootfs_size_bastion: "{{ rootfs_size_bastion }}"

hana_instance_image: rhel-8.1
hana_instance_type: "sap-4-64"
hana_instance_count: 1
rootfs_size_hana: "{{ rootfs_size_hana }}"
pv_size_hana: 500

s4hana_instance_image: rhel-8.1
s4hana_instance_type: "sap-4-32"
s4hana_instance_count: 1
rootfs_size_s4hana: "{{ rootfs_size_s4hana }}"
pv_size_s4hana: 200

## Variables required when deploying Ansible Tower alongside the HANA and bastion instances
tower_instance_image: rhel-8.1
tower_instance_type: "sap-4-32"
tower_instance_count: "{{ tower_instance_count }}"
rootfs_size_tower: "{{ rootfs_size_tower }}"

# SAP Software image and variables
sap_software_image: sap-software-v1.2
sap_software_size: "{{ sap_software_size }}"

#Ansible Tower Variables
ansible_tower_download_url: "https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-3.6.3-1.tar.gz"
ansible_tower_epel_download_url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"

# OSP Security Groups
security_groups:
  - name: HanaSG
    rules:
      - name: HanaSSHPrivate
        description: "SSH private"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
        group: BastionSG
      - name: HanaUDPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        group: BastionSG
        rule_type: Ingress
      - name: HanaTCPPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        group: BastionSG
        rule_type: Ingress
  - name: BastionSG
    rules:
      - name: BastionUDPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        group: HanaSG
        rule_type: Ingress
      - name: BastionTCPPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        group: HanaSG
        rule_type: Ingress
  - name: TowerSG
    rules:
      - name: TowerHTTP
        description: "Tower HTTP"
        from_port: 80
        to_port: 80
        protocol: tcp
        rule_type: Ingress
      - name: TowerHTTPS
        description: "Tower HTTPS"
        from_port: 443
        to_port: 443
        protocol: tcp
        rule_type: Ingress
      - name: TowerSSHPrivate
        description: "SSH private"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
        group: BastionSG
      - name: TowerUDPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: udp
        group: BastionSG
        rule_type: Ingress
      - name: TowerTCPPPortsPrivate
        description: "Only from bastion"
        from_port: 1
        to_port: 65535
        protocol: tcp
        group: BastionSG
        rule_type: Ingress

instances:
  - name: "bastion-{{ guid }}"
    count: "{{ bastion_instance_count }}"
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ bastion_instance_image }}"
    sofware_image_id: "{{ sap_software_image }}"
    flavor:
      osp: "{{ bastion_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "50"
    softwarefs_size: "{{ sap_software_size }}"
    security_groups:
      - BastionSG

  - name: "hana-{{ guid }}"
    count: "{{ hana_instance_count }}"
    public_dns: false
    dns_loadbalancer: false
    floating_ip: false
    image_id: "{{ hana_instance_image }}"
    flavor:
      osp: "{{ hana_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "hanas"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "100"
    volumes:
      - volume_name: "hana_pv"
        volume_size: "{{ pv_size_hana }}"
    security_groups:
      - HanaSG

  - name: "s4hana-{{ guid }}"
    count: "{{ s4hana_instance_count }}"
    public_dns: true
    dns_loadbalancer: false
    floating_ip: true
    image_id: "{{ s4hana_instance_image }}"
    flavor:
      osp: "{{ s4hana_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "s4hanas"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "100"
    volumes:
      - volume_name: "s4hana_pv"
        volume_size: "{{ pv_size_s4hana }}"
    security_groups:
      - HanaSG

  - name: "tower-{{ guid }}"
    count: "{{ tower_instance_count }}"
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ tower_instance_image }}"
    flavor:
      osp: "{{ tower_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "towers"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
      - key: ansible_python_interpreter
        value: /usr/libexec/platform-python
    rootfs_size: "200"
    security_groups:
      - TowerSG



common_packages:
  - unzip
  - bash-completion
  - tmux
  - bind-utils
  - wget
  - git
  - vim-enhanced
  - at

zone_internal_dns: "{{guid}}.internal."
chomped_zone_internal_dns: "{{guid}}.internal"

bastion_public_dns: "bastion-{{ guid }}.{{subdomain_base}}."
bastion_public_dns_chomped: "bastion-{{ guid }}.{{subdomain_base}}"
vpcid_cidr_block: "192.168.0.0/16"
vpcid_name_tag: "{{subdomain_base}}"


rtb_public_name_tag: "{{subdomain_base}}-public"
rtb_private_name_tag: "{{subdomain_base}}-private"


cf_template_description: "{{ env_type }}-{{ guid }} Ansible Agnostic Deployer "

### Ansible Tower default variables ###

ansible_tower_password: "{{ tower_password }}"

tower_cli_config: |
  [general]
  username = admin
  password = {{ ansible_tower_password }}
  verify_ssl = false
  host = https://localhost


ansible_tower:
  admin_username: "admin"
  admin_password: "{{ ansible_tower_password }}"
  url: "https://localhost"
  validate_certs: false
  install:
    license_file: "/tmp/license.json"
  inventories:
    - name: "sap-hosts"
      variables: '---\nsap_preconfigure_modify_etc_hosts: true\nsap_domain: \"labs.local\"\nsap_hostagent_installation_type: \"rpm\"\nsap_hostagent_rpm_remote_path: \"/software/SAPHOSTAGENT\"\nsap_hostagent_rpm_file_name: \"saphostagentrpm_44-20009394.rpm\"'
      description: "SAP HANA and S/4HANA"
      organization: "Default"
      hosts:
      - name: "hana-{{ guid }}"
        description: "SAP HANA Host"
        variables: '---\nstorage_pools:\n  - name: sap\n    disks:\n      - vdb\n    volumes:\n      - name: data\n        size: \"128 GiB\"\n        mount_point: \"/hana/data\"\n        state: present\n      - name: log\n        size: \"64 GiB\"\n        mount_point: \"/hana/log\"\n        state: present\n      - name: shared\n        size: \"256 GiB\"\n        mount_point: \"/hana/shared\"\n        state: present\n      - name: sap\n        size: \"50 GiB\"\n        mount_point: \"/usr/sap\"\n        state: present\nsap_hana_deployment_bundle_path: /software/HANA_installation\nsap_hana_deployment_bundle_sar_file_name: IMDB_SERVER20_046_0-80002031.SAR\nsap_hana_deployment_sapcar_path: /software/SAPCAR\nsap_hana_deployment_sapcar_file_name: SAPCAR_1311-80000935.EXE\nsap_hana_deployment_root_password: \"R3dh4t123!\"\nsap_hana_deployment_sapadm_password: \"R3dh4t123!\"\nsap_hana_deployment_hana_sid: RHE\nsap_hana_deployment_hana_instance_number: \"00\"\nsap_hana_deployment_hana_env_type: development\nsap_hana_deployment_hana_mem_restrict: \"n\"\nsap_hana_deployment_common_master_password: \"R3dh4t123!\"\nsap_hana_deployment_sidadm_password: \"R3dh4t123!\"\nsap_hana_deployment_hana_db_system_password: \"R3dh4t123!\"\nsap_hana_deployment_ase_user_password: \"R3dh4t123!\"\nsap_hana_deployment_apply_license: false'
      - name: "s4hana-{{ guid }}"
        description: "SAP S/4HANA Host"
        variables: '---\nstorage_pools:\n  - name: sap\n    disks:\n      - vdb\n    volumes:\n      - name: sap\n        size: \"50 GiB\"\n        mount_point: \"/usr/sap\"\n        state: present\n      - name: sapmnt\n        size: \"20 GiB\"\n        mount_point: \"/usr/sapmnt\"\n        state: present\n      - name: swap\n        size: \"20 GiB\"\n        state: present\n\nsap_s4hana_deployment_product_id: \"NW_ABAP_OneHost:S4HANA1909.CORE.HDB.ABAP\"\nsap_s4hana_deployment_sapcar_path: \"/software/SAPCAR\"\nsap_s4hana_deployment_sapcar_file_name: \"SAPCAR_1311-80000935.EXE\"\nsap_s4hana_deployment_swpm_path: \"/software/S4HANA_installation\"\nsap_s4hana_deployment_swpm_sar_file_name: \"SWPM20SP04_6-80003424.SAR\"\nsap_s4hana_deployment_db_schema_password: \"R3dh4t123!\"\nsap_s4hana_deployment_db_schema_abap_password: \"R3dh4t123!\"\nsap_s4hana_deployment_master_password: \"R3dh4t123!\"\nsap_s4hana_deployment_hana_systemdb_password: \"R3dh4t123!\"\nsap_s4hana_deployment_sid: \"RHE\"\nsap_s4hana_deployment_db_host: \"hana-{{ guid }}\"\nsap_s4hana_deployment_db_sid: \"RHE\"\nsap_s4hana_deployment_hana_instance_nr: \"00\"\nsap_s4hana_deployment_hana_system_password: \"R3dh4t123!\"\nsap_s4hana_deployment_parallel_jobs_nr: \"30\"\nsap_s4hana_deployment_db_sidadm_password: \"R3dh4t123!\"\nsap_s4hana_deployment_igs_path: \"/software/S4HANA_installation\"\nsap_s4hana_deployment_igs_file_name: \"igsexe_9-80003187.sar\"\nsap_s4hana_deployment_igs_helper_path: \"/software/S4HANA_installation\"\nsap_s4hana_deployment_igs_helper_file_name: \"igshelper_17-10010245.sar\"\nsap_s4hana_deployment_kernel_dependent_path: \"/software/S4HANA_installation\"\nsap_s4hana_deployment_kernel_dependent_file_name: \"SAPEXEDB_201-80003385.SAR\"\nsap_s4hana_deployment_kernel_independent_path: \"/software/S4HANA_installation\"\nsap_s4hana_deployment_kernel_independent_file_name: \"SAPEXE_201-80003386.SAR\"\nsap_s4hana_deployment_software_path: \"/software/S4HANA_installation\"\nsap_s4hana_deployment_sapadm_password: \"R3dh4t123!\"\nsap_s4hana_deployment_sap_sidadm_password: \"R3dh4t123!\"'
      groups:
      - name: "sap"
        hosts:
        - name: "hana-{{ guid }}"
        - name: "s4hana-{{ guid }}"
  projects:
    - name: "sap-rhsm"
      description: "SAP RHSM"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "sap-rhsm"
      organization: "Default"
    - name: "storage"
      description: "SAP Storage"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "storage"
      organization: "Default"
    - name: "sap-preconfigure"
      description: "SAP Preconfigure"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "sap-preconfigure"
      organization: "Default"
    - name: "sap-hostagent"
      description: "SAP HostAgent"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "sap-hostagent"
      organization: "Default"
    - name: "sap-hana-preconfigure"
      description: "SAP HANA Preconfigure"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "sap-hana-preconfigure"
      organization: "Default"
    - name: "sap-hana-deployment"
      description: "SAP HANA Deployment"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "sap-hana-deployment"
      organization: "Default"
    - name: "sap-netweaver-preconfigure"
      description: "SAP NetWeaver Preconfigure"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "sap-netweaver-preconfigure"
      organization: "Default"
    - name: "sap-s4hana-deployment"
      description: "SAP S/4HANA Deployment"
      scm_type: "git"
      scm_url: "https://github.com/redhat-sap/sap-tower-projects.git"
      scm_branch: "sap-s4hana-deployment"
      organization: "Default"
  job_templates:
    - name: "sap-repositories"
      description: "Enable RHEL for SAP Solutions Repos"
      inventory: "sap-hosts"
      project: "sap-rhsm"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
    - name: "sap-storage"
      description: "Configure required File Systems for HANA and S/4HANA"
      inventory: "sap-hosts"
      project: "storage"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
    - name: "sap-preconfigure"
      description: "Apply specific OS requirements to deploy SAP Workloads"
      inventory: "sap-hosts"
      project: "sap-preconfigure"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
    - name: "sap-hostagent"
      description: "Deploy SAP Host Agent"
      inventory: "sap-hosts"
      project: "sap-hostagent"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
    - name: "sap-hana-preconfigure"
      description: "Apply specific OS requirements to deploy SAP HANA"
      inventory: "sap-hosts"
      inventory_limit_pattern: "hana-{{ guid }}"
      project: "sap-hana-preconfigure"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
    - name: "sap-hana-deployment"
      description: "Deploy SAP HANA"
      inventory: "sap-hosts"
      inventory_limit_pattern: "hana-{{ guid }}"
      project: "sap-hana-deployment"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
    - name: "sap-netweaver-preconfigure"
      description: "Apply specific OS requirements to deploy SAP S/4HANA"
      inventory: "sap-hosts"
      inventory_limit_pattern: "s4hana-{{ guid }}"
      project: "sap-netweaver-preconfigure"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
    - name: "sap-s4hana-deployment"
      description: "Deploy SAP S/4HANA"
      inventory: "sap-hosts"
      inventory_limit_pattern: "s4hana-{{ guid }}"
      project: "sap-s4hana-deployment"
      playbook: "play.yml"
      enable_privilege_escalation: true
      credentials:
        - "ssh-key"
  credentials:
  - name: "ssh-key"
    description: "SAP Hosts SSH Key"
    organization: "Default"
    credential_type: "Machine"
    inputs:
      username: "cloud-user"
      ssh_key_data: "{{lookup('file', '{{ output_dir}}/{{ guid }}_infra_ssh_key.pem') }}"

workflow_schema: |
  - job_template: 'sap-repositories'
    success_nodes:
    - job_template: 'sap-storage'
      success_nodes:
      - job_template: 'sap-hostagent'
        success_nodes:
        - job_template: 'sap-preconfigure'
          success_nodes:
          - job_template: 'sap-hana-preconfigure'
            success_nodes:
            - job_template: 'sap-hana-deployment'
              success_nodes:
              - job_template: 'sap-s4hana-deployment'
          - job_template: 'sap-netweaver-preconfigure'
