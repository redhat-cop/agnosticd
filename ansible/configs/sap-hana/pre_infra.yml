---
- name: Step 000 - Pre Infrastructure
  #
  # Creates SSH keys for logging in and search snapshot disk in AWS
  #
  hosts: localhost
  connection: local
  gather_facts: true
  become: false
  tags:
    - step001
    - pre_infrastructure
    - generate_env_keys

  tasks:
    - name: Print Ansible version, python version and OS of ansible deployment
      ansible.builtin.debug:
        msg:
          - 'Ansible version: {{ ansible_version.full | d("not found") }}'
          - 'Python version: {{ ansible_python.version.major }}.{{ ansible_python.version.minor
            }}'
          - 'OS: {{ ansible_distribution }} {{ ansible_distribution_major_version }}'

    ## TODO: replace ansible by command
    - name: Generate SSH keypair
      ansible.builtin.command: ssh-keygen -b 2048 -t rsa -f "{{ output_dir }}/{{ env_authorized_key }}" -q -N ""
      args:
        creates: "{{ output_dir }}/{{ env_authorized_key }}"
      when: set_env_authorized_key | bool

    - name: Output newly generated private key for logging in
      ansible.builtin.debug:
        msg: "{{ lookup('ansible.builtin.file', output_dir + '/' + env_authorized_key) }}"
      when: set_env_authorized_key | bool

    ## TODO: change mode line
    - name: Fix permission
      ansible.builtin.file:
        path: "{{ output_dir }}/{{ env_authorized_key }}"
        mode: '0400'
      when: set_env_authorized_key | bool

    ### TODO: seems superflous -- double check
    ## This logic overwrites the public with the private key if public was not created !!
    # - name: Generate SSH pub key
    #   ansible.builtin.shell: ssh-keygen -y -f "{{ output_dir }}/{{ env_authorized_key }}" > "{{ output_dir }}/{{ env_authorized_key }}.pub"
    #   args:
    #     creates: "{{ output_dir }}/{{ env_authorized_key }}.pub"
    #   when: set_env_authorized_key | bool

    - name: Include tasks to find snapshot in AWS
      when: cloud_provider == 'ec2'
      ansible.builtin.include_tasks: find_snapshot.yml
