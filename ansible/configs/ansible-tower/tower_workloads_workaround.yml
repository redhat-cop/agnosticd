- hosts: bastions
  gather_facts: false
  become: yes
  tasks:
  - name: Inject License
    include_role:
      name: tower-license-injector
    when: tower_license is defined
    tags:
      - tower-license-injector

###### delete demo stuff #######
  - name: Delete Demo Job Template
    tower_job_template:
      name: "Demo Job Template"
      state: absent
      job_type: run
      playbook: "hello_world.yml"
      project: "Demo Project"
      inventory: "Demo Inventory"
      tower_host: "{{ tower_host_name }}" 
      tower_username: admin
      tower_password: "{{tower_admin_password}}"
      tower_verify_ssl: false
    ignore_errors: yes

  - name: Delete Demo Credential
    command: tower-cli credential delete -n "Demo Credential"
    ignore_errors: yes
  - name: Delete Demo Project
    tower_project:
      name: "Demo Project"
      state: absent
      tower_host: "{{ tower_host_name }}"
      tower_username: admin
      tower_password: "{{tower_admin_password}}"
      tower_verify_ssl: false
    ignore_errors: yes

  - name: Delete Demo Inventory
    tower_inventory:
      name: "Demo Inventory"
      organization: Default
      state: absent
      tower_host: "{{ tower_host_name }}"
      tower_username: admin
      tower_password: "{{tower_admin_password}}"
      tower_verify_ssl: false
    ignore_errors: yes

###### Create tower users #####
  - name: Add tower user
    tower_user:
      username: "{{ item.user }}"
      password: "{{ item.password | default('change_me') }}"
      email: "{{ item.email | default('rhpds-admins@redhat.com') }}"
      first_name: "{{ item.firstname | default(item.user) }}"
      last_name: "{{ item.lastname | default(item.user) }}"
      superuser: "{{ item.superuser | default('no')}}"
      state: present
      tower_host: "{{ tower_host_name }}" 
      tower_username: admin
      tower_password: "{{tower_admin_password}}"
      tower_verify_ssl: false
    loop: "{{ tower_accounts }}"
    when: tower_accounts is defined
    tags:
      - tower-user-create

#### Create Tower Organization ####
  - name: Add tower org
    tower_organization:
      name: "{{ item.name }}"
      state: present
      tower_host: "{{ tower_host_name }}"
      tower_username: admin
      tower_password: "{{tower_admin_password}}"
      tower_verify_ssl: false
    loop: "{{ tower_organization }}"
    when: tower_organization is defined
    tags:
      - tower-org-create


#### Create tower Project #####
  - name: Add tower project
    tower_project:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      organization:  "{{ item.organization | default('Default')}}"
      scm_url:  "{{ item.scm_url }}"
      scm_type: "{{ item.scm_type | d('git')}}"
      scm_credential: "{{ item.scm_credential | d('')}}"
      scm_branch:  "{{ item.scm_branch | d('master') }}"
      scm_update_on_launch: "{{ item.scm_update_on_launch | d('false') }}"
      state: present
      tower_host: "{{ tower_host_name }}"
      tower_username: admin
      tower_password: "{{tower_admin_password}}"
      tower_verify_ssl: false
    loop: "{{ tower_projects }}"
    when: tower_projects is defined
    tags:
      - tower-project-create

#### Create tower Inventory ####
  - name: Block for Inventory
    when: tower_inventories is defined
    block:
    - name: Add tower inventory
      tower_inventory:
        name: "{{ item.name }}"
        description: "{{ item.description  }}"
        organization: "{{ item.organization | d('gpte') }}"
        state: present
        tower_host: "{{ tower_host_name }}"
        tower_username: admin
        tower_password: "{{tower_admin_password}}"
        tower_verify_ssl: false
      loop: "{{ tower_inventories }}"
      tags:
        - tower-inventory-create

    - name: Associate instance group to inventory 
      command: >- 
        tower-cli inventory 
        associate_ig 
        --inventory "{{ item.name }}"
        --instance-group "{{ item.instance_group | d('') }}"
      loop: "{{ tower_inventories }}"
      when: 
        - item.instance_group is defined

#### Create Tower Job Template ####
  - name: Add tower JobTemplate
    tower_job_template:
      name: "{{ item.name }}"
      description: "{{ item.description  }}"
      job_type: run
      ask_inventory: Yes
      ask_credential: Yes
      vault_credential: "{{ item.vault_credential | d('') }}"
      ask_extra_vars: Yes
      project: "{{ item.project }}"
      playbook: "{{ item.playbook | d('main.yml') }}"
      become_enabled: "{{ item.become | d('no') }}"
      concurrent_jobs_enabled: Yes
      state: present
      tower_host: "{{ tower_host_name }}"
      tower_username: admin
      tower_password: "{{tower_admin_password}}"
      tower_verify_ssl: false
    loop: "{{ tower_job_templates }}"
    when: tower_job_templates is defined
    tags:
      - tower-job-template-create
