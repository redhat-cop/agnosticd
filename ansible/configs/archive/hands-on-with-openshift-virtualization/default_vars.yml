guid: CHANGEME # Your Global UNIQUE Identifier

################
### Env vars ###
################

env_type: hands-on-with-openshift-virtualization # Name of config to deploy
cloud_provider: osp # Which AgnosticD Cloud Provider to use

ansible_user: cloud-user

email: example@example.com # User info for notifications
output_dir: /tmp/output_dir # Writable working scratch directory
admin_user: "{{ guid }}-user" # User created by the project. Leave as {{ guid }}-user
student_name: "{{ guid }}-user" # This will be used to create a student login ID
# Auto-generated by default
#student_password: "r3dh4t1!"             # Customize the student password here. Keep in mind these systems may be public facing.
install_student_user: true

default_metadata:
  owner: "{{ email | default('unknownuser') }}"
  Project: "{{ project_tag }}"
  env_type: "{{ env_type }}"
multi_network: true
multi_network_primary: "{{ guid }}-external-network"

osp_migration_report_labconsole: true
osp_migration_labconsole_url: https://console.apps.open.redhat.com/

########################
## Quotas             ##
########################

quota_networks: 10
quota_subnets: 10

########################
## Environment Images ##
########################

__provision_instance_image: "{{ provision_instance_image }}"
__ipmihost_instance_image: "{{ ipmihost_instance_image }}"
__master01_instance_image: "{{ master01_instance_image  }}"
__master02_instance_image: "{{ master02_instance_image  }}"
__master03_instance_image: "{{ master03_instance_image  }}"
__worker01_instance_image: "{{ worker01_instance_image }}"
__worker02_instance_image: "{{ worker02_instance_image }}"
__worker03_instance_image: "{{ worker02_instance_image }}"

########################
## Environment Sizing ##
########################
#
__provision_instance_flavor:
  osp: "{{ provision_instance_flavor  }}"

__ipmihost_instance_flavor:
  osp: "{{ ipmihost_instance_flavor  }}"

__master01_instance_flavor:
  osp: "{{ master01_instance_flavor  }}"

__master02_instance_flavor:
  osp: "{{ master02_instance_flavor  }}"

__master03_instance_flavor:
  osp: "{{ master03_instance_flavor  }}"

__worker01_instance_flavor:
  osp: "{{ worker01_instance_flavor  }}"

__worker02_instance_flavor:
  osp: "{{ worker02_instance_flavor  }}"

__worker03_instance_flavor:
  osp: "{{ worker03_instance_flavor  }}"

# Networks
# A list of the private networks and subnets to create in the project
# You can create as many as you want, but at least one is required.
# Use the name of the networks where appropriate in the instance list
networks:
  - name: external
    subnet_cidr: 10.0.0.0/24
    enable_dhcp: True
    shared: "false"
    gateway_ip: 10.0.0.1
    dns_nameservers: [8.8.8.8]
    create_router: True
    router_network: external
    allocation_start: 10.0.0.50
    allocation_end: 10.0.0.80


  - name: baremetal
    subnet_cidr: 10.20.0.0/24
    enable_dhcp: False
    shared: "false"
    gateway_ip: 10.20.0.1
    dns_nameservers: [8.8.8.8]
    create_router: False
    router_network: external
    allocation_start: 10.20.0.50
    allocation_end: 10.20.0.80

  - name: provisioning
    shared: "false"
    subnet_cidr: 172.22.0.0/24
    enable_dhcp: False
    gateway_ip: 0.0.0.0
    dns_nameservers: []
    create_router: false

  - name: student
    shared: "false"
    subnet_cidr: 192.168.3.0/24
    enable_dhcp: False
    gateway_ip: 192.168.3.1
    dns_nameservers: []
    create_router: true
    router_network: student

##### Security Groups ###
#      - {port_range_max: 22, port_range_min: 22, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
#      - {port_range_max: 80, port_range_min: 80, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
#      - {port_range_max: 6080, port_range_min: 6080, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}

security_groups:
  - name: provisionSG
    rules:
      - name: provisionSSHPublic
        description: "SSH public"
        from_port: 22
        to_port: 22
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress
      - name: provisionWEBPublic
        description: "WEB public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: provisionInternal1tcp
        description: "Internal1 tcp "
        protocol: tcp
        cidr: "10.20.0.0/24"
        rule_type: Ingress

      - name: provisionInternal1udp
        description: "Internal1 udp "
        protocol: udp
        cidr: "10.20.0.0/24"
        rule_type: Ingress

      - name: provisionInternal2tcp
        description: "Internal2 tcp "
        protocol: tcp
        cidr: "172.22.0.0/24"
        rule_type: Ingress

      - name: provisionInternal2udp
        description: "Internal2 udp "
        protocol: udp
        cidr: "172.22.0.0/24"
        rule_type: Ingress

# Environment Instances
instances:
  - name: "provision"
    count: 1
    unique: true
    public_dns: true
    dns_records:
      - "*.apps"
    dns_loadbalancer: false
    image_id: "{{ __provision_instance_image }}"
    flavor: "{{ __provision_instance_flavor }}"
    metadata:
      - AnsibleGroup: "bastions"
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - guid: "{{ guid }}"
      - env_type: "{{ env_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      #  - ctlplane
      - provisioning
      - baremetal
      - student
      - external
    floating_ip: true
    floating_ip_network: "external"
    #security_groups:
    #  - provisionSG
    fixed_ips:
      provisioning: "172.22.0.254"
      baremetal: "10.20.0.254"
      student: "192.168.3.254"
      external: "10.0.0.254"
    userdata:
      ssh_pwauth: true
      chpasswd:
        list: |
          root:r3dh4t1!
        expire: false
      runcmd:
        - ip r del default dev eth0
        - ip r del default dev eth1
        - ip r del default dev eth2
        - sed -i '/^GATEWAY/d' /etc/sysconfig/network-scripts/ifcfg-eth0
        - sed -i '/^GATEWAY/d' /etc/sysconfig/network-scripts/ifcfg-eth1
        - sed -i '/^GATEWAY/d' /etc/sysconfig/network-scripts/ifcfg-eth2

  - name: "ipmi-host"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ __ipmihost_instance_image }}"
    flavor: "{{ __ipmihost_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      runcmd:
        - sleep 180
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False
    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - api_user: "{{ osp_auth_username_member }}"
      - api_pass: "{{ osp_auth_password_member }}"
      - api_url: "{{ osp_auth_url }}"
      - project_name: "{{  osp_project_name}}"
      - provisioning_image: "provisioningboot"
      - pxe_image: "pxeboot"

    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - baremetal
    floating_ip: false
    fixed_ips:
      baremetal: "10.20.0.3"

  - name: "master01"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ master01_instance_image }}"
    flavor: "{{ __master01_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:10.20.0.11 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - provisioning
      - baremetal
      - student
    floating_ip: false
    fixed_ips:
      provisioning: "172.22.0.100"
      baremetal: "10.20.0.100"
      student: "192.168.3.100"
    fixed_macs:
      provisioning: "de:ad:be:ef:00:40"
      baremetal: "de:ad:be:ef:01:40"
      student: "de:ad:be:ef:02:40"

  - name: "master02"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ master02_instance_image }}"
    flavor: "{{ __master02_instance_flavor }}"

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:10.20.0.12 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - provisioning
      - baremetal
      - student
    floating_ip: false
    fixed_ips:
      provisioning: "172.22.0.101"
      baremetal: "10.20.0.101"
      student: "192.168.3.101"
    fixed_macs:
      provisioning: "de:ad:be:ef:00:41"
      baremetal: "de:ad:be:ef:01:41"
      student: "de:ad:be:ef:02:41"
  - name: "master03"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ master03_instance_image }}"
    flavor: "{{ __master03_instance_flavor }}"

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:10.20.0.13 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - provisioning
      - baremetal
      - student
    floating_ip: false
    fixed_ips:
      provisioning: "172.22.0.102"
      baremetal: "10.20.0.102"
      student: "192.168.3.102"
    fixed_macs:
      provisioning: "de:ad:be:ef:00:42"
      baremetal: "de:ad:be:ef:01:42"
      student: "de:ad:be:ef:02:42"


  - name: "worker01"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ worker01_instance_image }}"
    flavor: "{{ __worker01_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:10.20.0.14 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - provisioning
      - baremetal
      - student
    floating_ip: false
    fixed_ips:
      provisioning: "172.22.0.200"
      baremetal: "10.20.0.200"
      student: "192.168.3.200"
    fixed_macs:
      provisioning: "de:ad:be:ef:00:50"
      baremetal: "de:ad:be:ef:01:50"
      student: "de:ad:be:ef:02:50"

    volumes:
      - volume_name: "worker01-volume01"
        volume_size: "100"
      - volume_name: "worker01-volume02"
        volume_size: "20"


  - name: "worker02"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ worker02_instance_image }}"
    flavor: "{{ __worker02_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:10.20.0.15 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - provisioning
      - baremetal
      - student
    floating_ip: false
    fixed_ips:
      provisioning: "172.22.0.201"
      baremetal: "10.20.0.201"
      student: "192.168.3.201"
    fixed_macs:
      provisioning: "de:ad:be:ef:00:51"
      baremetal: "de:ad:be:ef:01:51"
      student: "de:ad:be:ef:02:51"
    volumes:
      - volume_name: "worker02-volume01"
        volume_size: "100"
      - volume_name: "worker02-volume02"
        volume_size: "20"


  - name: "worker03"
    count: 1
    unique: true
    public_dns: false
    dns_loadbalancer: false
    image_id: "{{ worker03_instance_image }}"
    flavor: "{{ __worker03_instance_flavor }}"
    userdata: |
      ssh_pwauth:   true
      chpasswd:
         list: |
           root:r3dh4t1!
         expire: False

    metadata:
      - ostype: "linux"
      - instance_filter: "{{ env_type }}-{{ email }}"
      - env_type: "{{ env_type }}"
      - description: "ipmiaddr:10.20.0.16 ipmipw:redhat"
    tags:
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    networks:
      - provisioning
      - baremetal
      - student
    floating_ip: false
    fixed_ips:
      provisioning: "172.22.0.202"
      baremetal: "10.20.0.202"
      student: "192.168.3.202"
    fixed_macs:
      provisioning: "de:ad:be:ef:00:52"
      baremetal: "de:ad:be:ef:01:52"
      student: "de:ad:be:ef:02:52"
    volumes:
      - volume_name: "worker03-volume01"
        volume_size: "100"
      - volume_name: "worker03-volume02"
        volume_size: "20"


# Stuff that only GPTE cares about:
install_ipa_client: false

################################################################################
################################################################################
### Common Host settings
################################################################################
################################################################################

repo_method: "satellite"
# Do you want to run a full yum update
update_packages: false
common_packages:
  - bash-completion
  - tmux
  - wget
  - vim-enhanced

rhel_repos:
  - rhel-8-for-x86_64-appstream-eus-rpms
  - rhel-8-for-x86_64-baseos-eus-rpms
  - rhel-8-for-x86_64-highavailability-eus-rpms
  - ansible-2.9-for-rhel-8-x86_64-rpms
  - openstack-16.2-for-rhel-8-x86_64-rpms
  - fast-datapath-for-rhel-8-x86_64-rpms
  - advanced-virt-for-rhel-8-x86_64-rpms

###V2WORK, these should just be set as default listed in the documentation
install_bastion: true
install_common: false
## SB Don't set software_to_deploy from here, always use extra vars (-e) or "none" will be used
#software_to_deploy: none

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another.
# Using GUID is required, if it is not passed in the command line or uncommented
# here the deployment will fail
#guid: defaultguid

###V2WORK, these should just be set as default listed in the documentation
# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})

###V2WORK, these should just be set as default listed in the documentation
use_own_key: true
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true

###V2WORK THIS SHOULD MOVE INTO THE ROLE
# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"
