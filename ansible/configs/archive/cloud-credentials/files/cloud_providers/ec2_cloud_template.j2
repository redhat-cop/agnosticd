#jinja2: lstrip_blocks: "True"
---
AWSTemplateFormatVersion: "2010-09-09"
Resources:
  DnsZonePublic:
    Type: "AWS::Route53::HostedZone"
    Properties:
      Name: "{{ aws_dns_zone_public }}"
      HostedZoneConfig:
        Comment: "{{ aws_comment }}"

  DnsPublicDelegation:
    Type: "AWS::Route53::RecordSetGroup"
    DependsOn:
      - DnsZonePublic
    Properties:
    {% if HostedZoneId is defined %}
      HostedZoneId: "{{ HostedZoneId }}"
    {% else %}
      HostedZoneName: "{{ aws_dns_zone_root }}"
    {% endif %}
      RecordSets:
        - Name: "{{ aws_dns_zone_public }}"
          Type: NS
          TTL: {{ aws_dns_ttl_public }}
          ResourceRecords:
            "Fn::GetAtt":
              - DnsZonePublic
              - NameServers

  StudentUser:
    Type: AWS::IAM::User
    Properties:
      Groups:
        - students-ocp4-noop
      UserName: "{{ email | default(owner) }}-{{ guid }}"
      Policies:
        - PolicyName: AccessAll
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  StudentUserAccessKey:
      DependsOn: StudentUser
      Type: AWS::IAM::AccessKey
      Properties:
        UserName:
          Ref: StudentUser

Outputs:
  StudentUser:
    Value:
      Ref: StudentUser
    Description: IAM User for Student
  StudentUserAccessKey:
    Value:
      Ref: StudentUserAccessKey
    Description: IAM User for Student
  StudentUserSecretAccessKey:
    Value:
      Fn::GetAtt:
        - StudentUserAccessKey
        - SecretAccessKey
    Description: IAM User for Student
