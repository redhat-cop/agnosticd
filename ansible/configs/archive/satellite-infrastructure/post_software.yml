---
- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: false
  become: true
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

- name: Setup Workloads on Tower
  import_playbook: satellite_workloads.yml


- name: Deploy userinfo setup
  hosts: localhost
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: set domain for osp cloud provider
      set_fact:
        __subdomain: "{{ osp_cluster_dns_zone }}"
        __internal_domain: "example.com"
      when: cloud_provider == 'osp'

    - name: set domain for osp cloud provider
      set_fact:
        __subdomain: "{{ subdomain_base_suffix | regex_replace('^.') }}"
        __internal_domain: "{{ guid }}.internal"
      when: cloud_provider == 'ec2'

    - name: set user.info for user email template
      set_fact:
        __control_node: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ __subdomain }}"
        __control_user: "{{ student_name }}"
        __control_user_password: "{{ student_password }}"
        __satellite_server_url: "https://{{ groups['satellites'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ __subdomain }}"
        __satellite_user: "{{ satellite_admin }}"
        __satellite_user_password: "{{ satellite_admin_password }}"
        __service_account_user: "{{ control_user_name }}"

    - name: save copy of user's access details in {{ control_user_resource_dir_name }}
      become: true
      copy:
        content: >-
          access_details:
            internal_domain: "{{ __internal_domain }}"
            email: "{{ email }}"
            guid: "{{ guid }}"
            subdomain: "{{ __subdomain }}"
            satellite URL: "{{ __satellite_server_url }}"
            satellite_user: "{{ __satellite_user }}"
            satellite_password: "{{ __satellite_user_password }}"
            ssh_command: "ssh {{ __control_user }}@{{ __control_node }}"
            ssh_password: "{{ __control_user_password }}"
        dest: "/home/{{ __service_account_user }}/{{ control_user_resource_dir_name }}/access_details.yml"
        mode: 0644
        owner: root
        group: root
      delegate_to: "{{ groups['bastions'][0] }}"

    - name: User's login details
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Unique Identifier-- GUID: {{ guid }}"
        - "Domain for the cluster-- SUBDOMAIN: {{ __subdomain }}"
        - ""
        - "Satellite Web UI via browser:"
        - "Satellite URL: {{ __satellite_server_url }}"
        - "Satellite Username: {{ __satellite_user }}"
        - "Satellite Password: {{ __satellite_user_password }}"
        - ""
        - "To Access Control node via SSH:"
        - "ssh {{ __control_user }}@{{ __control_node }}"
        - "Enter ssh password when prompted: {{ __control_user_password }}"

    - name: Save user data
      agnosticd_user_info:
        data:
          guid: "{{ guid }}"
          subdomain: "{{ __subdomain }}"
          ssh_command: "ssh {{ __control_user }}@{{ __control_node }}"
          ssh_password: "{{ __control_user_password }}"
          satellite URL: "{{ __satellite_server_url }}"
          satellite_user: "{{ __satellite_user }}"
          satellite_password: "{{ __satellite_user_password }}"


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:

    - debug:
        msg: "Post-Software checks completed successfully"
