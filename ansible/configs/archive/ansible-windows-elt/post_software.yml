- name: Step 00xxxxx post software
  hosts: support
  gather_facts: False
  become: yes
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

- name: Configure windows AD on first windows machine
  hosts:
    - windows[0]
  gather_facts: False
  tags:
    - step004
    - common_tasks
    - windows_tasks
  roles:
    - { role: "windows-ad", when: hostvars.localhost.install_win_ad | bool }

  tasks:
    - name: Reboot upon promotion
      win_reboot:
      when: hostvars.localhost.install_win_ad | bool

    - name: Wait for connection
      wait_for_connection:
      when: hostvars.localhost.install_win_ad | bool


- name: Post tower installation task
  hosts: towers
  gather_facts: false
  become: yes
  tags:
    - lets_encrypt_tasks
  tasks:

    - name: Let's encrypt nginx
      include_tasks: lets-encrypt-nginx.yml


- name: bastion tasks post software.yml
  hosts: bastions
  gather_facts: false
  become: yes
  tags:
    - post_bastion_tasks
  tasks:

    - name: Create control-user
      include_role: 
        name: control-user

    - name: Configure gitlab server configuration
      include_role:
        name: gitlab-config
      vars:
        gitlab_server_root_token: "{{ hostvars['localhost']['strong_login_password'] }}"
      tags:
        - configure-gitlab
    
    - name: Inject tower license
      uri:
        url: https://{{ groups['towers'][0] }}/api/v2/config/
        user: admin
        password: "{{ tower_admin_password }}"
        method: POST
        body_format: json
        force_basic_auth: yes
        validate_certs: false
        body: '{{ tower_license }}'
          

- name: Deploy user setup
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - step005
  tasks:
    - name: osp user.info
      when: cloud_provider == 'osp'
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access Gitlab via browser:"
            - "Gitlab URL: http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Gitlab Username: {{ control_user_name }}"
            - "Gitlab Password: {{ gitlab_server_root_password }}"
            - ""
            - "To Access Ansible Tower console via browser:"
            - "Ansible Tower URL: https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Ansible Tower Username: admin"
            - "Ansible Tower Admin Password: {{ tower_admin_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
            - "Enter ssh password when prompted: {{ student_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              gitlab_url: "http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              gitlab_username: "{{ control_user_name }}"
              gitlab_password: "{{ gitlab_server_root_password }}"
              tower_url: "https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              tower_admin_user: "admin"
              tower_admin_password: "Ansible Tower Admin Password: {{ tower_admin_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}.{{ osp_cluster_dns_zone }}"
              ssh_password: "{{ student_password }}"

    - name: ec2 user.info
      when: cloud_provider == 'ec2'
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To Access Gitlab via browser:"
            - "Gitlab URL: http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Gitlab Username: {{ control_user_name }}"
            - "Gitlab Password: {{ gitlab_server_root_password }}"
            - ""
            - "To Access Ansible Tower console via browser:"
            - "Ansible Tower URL: https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Ansible Tower Username: admin"
            - "Ansible Tower Admin Password: {{ tower_admin_password }}"
            - ""
            - "To Access Control node via SSH:"
            - "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
            - "Enter ssh password when prompted: {{ student_password }}"

        - name: Save user data
          agnosticd_user_info:
            data:
              gitlab_url: "http://{{ groups['utilities'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              gitlab_username: "{{ control_user_name }}"
              gitlab_password: "{{ gitlab_server_root_password }}"
              tower_url: "https://{{ groups['towers'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              tower_admin_user: "admin"
              tower_admin_password: "Ansible Tower Admin Password: {{ tower_admin_password }}"
              ssh_command: "ssh {{ student_name }}@{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
              ssh_password: "{{ student_password }}"


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
