---
# -------------------------------------------------------------------
# Default Variables for OpenStack
# -------------------------------------------------------------------

# The type of cloud provider this will be deployed to
cloud_provider: osp

# Authenication credentials for OpenStack in order to create the things.
# These should be included with your secrets, but are listed here for reference
# osp_auth_url:
# osp_auth_username:
# osp_auth_password:
# osp_auth_cloud:
# osp_auth_project_domain: #usually set to "default"
# osp_auth_user_domain: #usually set to "default"

# This is an account that must exist in OpenStack.
# It is used to create projects, access, Heat templates
admin_user: opentlc-mgr

# This is the user that Ansible will use to connect to the nodes it is
# configuring from the admin/control host
ansible_user: cloud-user

# -------------------------------------------------------------------
# OpenStack Infrastructure
# -------------------------------------------------------------------

# See cloud_providers/osp_default_vars.yml
# See roles-infra/infra-osp-project-create/defaults/main.yml

# openshift-install will try to pull in a copy of RHCOS for every cluster
# and store it in Glance. These vars will let you override that behaviour
# and use an existing image.
# rhcos_image_name: rhcos-ocp43

# -------------------------------------------------------------------
# OpenStack Project
# -------------------------------------------------------------------

# The name of the project that will be created in OpenStack for the user
osp_project_name: "{{ guid }}-project"

# The name of the cloud where ocp-cluster will be created
osp_cloud_name: "{{ osp_project_name }}"

# Set this to true if you need to create a new project in OpenStack
# This should almost always be set to true for OpenShift installations
# If it is set to false, the {{ osp_project_name }} must already exist and
# should be able to run whatever you are deploying
osp_project_create: true

# Quotas to set for new project that is created
quota_num_instances: 15
quota_num_cores: 92
quota_memory: 418000 # in MB
quota_num_volumes: 35
quota_volumes_gigs: 6000
#quota_loadbalancers: #when Octavia is available
#quota_pool: #when Octavia is available
quota_networks: 3
quota_subnets: 3
quota_routers: 3
quota_fip: 10
quota_sg: 10
quota_sg_rules: 100

# -------------------------------------------------------------------
# OpenStack SWIFT
# -------------------------------------------------------------------

# This needs to be true for 4.3 and earlier.
# For OpenShift 4.4 and later it can be false
osp_use_swift: true

# -------------------------------------------------------------------
# OpenStack Networking
# -------------------------------------------------------------------

# The domain that you want to add DNS entries to
# Should come from the account settings
# osp_cluster_dns_zone: FROMSECRET

# The dynamic DNS server you will add entries to.
# NOTE: This is only applicable when {{ use_dynamic_dns}} is true
# Should come from the account settings
# osp_cluster_dns_server: FROMSECRET

# Whether to wait for an ack from the DNS servers before continuing
wait_for_dns: true

# Authenticaion for DDNS, Must be set in secrets
# ddns_key_name:
# ddns_key_algorithm:                # default value set to: "hmac-md5"
# ddns_secret_name:

# The base domain
# osp_cluster_dns_zone needs to come from secrets
# subdomain_base_suffix: "{{ osp_cluster_dns_zone }}"
ocp4_base_domain: "{{ osp_cluster_dns_zone }}"

# If you are deploying OpenShift, this should be set to the network that you
# want to use and will be used to create security groups.
# It will pull the subnet CIDR from the defined network below, based on the
# name you define for {{ ocp_network }}
ocp_network: "ocp"
ocp_network_subnet_cidr: "{{ networks | json_query(query_subnet_cidr) | first }}"
query_subnet_cidr: "[?name=='{{ ocp_network }}'].subnet_cidr"

# Set this to true if you want a Floating IPs provisioned for
# an OpenShift on OpenStack install
# This will provision an API and Ingress FIP
openshift_fip_provision: true

# This requires DDNS or other DNS solution configured
# If enabled, it will add DNS entries for the API and Ingress FIPs
openshift_fip_dns: true

# The external network in OpenStack where the floating IPs (FIPs) come from
provider_network: external

# Provision Floating IPs for API and Ingress
additional_fips:
  ocp_api_fip:
    description: "API {{ cluster_name }}.{{ ocp4_base_domain }}"
    network: "{{ provider_network }}"
  ocp_ingress_fip:
    description: "Ingress {{ cluster_name }}.{{ ocp4_base_domain }}"
    network: "{{ provider_network }}"

# A list of the private networks and subnets to create in the project
# You can create as many as you want, but at least one is required.
# Use the name of the networks where appropriate in the instance list
networks:
  - name: ocp
    shared: "false"
    subnet_cidr: 192.168.47.0/24
    gateway_ip: 192.168.47.1
    allocation_start: 192.168.47.10
    allocation_end: 192.168.47.254
    dns_nameservers: []
    create_router: true

# Security groups and associated rules. This will be provided
#when the Heat template is generated separate groups and rules

# -------------------------------------------------------------------
# OpenStack Instances
# -------------------------------------------------------------------

# Bastion Configuration
__image: "rhel-8.2"
__instance_type: "4c16g30d"
bastion_instance_type: "4c16g30d"
bastion_instance_image: "rhel-8.2"
# Root Filesystem Size
bastion_rootfs_size: 50

# Instance Types to be passed to OpenShift Installer
master_instance_type: 4c16g30d
worker_instance_type: 16c64g100d

# -------------------------------------------------------------------
# OpenStack Glance Image
# -------------------------------------------------------------------
# If this variable is set then platform.openstack.clusterOSImage will be set
# to the value of the variable. The image will need to exist in Glance
# If this variable is not set then the IPI installer will download the
# correct image (in QCOW2 format) and upload to glance.
#rhcos_image_name: rhcos-ocp45

# Instances to be provisioned in new project
# Provide these as a list.
# Each instance type can have any number of replicas deployed with the same
# configuration.
# Metadata in OpenStack is equivelent to tags in AWS
# These instances will be created with Cinder persistent volumes
security_groups:
  - name: WebSG
    rules:
      - name: WebSGHTTPPort
        description: "Allow HTTP port"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: WebSGHTTPsPort
        description: "Allow HTTPs port"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: WebSGGrafanaPort
        description: "Allow Grafana port"
        from_port: 3000
        to_port: 3000
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: WebSGCockpitPort
        description: "Allow Cockpit port"
        from_port: 9090
        to_port: 9090
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: CephSG
    rules:
      - name: CephSGAllTCPPort
        description: "Allow All TCP port"
        from_port: 1
        to_port: 65535
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: CephSGAllUDPPort
        description: "Allow All UDP port"
        from_port: 1
        to_port: 65535
        protocol: udp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: HostSGTCP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: tcp
        from_group: HostSG
        rule_type: Ingress

      - name: HostSGUDP
        description: "Allow everything from HostSG nodes"
        from_port: 1
        to_port: 65535
        protocol: udp
        from_group: HostSG
        rule_type: Ingress

instances:
  - name: bastion
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ bastion_instance_image | default(__image) }}"
    flavor:
      osp: "{{ bastion_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "function"
        value: "bastion"
      - key: "user"
        value: "{{ student_name }}"
      - key: "project"
        value: "{{ project_tag }}"
      - key: "ostype"
        value: "linux"
      - key: "Purpose"
        value: "{{ purpose }}"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    network: ocp
    security_groups:
      - BastionSG
      - WebSG
      - HostSG

  - name: cephnode
    count: "{{ cephnode_instance_count | default(3) }}"
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image: "{{ cephnode_instance_image | default(__image) }}"
    flavor:
      osp: "{{ cephnode_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "cephnodes"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    network: ocp
    volumes:
      - volume_size: 100
      - volume_size: 100
      - volume_size: 100
    security_groups:
      - DefaultSG
      - CephSG
      - HostSG
