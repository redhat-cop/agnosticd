# vim: set ft=yaml.ansible
---
- name: Step 005 Post Software
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
  - step005
  - post_software
  tasks:
  - name: Entering the summit-hybrid-cloud-binder post_software.yml
    debug:
      msg:
      - Entering the summit-hybrid-cloud-binder post_software.yml

  - name: add aws_hub to inventory
    ansible.builtin.add_host:
      name: "{{ aws_hub_provision_data.bastion_public_hostname }}"
      groups: ohc_hub
      ansible_connection: ssh
      # need full path to key because not creating ssh_config file
      ansible_ssh_private_key_file: "~/.ssh/opentlc_admin_backdoor.pem"
      ansible_user: "ec2-user"
      remote_user: "ec2-user"
        # ansible_ssh_extra_args: "{{ ansible_ssh_extra_args|d() }} -F {{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"

  - name: add aws_dev_a to inventory
    ansible.builtin.add_host:
      name: "{{ aws_dev_a_provision_data.bastion_public_hostname }}"
      groups: ohc_aws_dev_a
      ansible_connection: ssh
        # ansible_ssh_extra_args: "{{ ansible_ssh_extra_args|d() }} -F {{output_dir}}/{{ env_type }}_{{ guid }}_ssh_conf"
      ansible_ssh_private_key_file: "~/.ssh/opentlc_admin_backdoor.pem"
      ansible_user: "ec2-user"
      remote_user: "ec2-user"

  - name: Logging into Hub
    k8s_auth:
      host: "{{ aws_hub_provision_data.openshift_api_url }}"
      username: "{{ aws_hub_provision_data.openshift_cluster_admin_username }}"
      password: "{{ aws_hub_provision_data.openshift_cluster_admin_password }}"
      validate_certs: false
    register: __r_hub
    retries: 240
    delay: 15
    until:
    - __r_hub.k8s_auth.api_key is defined

  - name: Logging into Azure OCP4 Dev A
    k8s_auth:
      host: "{{ azure_dev_a_provision_data.openshift_api_url }}"
      username: "{{ aws_dev_a_provision_data.openshift_cluster_admin_username }}"
      password: "{{ aws_dev_a_provision_data.openshift_cluster_admin_password }}"
      validate_certs: false
    register: __r_azure_dev_a
    retries: 240
    delay: 15
    until:
    - __r_azure_dev_a.k8s_auth.api_key is defined

  - name: Logging into AWS OCP4 Dev A
    k8s_auth:
      host: "{{ aws_dev_a_provision_data.openshift_api_url }}"
      username: "{{ aws_dev_a_provision_data.openshift_cluster_admin_username }}"
      password: "{{ aws_dev_a_provision_data.openshift_cluster_admin_password }}"
      validate_certs: false
    register: __r_aws_dev_a
    retries: 240
    delay: 15
    until:
    - __r_aws_dev_a.k8s_auth.api_key is defined

  - name: Import clusters into hub
    when:
      - hybrid_cloud_binder_import_clusters_enable is true
    block:

    - name: create namespaces on hub for dev clusters
      k8s:
        host: "{{ __r_hub.k8s_auth.host }}"
        username: "{{ __r_hub.k8s_auth.username }}"
        api_key: "{{ __r_hub.k8s_auth.api_key }}"
        validate_certs: false
        state: present
        kind: Namespace
        name: "{{ item }}"
        api_version: v1
      loop:
      - 'aws-dev-a'
      - 'azure-dev-a'

    - name: Import AWS OCP4 Cluster A to Hub
      vars:
        __managed_cluster_name: 'aws-dev-a'
        __managed_cluster_token: "{{ __r_aws_dev_a.k8s_auth.api_key }}"
        __managed_cluster_api_url: "{{ __r_aws_dev_a.k8s_auth.host }}"
      k8s:
        host: "{{ __r_hub.k8s_auth.host }}"
        username: "{{ __r_hub.k8s_auth.username }}"
        api_key: "{{ __r_hub.k8s_auth.api_key }}"
        validate_certs: false
        state: present
        definition: "{{ lookup('template', item ) | from_yaml }}"
      loop:
      - './templates/managed-cluster.yaml.j2'
      - './templates/auto-import-secret.yaml.j2'
      - './templates/klusterlet-addon-config.yaml.j2'
      register: __r_import_aws_dev_a
      retries: 240
      delay: 15
        # TODO: need a better test
        #until:
        #- __r_import_aws_dev_a is defined


    - name: Import Azure OCP4 Cluster A to Hub
      vars:
        __managed_cluster_name: 'azure-dev-a'
        __managed_cluster_token: "{{ __r_azure_dev_a.k8s_auth.api_key }}"
        __managed_cluster_api_url: "{{ __r_azure_dev_a.k8s_auth.host }}"
      k8s:
        host: "{{ __r_hub.k8s_auth.host }}"
        username: "{{ __r_hub.k8s_auth.username }}"
        api_key: "{{ __r_hub.k8s_auth.api_key }}"
        validate_certs: false
        state: present
        definition: "{{ lookup('template', item ) | from_yaml }}"
      loop:
      - './templates/managed-cluster.yaml.j2'
      - './templates/auto-import-secret.yaml.j2'
      - './templates/klusterlet-addon-config.yaml.j2'
      register: __r_import_azure_dev_a
      retries: 240
      delay: 15
        # TODO: need a better test
        #until:
        #- __r_import_azure_dev_a is defined

    - name: Validate Clusters Joined - aws-dev-a
      k8s_info:
        host: "{{ __r_hub.k8s_auth.host }}"
        username: "{{ __r_hub.k8s_auth.username }}"
        api_key: "{{ __r_hub.k8s_auth.api_key }}"
        validate_certs: false
        api_version: cluster.open-cluster-management.io/v1
        kind: managedcluster
        name: aws-dev-a
        namespace: aws-dev-a
      register: __r_wait_aws_dev_a
      ignore_errors: true
      retries: 240
      delay: 15
      until:
      - __r_wait_aws_dev_a.resources is defined
      - __r_wait_aws_dev_a.resources | length | int > 0
      - __r_wait_aws_dev_a.resources[0].status is defined
      - __r_wait_aws_dev_a.resources[0].status.conditions is defined
      - ( __r_wait_aws_dev_a.resources[0].status | to_json | from_json |
        json_query('conditions[?type == `ManagedClusterConditionAvailable`].status') | join ) == "True"

    - name: Validate Clusters Joined - azure-dev-a
      ignore_errors: true
      k8s_info:
        host: "{{ __r_hub.k8s_auth.host }}"
        username: "{{ __r_hub.k8s_auth.username }}"
        api_key: "{{ __r_hub.k8s_auth.api_key }}"
        validate_certs: false
        api_version: cluster.open-cluster-management.io/v1
        kind: managedcluster
        name: azure-dev-a
        namespace: azure-dev-a
      register: __r_wait_azure_dev_a
      retries: 240
      delay: 15
      until:
      - __r_wait_azure_dev_a.resources is defined
      - __r_wait_azure_dev_a.resources | length | int > 0
      - __r_wait_azure_dev_a.resources[0].status is defined
      - __r_wait_azure_dev_a.resources[0].status.conditions is defined
      - ( __r_wait_azure_dev_a.resources[0].status | to_json | from_json |
        json_query('conditions[?type == `ManagedClusterConditionAvailable`].status') | join ) == "True"

- name: Step 005 Post Software - Cloud name 
  hosts: ohc_hub
  gather_facts: false
  tasks:

  - name: Change local-cloud to vmware
    command: >-
      oc patch ManagedCluster local-cluster
      -p='[{"op": "replace", "path": "/metadata/labels/cloud", "value":"vmware"}]'
      -n open-cluster-management
      --type json

- name: Step 005 Post Software - Report to Cloudforms
  hosts: localhost
  connection: local
  become: false
  gather_facts: false
  tags:
  - step005
  - post_software
  tasks:

  - name: Print string expected by Cloudforms
    debug:
      msg: "Post-Software checks completed successfully"

  - name: Exiting the summit-hybrid-cloud-binder post_software.yml
    debug:
      msg:
      - Exiting the summit-hybrid-cloud-binder post_software.yml
...
