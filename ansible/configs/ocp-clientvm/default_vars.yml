###### VARIABLES YOU SHOULD CONFIGURE FOR YOUR DEPLOYEMNT
###### OR PASS as "-e" args to ansible-playbook command

## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another "just like it"
guid: defaultguid

# Project Tag for all generated resources
project_tag: "{{ env_type }}-{{ guid }}"

# osrelease determines if the OCP3 or OCP4 ClientVM is installed.
# osrelease >=4.0 ==> OCP 4, osrelease < 4.0 ==> OCP 3
# osrelease also determins which RHEL Repos to use
# Specific tool versions can be set to override the default
osrelease: '4.3.0'
repo_version: '4.3'

# Ruby and 3scale ToolBox gem is installed. 
install_ruby: false
install_3scale: false


# Software Versions:
# Specified in ocp-client-vm role defaults. Can be overridden with specific
# versions if necessary
# https://mirror.openshift.com/pub/openshift-v4/clients/ocp/
ocp_clientvm_oc_version: "{{ osrelease }}"
# ocp_clientvm_oc_version: '4.3.0'
# ocp_clientvm_oc_version: '3.11.154'

# OpenShift 4 specific software (only installed when Client Version >= 4.0)
# https://mirror.openshift.com/pub/openshift-v4/clients/odo/
# ocp_clientvm_odo_version: 'v1.1.0'
# https://mirror.openshift.com/pub/openshift-v4/clients/helm/
# ocp_clientvm_helm_version: 'v3.0.0'
# https://github.com/tektoncd/cli/releases (without 'v')
# ocp_clientvm_tkn_version: '0.6.0'
# https://github.com/knative/client/releases
# ocp_clientvm_kn_version: 'v0.12.0'

# Supplemental Software
# Specified in ocp-client-vm role defaults. Can be overridden.
# https://github.com/istio/istio/releases
# ocp_clientvm_istioctl_version: '1.1.17'
# https://maven.apache.org/download.cgi
# (needs to be in gpte-public S3 bucket to prevent download errors)
# ocp_clientvm_maven_version: '3.6.3'

# Docker version and settings
docker_version: '1.13.1'
docker_size: '200'

# The next flag is 1 by default. If it is set to more than 1 then instead of creating
# clientvm.guid.baseurl it will create clientvm{1..num_users}.guid.baseurl
num_users: 1

install_bastion: true
install_common: true
install_opentlc_integration: true
install_ipa_client: false

# Install a user id 'student'. If install_student_user=true then a global variable
# student_password=password needs to be provided with the password to set for the user student
install_student_user: false

# FTL is used for grading and solving. It will pull in the external ftl-injector role.
# This might be enabled when we have solvers to run or graders for ILT
# Define the FTL Injector Tag
ftl_injector_tag: "v0.17.0"
ftl_use_python3: true

### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})

use_own_key: true
env_authorized_key: "{{guid}}key"
key_name: "default_key_name"
ansible_ssh_private_key_file: ~/.ssh/{{key_name}}.pem
set_env_authorized_key: true

# Is this running from Red Hat Ansible Tower
tower_run: false

### Common Host settings
repo_method: file # Other Options are: file, satellite and rhn

# Do you want to run a full yum update
update_packages: true

#If using repo_method: satellite, you must set these values as well.
# satellite_url: satellite.example.com
# satellite_org: Sat_org_name
# satellite_activationkey: "rhel7basic"

# Packages to install
common_packages:
- unzip
- bash-completion
- tmux
- bind-utils
- wget
- nano
- ansible
- git
- vim-enhanced
- httpd-tools
- openldap-clients
- podman
- tree

# Which RHEL Repos to enable.
rhel_repos:
- rhel-7-server-rpms
- rhel-7-server-extras-rpms
- rhel-7-server-ansible-2.8-rpms

cloud_tags:
  env_type: "{{ env_type }}"
  guid: "{{ guid }}"
  course_name: "{{ course_name | d('unknown') }}"
  platform: "{{ platform | d('unknown') }}"
