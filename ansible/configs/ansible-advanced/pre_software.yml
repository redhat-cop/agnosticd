---
- name: Step 003 Pre Software
  hosts: localhost
  gather_facts: false
  become: false
  tasks:
    - debug:
        msg: "Step 003 Pre Software"

    - import_role:
        name: infra-local-create-ssh_key
      when: set_env_authorized_key | bool


# - name: Setup Strong password
#   hosts: localhost,bastions
#   gather_facts: false
#   become: false
#   tasks:
#     - name: setup tower strong password on localhost
#       when: 
#         - software_to_deploy | d('None') != 'tower'
#         - inventory_hostname == 'localhost'
#       block:
#       - name: Setup strong tower admim password
#         set_fact:
#           tower_admin_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"

#       - name: Print tower admin initial password
#         debug: 
#           msg: "Tower_admin_password: {{ tower_admin_password }}"
#           verbosity: 2
    
#     - name: setup on bastion
#       when: 
#         - software_to_deploy | d('None') == 'tower'
#         - inventory_hostname in groups['bastions']
#       block:
#       - name: Setup strong tower admim password
#         set_fact:
#           tower_admin_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"

#       - name: Print tower admin initial password
#         debug: 
#           msg: "Tower_admin_password: {{ tower_admin_password }}"
#           verbosity: 2


- name: Configure all hosts with Repositories
  hosts: all
  become: true
  tags:
    - step004
    - common_tasks
  tasks:
    - import_role:
        name: set-repositories 
      when: repo_method is defined
    
    - import_role: 
        name: set_env_authorized_key
      when: set_env_authorized_key | bool
      
    - name: Install epel repository
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present


- name: Configuring Bastion Hosts
  hosts: bastions
  become: true
  tags:
    - step004
    - bastion_tasks
  tasks:
    - import_role: 
        name: common
      when: install_common | bool

    - import_role: 
        name: bastion
      when: install_bastion | bool

    - import_role: 
        name: bastion-student-user 
      when: install_student_user | bool

    - import_role: 
        name: bastion-opentlc-ipa
      when: install_ipa_client | bool

    - name: print out user.info
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "To access bastion via SSH:"
        - "ssh {{ student_name }}@control.{{ guid }}{%if cloud_provider == 'ec2' %}{{ subdomain_base_suffix }}{% elif cloud_provider == 'osp' %}.{{ osp_cluster_dns_zone }}{% endif %}"
        - "Enter ssh password when prompted: {{ student_password }}"
        
    - name: Save user data
      agnosticd_user_info:
        data:
          ssh_command: "ssh {{ student_name }}@control.{{ guid }}{%if cloud_provider == 'ec2' %}{{ subdomain_base_suffix }}{% elif cloud_provider == 'osp' %}.{{ osp_cluster_dns_zone }}{% endif %}"
          ssh_password: "{{ student_password }}"

    - name: Create lab-setup directory
      file: 
        dest: "{{ lab_content_dir }}"
        state: directory
        recurse: yes
        owner: root
        group: users
        mode: 0755

    - name: setup ssh keys for {{ student_name }} user
      when: 
        - install_student_user | bool
        - set_env_authorized_key | bool  
      block:
        - name: create /home/{{ student_name }}/.ssh
          file:
            dest: /home/{{ student_name }}/.ssh
            mode: 0700
            owner: "{{ student_name }}"
            group: "users"
            state: directory

        - name: copy the environment .pem key
          become: true
          copy:
            src: "{{ output_dir }}/{{ env_authorized_key }}"
            dest: "/home/{{ student_name }}/.ssh/{{env_authorized_key}}.pem"
            owner: "{{ student_name }}"
            group: "users"
            mode: 0400
          
        - name: copy the environment .pub key
          become: true
          copy:
            src: "{{ output_dir }}/{{ env_authorized_key }}.pub"
            dest: "/home/{{ student_name }}/.ssh/{{env_authorized_key}}.pub"
            owner: "{{ student_name }}"
            group: "users"
            mode: 0400

        - name: copy over host .ssh/config Template
          become: true
          copy:
            src: "{{ output_dir }}/ssh-config-{{ env_type }}-{{ guid }}"
            dest: /home/{{ student_name }}/.ssh/config
            owner: "{{ student_name }}"
            group: "users"
            mode: 0400


- name: PreSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - flight_check
  tasks:
    - debug:
        msg: "Pre-Software checks completed successfully"
