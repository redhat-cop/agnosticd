- name: Step 00xxxxx post software
  hosts: localhost
  gather_facts: False
  become: yes
  tasks:
    - debug:
        msg: "Post-Software tasks Started"

# - name: Step lab post software deployment
#   hosts: bastions
#   gather_facts: false
#   become: yes
#   tags:
#     - post_bastion_tasks

#   tasks:
#     - name: Copy Tower License File
#       copy:
#         content: "{{ tower_license | from_json }}"
#         dest: "{{ lab_content_dir }}/license.txt"
#         mode: 0644

#     - name: Copy Openstack PEM key
#       blockinfile:
#         path: "{{ lab_content_dir }}/openstack.pem"
#         block: |
#           {{ openstack_pem | b64decode }}
#         mode: 0440
#         state: present
#         create: yes

#     - name: Remove first and last lines from Openstack Pem key
#       lineinfile:
#         path: "{{ lab_content_dir }}/openstack.pem"
#         regexp: '^#(.*)$'
#         state: absent

#     - name: Copy Openstack Pub key
#       blockinfile:
#         path: "{{ lab_content_dir }}/openstack.pub"
#         block: |
#           {{ openstack_pub | b64decode }}
#         mode: 0440
#         state: present
#         create: yes

#     - name: Remove first and last lines from Openstack Pub key
#       lineinfile:
#         path: "{{ lab_content_dir }}/openstack.pub"
#         regexp: '^#(.*)$'
#         state: absent

# - name: Deploy user setup
#   hosts: localhost
#   connection: local
#   gather_facts: false
#   tags:
#     - step005
#   tasks:
#     - name: osp user.info
#       when: cloud_provider == 'osp'
#       block:
#         - name: print out user.info
#           agnosticd_user_info:
#             msg: "{{ item }}"
#           loop:
#             - "To access frontend via browser:"
#             - "Tower URL: http://tower0.{{ guid }}.{{ osp_cluster_dns_zone }}"
#             - "Tower Login: admin"
#             - "Tower Login Password: {{ hostvars['bastion']['tower_admin_password'] }}"
#             - ""
#             - "To access bastion via SSH:"
#             - "ssh {{ student_name }}@bastion.{{ guid }}.{{ osp_cluster_dns_zone }}"
#             - "Enter ssh password when prompted: {{ hostvars['bastion']['student_password'] }}"
            
#         - name: Save user data
#           agnosticd_user_info:
#             data:
#               ssh_command: "ssh {{ student_name }}@bastion.{{ guid }}.{{ osp_cluster_dns_zone }}"
#               ssh_password: "{{ hostvars['bastion']['student_password'] }}"

    - name: ec2 user.info
      when: cloud_provider == 'ec2'
      block:
        - name: print out user.info
          agnosticd_user_info:
            msg: "{{ item }}"
          loop:
            - "To access bastion via SSH:"
            - "ssh {{ student_name }}@control.{{ guid }}{{ subdomain_base_suffix }}"
            - "Enter ssh password when prompted: {{ hostvars[groups['bastions'][0]]['student_password'] }}"
            
        - name: Save user data
          agnosticd_user_info:
            data:
              ssh_command: "ssh {{ student_name }}@control.{{ guid }}{{ subdomain_base_suffix }}"
              ssh_password: "{{ hostvars[groups['bastions'][0]]['student_password'] }}"


- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
