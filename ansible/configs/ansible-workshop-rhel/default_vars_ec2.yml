---
### AWS EC2 Environment settings

aws_region: us-east-1

## Networking DNS and Route53 - AWS

subdomain_base_suffix: ".example.opentlc.com"
subdomain_base_short: "{{ guid }}"
subdomain_base: "{{ subdomain_base_short }}{{ subdomain_base_suffix }}"
zone_internal_dns: "{{ guid }}.internal."
chomped_zone_internal_dns: "{{ guid }}.internal"

HostedZoneId: Z3IHLWJZOU9SRT            # Route 53 Zone ID (AWS)

  #vscode_server_hostname: "{{ groups['bastions'][0] | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
control_user_ssh_config: ./files/ssh_config.j2

student_total: 2
student_password: r3dh4t1!

rhel_workshop_image_default: RHEL84GOLD
rhel_workshop_instance_type: "t3.micro"
rhel_workshop_default_instance_type: "t3.micro"
rhel_workshop_node_instance_type: "t3.micro"
rhel_workshop_node_instance_type: "t3.micro"

rhel_workshop_node_count: 3
instances:

  - name: bastion                       # bastion
    count: 1 
    unique: true
    public_dns: true
    floating_ip: true
    image: "{{ control_instance_image | default(rhel_workshop_image_default) }}"
    flavor:
      ec2: "{{ control_instance_type | default(rhel_workshop_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - WebSG # For code server

  - name: ansible                       # control node
    count: "{{ 1 * student_total }}"
    public_dns: true
    floating_ip: true
    image: "{{ control_instance_image | default(rhel_workshop_image_default) }}"
    flavor:
      ec2: "{{ control_instance_type | default(rhel_workshop_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "control"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
    security_groups:
      - BastionSG
      - WebSG # For code server

  - name: node
    count: "{{ rhel_workshop_node_count * student_total }}"
    public_dns: true
    dns_loadbalancer: false
    image: "{{ node_instance_image | default(rhel_workshop_image_default) }}"
    flavor:
      ec2: "{{ rhel_workshop_node_instance_type | default(rhel_workshop_default_instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "load_balancers"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG
      - HostSG

security_groups:

  - name: WebSG
    rules:
      - name: HTTPPorts
        description: "HTTP Public"
        from_port: 80
        to_port: 80
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

      - name: HTTPSPorts
        description: "HTTP Public"
        from_port: 443
        to_port: 443
        protocol: tcp
        cidr: "0.0.0.0/0"
        rule_type: Ingress

  - name: HostSG
    rules:
      - name: FromHostSG
        description: "Allow everything from HostSG nodes"
        from_port: 0
        to_port: 65535
        protocol: -1
        from_group: HostSG
        rule_type: Ingress

...
