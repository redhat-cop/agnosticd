#!/usr/bin/env bash

# Don't run as root user
if [ $UID -eq 0 ];
then
  echo "Do not run as root, exiting..."
  exit 1
fi

PURPOSE=$(basename $0)

if [[ ${PURPOSE} != "grade_lab" ]] && [[ $# -ne 2 ]];
then
  echo "Usage: ${PURPOSE} course-name lab-number"
  echo
  echo "lab-number in format 03_1"
  exit 1
fi

if [[ ${PURPOSE} == "grade_lab" ]] && [[ $# -ne 3 ]];
then
  echo "Usage: ${PURPOSE} course-name lab-number student-id"
  echo
  echo "lab-number in format 03_01"
  exit 1
fi

if [[ ${PURPOSE} == "grade_lab" ]];
then
  GERUND='grading'
fi

if [[ ${PURPOSE} == "solve_lab" ]];
then
  GERUND='solving'
fi

if [[ ${PURPOSE} == "reset_lab" ]];
then
  GERUND='resetting'
fi

COURSE_ID=$1
LAB_ID=$2

if [[ $# -eq 3 ]];
then
  STUDENT_ID=$3
fi

umask 0000 # Allow multiple users to over-write logs

# wrapper script for grading playbook for lab

# VIRTUALENV=/opt/virtualenvs/venv-${GERUND}
VIRTUALENV=/opt/virtualenvs/venv-grading

# You can set the FTL_REPO_HOME var in your environment to point
# to the repo you are developing in

if [ -z "$FTL_REPO_HOME" ]
then
    FTL_REPO_HOME=/opt/ftl-repo-clone/
fi

export GRADER_REPORT=/tmp/grading_dir/grading_report.txt
export LOG_FILE=/tmp/ansible_${GERUND}.log

# Clean up - next bit is a job for ansible

#if [ -f ${LOG_FILE} ];
#then
#  mv  ${LOG_FILE} ${LOG_FILE}-previous
#fi

# Make sure ansible finds the correct roles if it loads a new ansible.cfg

export ANSIBLE_ROLES_PATH=${FTL_REPO_HOME}/roles:${FTL_REPO_HOME}/roles-ftl-runtime
export FILE=${FTL_REPO_HOME}/courses/${COURSE_ID}/ansible.cfg

if [ -f $FILE ]; then
   export ANSIBLE_CONFIG=${FILE}
fi

# Activate a protected virtualenv with all dependencies and it's own ansible

echo "Starting ${PURPOSE} Process"
echo
if [[ ${PURPOSE}} != "grade_lab" ]];
then
  echo "Find logs in ${LOG_FILE}"
  echo
fi

source ${VIRTUALENV}/bin/activate

# Setup Tower exports

export TOWER_HOST=https://tower.ftl-tower-test.na.shared.opentlc.com
export TOWER_TOKEN=GcuQunIoPr7XGCvGy6lCCpFCygBPgw
export TOWER_VERIFY_SSL=false

( cd ${FTL_REPO_HOME};  ansible-playbook main.yml         \
  --vault-password-file=vars/.vault                       \
  -e @vars/global_vars.yml                                \
  -e @courses/${COURSE_ID}/course_vars.yml                \
  -e purpose=${PURPOSE}                                   \
  -e course_id=${COURSE_ID}                               \
  -e lab_id=${LAB_ID}                                     \
  -e student_id=${STUDENT_ID}    > ${LOG_FILE} 2>&1 )

if [ $? -ne 0 ]
then
  echo ${PURPOSE} ERROR: Failed to run sucessfully
  echo "${GERUND} Log (ansible): ${LOG_FILE}"
fi

# Output the error report

if [ ${PURPOSE} == "grade_lab" ]
then
  cat ${GRADER_REPORT}

  echo
  echo "Grading Report:        ${GRADER_REPORT}"
  echo "Grading Log (ansible): ${LOG_FILE}"
fi

if [ ${PURPOSE} == "solve_lab" ]
then
  echo "Solver has completed lab"
  echo "Find the log of activity in: ${LOG_FILE}"
fi

if [ ${PURPOSE} == "reset_lab" ]
then
  echo "Lab has been reset to starting point"
  echo "Find the log of activity in: ${LOG_FILE}"
fi

echo
echo "Finished ${PURPOSE} Process"
echo
