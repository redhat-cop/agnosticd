#!/usr/bin/env bash

# Don't run as root user
if [ $UID -eq 0 ];
then
  echo "Do not run as root, exiting..."
  exit 1
fi

PURPOSE=$(basename $0)

if [ $# -ne 3 ];
then  
  echo "Usage: ${PURPOSE} course-name lab-number student-id"
  echo
  echo "lab-number in format 03_01"
  exit 1
fi  

COURSE_NAME=$1
LAB_NUMBER=$2
STUDENT_ID=$3

# wrapper script for grading playbook for lab

VIRTUALENV=/opt/virtualenvs/venv-grading

# You can set the FTL_REPO_HOME var in your environment to point
# to the repo you are developing in
if [ -z "$FTL_REPO_HOME" ]
then
    FTL_REPO_HOME=/opt/ftl-repo-clone/
fi

export ERROR_REPORT=/tmp/opentlc_error.log
export SUCCESS_REPORT=/tmp/opentlc_success.log
export GRADE_REPORT=/tmp/grading_report.txt
export LOG_FILE=/tmp/opentlc_ansible.log
export GRADER_LOG=/tmp/opentlc_grader.log

# Clean up - next bit is a job for ansible

if [ -f ${GRADE_REPORT} ]; 
then
  mv  ${GRADE_REPORT} ${GRADE_REPORT}-previous
fi

if [ -f ${GRADER_LOG} ]; 
then
  mv  ${GRADER_LOG} ${GRADER_LOG}-previous
fi

if [ -f ${SUCCESS_REPORT} ]; 
then
  mv  ${SUCCESS_REPORT} ${SUCCESS_REPORT}-previous
fi

if [ -f ${LOG_FILE} ]; 
then
  mv  ${LOG_FILE} ${LOG_FILE}-previous
fi

if [ -f ${ERROR_REPORT} ]; 
then
  mv  ${ERROR_REPORT} ${ERROR_REPORT}-previous
fi

# Make sure ansible finds the correct roles if it loads a new ansible.cfg

export ANSIBLE_ROLES_PATH=${FTL_REPO_HOME}/roles:${FTL_REPO_HOME}/roles-ftl-runtime
export FILE=${FTL_REPO_HOME}/courses/${COURSE_NAME}/ansible.cfg

if [ -f $FILE ]; then
   export ANSIBLE_CONFIG=${FILE}
fi

# Activate a protected virtualenv with all dependencies and it's own ansible

echo "Starting ${PURPOSE} Process"
echo

source ${VIRTUALENV}/bin/activate

# Setup Tower exports

export TOWER_HOST=https://tower.ftl-tower-test.na.shared.opentlc.com
export TOWER_TOKEN=GcuQunIoPr7XGCvGy6lCCpFCygBPgw
export TOWER_VERIFY_SSL=false

( cd ${FTL_REPO_HOME};  ansible-playbook main.yml         \
  --vault-password-file=vars/.vault                       \
  -e @vars/global_vars.yml                                \
  -e @courses/${COURSE_NAME}/course_vars.yml              \
  -e course_name=${COURSE_NAME}                           \
  -e course_id=${COURSE_NAME}                             \
  -e purpose=${PURPOSE}                                   \
  -e lab_number=${LAB_NUMBER}                             \
  -e lab_id=${LAB_NUMBER}                                 \
  -e student_id=${STUDENT_ID}    > ${LOG_FILE} 2>&1 )

if [ $? -ne 0 ]
then
  echo ${PURPOSE} ERROR: Failed to run sucessfully
  echo "Grading Log (ansible): ${LOG_FILE}"
fi

# Output the error report

if [ ${PURPOSE} == "grade_lab" ] 
then  
  cat ${GRADE_REPORT}

  echo
  echo "Grading Report:        ${GRADE_REPORT}"
  echo "Grading Log (ansible): ${LOG_FILE}"
fi 

if [ ${PURPOSE} == "solve_lab" ] 
then  
  echo "Solver has completed lab"
fi 
if [ ${PURPOSE} == "reset_lab" ] 
then  
  echo "Lab has been reset to starting point"
fi 

echo
echo "Finished ${PURPOSE} Process"
echo
