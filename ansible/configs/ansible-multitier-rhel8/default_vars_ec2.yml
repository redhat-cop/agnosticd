---
### AWS EC2 Environment settings

### Route 53 Zone ID (AWS)
# This is the Route53 HostedZoneId where you will create your Public DNS entries
# This only needs to be defined if your CF template uses route53
#HostedZoneId: Z3IHLWJZOU9SRT
# The region to be used, if not specified by -e in the command line
#aws_region: us-east-1
# The key that is used to

## Networking (AWS)
subdomain_base_short: "{{ guid }}"
subdomain_base_suffix: ".example.opentlc.com"
subdomain_base: "{{ subdomain_base_short }}{{ subdomain_base_suffix }}"
zone_internal_dns: "{{ guid }}.internal."
chomped_zone_internal_dns: "{{ guid }}.internal"

## Environment Sizing
# Instance Type
__instance_type: "t3.medium"

#bastion_instance_type: "t3.medium"
# Image ID
# __image: RHELAMI
__image: RHEL82GOLD

control_user_ssh_config: ./files/ssh_config.j2

security_groups:
  - name: HostSG
    rules:
      - name: FromHostSG
        description: "Allow everything from HostSG nodes"
        from_port: 0
        to_port: 65535
        protocol: -1
        from_group: HostSG
        rule_type: Ingress

workstation_instance_image: "{{ ___image }}"
core_instance_image: "{{ ___image }}"
node1_instance_image: "{{ ___image }}"
node2_instance_image: "{{ ___image }}"
node3_instance_image: "{{ ___image }}"

###
instances:
  - name: bastion
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: true
    floating_ip: true
    image_id: "{{ workstation_instance_image | default(__image) }}"
    flavor:
      ec2: "{{workstation_instance_type | default(__instance_type) }}"
      osp: "{{workstation_instance_type | default(__instance_type) }}"
      azure: Standard_A2_V2
    tags:
      - key: "AnsibleGroup"
        value: "bastions"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    rootfs_size: "{{ rootfs_size_workstation }}"
    security_groups:
      - BastionSG

  - name: "core"
    count: "{{core_instance_count}}"
    public_dns: false
    image_id: "{{ core_instance_image | default(__image) }}"
    flavor:
      ec2: "{{core_instance_type | default(__instance_type) }}"
      osp: "{{core_instance_type | default(__instance_type) }}"
      azure: "Standard_A2_V2"
    tags:
      - key: "AnsibleGroup"
        value: "cores"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG

  - name: "node1"
    count: "{{node1_instance_count}}"
    public_dns: false
    image_id: "{{ node1_instance_image | default(__image) }}"
    flavor:
      ec2: "{{node1_instance_type | default(__instance_type) }}"
      azure: "Standard_A2_V2"
      osp: "{{node1_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "nodes"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG

  - name: "node2"
    count: "{{node2_instance_count}}"
    public_dns: false
    image_id: "{{ node2_instance_image | default(__image) }}"
    flavor:
      ec2: "{{node2_instance_type | default(__instance_type) }}"
      azure: "Standard_A2_V2"
      osp: "{{node2_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "nodes"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG

  - name: "node3"
    count: "{{node3_instance_count}}"
    public_dns: false
    image_id: "{{ node3_instance_image | default(__image) }}"
    flavor:
      ec2: "{{node3_instance_type | default(__instance_type) }}"
      azure: "Standard_A2_V2"
      osp: "{{node3_instance_type | default(__instance_type) }}"
    tags:
      - key: "AnsibleGroup"
        value: "nodes"
      - key: "ostype"
        value: "rhel"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    key_name: "{{key_name}}"
    security_groups:
      - DefaultSG
###

#instances:
#  - name: control
#    count: 1
#    unique: true
#    public_dns: true
#    dns_loadbalancer: true
#    floating_ip: true
#    image: "{{ bastion_instance_image | default(__image) }}"
#    flavor:
#      ec2: "{{ bastion_instance_type | default(__instance_type) }}"
#    tags:
#      - key: "AnsibleGroup"
#        value: "bastions"
#      - key: "ostype"
#        value: "linux"
#      - key: "instance_filter"
#        value: "{{ env_type }}-{{ email }}"
#    rootfs_size: "{{ rootfs_size_bastion | default(50)  }}"
#    security_groups:
#      - BastionSG

#  - name: "node"
#    count: "{{ node_instance_count | default(4) }}"
#    public_dns: true
#    dns_loadbalancer: false
#    image: "{{ node_instance_image | default(__image) }}"
#    flavor:
#      ec2: "{{ node_instance_type  | default(__instance_type) }}"
#    tags:
#      - key: "AnsibleGroup"
#        value: "nodes"
#      - key: "ostype"
#        value: "linux"
#      - key: "instance_filter"
#        value: "{{ env_type }}-{{ email }}"
#    security_groups:
#      - DefaultSG
#      - HostSG
