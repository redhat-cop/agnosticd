---
- when: stack_file == 'default'
  block:
    - name: Run infra-ec2-template-generate Role (target_regions)
      include_role:
        name: infra-ec2-template-generate
      vars:
        # TODO: try to set aws_region and host_suffix at the higher level
        aws_region: "{{ target_region }}"
        host_suffix: "{{ target_host_suffix }}"
        secondary_stack: yes
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ target_region }}"

    - set_fact:
        stack_deployed: false

    - name: Run infra-ec2-template-create Role (target_regions)
      include_role:
        name: infra-ec2-template-create
      vars:
        aws_region_loop: "{{ target_region }}"
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ target_region }}"

- when: stack_file != 'default'
  block:
    - name: Run infra-ec2-template-generate Role (target_regions)
      include_role:
        name: infra-ec2-template-generate
      vars:
        aws_region: "{{ target_region }}"
        host_suffix: "{{ target_host_suffix }}"
        secondary_stack: yes
        cloudformation_template_src: "../configs/{{ env_type }}/files/cloud_providers/{{ stack_file }}"
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ target_region }}"

    - name: Run infra-ec2-template-create Role (target_regions)
      include_role:
        name: infra-ec2-template-create
      vars:
        aws_region_loop: "{{ target_region }}"
        cloudformation_template: "{{ output_dir }}/{{ env_type }}.{{ guid }}.{{ cloud_provider }}_cloud_template_{{ target_region }}"

- name: report Cloudformation error (target_regions)
  fail:
    msg: "FAIL {{ project_tag }} Create Cloudformation"
  when: not cloudformation_out is succeeded
  tags:
    - provision_cf_template

- name: Run infra-ec2-create-inventory Role (target_regions)
  include_role:
    name: infra-ec2-create-inventory
  vars:
    aws_region: "{{ target_region }}"
    host_suffix: "{{ target_host_suffix }}"

- name: Run Common SSH Config Generator Role (target_regions)
  include_role:
    name: infra-common-ssh-config-generate
  vars:
    bastion_hostname: "bastion{{ target_host_suffix }}.{{ guid }}.internal"
    secondary_stack: yes
