---
- name: Authenticating for k8s module to work in workloads
  hosts: localhost
  gather_facts: false
  run_once: true
  become: false
  environment:
    KUBECONFIG: "{{ output_dir }}/{{ guid }}-kubeconfig"
    PATH: '{{ output_dir }}:/bin:/usr/bin:/usr/local/bin:/usr/sbin'
  tasks:
  - name: Dropping / as the last character in API url
    set_fact:
      az_aro4_public_api_fixed: "{{ az_aro4_public_api.stdout[:-1] }}"
  - name: Logging into ARO 4 with OpenShift CLI (oc)
    shell: >-
      oc login "{{ az_aro4_public_api_fixed }}"
      --username="kubeadmin"
      --password="{{ az_aro4_kubeadmin_password.stdout }}"
    register: az_aro4_auth_results
  - name: Logging into ARO 4 with k8s_auth module
    k8s_auth:
      host: "{{ az_aro4_public_api_fixed }}"
      username: "kubeadmin"
      password: "{{ az_aro4_kubeadmin_password.stdout }}"
    register: az_aro4_auth_results

- name: Adding users with htpasswd
  hosts: localhost
  gather_facts: false
  run_once: true
  become: false
  environment:
    KUBECONFIG: "{{ output_dir }}/{{ guid }}-kubeconfig"
    PATH: '{{ output_dir }}:/bin:/usr/bin:/usr/local/bin:/usr/sbin'
  tasks:
  - name: Setup HTPasswd Authentication
    block:
    - name: Generate user passwords
      when: ocp4_workload_authentication_htpasswd_user_password | default('') | length == 0
      set_fact:
        ocp4_workload_authentication_user_password: >-
          {{ lookup('password', '/dev/null chars=ascii_letters,digits '
             ~ 'length=' ~ ocp4_workload_authentication_htpasswd_user_password_length
          ) }}

    - name: Use provided user passwords
      when: ocp4_workload_authentication_htpasswd_user_password | default('') | length > 0
      set_fact:
        ocp4_workload_authentication_user_password: "{{ ocp4_workload_authentication_htpasswd_user_password }}"

    - name: Generate htpasswd hash for user passwords
      shell: >-
        htpasswd -nb "userN" "{{ ocp4_workload_authentication_user_password }}" | cut -d: -f2
      register: r_htpasswd_line

    - name: Set htpasswd user password hash
      set_fact:
        ocp4_workload_authentication_user_password_hash: "{{ r_htpasswd_line.stdout }}"
      when:
      - r_htpasswd_line is succeeded

    - name: Generate htpasswd file
      template:
        src: "htpasswd.j2"
        dest: "{{ output_dir }}/{{ guid }}-users.htpasswd"
        mode: 0664

    - name: Ensure htpasswd Secret is absent
      k8s:
        host: "{{ az_aro4_public_api_fixed }}"
        api_key: "{{ az_aro4_auth_results.k8s_auth.api_key }}"
        state: absent
        api_version: v1
        kind: Secret
        name: htpasswd-secret
        namespace: openshift-config

    - name: Create htpasswd secret from htpasswd file
      shell: >-
        oc create secret generic htpasswd-secret -n openshift-config
        --from-file=htpasswd={{ output_dir }}/{{ guid }}-users.htpasswd

    - name: Update OAuth Configuration
      k8s:
        host: "{{ az_aro4_public_api_fixed }}"
        api_key: "{{ az_aro4_auth_results.k8s_auth.api_key }}"
        state: present
        definition: "{{ lookup('file', item ) | from_yaml }}"
      loop:
      - oauth-htpasswd.yaml

    - name: Retrieve API server configuration (for API endpoint)
      k8s_facts:
        host: "{{ az_aro4_public_api_fixed }}"
        api_key: "{{ az_aro4_auth_results.k8s_auth.api_key }}"
        api_version: config.openshift.io/v1
        kind: Infrastructure
        name: cluster
      register: r_cluster

    - name: Print user information
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
      - ""
      - "HTPasswd Authentication is enabled on this cluster."
      - >-
        Users {{ ocp4_workload_authentication_htpasswd_user_base }}1 ..
        {{ ocp4_workload_authentication_htpasswd_user_base ~ ocp4_workload_authentication_htpasswd_user_count }} are
        created with password `{{ ocp4_workload_authentication_user_password }}`

    - name: Print user information for each user
      agnosticd_user_info:
        user: "{{ ocp4_workload_authentication_htpasswd_user_base }}{{ n }}"
        data:
          password: "{{ ocp4_workload_authentication_user_password }}"
          login_command: >-
            oc login -u {{ ocp4_workload_authentication_htpasswd_user_base }}{{ n }}
            -p {{ ocp4_workload_authentication_user_password }} {{ r_cluster.resources[0].status.apiServerURL }}
      loop: "{{ range(1, 1 + ocp4_workload_authentication_htpasswd_user_count | int) | list }}"
      loop_control:
        loop_var: n
