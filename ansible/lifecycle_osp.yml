---
- environment:
    OS_AUTH_URL: "{{ osp_auth_url }}"
    OS_USERNAME: "{{ osp_auth_username }}"
    OS_PASSWORD: "{{ osp_auth_password }}"
    OS_PROJECT_NAME: "{{ osp_project_name }}"
    OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
    OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"
  block:
    - when: ACTION == 'stop'
      block:
        - name: Gather instance facts
          os_server_facts:
            filters:
              metadata:
                guid: "{{ guid }}"
                env_type: "{{ env_type }}"
              vm_state: active
          register: r_osp_facts

        - when: r_osp_facts.ansible_facts.openstack_servers | length > 0
          block:
            - set_fact:
                all_instances: >-
                  {{ r_osp_facts.ansible_facts.openstack_servers
                  | json_query('[*].id') }}

            - name: Stop all servers
              command: openstack server stop {{ all_instances | join(' ') }}

    - when: ACTION == 'start'
      block:
        - name: Gather instance facts
          os_server_facts:
            filters:
              metadata:
                guid: "{{ guid }}"
                env_type: "{{ env_type }}"
              vm_state: stopped
          register: r_osp_facts

        - when: r_osp_facts.ansible_facts.openstack_servers | length > 0
          block:
            - set_fact:
                all_instances: >-
                  {{ r_osp_facts.ansible_facts.openstack_servers
                  | json_query('[*].id') }}

            - name: Start all servers
              command: openstack server start {{ all_instances | join(' ') }}

    - when: ACTION == 'status'
      block:
        - name: Get OSP facts using (guid, env_type) metadata
          os_server_facts:
            filters:
              metadata:
                guid: "{{ guid }}"
                env_type: "{{ env_type }}"
          register: r_instances

        - debug:
            var: r_instances

        - name: Print status information to a file
          copy:
            dest: "{{ output_dir }}/status.txt"
            content: |-
              {{ "%-30s" | format('Instance') }} State
              -------------------------------------------
              {% for instance in r_instances.ansible_facts.openstack_servers %}
              {{ "%-30s" | format(instance.name) }} {{ "%-10s" | format(instance.vm_state) }}
              {% endfor %}
