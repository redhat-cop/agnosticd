---
- name: Setup Nvidia Drivers and CUDA for RHEL
  when: ansible_distribution == 'RedHat'
  block:

    - name: Install EPEL
      ansible.builtin.dnf:
        name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm"
        state: present
        validate_certs: no
        disable_gpg_check: yes

    - name: Setup repos
      ansible.builtin.yum_repository:
        name: "{{ repo.name }}"
        description: "{{ repo.description }}"
        baseurl: "{{ repo.baseurl }}"
        enabled: "{{ repo.enabled | default(true) }}"
        gpgcheck: "{{ repo.gpgcheck | default(false) }}"
      loop: "{{ setup_nvidia_cuda_rhel_repos }}"
      loop_control:
        loop_var: repo

    - name: Install nvdia drivers and CUDA
      ansible.builtin.dnf:
        name: "{{ package }}"
        state: present
      loop: "{{  setup_nvidia_cuda_nvidia_rhel_dnf_packages }}"
      loop_control:
        loop_var: package

    - name: Set CUDA alternatives/cuda
      community.general.alternatives:
        name: cuda
        path: "/usr/local/cuda-{{ setup_nvidia_cuda_cuda_major_version }}-{{ setup_nvidia_cuda_cuda_minor_version }}"
        link: /etc/alternatives/cuda
      tags:
        - nvidia-alternatives

    - name: Reboot and build the kernel modules
      block:

        - name: Reboot the machine
          ansible.builtin.reboot:
            msg: "Reboot initiated by Ansible"
            connect_timeout: 5
            reboot_timeout: 600
            pre_reboot_delay: 0
            post_reboot_delay: 30
            test_command: uptime

        - name: Run DKMS autoinstall for nvidia modules
          ansible.builtin.command: dkms autoinstall
          register: r_dkms_result
          failed_when: 
            - r_dkms_result.rc != 0

- name: Install common AI centric toolchain packages
  ansible.builtin.dnf:
    name: "{{ package }}"
    state: present
  loop: "{{ setup_nvidia_cuda_common_dnf_packages }}"
  loop_control:
    loop_var: package
