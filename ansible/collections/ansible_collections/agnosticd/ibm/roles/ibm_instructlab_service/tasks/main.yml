---

- name: Deploy IBM infrastructure via Ansible and IBM CloudCollection
  when: >
    (ACTION == "create" or ACTION == "provision")
    and ibm_deploy_with_ansible | default(true) | bool
  block:

    - name: Include the scenario tasks to deploy the IBM infrastructure
      ansible.builtin.include_tasks:
        file: scenarios/ibm_instructlab_service_provision.yml
  
  become: false
  connection: local

- name: Delete IBM infrastructure via Ansible and IBM CloudCollection
  when: >
    ACTION == "destroy"
    and ibm_deploy_with_ansible | default(true) | bool
  block:

    - name: Include the scenario tasks to deploy the IBM infrastructure
      ansible.builtin.include_tasks:
        file: scenarios/ibm_instructlab_service_destroy.yml

  become: false
  connection: local

- name: Deploy IBM infrastructure via Terraform
  when: >
    (ACTION == "create" or ACTION == "provision")
    and ibm_deploy_with_terraform | default(false) | bool
  block:

    - name: Generate IBM Terrafrom instructlab-as-a-service Template
      ansible.builtin.template:
        src: instructlab-as-a-service.j2
        dest: "{{ output_dir }}/main.tf" # "~/tmp/main.tf"
      # become: false
      # connection: local

    - name: Run Terraform
      community.general.terraform:
        project_path: "{{ output_dir }}" # "~/tmp"
        state: "{{ ibm_terraform_state | default('present') }}"
        # force_init: true
        # variables: "{{ ibm_terraform_variables | default(omit) 
      register: r_terraform_output

  become: false
  connection: local

#
#- name: Provision tasks
#  when: TRACTION == "create" or ACTION == "provision"
#  block:
#    
#    - name: Load and defined scenarios if required
#      when: 
#        - ibm_cloud_scenario is true
#        - ibm_cloud_scenarios is defined 
#        - ibm_cloud_scenarios | length > 0
#      ansible.builtin.include_tasks:
#        file: "scenarios/{{ scenario }}.yml"
#      loop: "{{ ibm_cloud_scenarios }}"
#      loop_control:
#        loop_var: scenario
#
