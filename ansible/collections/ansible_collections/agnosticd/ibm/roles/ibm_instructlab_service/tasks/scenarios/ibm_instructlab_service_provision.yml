---

- name: Create IBM Resource Group block
  block:

    - name: Create or update the IBM Cloud Resource Group
      ibm.cloudcollection.ibm_resource_group:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        name: "{{ ibmcloud_resource_group_name }}"
        state: "{{ ibmcloud_resource_group_state | default('present') }}"
        region: "{{ ibmcloud_region }}" 

    - name: Get IBM Resource Group details
      ibm.cloudcollection.ibm_resource_group_info:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        name: "{{ ibmcloud_resource_group_name }}"
      register: r_ibmcloud_resource_group_info

    - name: Output IBM Resource Group details (DEBUG)
      when: r_ibmcloud_resource_group_info
      ansible.builtin.debug:
        var: r_ibmcloud_resource_group_info
        verbosity: 2
        
    - name: Export IBM Resource Group ID as fact
      ansible.builtin.set_fact:
        f_ibmcloud_resource_group_id: "{{ r_ibmcloud_resource_group_info.resource.id }}"
    
    - name: Output IBM Resource Group ID (DEBUG)
      ansible.builtin.debug:  
        var: f_ibmcloud_resource_group_id
        verbosity: 2

- name: Create IBM Cloud Object Storage block
  block:

    - name: Create Cloud Object Storage instance
      ibm.cloudcollection.ibm_resource_instance:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        name: "{{ ibmcloud_cos_instance_name }}"
        location: "{{ ibmcloud_cos_location }}"
        service: "{{ ibmcloud_cos_instance_service }}"
        plan: "{{ ibmcloud_cos_plan }}"
        resource_group_id: "{{ f_ibmcloud_resource_group_id }}"
        state: "{{ ibmcloud_cos_instance_state }}"
      register: r_ibmcloud_cos_instance

    - name: Show Resource Group ID
      ansible.builtin.debug:  
        var: r_ibmcloud_cos_instance
        verbosity: 2

    - name: Export IBM Cloud Object Storage ID as fact
      ansible.builtin.set_fact:
        f_ibmcloud_cos_instance_id: "{{ r_ibmcloud_cos_instance.resource.id }}"

#
# Create IBM Cloud Object Storage bucket - it will be largely invisible until added
# to the Trusted Profile later
#

- name: Create IBM Cloud Object Storage bucket block
  block:

    - name: Check if IBM CoS bucket already exists
      ibm.cloudcollection.ibm_cos_bucket_info:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        bucket_name: "{{ ibmcloud_cos_bucket_name }}"
        bucket_region: "{{ ibmcloud_region }}"
        bucket_type: "{{ ibmcloud_cos_bucket_type }}"
        resource_instance_id: "{{ f_ibmcloud_cos_instance_id }}"
      register: r_bucket_info
      failed_when: false
      ignore_errors: yes

    - name: Output bucket register
      ansible.builtin.debug:
        var: r_bucket_info | to_nice_json
        verbosity: 2

    - name: Create Cloud Object Storage bucket
      when:
        r_bucket_info.resource.crn is not defined 
        or r_bucket_info.resource.crn == "" 
        or r_bucket_info.resource.crn | length == 0
      ibm.cloudcollection.ibm_cos_bucket:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        bucket_name: "{{ ibmcloud_cos_bucket_name }}"
        region_location: "{{ ibmcloud_region }}"
        resource_instance_id: "{{ f_ibmcloud_cos_instance_id }}"
        state: "{{ ibmcloud_cos_bucket_state }}"

- name: Create IBM Cloud Trusted Profile block
  block:

    - name: Create IBM Cloud Trusted Profile if it does not exist
      ibm.cloudcollection.ibm_iam_trusted_profile:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        name: "{{ ibmcloud_iam_trusted_profile_name }}"
        state: "{{ ibmcloud_iam_trusted_profile_state }}"
        description: "{{ ibmcloud_iam_trusted_profile_description }}"
      register: r_ibmcloud_iam_trusted_profile

    - name: Debug trusted profile register 
      ansible.builtin.debug:
        var: r_ibmcloud_iam_trusted_profile
        verbosity: 2

    - name: Debug trusted profile name
      ansible.builtin.debug:
        msg: "Trusted Profile name is {{ ibmcloud_iam_trusted_profile_name }}"
        verbosity: 2

#
# Next we add the user claim and resources to the Trusted Profile
#

- name: Add resources and user claim to Trusted Profile
  block:

    - name: Output of trusted profile register
      ansible.builtin.debug:
        msg: "Output of trusted profile is {{ r_ibmcloud_iam_trusted_profile }}"

    - name: Add user claim ie email to Trusted Profile
      ibm.cloudcollection.ibm_iam_trusted_profile_claim_rule:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        profile_id: "{{ r_ibmcloud_iam_trusted_profile.resource.id }}"
        realm_name: "{{ ibm_realm_name }}"
        type: "Profile-SAML"
        expiration: "{{ ibm_saml_login_timeout | default(10800) }}"
        conditions:
          - claim: "email"
            operator: "EQUALS"
            value: "\"{{ requester_email }}\""

    - name: Add detailed Trusted Profile Policy for the Resource Group
      ibm.cloudcollection.ibm_iam_trusted_profile_policy:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        profile_id: "{{ r_ibmcloud_iam_trusted_profile.resource.profile_id }}"
        id: "{{ r_ibmcloud_iam_trusted_profile.resource.id }}"
        roles:
          - Viewer
        description: "Resource Group TP"
        resource_attributes:
          - name: "resourceType"
            operator: "stringEquals"
            value: "resource-group"
          - name: "resource"
            operator: "stringEquals"
            value: "{{ f_ibmcloud_resource_group_id }}"
        state: available

    - name: Add detailed Trusted Profile Viewer Policy for the CoS
      ibm.cloudcollection.ibm_iam_trusted_profile_policy:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        profile_id: "{{ r_ibmcloud_iam_trusted_profile.resource.profile_id }}"
        id: "{{ r_ibmcloud_iam_trusted_profile.resource.id }}"
        roles:
          - Reader
          - Viewer
        description: "COS Viewer Trusted Policy"
        resource_attributes:
          - name: "serviceName"
            operator: "stringEquals"
            value: "cloud-object-storage"
          - name: "serviceInstance"
            operator: "stringEquals"
            value: "{{ f_ibmcloud_cos_instance_id |
                    regex_search('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}') }}"
        state: available

    - name: Add detailed Trusted profile policy for the cos
      ibm.cloudcollection.ibm_iam_trusted_profile_policy:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
        profile_id: "{{ r_ibmcloud_iam_trusted_profile.resource.profile_id }}"
        id: "{{ r_ibmcloud_iam_trusted_profile.resource.id }}"
        roles:
          - Reader
          - Writer
          - Viewer
          - Editor
        description: "COS TP"
        resource_attributes:
          - name: "serviceName"
            operator: "stringEquals"
            value: "cloud-object-storage"
          - name: "serviceInstance"
            operator: "stringEquals"
            value: "{{ f_ibmcloud_cos_instance_id |
                    regex_search('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}') }}"
          - name: "resourceType"
            operator: "stringEquals"
            value: "bucket"
          - name: "resource"
            operator: "stringEquals"
            value: "{{ ibmcloud_cos_bucket_name }}"
        state: available
