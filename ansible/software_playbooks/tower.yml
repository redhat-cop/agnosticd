---
- name: Step 00xxxxx software
  hosts: bastions[0]
  gather_facts: False
  become: true
  tasks:
    - debug:
        msg: "Software tasks Started"
    # This probably needs to get removed.
    # - name: Place Tower License from env_secret_vars on bastion
    #   blockinfile:
    #     create: yes
    #     path: /root/tower_license.txt
    #     block: "{{tower_license}}"
    #   when: tower_license is defined
    - name: Copy Tower License File
      copy:
        content: "{{ tower_license | from_json }}"
        dest: /root/license.txt

    - name: Download Tower Setup file
      unarchive:
        src: "https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-{{tower_version}}.tar.gz"
        dest: /root/
        remote_src: yes
      tags:
        - install-tower

    - name: Remove directory if it exists
      file:
       path: /root/ansible-tower-setup-latest
       state: absent
    #It's not latest, it's whatever we installed, this should be removed.
    - name: Rename the ansible tower setup directory name
      shell: mv /root/ansible-tower-setup-* /root/ansible-tower-setup-latest

    # we can put this as /etc/ansible/hosts
    - name: Create Tower Inventory file
      template:
        src: "../configs/{{ env_type }}/files/tower_template_inventory.j2"
        dest: /root/ansible-tower-setup-latest/inventory
      tags:
        - create_tower_inventory
    # when we move inventory to /etc/ansible/hosts we can add -i to the setup.sh file
    - name: Run Ansible Tower setup
      shell: ./setup.sh
      args:
        chdir: /root/ansible-tower-setup-latest
      async: 3600
      poll: 36
      tags:
        - install-tower

    - name: Install tower-cli
      pip:
        name: ansible-tower-cli
        state: latest

    - name: Configure the tower cli file
      template:
        src: "../configs/{{ env_type }}/files/tower_cli.j2"
        dest: "/root/.tower_cli.cfg"
        mode: 0600

    - name: Add the tower license
      command: tower-cli setting modify LICENSE @/root/license.txt --insecure

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
