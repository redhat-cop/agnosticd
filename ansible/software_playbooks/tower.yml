# vim: set ft=ansible:
---
- name: Step 003 - Prepare Ansible Host Files
  hosts: localhost
  connection: local
  become: False
  gather_facts: False



  tags:
    - generate_ansible_hosts_file
  tasks:
    - name: generate ansible hosts file
      template:
        src: "../configs/{{ env_type }}/files/hosts_template.j2"
        dest: "{{output_dir}}/hosts-{{ env_type }}-{{ guid }}"
    - name: generate ansible tower hosts file
      template:
        src: "../configs/{{ env_type }}/files/tower_hosts_template.j2"
        dest: "{{output_dir}}/tower_hosts-{{ env_type }}-{{ guid }}"

- name: Prepare bastion for Tower Deployment
  hosts: bastions
  become: true
  gather_facts: False



  vars:
    tower_inventory_path: /root/tower_hosts

  tags:
    - install_tower
  tasks:
    - name: Ensure directory /opt/tower
      file:
        path: /opt/tower
        state: directory

    - name: Copy over ansible hosts file
      copy:
        src: "{{output_dir}}/hosts-{{ env_type }}-{{ guid }}"
        dest: /etc/ansible/hosts

    - name: Copy over ansible tower hosts file
      copy:
        src: "{{output_dir}}/tower_hosts-{{ env_type }}-{{ guid }}"
        dest: "{{tower_inventory_path}}"
    - name: unarchive the latest tower software
      unarchive:
        src: "https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-{{ tower_setup_version | default('latest') }}.tar.gz"
        dest: /opt/tower
        remote_src: yes

    - name: list current repository files
      shell: "ls /opt/tower/ansible-tower-setup-*/setup.sh"
      register: tower_installer_path

    - name: print out tower Installer
      debug:
        var: tower_installer_path

    - name: Add log path to Ansible configuration
      lineinfile:
        regexp: "^#log_path"
        dest: "/etc/ansible/ansible.cfg"
        line: "log_path = /root/ansible.log"
        state: present
      tags:
        - ansible_log_enable

    - name: print out tower Installer
      debug:
        msg: "{{tower_installer_path.stdout}} -i {{tower_inventory_path}}"
    - name: run the tower installer
      shell: "{{tower_installer_path.stdout}} -i {{tower_inventory_path}}"



- name: Prepare bastion for Tower Deployment
  hosts: towers[0]
  become: true
  gather_facts: False



  vars:
    tower_inventory_path: /root/tower_hosts

  tags:
    - install_tower_post
  tasks:
    - name: install pip via yum
      yum:
       name: python-pip

    - name: Install Tower cli
      pip:
       name: 'ansible-tower-cli'
    #   version: '3.1.8'

    - name: Configure the tower cli file
      blockinfile:
        path: "~/.tower_cli.cfg"
        create: true
        block: |
          [general]
          host = tower1.{{guid}}.example.opentlc.com
          username = admin
          password = {{tower_admin_password}}

    - name: Configure the tower cli file
      template:
        src: "../configs/{{ env_type }}/files/tower_cli.j2"
        dest: "~/.tower_cli.cfg"
        mode: 0640
    - name: Download Licence file
      get_url:
        url: "{{license_file_url}}"
        dest: /root/license.txt
    - name: Append file
      lineinfile:
        path: /root/license.txt
        insertbefore: '"company_name.*"'
        line: '"eula_accepted" : "true",'

    - name: Add the tower license
      command: |
        tower-cli setting modify LICENSE @/root/license.txt {{ tower_cli_insecure_flag | d() }}
