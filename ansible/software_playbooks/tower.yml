---
- name: Step 00xxxxx software
  hosts: bastions[0]
  gather_facts: False
  become: true
  tasks:
    - debug:
        msg: "Software tasks Started"
    # This probably needs to get removed.
    # - name: Place Tower License from env_secret_vars on bastion
    #   blockinfile:
    #     create: yes
    #     path: /root/tower_license.txt
    #     block: "{{tower_license}}"
    #   when: tower_license is defined

    # - debug:        
    #     msg: "{{item.tags.internaldns | default(item.private_dns_name)}}"
    #     #groups: "{{item.tags.Worker_region}}"
    #   with_items: "{{hostvars['localhost']['ec2_facts']['instances']}}"
    #   when:            
    #     - item.state.name != 'terminated'
    #     - item.tags.AnsibleGroup == 'workers'
    #   loop_control:    
    #     label: "{{item.tags.internaldns | default(item.private_dns_name)}}"
    #   tags:
    #       - create_inventory
    #       - must
    #       - install-tower
    # - pause: 

    - name: Download Tower Setup file
      unarchive:
        src: "https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-{{tower_version}}.tar.gz"
        dest: /root/
        remote_src: yes
      tags:
        - install-tower

 
    # - add_host:        
    #     name: "{{item.tags.internaldns | default(item.private_dns_name)}}"
    #     groups: "{{item.tags.Worker_region}}"
    #   with_items: "{{hostvars['localhost']['ec2_facts']['instances']}}"
    #   when:            
    #     - item.state.name != 'terminated'
    #     - item.tags.AnsibleGroup == 'workers'
    #   loop_control:    
    #     label: "{{item.tags.internaldns | default(item.private_dns_name)}}"
    #   tags:
    #       - create_inventory
    #       - must
    #       - install-tower


    - name: Create Tower Inventory file
      template:
        src: "../configs/{{ env_type }}/files/hosts_template.j2"
        dest: /etc/ansible/hosts
      tags:
        - create_tower_inventory

    #when we move inventory to /etc/ansible/hosts we can add -i to the setup.sh file
    - name: Run Ansible Tower setup
      shell: ./setup.sh -i /etc/ansible/hosts
      args:
        chdir: /root/ansible-tower-setup-{{tower_version}}
      async: 3600
      poll: 36
      tags:
        - install-tower

    - name: Install tower-cli
      pip:
        name: ansible-tower-cli
        state: latest
      tags:
          - tower-cli

    - name: Configure the tower cli file
      template:
        src: "../configs/{{env_type}}/files/tower_cli.j2"
        dest: "/root/.tower_cli.cfg"
        mode: 0600
      tags:
          - tower-cli

   
- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
