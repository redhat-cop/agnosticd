# vim: set ft=ansible:
---
- name: Step 004.1 - Local host preparation for OpenShift deployment
  hosts: localhost
  connection: local
  become: False
  gather_facts: False
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - generate_ansible_hosts_file
    - step004
    - step004.1
  tasks:
    - name: Add identity providers to the list
      set_fact:
        identity_providers: "{{ identity_providers + [available_identity_providers[item]] }}"
      when:
        - available_identity_providers is defined
        - available_identity_providers[item] is defined
      with_items: "{{ install_idms|d([]) }}"

    - name: generate ansible hosts file for 3.7 and earlier
      template:
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/hosts_template.j2"
        dest: "{{ ANSIBLE_REPO_PATH }}/workdir/hosts-{{ env_type }}-{{ guid }}"
      when:
        - osrelease is version_compare('3.9', '<')
    - name: generate ansible hosts file for 3.9 and later
      template:
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/hosts_template.{{ osrelease }}.j2"
        dest: "{{ ANSIBLE_REPO_PATH }}/workdir/hosts-{{ env_type }}-{{ guid }}"
      when:
        - osrelease is version_compare('3.9', '>=')

    - name: remove filename parameter from htpasswd authentication for 3.10+
      replace:
        dest: "{{ ANSIBLE_REPO_PATH }}/workdir/hosts-{{ env_type }}-{{ guid }}"
        regexp: ', "filename": "/etc/origin/master/htpasswd"'
        replace: ''
      when:
        - osrelease is version_compare('3.10', '>=')

#########################Configuring openshift-nodes

- name: Step 004.3 - Node preparation for OpenShift deployment
  gather_facts: False
  become: yes
  hosts:
    # - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_infranode') | replace('-', '_') }}"
    # - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_node') | replace('-', '_') }}"
    # - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_master') | replace('-', '_') }}"
    - nodes
    - infranodes
    - masters
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
  roles:
    - "{{ ANSIBLE_REPO_PATH }}/roles/host-ocp-node"
  tags:
    - openshift_node_tasks
    - step004
    - step004.3

- name: Step 004.3.1 - Gluster Node preparation for OpenShift deployment
  gather_facts: False
  become: yes
  hosts:
    - support
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
  roles:
    - role: "{{ ANSIBLE_REPO_PATH }}/roles/host-ocp-node"
      when: install_glusterfs|d(false)|bool
  tags:
    - openshift_node_tasks
    - step004
    - step004.3.1

#########################Configuring nfs hosts

- name: Step 004.4 - Configuring Nfs Host
  gather_facts: False
  become: yes
  order: sorted
  hosts:
    - support
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
  roles:
    - { role: "{{ ANSIBLE_REPO_PATH }}/roles/host-ocp-nfs", when: 'install_nfs' }
  tags:
    - nfs_tasks
    - step004
    - step004.4

######################### Run OpenShift Installer

- name: Step 004.5 - Run OpenShift Installer
  gather_facts: False
  become: yes
  hosts:
    - bastions
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
  tags:
    - installing_openshift
    - step004
    - step004.5
  tasks:
  roles:
    - role: "{{ ANSIBLE_REPO_PATH }}/roles/host-ocp-provisioner"
    - role: "{{ ANSIBLE_REPO_PATH }}/roles/host-ocp-installer"

  post_tasks:
    - name: get openshift credentials file
      shell: ansible masters[0] -b -m fetch -a "src=/root/.kube/config dest=/root/.kube/config flat=yes"
      tags:
        - get_openshift_credentials
