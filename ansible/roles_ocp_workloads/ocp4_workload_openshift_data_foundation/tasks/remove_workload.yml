---
# Implement your workload removal tasks here
# ------------------------------------------

- name: Update default storage class
  when: ocp4_workload_openshift_data_foundation_update_default_storage_class | bool
  block:
  - name: Remove annotation from current default storage class
    ansible.builtin.command:
      cmd: >-
        oc annotate sc {{ ocp4_workload_openshift_data_foundation_new_default_storage_class_name }}
        storageclass.kubernetes.io/is-default-class-
    ignore_errors: true

  - name: Set previous default storage class
    ansible.builtin.command:
      cmd: >-
        oc annotate sc {{ ocp4_workload_openshift_data_foundation_old_default_storage_class_name }}
        storageclass.kubernetes.io/is-default-class="true"
    ignore_errors: true

- name: Remove Ceph toolbox
  when: ocp4_workload_openshift_data_foundation_install_toolbox | bool
  kubernetes.core.k8s:
    state: absent
    definition: "{{ lookup('template', 'toolbox.yaml.j2') }}"

- name: Remove Storage System
  kubernetes.core.k8s:
    state: absent
    definition: "{{ lookup('template', 'storagesystem.yaml.j2') }}"

- name: Wait until Storage System has been deleted
  kubernetes.core.k8s_info:
    api_version: odf.openshift.io/v1alpha1
    kind: StorageSystem
    name: ocs-storagecluster-storagesystem
    namespace: "{{ ocp4_workload_openshift_data_foundation_namespace }}"
  register: r_storage_system
  until: r_storage_system.resources | length == 0
  retries: 100
  delay: 10

- name: Remove Operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: remove
    install_operator_name: "{{ ocp4_workload_openshift_data_foundation_operator_name }}"
    install_operator_namespace: "{{ ocp4_workload_openshift_data_foundation_namespace }}"
    install_operator_catalog: redhat-operators
    install_operator_csv_nameprefix: "{{ ocp4_workload_openshift_data_foundation_operator_csv_prefix }}"
    install_operator_channel: "{{ ocp4_workload_openshift_data_foundation_channel }}"
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_openshift_data_foundation_automatic_install_plan_approval | default(true) }}"
    install_operator_manage_namespaces:
    - "{{ ocp4_workload_openshift_data_foundation_namespace }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_openshift_data_foundation_catalogsource_setup | default(false)}}"
    install_operator_catalogsource_name: "{{ ocp4_workload_openshift_data_foundation_catalogsource_name | default('') }}"
    install_operator_catalogsource_image: "{{ ocp4_workload_openshift_data_foundation_catalogsource_image | default('') }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_openshift_data_foundation_catalogsource_image_tag | default('') }}"

# Leave this as the last task in the playbook.
# --------------------------------------------

- name: remove_workload tasks complete
  ansible.builtin.debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
