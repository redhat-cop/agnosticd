apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: {{ ocp4_workload_integreatly_threescale_sso_client_name }}
spec:
  client:
    enabled: true
    clientAuthenticatorType: client-secret
    fullScopeAllowed: true
    redirectUris: {{ ocp4_workload_integreatly_threescale_sso_client_redirect_uris }}
    access:
      configure: true
      manage: true
      view: true
    clientId: {{ ocp4_workload_integreatly_threescale_sso_client_name }}
    rootUrl: {{ ocp4_workload_integreatly_threescale_sso_client_root_url }}
    secret: {{ ocp4_workload_integreatly_threescale_sso_client_secret }}
    standardFlowEnabled: true
    protocolMappers:
      - config:
          access.token.claim: 'true'
          claim.name: given_name
          id.token.claim: 'true'
          jsonType.label: String
          user.attribute: firstName
          userinfo.token.claim: 'true'
        consentRequired: true
        consentText: '${givenName}'
        name: given name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
      - config:
          access.token.claim: 'true'
          claim.name: email_verified
          id.token.claim: 'true'
          jsonType.label: String
          user.attribute: emailVerified
          userinfo.token.claim: 'true'
        consentRequired: true
        consentText: '${emailVerified}'
        name: email verified
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
      - config:
          access.token.claim: 'true'
          id.token.claim: 'true'
        consentRequired: true
        consentText: '${fullName}'
        name: full name
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
      - config:
          access.token.claim: 'true'
          claim.name: family_name
          id.token.claim: 'true'
          jsonType.label: String
          user.attribute: lastName
          userinfo.token.claim: 'true'
        consentRequired: true
        consentText: '${familyName}'
        name: family name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
      - config:
          attribute.name: Role
          attribute.nameformat: Basic
          single: 'false'
        consentText: '${familyName}'
        name: role list
        protocol: saml
        protocolMapper: saml-role-list-mapper
      - config:
          access.token.claim: 'true'
          claim.name: email
          id.token.claim: 'true'
          jsonType.label: String
          user.attribute: email
          userinfo.token.claim: 'true'
        consentRequired: true
        consentText: '${email}'
        name: email
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
      - config:
          access.token.claim: 'true'
          claim.name: org_name
          id.token.claim: 'true'
          jsonType.label: String
          user.attribute: org_name
          userinfo.token.claim: 'true'
        consentText: n.a.
        name: org_name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
    id: {{ ocp4_workload_integreatly_threescale_sso_client_name }}
    directAccessGrantsEnabled: false
  realmSelector:
    matchLabels:
      sso: integreatly

