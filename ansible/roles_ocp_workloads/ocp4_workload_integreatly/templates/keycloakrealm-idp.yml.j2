apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: {{ ocp4_workload_integreatly_sso_idp_realm_name }}
  labels:
    sso: {{ ocp4_workload_integreatly_sso_idp_realm_name }}
spec:
  instanceSelector:
    matchLabels:
      sso: integreatly
  realm:
    displayName: {{ ocp4_workload_integreatly_sso_idp_realm_display_name }}
    enabled: true
    id: {{ ocp4_workload_integreatly_sso_idp_realm_name }}
    realm: {{ ocp4_workload_integreatly_sso_idp_realm_name }}
    clients:
    - id: {{ ocp4_workload_integreatly_sso_idp_realm_name }}-client
      clientId: {{ ocp4_workload_integreatly_sso_idp_realm_name }}-client
      rootUrl: {{ ocp4_workload_integreatly_sso_idp_oauth_url }}
      secret: {{ ocp4_workload_integreatly_sso_idp_client_secret }}
      redirectUris:
        - {{ ocp4_workload_integreatly_sso_idp_oauth_url }}/oauth2callback/{{ ocp4_workload_integreatly_sso_idp_realm_name }}
        - {{ ocp4_workload_integreatly_console_url }}
      directAccessGrantsEnabled: true
      enabled: true
      clientAuthenticatorType: client-secret
      fullScopeAllowed: true
      access:
        configure: true
        manage: true
        view: true
      standardFlowEnabled: true
      webOrigins:
        - {{ ocp4_workload_integreatly_sso_idp_oauth_url }}
        - {{ ocp4_workload_integreatly_sso_idp_oauth_url }}/*
      protocolMappers:
        - config:
            access.token.claim: 'true'
            claim.name: given_name
            id.token.claim: 'true'
            jsonType.label: String
            user.attribute: firstName
            userinfo.token.claim: 'true'
          consentRequired: true
          consentText: '${givenName}'
          name: given name
          protocol: openid-connect
          protocolMapper: oidc-usermodel-property-mapper
        - config:
            access.token.claim: 'true'
            id.token.claim: 'true'
            userinfo.token.claim: 'true'
          consentRequired: true
          consentText: '${fullName}'
          name: full name
          protocol: openid-connect
          protocolMapper: oidc-full-name-mapper
        - config:
            access.token.claim: 'true'
            claim.name: family_name
            id.token.claim: 'true'
            jsonType.label: String
            user.attribute: lastName
            userinfo.token.claim: 'true'
          consentRequired: true
          consentText: '${familyName}'
          name: family name
          protocol: openid-connect
          protocolMapper: oidc-usermodel-property-mapper
        - config:
            attribute.name: Role
            attribute.nameformat: Basic
            single: 'false'
          consentText: '${familyName}'
          name: role list
          protocol: saml
          protocolMapper: saml-role-list-mapper
        - config:
            access.token.claim: 'true'
            claim.name: email
            id.token.claim: 'true'
            jsonType.label: String
            user.attribute: email
            userinfo.token.claim: 'true'
          consentRequired: true
          consentText: '${email}'
          name: email
          protocol: openid-connect
          protocolMapper: oidc-usermodel-property-mapper
        - config:
            access.token.claim: 'true'
            claim.name: preferred_username
            id.token.claim: 'true'
            jsonType.label: String
            user.attribute: username
            userinfo.token.claim: 'true'
          consentText: n.a.
          name: username
          protocol: openid-connect
          protocolMapper: oidc-usermodel-property-mapper