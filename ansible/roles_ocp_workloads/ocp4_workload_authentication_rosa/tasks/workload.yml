---
- name: Get the openshift console route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: openshift-console
    field_selectors:
      - spec.to.name=console
  register: r_dc
  until:
    - r_dc is defined
    - r_dc.resources is defined
    - r_dc.resources | list | length > 0
  retries: 60
  delay: 15

- name: Save OpenShift access facts
  vars:
    _apps_domain: "{{ r_dc.resources[0].spec.host | regex_search('(?<=\\.).*') }}"
    _api_domain: "{{ r_dc.resources[0].spec.host | regex_search('(?<=\\.apps).*') }}"
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_cluster_ingress_domain: "{{ _apps_domain }}"
    _ocp4_workload_authentication_rosa_console_route: "https://console-openshift-console.{{ _apps_domain }}"
    _ocp4_workload_authentication_rosa_api_server: "https://api{{ _api_domain }}:6443"

- name: Install AWS CLI
  block:
    - name: Get awscli bundle
      ansible.builtin.get_url:
        url: https://s3.amazonaws.com/aws-cli/awscli-bundle-1.18.200.zip
        dest: /tmp/awscli-bundle.zip
    - name: Unzip awscli-bundle.zip
      ansible.builtin.unarchive:
        src: /tmp/awscli-bundle.zip
        dest: /tmp/
        remote_src: true
    - name: Install awscli
      ansible.builtin.command: /tmp/awscli-bundle/install -i /usr/local/aws -b /bin/aws
      args:
        creates: /usr/local/aws
      become: true
    - name: cleanup archive and tmp files
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/awscli-bundle
        - /tmp/awscli-bundle.zip

- name: Install ROSA CLI
  block:
    - name: Get ROSA CLI
      ansible.builtin.get_url:
        url: "{{ rosa_installer_url }}"
        dest: /tmp/rosa-linux.tar.gz
    - name: Unzip rosa-linux.tar.gz
      ansible.builtin.unarchive:
        src: /tmp/rosa-linux.tar.gz
        dest: /usr/local/bin/
        remote_src: true
      become: true
    - name: cleanup archive file
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/rosa-linux.tar.gz

- name: Login to ROSA
  ansible.builtin.command: |-
    /usr/local/bin/rosa login --token {{ ocp4_workload_authentication_rosa_token }}

- name: Create .aws directory
  ansible.builtin.file:
    path: ~/.aws
    state: directory

- name: Add aws credentials
  ansible.builtin.blockinfile:
    path: ~/.aws/credentials
    create: true
    mode: 0600
    block: |-
      [default]
      aws_access_key_id={{ ocp4_workload_authentication_rosa_aws_access_key_id }}
      aws_secret_access_key={{ ocp4_workload_authentication_rosa_aws_secret_access_key }}

- name: Add aws config
  ansible.builtin.blockinfile:
    path: ~/.aws/config
    create: true
    mode: 0600
    block: |-
      [default]
      region={{ ocp4_workload_authentication_rosa_aws_region }}

- name: Generate cluster admin password
  when: ocp4_workload_authentication_rosa_admin_password | default('') | length == 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_admin_password: >-
      {{ lookup('password', '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ ocp4_workload_authentication_rosa_admin_password_length
      ) }}

- name: Use provided admin password
  when: ocp4_workload_authentication_rosa_admin_password | default('') | length > 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_admin_password: >-
      {{ ocp4_workload_authentication_rosa_admin_password }}

- name: Check if pool already created
  ansible.builtin.shell: |-
    aws cognito-idp list-user-pools --max-results 1 | jq '.UserPools | length'
  register: r_user_pool_size

- name: Delete existing user pools
  when: r_user_pool_size.stdout | int > 0
  block:
    - name: Get existing user pool id
      ansible.builtin.shell: |-
        aws cognito-idp list-user-pools --max-results 1 | jq -r .UserPools[0].Id
      register: r_aws_user_pool_id
    - name: Delete existing user pool
      ansible.builtin.shell: |-
        aws cognito-idp delete-user-pool-domain --user-pool-id {{ r_aws_user_pool_id.stdout }} --domain rosa-{{ guid }}
        aws cognito-idp delete-user-pool --user-pool-id {{ r_aws_user_pool_id.stdout }}
    - name: Delete existing idp
      ansible.builtin.shell: |-
        rosa delete idp Cognito --cluster=rosa-{{ guid }} --yes
      ignore_errors: true

# yamllint disable rule:line-length
- name: Create user pool for admin
  ansible.builtin.shell: >-
    aws cognito-idp create-user-pool
    --pool-name rosa-{{ guid }}
    --auto-verified-attributes email
    --admin-create-user-config '{"AllowAdminCreateUserOnly": true}'
    --policies '{"PasswordPolicy": {"MinimumLength": 6, "RequireUppercase": false, "RequireLowercase": false, "RequireNumbers": false, "RequireSymbols": false}}'
# yamllint enable rule:line-length

- name: Get Pool ID
  ansible.builtin.shell: >
    aws cognito-idp list-user-pools --max-results 1 | jq -r .UserPools[0].Id
  register: r_aws_user_pool_id

- name: Set fact _ocp4_workload_authentication_rosa_aws_user_pool_id
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_aws_user_pool_id: "{{ r_aws_user_pool_id.stdout }}"

- name: Create admin user
  ansible.builtin.shell: >-
    aws cognito-idp admin-create-user
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_admin_user }}
    --temporary-password {{ _ocp4_workload_authentication_rosa_admin_password }}
    --user-attributes Name=name,Value="Cluster Administrator" Name="email",Value="admin@rosaworkshop.com" Name="email_verified",Value="true"
    --message-action SUPPRESS

- name: Create user pool
  ansible.builtin.shell: >-
    aws cognito-idp create-user-pool-domain
    --domain "rosa-{{ guid }}"
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}

- name: Add users
  # yamllint disable rule:line-length
  ansible.builtin.shell: >-
    {%- if ocp4_workload_authentication_rosa_user_count | int == 1 -%}
    aws cognito-idp admin-create-user
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_name }}
    --temporary-password {{ ocp4_workload_authentication_rosa_user_password }}
    --user-attributes Name=name,Value="{{ ocp4_workload_authentication_rosa_user_name }}" Name="email",Value="user1@rosaworkshop.com" Name="email_verified",Value="true"
    --message-action SUPPRESS
    {%- else -%}
    aws cognito-idp admin-create-user
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_base }}{{ item + 1 }}
    --temporary-password {{ ocp4_workload_authentication_rosa_user_password }}
    --user-attributes Name=name,Value="{{ ocp4_workload_authentication_rosa_user_base }}{{ item + 1 }}" Name="email",Value="user{{ item + 1 }}@rosaworkshop.com" Name="email_verified",Value="true"
    --message-action SUPPRESS
    {%- endif -%}
  loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int, 1) | list }}"
  # yamllint enable rule:line-length

- name: Set permanent passwords
  ansible.builtin.shell: >-
    {%- if ocp4_workload_authentication_rosa_user_count | int == 1 -%}
    aws cognito-idp admin-set-user-password
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_name }}
    --password {{ ocp4_workload_authentication_rosa_user_password }}
    --permanent
    {%- else -%}
    aws cognito-idp admin-set-user-password
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_base }}{{ item + 1 }}
    --password {{ ocp4_workload_authentication_rosa_user_password  }}
    --permanent
    {%- endif -%}
  loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int, 1) | list }}"

- name: Get cluster domain
  ansible.builtin.shell: |-
    rosa describe cluster -c rosa-{{ guid }} | grep "DNS" | grep -oE '\S+.openshiftapps.com'
  register: r_cluster_domain

- name: Greate app in Cognito
  ansible.builtin.shell: >-
    aws cognito-idp create-user-pool-client
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --client-name rosa-{{ guid }}
    --generate-secret
    --supported-identity-providers COGNITO
    --callback-urls '["https://oauth-openshift.apps.{{ r_cluster_domain.stdout }}/oauth2callback/Cognito"]'
    --allowed-o-auth-scopes "phone" "email" "openid" "profile"
    --allowed-o-auth-flows code
    --allowed-o-auth-flows-user-pool-client

- name: Setup Openshift authentication to use AWS Cognito
  # yamllint disable rule:line-length
  ansible.builtin.shell: |-
    AWS_USER_POOL_CLIENT_ID=$(aws cognito-idp list-user-pool-clients --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }} | jq -r .UserPoolClients[0].ClientId)
    AWS_USER_POOL_CLIENT_SECRET=$(aws cognito-idp describe-user-pool-client --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }} --client-id ${AWS_USER_POOL_CLIENT_ID} | jq -r .UserPoolClient.ClientSecret)
    rosa create idp \
    --cluster rosa-{{ guid }} \
    --type openid \
    --name Cognito \
    --client-id ${AWS_USER_POOL_CLIENT_ID} \
    --client-secret ${AWS_USER_POOL_CLIENT_SECRET} \
    --issuer-url https://cognito-idp.$(aws configure get region).amazonaws.com/{{ _ocp4_workload_authentication_rosa_aws_user_pool_id }} \
    --email-claims email \
    --name-claims name \
    --username-claims username
  # yamllint enable rule:line-length

- name: Add admin to cluster admin role
  ansible.builtin.shell: |-
    oc adm policy add-cluster-role-to-user cluster-admin {{ ocp4_workload_authentication_rosa_admin_user }}

- name: Print common user information messages
  when: ocp4_workload_authentication_rosa_enable_user_info_messages | bool
  agnosticd_user_info:
    msg: >-
      Authentication via `Cognito` is enabled on this cluster.

      User `{{ ocp4_workload_authentication_rosa_admin_user }}`
      with password `{{ _ocp4_workload_authentication_rosa_admin_password }}`
      is cluster admin.

      {%- if ocp4_workload_authentication_rosa_user_count | int == 1 -%}
      Normal user `{{ ocp4_workload_authentication_rosa_user_name }}`
      created with password `{{ ocp4_workload_authentication_rosa_user_password }}`
      {%- else -%}
      Users `{{ ocp4_workload_authentication_rosa_user_base }}1` ..
      `{{ ocp4_workload_authentication_rosa_user_base ~ ocp4_workload_authentication_rosa_user_count }}`
      created with password `{{ ocp4_workload_authentication_rosa_user_password }}`
      {%- endif -%}

- name: Save common user and cluster admin information
  agnosticd_user_info:
    # Pass data as dict to preserve integer type for openshift_cluster_user_count
    data: >-
      {{
        {
          "openshift_api_server_url": _ocp4_workload_authentication_rosa_api_server,
          "openshift_cluster_admin_username": ocp4_workload_authentication_rosa_admin_user,
          "openshift_cluster_admin_password": _ocp4_workload_authentication_rosa_admin_password,
          "openshift_cluster_console_url": _ocp4_workload_authentication_rosa_console_route,
          "openshift_cluster_num_users": ocp4_workload_authentication_rosa_user_count | int,
          "openshift_cluster_user_base": ocp4_workload_authentication_rosa_user_base,
          "openshift_cluster_user_count": ocp4_workload_authentication_rosa_user_count | int,
        }
      }}

- name: Save user name for single user configuration
  when: ocp4_workload_authentication_rosa_user_count | int == 1
  agnosticd_user_info:
    data:
      openshift_cluster_user_name: "{{ ocp4_workload_authentication_rosa_user_name }}"
      openshift_cluster_user_password: "{{ ocp4_workload_authentication_rosa_user_password }}"

- name: Save user information
  when: ocp4_workload_authentication_rosa_enable_user_info_data | bool
  block:
    - name: Save user information for user access
      agnosticd_user_info:
        user: "{{ ocp4_workload_authentication_rosa_user_base }}{{ n +1 }}"
        data:
          user: "{{ ocp4_workload_authentication_rosa_user_base }}{{ n +1 }}"
          password: "{{ ocp4_workload_authentication_rosa_user_password }}"
          console_url: "{{ _ocp4_workload_authentication_rosa_console_route }}"
          openshift_console_url: "{{ _ocp4_workload_authentication_rosa_console_route }}"
          openshift_cluster_ingress_domain: "{{ _ocp4_workload_authentication_rosa_cluster_ingress_domain }}"
      loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int) | list }}"
      loop_control:
        loop_var: n
