---
- name: Get OpenShift Console URL
  ansible.builtin.shell: |-
    set -o pipefail && rosa describe cluster --cluster rosa-{{ guid }} -o json | jq -r .console.url
  register: r_ocp_console_url
  changed_when: r_ocp_console_url.stdout != ""

- name: Get OpenShift API URL
  ansible.builtin.shell: |-
    set -o pipefail && rosa describe cluster --cluster rosa-{{ guid }} -o json | jq -r .api.url
  register: r_ocp_api_url
  changed_when: r_ocp_api_url.stdout != ""

- name: Set URL facts
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_console_route: "{{ r_ocp_console_url.stdout }}"
    _ocp4_workload_authentication_rosa_api_server: "{{ r_ocp_api_url.stdout }}"

- name: Use provided admin password
  when: ocp4_workload_authentication_rosa_admin_password | default('') | length > 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_admin_password: >-
      {{ ocp4_workload_authentication_rosa_admin_password }}

- name: Generate cluster admin password
  when: ocp4_workload_authentication_rosa_admin_password | default('') | length == 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_admin_password: >-
      {{ lookup('password', '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ ocp4_workload_authentication_rosa_admin_password_length
      ) }}

- name: Print admin credentials
  ansible.builtin.debug:
    msg: >-
      Cognito Admin user '{{ ocp4_workload_authentication_rosa_admin_user }}' will be created
      with password '{{ _ocp4_workload_authentication_rosa_admin_password }}'.

- name: Set up randomized user password array
  when: ocp4_workload_authentication_rosa_user_password_randomized | bool
  block:
  - name: Generate random passwords
    ansible.builtin.set_fact:
      _ocp4_workload_authentication_rosa_user_passwords: >-
        {{ _ocp4_workload_authentication_rosa_user_passwords + [ lookup('password',
          '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ ocp4_workload_authentication_rosa_user_password_length ) ] }}
    loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int, 1) | list }}"

  - name: Print user credentials (randomized)
    when:
    - ocp4_workload_authentication_rosa_user_count | int > 1
    - ocp4_workload_authentication_rosa_user_password_randomized | bool
    ansible.builtin.debug:
      msg: >-
        {{ ocp4_workload_authentication_rosa_user_count }} users will be created:
        '{{ ocp4_workload_authentication_rosa_user_base }}1' ..
        '{{ ocp4_workload_authentication_rosa_user_base }}{{ ocp4_workload_authentication_rosa_user_count }}'
        with passwords '{{ _ocp4_workload_authentication_rosa_user_passwords }}'

- name: Set up common user password array
  when: not ocp4_workload_authentication_rosa_user_password_randomized | bool
  block:
  - name: Generate common user password
    when: ocp4_workload_authentication_rosa_user_password | default('') | length == 0
    ansible.builtin.set_fact:
      _ocp4_workload_authentication_rosa_user_password: >-
        {{ lookup('password', '/dev/null chars=ascii_letters,digits '
            ~ 'length=' ~ ocp4_workload_authentication_rosa_user_password_length
        ) }}

  - name: Use provided user password
    when: ocp4_workload_authentication_rosa_user_password | default('') | length > 0
    ansible.builtin.set_fact:
      _ocp4_workload_authentication_rosa_user_password: >-
        {{ ocp4_workload_authentication_rosa_user_password }}

  - name: Generate user passwords array for common password
    ansible.builtin.set_fact:
      _ocp4_workload_authentication_rosa_user_passwords: >-
        {{ _ocp4_workload_authentication_rosa_user_passwords + [_ocp4_workload_authentication_rosa_user_password] }}
    loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int, 1) | list }}"

  - name: Print user credentials (not randomized)
    when: not ocp4_workload_authentication_rosa_user_password_randomized | bool
    ansible.builtin.debug:
      msg: >-
        {%- if ocp4_workload_authentication_rosa_user_count | int == 1 -%}
        User '{{ ocp4_workload_authentication_rosa_user_name }}' will be created with password
        '{{ _ocp4_workload_authentication_rosa_user_passwords[0] }}'.
        {%- else -%}
        {{ ocp4_workload_authentication_rosa_user_count }} users will be created:
        '{{ ocp4_workload_authentication_rosa_user_base }}1' ..
        '{{ ocp4_workload_authentication_rosa_user_base }}{{ ocp4_workload_authentication_rosa_user_count }}'
        with password '{{ _ocp4_workload_authentication_rosa_user_passwords[0] }}'
        {%- endif -%}

- name: Check if Cognito pool already exists
  ansible.builtin.shell: |-
    set -o pipefail &&  aws cognito-idp list-user-pools --max-results 1 | jq '.UserPools | length'
  register: r_user_pool_size
  changed_when: r_user_pool_size.stdout != ""

- name: Delete existing Cognito user pools
  when: r_user_pool_size.stdout | int > 0
  block:
  - name: Get existing Cognito user pool id
    ansible.builtin.shell: |-
      set -o pipefail && aws cognito-idp list-user-pools --max-results 1 | jq -r .UserPools[0].Id
    register: r_aws_user_pool_id
    changed_when: r_aws_user_pool_id.stdout != ""

  - name: Delete existing Cognito user pool domain
    ansible.builtin.command: |-
      aws cognito-idp delete-user-pool-domain --user-pool-id {{ r_aws_user_pool_id.stdout }} --domain rosa-{{ guid }}
    register: r_aws_delete_user_pool_domain
    changed_when: r_aws_delete_user_pool_domain.stdout != ""

  - name: Delete existing Cognito user pool
    ansible.builtin.command: |-
      aws cognito-idp delete-user-pool --user-pool-id {{ r_aws_user_pool_id.stdout }}
    register: r_aws_delete_user_pool
    changed_when: r_aws_delete_user_pool.stdout != ""

- name: Delete existing ROSA IDP configuration
  ansible.builtin.command: |-
    rosa delete idp Cognito --cluster=rosa-{{ guid }} --yes
  register: r_delete_cognito
  changed_when: r_delete_cognito.stdout != ""
  ignore_errors: true

# yamllint disable rule:line-length
- name: Create Cognito user pool for admin
  ansible.builtin.command: >-
    aws cognito-idp create-user-pool
    --pool-name rosa-{{ guid }}
    --auto-verified-attributes email
    --admin-create-user-config '{"AllowAdminCreateUserOnly": true}'
    --policies '{"PasswordPolicy": {"MinimumLength": 6, "RequireUppercase": false, "RequireLowercase": false, "RequireNumbers": false, "RequireSymbols": false}}'
# yamllint enable rule:line-length
  register: r_create_user_pool
  changed_when: r_create_user_pool.stdout != ""

- name: Get Cognito Pool ID
  ansible.builtin.shell: >
    set -o pipefail && aws cognito-idp list-user-pools --max-results 1 | jq -r .UserPools[0].Id
  register: r_aws_user_pool_id
  changed_when: r_aws_user_pool_id.stdout != ""

- name: Set fact _ocp4_workload_authentication_rosa_aws_user_pool_id
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_aws_user_pool_id: "{{ r_aws_user_pool_id.stdout }}"

- name: Create Cognito admin user
  ansible.builtin.shell: >-
    aws cognito-idp admin-create-user
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_admin_user }}
    --temporary-password {{ _ocp4_workload_authentication_rosa_admin_password }}
    --user-attributes Name=name,Value="Cluster Administrator" Name="email",Value="admin@rosaworkshop.com" Name="email_verified",Value="true"
    --message-action SUPPRESS

- name: Set permanent admin password
  ansible.builtin.shell: >-
    aws cognito-idp admin-set-user-password
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_admin_user }}
    --password {{ _ocp4_workload_authentication_rosa_admin_password }}
    --permanent

- name: Create Cognito user pool for users
  ansible.builtin.shell: >-
    aws cognito-idp create-user-pool-domain
    --domain "rosa-{{ guid }}"
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}

- name: Add users to Cognito user pool
  # yamllint disable rule:line-length
  ansible.builtin.command: >-
    {%- if ocp4_workload_authentication_rosa_user_count | int == 1 -%}
    aws cognito-idp admin-create-user
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_name }}
    --temporary-password {{ _ocp4_workload_authentication_rosa_user_passwords[0] }}
    --user-attributes Name=name,Value="{{ ocp4_workload_authentication_rosa_user_name }}" Name="email",Value="user1@rosaworkshop.com" Name="email_verified",Value="true"
    --message-action SUPPRESS
    {%- else -%}
    aws cognito-idp admin-create-user
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_base }}{{ item + 1 }}
    --temporary-password {{ _ocp4_workload_authentication_rosa_user_passwords[0] }}
    --user-attributes Name=name,Value="{{ ocp4_workload_authentication_rosa_user_base }}{{ item + 1 }}" Name="email",Value="user{{ item + 1 }}@rosaworkshop.com" Name="email_verified",Value="true"
    --message-action SUPPRESS
    {%- endif -%}
  loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int, 1) | list }}"
  # yamllint enable rule:line-length

- name: Set permanent passwords
  ansible.builtin.command: >-
    {%- if ocp4_workload_authentication_rosa_user_count | int == 1 -%}
    aws cognito-idp admin-set-user-password
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_name }}
    --password {{ _ocp4_workload_authentication_rosa_user_passwords[0] }}
    --permanent
    {%- else -%}
    aws cognito-idp admin-set-user-password
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --username {{ ocp4_workload_authentication_rosa_user_base }}{{ item + 1 }}
    --password {{ _ocp4_workload_authentication_rosa_user_passwords[item] }}
    --permanent
    {%- endif -%}
  loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int, 1) | list }}"
# noqa: jinja[spacing]

- name: Get cluster domain
  ansible.builtin.shell: |-
    set -o pipefail && rosa describe cluster -c rosa-{{ guid }} | grep "DNS" | grep -oE '\S+.openshiftapps.com'
  register: r_cluster_domain
  changed_when: r_cluster_domain.stdout != ""

- name: Determine if the cluster is using a Hosted Control Plane
  ansible.builtin.shell: |-
    set -o pipefail && rosa describe cluster -c rosa-$GUID -o json|jq .hypershift.enabled
  register: r_hcp
  changed_when: r_hcp.stdout != ""

- name: Set callback URL for Classic Clusters
  when: not r_hcp.stdout | bool
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_callback_url: "https://oauth-openshift.apps.{{ r_cluster_domain.stdout }}/oauth2callback/Cognito"

- name: Set callback URL for Clusters with Hosted Control Plane
  when: r_hcp.stdout | bool
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_rosa_callback_url: "https://oauth.{{ r_cluster_domain.stdout }}:443/oauth2callback/Cognito"

- name: Greate Cognito user pool client
  ansible.builtin.command: >-
    aws cognito-idp create-user-pool-client
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --client-name rosa-{{ guid }}
    --generate-secret
    --supported-identity-providers COGNITO
    --callback-urls '["{{ _ocp4_workload_authentication_rosa_callback_url }}"]'
    --allowed-o-auth-scopes "phone" "email" "openid" "profile"
    --allowed-o-auth-flows code
    --allowed-o-auth-flows-user-pool-client
  register: r_create_user_pool_client
  changed_when: r_create_user_pool_client.stdout != ""

- name: Get Cognito user pool client id
  ansible.builtin.shell: >-
    set -o pipefail && aws cognito-idp list-user-pool-clients
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }} | jq -r .UserPoolClients[0].ClientId
  register: r_aws_user_pool_client_id
  changed_when: r_aws_user_pool_client_id.stdout != ""

- name: Get Cognito user pool client secret
  ansible.builtin.shell: >-
    set -o pipefail && aws cognito-idp describe-user-pool-client
    --user-pool-id {{ _ocp4_workload_authentication_rosa_aws_user_pool_id }}
    --client-id {{ r_aws_user_pool_client_id.stdout }} | jq -r .UserPoolClient.ClientSecret
  register: r_aws_user_pool_client_secret
  changed_when: r_aws_user_pool_client_secret.stdout != ""

- name: Setup ROSA authentication to use AWS Cognito
  # yamllint disable rule:line-length
  ansible.builtin.command: |-
    rosa create idp \
    --cluster rosa-{{ guid }} \
    --type openid \
    --name Cognito \
    --client-id {{ r_aws_user_pool_client_id.stdout }} \
    --client-secret {{ r_aws_user_pool_client_secret.stdout }} \
    --issuer-url https://cognito-idp.{{ aws_region | default("us-east-2") }}.amazonaws.com/{{ _ocp4_workload_authentication_rosa_aws_user_pool_id }} \
    --email-claims email \
    --name-claims name \
    --username-claims username
  # yamllint enable rule:line-length
  register: r_create_rosa_idp
  changed_when: r_create_rosa_idp.stdout != ""

- name: Add admin to cluster admin role
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'cluster_role_binding.yaml.j2') | from_yaml }}"
  register: r_cluster_admin_role_binding
  until: r_cluster_admin_role_binding is successful
  delay: 15
  retries: 20

- name: Save common user and cluster admin information
  agnosticd_user_info:
    # Pass data as dict to preserve integer type for openshift_cluster_user_count
    data: >-
      {{
        {
          "openshift_api_server_url": _ocp4_workload_authentication_rosa_api_server,
          "openshift_cluster_admin_username": ocp4_workload_authentication_rosa_admin_user,
          "openshift_cluster_admin_password": _ocp4_workload_authentication_rosa_admin_password,
          "openshift_cluster_console_url": _ocp4_workload_authentication_rosa_console_route,
          "openshift_cluster_num_users": ocp4_workload_authentication_rosa_user_count | int,
          "openshift_cluster_user_base": ocp4_workload_authentication_rosa_user_base,
          "openshift_cluster_user_count": ocp4_workload_authentication_rosa_user_count | int,
        }
      }}

- name: Save user name for single user configuration
  when: ocp4_workload_authentication_rosa_user_count | int == 1
  agnosticd_user_info:
    data:
      openshift_cluster_user_name: "{{ ocp4_workload_authentication_rosa_user_name }}"
      openshift_cluster_user_password: "{{ ocp4_workload_authentication_rosa_user_password }}"

- name: Save user information
  when: ocp4_workload_authentication_rosa_enable_user_info_data | bool
  agnosticd_user_info:
    user: "{{ ocp4_workload_authentication_rosa_user_base }}{{ n + 1 }}"
    data:
      user: "{{ ocp4_workload_authentication_rosa_user_base }}{{ n + 1 }}"
      password: "{{ _ocp4_workload_authentication_rosa_user_passwords[n] }}"
      console_url: "{{ _ocp4_workload_authentication_rosa_console_route }}"
      openshift_console_url: "{{ _ocp4_workload_authentication_rosa_console_route }}"
  loop: "{{ range(0, ocp4_workload_authentication_rosa_user_count | int) | list }}"
  loop_control:
    loop_var: n

- name: Print common user information messages
  when: ocp4_workload_authentication_rosa_enable_user_info_messages | bool
  agnosticd_user_info:
    msg: >-
      Authentication via `Cognito` is enabled on this cluster.

      User `{{ ocp4_workload_authentication_rosa_admin_user }}`
      with password `{{ _ocp4_workload_authentication_rosa_admin_password }}`
      is cluster admin.

      {%- if ocp4_workload_authentication_rosa_user_count | int == 1 -%}
      Normal user `{{ ocp4_workload_authentication_rosa_user_name }}`
      created with password `{{ _ocp4_workload_authentication_rosa_user_passwords[0] }}`
      {%- else -%}
      Users `{{ ocp4_workload_authentication_rosa_user_base }}1` ..
      `{{ ocp4_workload_authentication_rosa_user_base ~ ocp4_workload_authentication_rosa_user_count }}`
      created with randomized passwords. Refer to the lab instructions for individual passwords.
      {%- endif -%}
