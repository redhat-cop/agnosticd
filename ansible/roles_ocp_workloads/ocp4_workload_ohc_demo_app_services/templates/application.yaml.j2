---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ ocp4_workload_ohc_demo_app_services_application_name }}
  namespace: {{ ocp4_workload_ohc_demo_app_services_application_namespace }}
spec:
  destination:
    namespace: "{{ ocp4_workload_ohc_demo_app_services_namespace }}"
    server: 'https://kubernetes.default.svc'
  project: default
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
  source:
    repoURL: {{ ocp4_workload_ohc_demo_app_services_application_repo }}
    targetRevision: {{ ocp4_workload_ohc_demo_app_services_application_repo_tag }}
    path: {{ ocp4_workload_ohc_demo_app_services_application_repo_path }}
    helm:
      values: |            
        argocd: &argo
          enabled: {{ ocp4_workload_ohc_demo_app_services_argocd_syncwaves_enabled }}

        kafka-broker:
          argocd: *argo
          kafka:
            version: {{ ocp4_workload_ohc_demo_app_services_kafka_version }}
            cluster:
              replicas: {{ ocp4_workload_ohc_demo_app_services_kafka_cluster_replicas }}
            zookeeper:
              replicas: {{ ocp4_workload_ohc_demo_app_services_kafka_zookeeper_replicas }}
            config:
              defaultReplicationFactor: {{ ocp4_workload_ohc_demo_app_services_kafka_default_replication_factor }}
              offsetsTopicReplicationFactor: {{ ocp4_workload_ohc_demo_app_services_kafka_offset_replication_factor }}
              transactionStateLogReplicationFactor: {{ ocp4_workload_ohc_demo_app_services_kafka_default_replication_factor }}
              minInsyncReplicas: {{ ocp4_workload_ohc_demo_app_services_kafka_min_in_sync_replicas }}
              transactionStateLogMinIsr: {{ ocp4_workload_ohc_demo_app_services_kafka_min_in_sync_replicas }}
              interBrokerProtocolVersion: {{ ocp4_workload_ohc_demo_app_services_kafka_inter_broker_protocol_version }}

        kafka-topics:
          kafka:
            replicationFactor: {{ ocp4_workload_ohc_demo_app_services_kafka_topics_replication_factor }}

        catalog-db:
          argocd: *argo

        inventory-db:
          argocd: *argo
        
        activity-tracking:
          kafka:
            bootstrapServer: {{ ocp4_workload_ohc_demo_app_services_kafka_bootstrap_server }}

        recommendation-engine:
          kafka:
            bootstrapServer: {{ ocp4_workload_ohc_demo_app_services_kafka_bootstrap_server }}

        order-placement:
          kafka:
            bootstrapServer: {{ ocp4_workload_ohc_demo_app_services_kafka_bootstrap_server }}
