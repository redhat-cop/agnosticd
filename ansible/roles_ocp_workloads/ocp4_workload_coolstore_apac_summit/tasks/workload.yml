---
- name: Retrieve Gitea instance
  kubernetes.core.k8s_info:
    api_version: gpte.opentlc.com/v1
    kind: Gitea
    name: "{{ ocp4_workload_coolstore_apac_summit_instance }}"
    namespace: "{{ ocp4_workload_coolstore_apac_summit_project }}"
  register: r_gitea

- name: Set Gitea repo variables
  set_fact:
    _ocp4_workload_coolstore_apac_summit_hostname: >-
      {{ r_gitea.resources[0].status.giteaHostname }}
    _ocp4_workload_coolstore_apac_summit_repo_route_url: >-
      {{ r_gitea.resources[0].status.giteaRoute }}
    _ocp4_workload_coolstore_apac_summit_repo_url: >-
      {{ r_gitea.resources[0].spec.giteaSsl | bool | ternary( 'https', 'http' ) }}://{{
      ocp4_workload_coolstore_apac_summit_user | urlencode }}:{{
      ocp4_workload_coolstore_apac_summit_user_password | urlencode }}@{{
      r_gitea.resources[0].status.giteaHostname }}/{{
      ocp4_workload_coolstore_apac_summit_user }}/{{ ocp4_workload_coolstore_apac_summit_repo }}
    _ocp4_workload_coolstore_apac_summit_repo_coolstore_argocd_repo_url: >-
      {{ r_gitea.resources[0].spec.giteaSsl | bool | ternary( 'https', 'http' ) }}://{{
      ocp4_workload_coolstore_apac_summit_user | urlencode }}:{{
      ocp4_workload_coolstore_apac_summit_user_password | urlencode }}@{{
      r_gitea.resources[0].status.giteaHostname }}/{{
      ocp4_workload_coolstore_apac_summit_user }}/{{ ocp4_workload_coolstore_apac_summit_repo_gitops }}

- name: Get subdomain
  when: ocp4_workload_gitea_operator_gitea_hostname | default("") | length > 0
  block:
  - name: Determine Wildcard Domain
    kubernetes.core.k8s_info:
      api_version: operator.openshift.io/v1
      kind: IngressController
      name: default
      namespace: openshift-ingress-operator
    register: r_ingress_controller

  - name: Set WEB UI hostname variable
    set_fact:
      _ocp4_workload_coolstore_apac_summit_web_ui_host: >-
       web-ui-{{ ocp4_workload_coolstore_apac_summit_coolstore_namespace }}.{{
            r_ingress_controller.resources[0].status.domain }}

- name: Create k8s namespaces
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - cicd/namespace-ci-pipeline.yaml.j2
  - cicd/namespace-coolstore-pipeline.yaml.j2

- name: Create k8s build configs and pipeline resources
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - cicd/coolstore-imagestreams.yaml.j2
  - cicd/coolstore-build-configs.yaml.j2
  - cicd/generate-tag.yaml.j2
  - cicd/update-kustomize-repo.yaml.j2
  - cicd/update-kustomize-repo-sso.yaml.j2
  - cicd/web-ui-ci-pipeline.yaml.j2

- name: Wait for builds to start
  ansible.builtin.pause:
    seconds: 10

- name: Check for build complete
  ansible.builtin.shell: |
    oc get builds -n coolstore | grep Running
  register: r_builds
  until: r_builds.stdout | length == 0
  delay: 10
  retries: 120
  ignore_errors: true

- name: Create pipeline run
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
    namespace: "{{ ocp4_workload_coolstore_apac_summit_coolstore_namespace }}"
  loop:
  - cicd/web-ui-ci-pipelinerun.yaml.j2

- name: Deploy ArgoCD applications
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - cicd/app-coolstore-ci.yaml.j2
  - cicd/app-coolstore-microservice.yaml.j2

- name: Wait until Event Listener Route exists in the cicd namespace
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: cicd
    name: gitops-webhook-event-listener-route
  register: r_webhook_route
  until: r_webhook_route.resources | length > 0
  delay: 10
  retries: 30

- name: Generate web hook secret if not defined
  when: ocp4_workload_coolstore_apac_summit_webhook_secret | length == 0
  set_fact:
    ocp4_workload_coolstore_apac_summit_webhook_secret: >-
      {{ lookup('password', '/dev/null length={{ ocp4_workload_coolstore_apac_summit_webhook_secret_length }} chars=ascii_letters,digits') }}

- name: Register event listeners in Gitea
  include_tasks: update-webhook.yml
  loop:
  - "{{ ocp4_workload_coolstore_apac_summit_repo_inventory }}"
  - "{{ ocp4_workload_coolstore_apac_summit_repo_gateway }}"
  - "{{ ocp4_workload_coolstore_apac_summit_repo_catalog }}"
  - "{{ ocp4_workload_coolstore_apac_summit_repo_object_detection }}"
  loop_control:
    loop_var: _ocp4_workload_coolstore_apac_webhook_repository
