- name: Create k8s namespaces
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - cicd/namespace-sonarqube-pipeline.yaml.j2

- name: Create sonarqube deployment
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - cicd/sonarqube-deploy.yaml.j2

- name: Get deployment
  k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ ocp4_workload_coolstore_apac_summit_sonarqube_namespace }}"
  register: r_deployment
  until:
    - r_deployment.resources is defined
    - r_deployment.resources | length > 0
    - r_deployment.resources[0].status is defined
    - r_deployment.resources[0].status.readyReplicas is defined
    - r_deployment.resources[0].status.readyReplicas > 0
  delay: 5
  retries: 12

- name: Get sonarqube route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: sonarqube
    name: sonarqube
  register: r_route

- name: Set sonarqube host url
  set_fact:
    _ocp4_workload_coolstore_apac_summit_sonarqube_host_url: http://{{ r_route.resources[0].spec.host }}

- name: Create project
  uri:
    url: "{{ _ocp4_workload_coolstore_apac_summit_sonarqube_host_url }}/api/projects/create?name=web-ui&project=web-ui"
    user: admin
    password: admin
    method: POST
    body_format: json
    headers:
      Content-Type: application/json
    force_basic_auth: yes
    validate_certs: false

- name: Create project
  uri:
    url: "{{ _ocp4_workload_coolstore_apac_summit_sonarqube_host_url }}/api/user_tokens/generate?name=web_ui_token&type=PROJECT_ANALYSIS_TOKEN&projectKey=web-ui"
    user: admin
    password: admin
    method: POST
    headers:
      Content-Type: application/json
    force_basic_auth: yes
    validate_certs: false
  register: r_uri

- name: Set sonarqube host url
  set_fact:
    _ocp4_workload_coolstore_apac_summit_sonarqube_project_token: r_uri.json.token

- name: z
  debug:
    var: _ocp4_workload_coolstore_apac_summit_sonarqube_project_token



# - name: Add role
#   command: oc adm policy add-role-to-user registry-admin system:serviceaccount:{{ _ocp4_workload_coolstore_apac_summit_internal_service_account_namespace }}:{{ _ocp4_workload_coolstore_apac_summit_internal_service_account }}

# - name: Get service account token
#   shell: oc sa get-token {{ _ocp4_workload_coolstore_apac_summit_internal_service_account }} -n {{ _ocp4_workload_coolstore_apac_summit_internal_service_account_namespace }}
#   register: r_token

# - name: Set SA token
#   set_fact:
#     _ocp4_workload_coolstore_apac_summit_internal_service_account_token: "{{ r_token.stdout }}"

# # Registry
# - name: Expose registry
#   command: oc patch configs.imageregistry.operator.openshift.io/cluster --type=merge --patch '{"spec":{"defaultRoute":true}}'

# - name: Get route
#   k8s_info:
#     api_version: route.openshift.io/v1
#     kind: Route
#     namespace: openshift-image-registry
#   register: r_route

# - name: Set image registry route
#   set_fact:
#     _ocp4_workload_coolstore_apac_summit_internal_image_registry_route: "{{ r_route.resources.0.spec.host }}"

# - name: Get central stackrox route
#   k8s_info:
#     api_version: route.openshift.io/v1
#     kind: Route
#     namespace: stackrox
#     name: central
#   register: r_route

# - name: Set image registry route
#   set_fact:
#     _ocp4_workload_coolstore_apac_summit_internal_central_stackrox_endpoint: "{{ r_route.resources.0.spec.host }}:443"
#     _ocp4_workload_coolstore_apac_summit_internal_centeral_stackrox_url: https://{{ r_route.resources.0.spec.host }}

# - name: Stackrox token
#   uri:
#     url: "{{ _ocp4_workload_coolstore_apac_summit_internal_centeral_stackrox_url }}/v1/apitokens/generate"
#     user: admin
#     password: "{{ common_password }}"
#     method: POST
#     force_basic_auth: yes
#     validate_certs: false
#     body_format: json
#     headers:
#       Content-Type: application/json
#     body: {"name":"admin","role":"Admin"}
#   register: r_uri

# - name: Set stackrox token
#   set_fact:
#     _ocp4_workload_coolstore_apac_summit_internal_central_stackrox_token: "{{ r_uri.json.token }}"

# - debug: var=_ocp4_workload_coolstore_apac_summit_internal_service_account_token
# - debug: var=_ocp4_workload_coolstore_apac_summit_internal_image_registry_route
# - debug: var=_ocp4_workload_coolstore_apac_summit_internal_central_stackrox_token

# - name: Create secret (token)
#   k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: stackrox-secret
#         namespace: "{{ ocp4_workload_coolstore_apac_summit_coolstore_namespace }}"
#       type: Opaque
#       data:
#         rox_api_token: "{{ _ocp4_workload_coolstore_apac_summit_internal_central_stackrox_token | string | b64encode }}"

# - name: Create secret (endpoint)
#   k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: stackrox-endpoint
#         namespace: "{{ ocp4_workload_coolstore_apac_summit_coolstore_namespace }}"
#       type: Opaque
#       data:
#         rox_central_endpoint: "{{ _ocp4_workload_coolstore_apac_summit_internal_central_stackrox_endpoint | string | b64encode }}"

# - name: Stackrox imagesteam integration
#   uri:
#     url: "{{ _ocp4_workload_coolstore_apac_summit_internal_centeral_stackrox_url }}/v1/imageintegrations"
#     user: admin
#     password: "{{ common_password }}"
#     method: POST
#     force_basic_auth: yes
#     validate_certs: false
#     body_format: json
#     headers:
#       Content-Type: application/json
#     body: >-
#       {
#       "name": "registry-admin",
#       "type": "docker",
#       "categories": ["REGISTRY"],
#       "docker": {
#       "endpoint": "{{ _ocp4_workload_coolstore_apac_summit_internal_image_registry_route }}",
#       "username": "{{ _ocp4_workload_coolstore_apac_summit_internal_service_account }}",
#       "password": "{{ _ocp4_workload_coolstore_apac_summit_internal_service_account_token }}",
#       "insecure": true
#       },
#       "skipTestIntegration": false
#       }