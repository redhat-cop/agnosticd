apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: scan-code
  namespace: "{{ ocp4_workload_coolstore_apac_summit_coolstore_namespace }}"
spec:
  params:
    - default: 'docker.io/sonarsource/sonar-scanner-cli:latest'
      name: scanImage
      type: string
    - default: >-
        https://gitea.apps.cluster-hlw9j.sandbox2180.opentlc.com/dev-user/coolstore-microservice
      name: gitRepositoryUrl
      type: string
    - default: main
      name: gitRepositoryRevision
      type: string
    - default: http://sonarqube-test.apps.cluster-hlw9j.sandbox2180.opentlc.com/
      name: sonarqubeHostUrl
      type: string
    - default: 'true'
      name: verbose
      type: string
  steps:
    - image: 'alpine/git:v2.26.2'
      name: git-checkout
      resources: {}
      script: |
        #!/usr/bin/env sh

        set -eu -o pipefail

        if [[ "$(params.verbose)" == "true" ]] ; then
          set -x
          echo "**** Cloning $(params.gitRepositoryUrl) into $(pwd)/repository"
        fi

        git clone "$(params.gitRepositoryUrl)" $(pwd)/repository
        cd repository
        git checkout "$(params.gitRepositoryRevision)"
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
      workingDir: /workspace
    - env:
        - name: SONAR_TOKEN_WEB_UI
          valueFrom:
            secretKeyRef:
              key: token
              name: web-ui-sonarqube-secret
      image: $(params.scanImage)
      name: scan-code
      resources: {}
      script: >
        set -x

        echo $(ls -a)

        sonar-scanner -X -Dsonar.projectKey=web-ui
        -Dsonar.sources=coolstore-ui
        -Dsonar.host.url=$(params.sonarqubeHostUrl)
        -Dsonar.login=$SONAR_TOKEN_WEB_UI
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
      workingDir: /workspace/repository
  volumes:
    - emptyDir: {}
      name: repository
