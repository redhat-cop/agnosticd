---
- name: install operators
  ansible.builtin.include_tasks: install_operators.yml

- name: create demo namespaces for all users
  vars:
    _ocp4_workload_acc_new_app_dev_user: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
  block:
    - name: create demo namespaces for all users
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'namespace-demo.yaml.j2') | from_yaml }}"
      loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
      loop_control:
        loop_var: n
        label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
    - name: create rolebindings for all users
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'namespace-demo-rolebinding.yaml.j2') | from_yaml }}"
      loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
      loop_control:
        loop_var: n
        label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"

- name: create argocd instances for all users
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'applicationset-argocd.yaml.j2') | from_yaml }}"

- name: create tekton pipelines for all users
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'applicationset-tekton.yaml.j2') | from_yaml }}"

- name: create kafka instances for all users
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'applicationset-kafka.yaml.j2') | from_yaml }}"

- name: create monitoring instances for all users
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'applicationset-monitoring.yaml.j2') | from_yaml }}"

- name: pause until applicationset sync and resources are created for all users
  ansible.builtin.pause:
    minutes: 9

  # yamllint disable rule:line-length
- name: create pipelinerun triggers for all users
  block:
    - name: set _ocp4_workload_acc_new_app_dev_wildcard_domain
      ansible.builtin.set_fact:
        _ocp4_workload_acc_new_app_dev_pipelinerun_name: "quarkus-pipeline-{{ lookup('community.general.random_string', upper=false, numbers=false, special=false) }}"
    - name: create pipelinerun triggers for all users
      when: ocp4_workload_acc_new_app_dev_trigger_pipeline | default(false) | bool
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: tekton.dev/v1beta1
          kind: PipelineRun
          metadata:
            name: "{{ _ocp4_workload_acc_new_app_dev_pipelinerun_name }}"
            namespace: "{{ ocp4_workload_acc_new_app_dev_tekton_namespace_prefix }}{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
          spec:
            pipelineRef:
              name: quarkus-pipeline
            workspaces:
              - name: app-source
                persistentVolumeClaim:
                  claimName: workspace-app-source
              - name: maven-settings
                emptyDir: {}
      loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
      loop_control:
        loop_var: n
        label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"

- name: create gitea webook for all users
  vars:
    _ocp4_workload_acc_new_app_dev_namespace: >-
      {{ ocp4_workload_acc_new_app_dev_tekton_namespace_prefix }}{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}
  ansible.builtin.uri:
    url: "{{ _ocp4_workload_acc_new_app_dev_gitea_route }}/api/v1/repos/{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}/{{ ocp4_workload_acc_new_app_dev_demo_app_source }}/hooks"
    method: POST
    force_basic_auth: true
    user: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
    password: "{{ ocp4_workload_acc_new_app_dev_gitea_user_password }}"
    headers:
      accept: application/json
    body_format: json
    body: |
      {
        "active": true,
        "branch_filter": "*",
        "config": {
          "url": "http://el-{{ _ocp4_workload_acc_new_app_dev_namespace }}.{{ _ocp4_workload_acc_new_app_dev_wildcard_domain }}",
          "http_method": "POST",
          "content_type": "json"
        },
        "events": [
          "push"
        ],
        "type": "gitea"
      }
    status_code: [201]
  loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
  loop_control:
    loop_var: n
    label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
  # yamllint enable rule:line-length

- name: create argocd applications for all users
  vars:
    _ocp4_workload_acc_new_app_dev_user: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'application-demo.yaml.j2') | from_yaml }}"
  loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
  loop_control:
    loop_var: n
    label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"

- name: create user distribution tool
  when: ocp4_workload_acc_new_app_dev_usertool | bool
  block:
    - name: construct URL parameter for username distribution
      ansible.builtin.set_fact:
        _ocp4_workload_acc_new_app_dev_usertool_urls: >-
          {{ ['https://' + 'showroom-showroom' + '-' + guid + '-' + ocp4_workload_acc_new_app_dev_user_prefix +
          (n | string) + '.' + _ocp4_workload_acc_new_app_dev_wildcard_domain + ';Showroom'] }}
      loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
      loop_control:
        loop_var: n
    - name: debug URLs
      ansible.builtin.debug:
        msg: "{{ _ocp4_workload_acc_new_app_dev_usertool_urls }}"
      # yamllint disable rule:line-length
    - name: create argocd application for user tool
      vars:
        _ocp4_workload_acc_new_app_dev_usertool_lab_module_urls: "{{ _ocp4_workload_acc_new_app_dev_usertool_urls | join(',') }}"
        _ocp4_workload_acc_new_app_dev_usertool_lab_extra_urls: >-
          "{{ (_ocp4_workload_acc_new_app_dev_console_url + ';OpenShift Console,' +
          'https://codeserver-codeserver-%USERNAME%.' + _ocp4_workload_acc_new_app_dev_wildcard_domain + ';VS Code Server,' +
          'https://gitea.' + _ocp4_workload_acc_new_app_dev_wildcard_domain + '/%USERNAME%/' + ocp4_workload_acc_new_app_dev_demo_app_deploy + ';Gitea') }}"
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'application-usertool.yaml.j2') | from_yaml }}"
      # yamllint enable rule:line-length
