---
- name: create demo namespaces for all users
  vars:
    _ocp4_workload_acc_new_app_dev_user: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
  block:
    - name: create demo namespaces for all users
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'namespace-demo.yaml.j2' ) | from_yaml }}"
      loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
      loop_control:
        loop_var: n
        label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
    - name: create rolebindings for all users
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'namespace-demo-rolebinding.yaml.j2' ) | from_yaml }}"
      loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
      loop_control:
        loop_var: n
        label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"

  # yamllint disable rule:line-length
- name: create ArgoCD instances for all users
  vars:
    _ocp4_workload_acc_new_app_dev_gitea_svc: http://{{ ocp4_workload_acc_new_app_dev_gitea_instance }}.{{ ocp4_workload_acc_new_app_dev_gitea_project }}.svc:3000
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'applicationset-argocd.yaml.j2' ) | from_yaml }}"

- name: create pipelines for all users
  vars:
    _ocp4_workload_acc_new_app_dev_gitea_svc: http://{{ ocp4_workload_acc_new_app_dev_gitea_instance }}.{{ ocp4_workload_acc_new_app_dev_gitea_project }}.svc:3000
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'applicationset-tekton.yaml.j2' ) | from_yaml }}"

- name: create gitea webook for all users
  vars:
    _ocp4_workload_acc_new_app_dev_namespace: >-
      {{ ocp4_workload_acc_new_app_dev_tekton_namespace_prefix }}{{ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}
  ansible.builtin.uri:
    url: "{{ _ocp4_workload_acc_new_app_dev_gitea_route }}/api/v1/repos/{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}/{{ ocp4_workload_acc_new_app_dev_demo_app_source }}/hooks"
    method: POST
    force_basic_auth: true
    user: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
    password: "{{ ocp4_workload_acc_new_app_dev_gitea_user_password }}"
    headers:
      accept: application/json
    body_format: json
    body: |
      {
        "active": true,
        "branch_filter": "*",
        "config": {
          "url": "http://el-{{ _ocp4_workload_acc_new_app_dev_namespace }}.{{ _ocp4_workload_acc_new_app_dev_wildcard_domain }}",
          "http_method": "POST",
          "content_type": "json"
        },
        "events": [
          "push"
        ],
        "type": "gitea"
      }
    status_code: [201]
  loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
  loop_control:
    loop_var: n
    label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
  # yamllint enable rule:line-length

- name: install amq-streams operator
  include_role:
    name: install_operator
  vars:
    install_operator_name: amq-streams
    install_operator_csv_nameprefix: amqstreams
    install_operator_channel: "{{ ocp4_workload_acc_new_app_dev_amqstreams_channel }}"
    install_operator_starting_csv: "{{ ocp4_workload_acc_new_app_dev_amqstreams_startingcsv }}"
    install_operator_catalogsource_setup: true
    install_operator_catalogsource_image: "{{ ocp4_workload_acc_new_app_dev_amqstreams_catalogsource_image }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_acc_new_app_dev_amqstreams_catalogsource_tag }}"

- name: create kafka instances for all users
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'applicationset-kafka.yaml.j2' ) | from_yaml }}"

- name: Create ArgoCD applications for all users
  vars:
    _ocp4_workload_acc_new_app_dev_user: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'application-demo.yaml.j2' ) | from_yaml }}"
  loop: "{{ range(1, ocp4_workload_acc_new_app_dev_user_count | int + 1) | list }}"
  loop_control:
    loop_var: n
    label: "{{ ocp4_workload_acc_new_app_dev_user_prefix }}{{ n }}"

- name: deploy module guides and user distribution
  when: "{{ ocp4_workload_acc_new_app_dev_guides | bool }}"
  ansible.builtin.include_tasks: guides.yml
