kind: List
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: catalog-mongodb
    name: catalog-mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      deploymentconfig: catalog-mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: catalog-mongodb
    name: catalog-mongodb
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog-mongodb
    strategy:
      recreateParams:
        post:
          execNewPod:
            command:
              - /bin/sh
              - -i
              - -c
              - sleep 10 && /opt/rh/rh-mongodb32/root/usr/bin/mongo $CATALOG_MONGODB_SERVICE_HOST:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="$MONGODB_INIT"
            containerName: catalog-mongodb
            env:
            - name: MONGODB_INIT
              value: db.products.insert({"_id":"329299","itemId":"329299","name":"Red Fedora",
                "desc":"Official Red Hat Fedora","price":34.99});
                db.products.insert({"_id":"329199","itemId":"329199","name":"Forge Laptop Sticker",
                "desc":"JBoss Community Forge Project Sticker","price":8.50});
                db.products.insert({"_id":"165613","itemId":"165613","name":"Solid Performance Polo",
                "desc":"Moisture-wicking, antimicrobial 100% polyester design wicks for life of garment.
                No-curl, rib-knit collar; special collar band maintains crisp fold; three-button placket
                with dyed-to-match buttons; hemmed sleeves; even bottom with side vents; Import.
                Embroidery. Red Pepper.","price":17.80});
                db.products.insert({"_id":"165614","itemId":"165614","name":"Ogio Caliber Polo",
                "desc":"Moisture-wicking 100% polyester. Rib-knit collar and cuffs; Ogio jacquard tape inside
                neck; bar-tacked three-button placket with Ogio dyed-to-match buttons; side vents; tagless;
                Ogio badge on left sleeve. Import. Embroidery. Black.","price":28.75});
                db.products.insert({"_id":"165954","itemId":"165954","name":"16 oz. Vortex Tumbler",
                "desc":"Double-wall insulated, BPA-free, acrylic cup. Push-on lid with thumb-slide closure;
                for hot and cold beverages. Holds 16 oz. Hand wash only. Imprint. Clear.","price":6.00});
                db.products.insert({"_id":"444434","itemId":"444434","name":"Pebble Smart Watch",
                "desc":"Smart glasses and smart watches are perhaps two of the most exciting developments in recent
                years. ","price":24.00});
                db.products.insert({"_id":"444435","itemId":"444435","name":"Oculus Rift",
                "desc":"The world of gaming has also undergone some very unique and compelling tech advances in recent years.
                Virtual reality, the concept of complete immersion into a digital universe through a special headset, has
                been the white whale of gaming and digital technology ever since Nintendo marketed its Virtual Boy gaming
                system in 1995.","price":106.00});
                db.products.insert({"_id":"444436","itemId":"444436","name":"Lytro Camera",
                "desc":"Consumers who want to up their photography game are looking at newfangled cameras like the Lytro Field
                camera, designed to take photos with infinite focus, so you can decide later exactly where you want the focus of
                each image to be.","price":44.30});
          failurePolicy: ignore
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: catalog-mongodb
          deploymentconfig: catalog-mongodb
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MONGODB_USER
            value: {{ ocp4_workload_fuse_online_catalog_db_user }}
          - name: MONGODB_PASSWORD
            value: {{ ocp4_workload_fuse_online_catalog_db_password }}
          - name: MONGODB_DATABASE
            value: {{ ocp4_workload_fuse_online_catalog_database }}
          - name: MONGODB_ADMIN_PASSWORD
            value: {{ ocp4_workload_fuse_online_catalog_db_password }}
          image: mongodb
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: catalog-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-data-pv
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - catalog-mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      application: catalog-mongodb
    name: mongodb-data-pv
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: catalog-service
    annotations:
      openshift.io/display-name: {{ ocp4_workload_fuse_online_catalog_service_name }}
  spec:
    tags:
      - name: '1.0'
        from:
          kind: DockerImage
          name: {{ ocp4_workload_fuse_online_catalog_service_image }}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: {{ ocp4_workload_fuse_online_catalog_service_name }}
    name: {{ ocp4_workload_fuse_online_catalog_service_name }}
  spec:
    paused: true
    replicas: 1
    selector:
      deploymentConfig: {{ ocp4_workload_fuse_online_catalog_service_name }}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          application: {{ ocp4_workload_fuse_online_catalog_service_name }}
          deploymentConfig: {{ ocp4_workload_fuse_online_catalog_service_name }}
        name: {{ ocp4_workload_fuse_online_catalog_service_name }}
      spec:
        containers:
        - env:
          - name: JAVA_OPTIONS
            value: -Dswarm.project.stage.file=file:///app/config/project-defaults.yml
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: catalog-service
          imagePullPolicy: IfNotPresent
          name: {{ ocp4_workload_fuse_online_catalog_service_name }}
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            name: app-config
          name: config
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - catalog-service
        from:
          kind: ImageStreamTag
          name: catalog-service:1.0
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: {{ ocp4_workload_fuse_online_catalog_service_name }}
    name: {{ ocp4_workload_fuse_online_catalog_service_name }}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: {{ ocp4_workload_fuse_online_catalog_service_name }}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: {{ ocp4_workload_fuse_online_catalog_service_name }}
    name: {{ ocp4_workload_fuse_online_catalog_service_name }}
  spec:
    host:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: {{ ocp4_workload_fuse_online_catalog_service_name }}