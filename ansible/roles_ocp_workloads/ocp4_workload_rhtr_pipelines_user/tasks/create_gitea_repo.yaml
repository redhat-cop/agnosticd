---
- name: Check if the repository exists
  uri:
    url: "https://{{ r_gitea_route.resources[0].spec.host }}/api/v1/repos/{{ ocp4_workload_rhtr_pipelines_user_gitea_user }}/{{ ocp4_workload_rhtr_pipelines_user_gitea_repo_name }}"
    method: GET
    validate_certs: false
    user: "{{ ocp4_workload_rhtr_pipelines_user_gitea_admin_user }}"
    password: "{{ ocp4_workload_rhtr_pipelines_user_gitea_admin_password }}"
    force_basic_auth: true
    status_code: 200, 404
  register: r_gitea_repo_exists
  ignore_errors: true

- name: Get the Gitea user info to obtain the uid
  when: r_gitea_repo_exists.status == 404
  uri:
    url: "https://{{r_gitea_route.resources[0].spec.host }}/api/v1/users/{{ ocp4_workload_rhtr_pipelines_user_gitea_user }}"
    method: GET
    validate_certs: false
    user: "{{ ocp4_workload_rhtr_pipelines_user_gitea_admin_user }}"
    password: "{{ ocp4_workload_rhtr_pipelines_user_gitea_admin_password }}"
    force_basic_auth: true
  register: r_gitea_insystem_user

- name: Create the specified repository for the user
  when: r_gitea_repo_exists.status == 404
  uri:
    url: "https://{{ r_gitea_route.resources[0].spec.host }}/api/v1/repos/migrate"
    method: POST
    body: "{{ body }}"
    status_code: 201
    body_format: json
    validate_certs: false
    user: "{{ ocp4_workload_rhtr_pipelines_user_gitea_user }}"
    password: "{{ ocp4_workload_gitea_operator_user_password }}"
    force_basic_auth: true
  vars:
    body: >-
      {
        "clone_addr": "{{ ocp4_workload_rhtr_pipelines_user_gitea_repo_src_url }}",
        "description": "",
        "issues": false,
        "milestones": false,
        "mirror": false,
        "private": {{ ocp4_workload_rhtr_pipelines_user_gitea_repo_private | bool }},
        "repo_name": "{{ ocp4_workload_rhtr_pipelines_user_gitea_repo_name }}",
        "uid": {{ r_gitea_insystem_user.json.id | int }}
      }
