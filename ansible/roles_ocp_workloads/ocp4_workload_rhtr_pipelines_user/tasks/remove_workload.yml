---
# Implement your workload removal tasks here
# ------------------------------------------

- name: Remove user {{ ocp_username }} from groups {{ ocp4_workload_rhtr_pipelines_user_user_groups }}
  when: ocp4_workload_rhtr_pipelines_user_user_groups | default([]) | length > 0
  command: "oc adm groups remove-users {{ item }} {{ ocp_username }}"
  loop: "{{ ocp4_workload_rhtr_pipelines_user_user_groups }}"

- name: Remove user projects
  when: ocp4_workload_rhtr_pipelines_user_projects | length > 0
  k8s:
    state: absent
    definition: "{{ lookup('template', './templates/user-project.yaml.j2') | from_yaml }}"
  loop: "{{ ocp4_workload_rhtr_pipelines_user_projects }}"

# Commenting out the next bit because for the pipelines lab
# students don't get self-provisioner. We are creating their projects
# - name: "Get all Namespaces for user {{ ocp_username }}"
#   k8s_info:
#     api_version: v1
#     kind: Namespace
#     label_selectors:
#     - '!AAD'
#     - '!usernamespace.gpte.redhat.com/user-uid'
#   register: r_get_namespaces

# - name: "Remove all Namespaces for user {{ ocp_username }}"
#   k8s:
#     api_version: v1
#     kind: namespace
#     name: "{{ user_namespace }}"
#     state: absent
#   vars:
#     user_namespace_query: >-
#       [?@.metadata.annotations."openshift.io/requester"==`{{ ocp_username | to_json }}`].metadata.name
#   loop: >
#     {{ r_get_namespaces.resources | default([]) | json_query(user_namespace_query) }}
#   loop_control:
#     loop_var: user_namespace

- name: Remove ClusterResourceQuota
  when: ocp4_workload_rhtr_pipelines_user_create_quota | bool
  k8s:
    state: absent
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/cluster_resource_quota.yaml.j2

- name: Remove user permissions
  when: ocp4_workload_rhtr_pipelines_project_permissions | default([]) | length > 0
  k8s:
    state: absent
    definition: "{{ lookup('template', './templates/rolebinding.yaml.j2') | from_yaml }}"
  loop: "{{ ocp4_workload_rhtr_pipelines_project_permissions }}"
  loop_control:
    label: "{{ item.project }}"    

# TBD: Cleanup Gitea
#      - Delete User Repo from Gitea
#      - Delete User from Gitea

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
