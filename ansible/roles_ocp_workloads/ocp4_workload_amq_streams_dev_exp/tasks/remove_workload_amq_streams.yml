---

# Implement your Workload removal tasks here

- name: find all kafka connect
  k8s_info:
    api_version: kafka.strimzi.io/v1beta1
    kind: KafkaConnect
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_kafkaconnect

- name: remove all kafka connect
  when: r_kafkaconnect.resources | length > 0
  k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ r_kafkaconnect.resources }}"

- name: find all kafka connect s2i
  k8s_info:
    api_version: kafka.strimzi.io/v1beta1
    kind: KafkaConnectS2I
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_kafkaconnects2i

- name: remove all kafka connect
  when: r_kafkaconnects2i.resources | length > 0
  k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ r_kafkaconnects2i.resources }}"

- name: find all kafka mirrormaker
  k8s_info:
    api_version: kafka.strimzi.io/v1beta1
    kind: KafkaMirrorMaker
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_kafkamirrormaker

- name: remove all kafka mirrormaker
  when: r_kafkamirrormaker.resources | length > 0
  k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ r_kafkamirrormaker.resources }}"

- name: find all kafka bridge
  k8s_info:
    api_version: kafka.strimzi.io/v1alpha1
    kind: KafkaBridge
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_kafkabridge

- name: remove all kafka bridge
  when: r_kafkabridge.resources | length > 0
  k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ r_kafkabridge.resources }}"

- name: find all kafka users
  k8s_info:
    api_version: kafka.strimzi.io/v1beta1
    kind: KafkaUser
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_kafkauser

- name: remove all kafka users
  when: r_kafkauser.resources | length > 0
  k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ r_kafkauser.resources }}"

- name: find all kafka topics
  k8s_info:
    api_version: kafka.strimzi.io/v1beta1
    kind: KafkaTopic
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_kafkatopic

- name: remove all kafka topics
  when: r_kafkatopic.resources | length > 0
  k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ r_kafkatopic.resources }}"

- name: find all kafka cluster
  k8s_info:
    api_version: kafka.strimzi.io/v1beta1
    kind: Kafka
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_kafka

- name: remove all kafka clusters
  when: r_kafka.resources | length > 0
  k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ r_kafka.resources }}"

- name: "get all installplans in {{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  register: r_install_plans

- name: find amq streams installplan name
  set_fact:
    amq_streams_install_plan_name: "{{ r_install_plans.resources | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'amqstreams')].metadata.name|[0]

- name: find all amq streams related csv
  set_fact:
    amq_streams_csvs: "{{ r_install_plans.resources | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'amqstreams')].spec.clusterServiceVersionNames

- name: remove all amq streams related csv
  when: amq_streams_csvs | length > 0
  k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ item }}"
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
  loop: "{{ amq_streams_csvs[0] }}"

- name: remove subscription for amq streams
  k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
    name: "{{ ocp4_workload_amq_streams_dev_exp_amq_streams_operator_subscription }}"

- name: remove amq streams installplan
  when:
  - ocp4_workload_amq_streams_dev_exp_amq_streams_install_plan_name is defined
  - ocp4_workload_amq_streams_dev_exp_amq_streams_install_plan_name |default("") | length > 0
  k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
    name: "{{ ocp4_workload_amq_streams_dev_exp_amq_streams_install_plan_name }}"

- name: remove operatorgroup for amqstreams
  k8s:
    state: absent
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ ocp4_workload_amq_streams_dev_exp_project_amq_streams }}"
    name: "{{ ocp4_workload_amq_streams_dev_exp_amq_streams_operator_group }}"
