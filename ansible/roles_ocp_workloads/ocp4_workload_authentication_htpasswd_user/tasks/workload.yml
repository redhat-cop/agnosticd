---
- name: Set ocp4_workload_authentication_htpasswd_user_password
  when: ocp4_workload_authentication_htpasswd_user_password is undefined
  set_fact:
    ocp4_workload_authentication_htpasswd_user_password: >-
      {{ lookup('password', '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ ocp4_workload_authentication_htpasswd_user_password_length
      ) }}

- name: Create temporary htpasswd file
  ansible.builtin.tempfile:
    state: file
    suffix: htpasswd
  register: r_htpasswd
  delegate_to: localhost

- name: Add user to temporary htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ ocp4_workload_authentication_htpasswd_user_name }}"
    password: "{{ ocp4_workload_authentication_htpasswd_user_password }}"
    hash_scheme: ldap_sha1
  delegate_to: localhost

- name: Initialize retry attempt fact
  ansible.builtin.set_fact:
    __ocp4_workload_authentication_htpasswd_user_attempt: 1

- name: Add user to htpasswd secret
  ansible.builtin.include_tasks:
    file: add_user_to_htpasswd_secret.yml
  vars:
    __htpasswd_line: >-
      {{ lookup('ansible.builtin.file', r_htpasswd.path) }}

- name: Remove temporary htpasswd file
  ansible.builtin.file:
    path: "{{ r_htpasswd.path }}"
    state: absent
  delegate_to: localhost

- name: Report user name and password as data
  when: ocp4_workload_authentication_htpasswd_user_enable_data | bool
  agnosticd_user_info:
    data:
      user: "{{ ocp4_workload_authentication_htpasswd_user_name }}"
      password: "{{ ocp4_workload_authentication_htpasswd_user_password }}"

- name: Report user name and password as message
  when: ocp4_workload_authentication_htpasswd_user_enable_messsages | bool
  agnosticd_user_info:
    msg: >-
      User `{{ ocp4_workload_authentication_htpasswd_user_name }}` created with password
      `{{ ocp4_workload_authentication_htpasswd_user_password }}`

# Leave this as the last task in the playbook.
- name: workload tasks complete
  ansible.builtin.debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
