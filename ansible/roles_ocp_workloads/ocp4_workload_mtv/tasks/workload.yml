---
# Implement your Workload deployment tasks here
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Install Migration Toolkit for Virtualization Operator
  include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: mtv-operator
    install_operator_namespace: openshift-mtv
    install_operator_manage_namespaces:
    - openshift-mtv
    install_operator_channel: "{{ ocp4_workload_mtv_channel }}"
    install_operator_catalog: redhat-operators
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_mtv_automatic_install_plan_approval | default(true) }}"
    install_operator_starting_csv: "{{ ocp4_workload_mtv_starting_csv }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_mtv_use_catalog_snapshot | default(false)}}"
    install_operator_catalogsource_name: "{{ ocp4_workload_mtv_catalogsource_name | default('') }}"
    install_operator_catalogsource_namespace: openshift-mtv
    install_operator_catalogsource_image: "{{ ocp4_workload_mtv_catalog_snapshot_image | default('') }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_mtv_catalog_snapshot_image_tag | default('') }}"

- name: Create the ForkliftController instance
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'forkliftcontroller.yaml') }}"

- name: Wait until ForkliftController is installed
  when: ocp4_workload_mtv_wait_for_forkliftcontroller | bool
  kubernetes.core.k8s_info:
    api_version: forklift.konveyor.io/v1beta1
    kind: ForkliftController
    name: forklift-controller
    namespace: openshift-mtv
    wait: true
    wait_condition:
      reason: Successful
      status: 'True'
      type: Successful
    wait_sleep: 10
    wait_timeout: 600

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
