- name: Provision User Namespaces for {{ num_users }}
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'user-projects.yaml.j2') }}"
  retries: 10
  delay: 30

- name: Give users access to projects for {{ num_users }}
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'user-rolebinding.yaml.j2') }}"
  vars:
    bindings:
      - namespace: "user-lab1-mlops"
        role: "admin"
      - namespace: "user-lab2-mlops"
        role: "admin"
      - namespace: "user-lab2-edge"
        role: "admin"
  retries: 15
  delay: 30

# - name: Create  user accounts for {{ num_users }}
#   ansible.builtin.shell: >-
#     oc exec -n openshift-storage $(oc get pod -n {{ storage_namespace }} -l app=rook-ceph-tools -o jsonpath='{.items[0].metadata.name}')
#     -- radosgw-admin user create --uid={{ __user }} --display-name={{ __user }} --access-key={{ __user }} --secret-key=secret
#   register: my_output
#   changed_when: my_output.rc != 0
#   loop: "{{ users }}"
#   loop_control:
#     loop_var: __user

# - name: Create user buckets (central) for {{ num_users }}
#   amazon.aws.s3_bucket:
#     aws_access_key: "{{ __bucket | replace('-workbench', '') | replace('-production', '') | replace('-data', '') }}"
#     aws_secret_key: "secret"
#     name: "{{ __bucket }}"
#     state: present
#     region: us-east-1
#     endpoint_url: "https://s3-rgw-openshift-storage.{{ route_subdomain }}"
#     validate_certs: false
#   loop: "{{ users | product(['workbench', 'production', 'data']) | map('join', '-') }}"
#   loop_control:
#     loop_var: __bucket

# - name: Create user buckets (edge) for {{ num_users }}
#   amazon.aws.s3_bucket:
#     aws_access_key: "{{ __bucket | replace('-valid', '') | replace('-unclassified', '') }}"
#     aws_secret_key: "secret"
#     name: "{{ __bucket }}"
#     state: present
#     region: us-east-1
#     endpoint_url: "https://s3-rgw-openshift-storage.{{ route_subdomain }}"
#     validate_certs: false
#   loop: "{{ users | product(['valid', 'unclassified']) | map('join', '-') }}"
#   loop_control:
#     loop_var: __bucket

# Deploy minio at the edge
- name: Deploy S3 Storage at the edge for {{ num_users }}
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'edge-minio.yaml.j2') }}"
  vars:
    deployments:
      - namespace: "user-lab2-edge"

- name: "Wait until Minio is active"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ __user }}-lab2-edge"
    name: minio
  register: r_minio
  retries: 30
  delay: 10
  until:
    - r_minio.resources is defined
    - r_minio.resources | length | int > 0
    - r_minio.resources[0].status is defined
    - (r_minio.resources[0].status.conditions | selectattr('type','equalto','Available') | list | first).status == "True"
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"

- name: Create PRODUCTION bucket
  amazon.aws.s3_bucket:
    endpoint_url: "https://minio-api-{{ __user }}-lab2-edge.{{ route_subdomain }}"
    aws_access_key: "minio"
    aws_secret_key: "minio123"
    name: "production"
    state: present
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"

- name: Create DATA bucket
  amazon.aws.s3_bucket:
    endpoint_url: "https://minio-api-{{ __user }}-lab2-edge.{{ route_subdomain }}"
    aws_access_key: "minio"
    aws_secret_key: "minio123"
    name: "data"
    state: present
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"

- name: Create VALID bucket
  amazon.aws.s3_bucket:
    endpoint_url: "https://minio-api-{{ __user }}-lab2-edge.{{ route_subdomain }}"
    aws_access_key: "minio"
    aws_secret_key: "minio123"
    name: "valid"
    state: present
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"

- name: Create UNCLASSIFIED bucket
  amazon.aws.s3_bucket:
    endpoint_url: "https://minio-api-{{ __user }}-lab2-edge.{{ route_subdomain }}"
    aws_access_key: "minio"
    aws_secret_key: "minio123"
    name: "unclassified"
    state: present
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"

- name: Deploy TensorFlow Servers for {{ num_users }}
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'edge-tensorflow-server.yaml.j2') }}"
  vars:
    deployments:
      - namespace: "user-lab1-mlops"
        model_name: "redbag"
      - namespace: "user-lab2-edge"
        model_name: "tea_model_b64"

- name: Deploy Shopper Smart Apps for {{ num_users }}
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'edge-camel-shopper.yaml.j2') }}"
  vars:
    deployments:
      - namespace: "user-lab1-mlops"
        broker_host: "broker-amq-mqtt-0-svc.shared.svc.cluster.local"
        price_engine_host: "price-engine.shared.svc.cluster.local"
        endpoint_detections_path: "'/v1/models/redbag:predict'"
      - namespace: "user-lab2-edge"
        broker_host: "broker-amq-mqtt-0-svc"
        price_engine_host: "price-engine"
        endpoint_detections_path: "/v1/models/tea_model_b64:predict"

- name: Deploy AMQ Broker instance for shared + {{ num_users }}
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'edge-broker.yaml.j2') }}"
  vars:
    deployments: "{{ ((users | product(['lab2-edge']) | map('join', '-')) + ['shared']) | map('community.general.dict_kv', 'namespace') }}"

- name: Deploy Price Engine for shared + {{ num_users }}
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'edge-camel-price.yaml.j2') }}"
  vars:
    deployments: "{{ ((users | product(['lab2-edge']) | map('join', '-')) + ['shared']) | map('community.general.dict_kv', 'namespace') }}"

- name: Create Terminal for {{ num_users }}
  ansible.builtin.include_tasks: user_terminal.yaml
  loop: "{{ users }}"
  loop_control:
    loop_var: __user_n
  vars:
    __user: "{{ __user_n }}"
