{% for __user in users %}
{% for __deployment in deployments %}
---
apiVersion: camel.apache.org/v1
kind: Integration
metadata:
  name: delivery
  namespace: {{ __deployment.namespace | replace("user", __user) }}  
spec:
  sources:
    - name: delivery.xml
      content: |

        <?xml version="1.0" encoding="UTF-8"?>
        <!-- camel-k: language=xml -->

        <routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns="http://camel.apache.org/schema/spring"
                xsi:schemaLocation="
                    http://camel.apache.org/schema/spring
                    https://camel.apache.org/schema/spring/camel-spring.xsd">


            <route id="pipeline-trigger">
              <from uri="kafka:trigger?brokers=my-cluster-kafka-bootstrap.shared.svc:9092"/>
              <log message="got kafka event: ${body}"/>

              <setProperty name="user">
                <simple>${body}-</simple>
              </setProperty>

              <log message="namespace: ${env:NAMESPACE}"/>
              <log message="user: ${exchangeProperty.user}"/>

              <filter>
                  <simple>${env:NAMESPACE} startsWith ${exchangeProperty.user}</simple>
                  <to uri="direct:process"/>
              </filter>
            </route>

            <route id="process">
              <from uri="direct:process"/>
              <log message="trigger pipeline for: ${body}"/>

              <!-- CALL to BACKEND -->
              <removeHeaders pattern="*"/>
              <setHeader name="Exchange.HTTP_METHOD">
                <constant>POST</constant>
              </setHeader>
              <setHeader name="Exchange.CONTENT_TYPE">
                <constant>application/json</constant>
              </setHeader>
              <setBody>
                <simple>{"id-edge":"${body}"}</simple>
              </setBody>
              <to uri="{{ __deployment.listener_endpoint | replace('user', __user) }}"/>
            </route>
        </routes>
{% endfor %}
{% endfor %}