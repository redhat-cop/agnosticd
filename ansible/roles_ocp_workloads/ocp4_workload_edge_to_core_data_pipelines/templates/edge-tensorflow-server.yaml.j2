{% for __user in users %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tf-server
    app.kubernetes.io/part-of: model-server
  name: tf-server
  namespace: {{ __user }}-lab1-mlops
  annotations:
    app.openshift.io/connects-to: minio
spec:
  selector:
    matchLabels:
      app: tf-server
  template:
    metadata:
      labels:
        app: tf-server
        version: v1
    spec:
      containers:
      - image: tensorflow/serving:2.6.0
        args:
          - '--load_retry_interval_micros=5000000'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          tcpSocket:
            port: 8500
        name: tf-server
        ports:
        - containerPort: 8500
        # - containerPort: 9000
        env:
        - name: MODEL_NAME
          value: {{model_name | default('redbag')}}
        - name: MODEL_BASE_PATH
          value: {{model_base_path | default('s3://' + __user + '-production/models')}}
        - name: S3_ENDPOINT
          value: http://rook-ceph-rgw-ocs-storagecluster-cephobjectstore.openshift-storage.svc.cluster.local
        - name: AWS_REGION
          value: 'us-east-1'
        - name: AWS_ACCESS_KEY_ID
          value: {{__user}}
        - name: AWS_SECRET_ACCESS_KEY
          value: 'secret'
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tf-server
  name: tf-server
  namespace: {{ __user }}-lab1-mlops  
spec:
  ports:
  - name: http-tf-serving
    port: 8501
    targetPort: 8501
  # - name: grpc-tf-serving
  #   port: 9000
  #   targetPort: 9000   
  selector:
    app: tf-server
  type: NodePort
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  labels:
    app: tf-server
  name: tf-server
  namespace: {{ __user }}-lab1-mlops  
spec:
  to:
    kind: Service
    name: tf-server
    weight: 100
  port:
    targetPort: http-tf-serving
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
{% endfor %}    