{% for __user in users %}
{% for __deployment in deployments %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shopper-training-options
  namespace: {{ __deployment.namespace | replace("user", __user) }}
data:
  training-options.json: |
    [
      {
        "item": "tea-green",
        "label": "(Bali) Green Tea"
      }
    ]
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.openshift.io/connects-to: tf-server
  labels:
    app.kubernetes.io/name: shopper
    app.kubernetes.io/version: 1.0.0
    app.openshift.io/runtime: camel
    app.kubernetes.io/managed-by: quarkus
  name: shopper
  namespace: {{ __deployment.namespace | replace("user", __user) }}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: shopper
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    # app.openshift.io/connects-to: tf-server
    app.openshift.io/connects-to: >-
      ["tf-server",{"apiVersion":"apps/v1","kind":"Deployment","name":"price-engine"}]
    
  labels:
    app.kubernetes.io/name: shopper
    app.kubernetes.io/version: 1.0.0
    app.openshift.io/runtime: camel
    app.kubernetes.io/managed-by: quarkus
  name: shopper
  namespace: {{ __deployment.namespace | replace("user", __user) }}
spec:
  replicas: 1
  selector:
    app.kubernetes.io/name: shopper
    app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-url: <<unknown>>
        app.openshift.io/connects-to: tf-server
      labels:
        app.openshift.io/runtime: camel
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/name: shopper
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: EDGE_ID
              value: {{ __user }}
            - name: MQTT_URI
              value: 'paho:detection/+?brokerUrl=tcp://{{ __deployment.broker_host }}:1883'
            - name: MQTT_URI_MONITOR
              value: 'paho:monitor?brokerUrl=tcp://{{ __deployment.broker_host }}:1883'
            - name: ENDPOINT_PRICE_HOST
              value: "http:{{ __deployment.price_engine_host | replace('user', __user) }}:80"
            - name: ENDPOINT_DETECTIONS_PATH
              value: {{ __deployment.endpoint_detections_path }}
            - name: CAMEL_URI_S3
              value: {{ __deployment.s3_uri | default('aws2-s3://${exchangeProperty.bucket}') | replace('user', __user) }}
            - name: CAMEL_COMPONENT_AWS2_S3_ACCESSKEY
              value: {{ __deployment.access_key | default(__user) }}
            - name: CAMEL_COMPONENT_AWS2_S3_SECRETKEY
              value: {{ __deployment.secret_key | default('secret') }}
            - name: CAMEL_COMPONENT_AWS2_S3_URIENDPOINTOVERRIDE
              value: {{ __deployment.s3_endpoint | default('http://minio-service:9000')}}
            - name: CAMEL_URI_FEEDER
              value: {{ __deployment.feeder_uri | default('http://feeder:80/zip') | replace('user', __user) }}
            - name: JAVA_APP_JAR
              value: /deployments/quarkus-run.jar
          # image: quay.io/bmesegue/testshopper:1.0.0
          image: quay.io/rhdevelopers/edge-wrkshop-shopper:1.0.0-summit2024
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: shopper
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /deployments/config
              name: volume1
              readOnly: false
      volumes:
        - configMap:
            defaultMode: 384
            name: shopper-training-options
            optional: false
          name: volume1
  # triggers:
  #   - imageChangeParams:
  #       automatic: true
  #       containerNames:
  #         - shopper
  #       from:
  #         kind: ImageStreamTag
  #         name: shopper:1.0.0
  #     type: ImageChange
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: camel-edge
  namespace: {{ __deployment.namespace | replace("user", __user) }}
spec:
  to:
    kind: Service
    name: shopper
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
  wildcardPolicy: None  
{% endfor %}
{% endfor %}