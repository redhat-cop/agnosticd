{% for __user in users %}
{% for __deployment in deployments %}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.quarkus.io/build-timestamp: 2024-03-21 - 08:48:59 +0000
  labels:
    app.kubernetes.io/name: feeder
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: quarkus
    app.openshift.io/runtime: camel
  name: feeder
  namespace: {{ __deployment.namespace | replace("user", __user) }}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: feeder
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.quarkus.io/build-timestamp: 2024-03-21 - 08:48:59 +0000
  labels:
    app.kubernetes.io/name: feeder
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: quarkus
    app.openshift.io/runtime: camel
  name: feeder
  namespace: {{ __deployment.namespace | replace("user", __user) }}
spec:
  replicas: 1
  selector:
    app.kubernetes.io/name: feeder
    app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-url: <<unknown>>
        app.quarkus.io/build-timestamp: 2024-03-21 - 08:48:59 +0000
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.openshift.io/runtime: camel
        app.kubernetes.io/name: feeder
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
        - env:
            - name: S3_ACCESS_KEY
              value: minio
            - name: S3_SECRET_KEY
              value: minio123
            - name: CAMEL_COMPONENT_AWS2_S3_URIENDPOINTOVERRIDE
              value: {{ __deployment.s3_endpoint | default('http://minio-service:9000') | replace("user", __user) }}              
            - name: CAMEL_COMPONENT_KAFKA_BROKERS
              value: my-cluster-kafka-bootstrap.shared.svc:9092
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JAVA_APP_JAR
              value: /deployments/quarkus-run.jar
          # image: quay.io/bmesegue/testfeeder:1.0.0
          image: quay.io/redhatintegration/sp-ai-camel-feeder:1.0.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: feeder
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
{% endfor %}
{% endfor %}