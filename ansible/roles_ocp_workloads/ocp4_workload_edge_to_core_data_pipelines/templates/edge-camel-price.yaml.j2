---
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue
data:
  catalogue.json: |
    [
        {
          "item": "tea-earl-grey",
          "label": "Earl Grey Tea",
          "price": 3.99
        },
        {
          "item": "tea-green",
          "label": "(Bali) Green Tea",
          "price": 2.49
        },
        {
          "item": "tea-lemon",
          "label": "Lemon Tea",
          "price": 4.99
        },
        {
          "item": "other",
          "label": "Other",
          "price": "N/A"
        }
    ]
---
apiVersion: camel.apache.org/v1
kind: Integration
metadata:
  name: price-engine
spec:
  dependencies:
    - 'camel:language'
  traits:
    mount:
      configuration:
        resources:
          - 'configmap:catalogue@/deployments/config'
  sources:
    - name: price-engine.xml
      # content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- camel-k: language=xml dependency=camel-language -->\n\n<routes xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns=\"http://camel.apache.org/schema/spring\"\n        xsi:schemaLocation=\"\n            http://camel.apache.org/schema/spring\n            https://camel.apache.org/schema/spring/camel-spring.xsd\">\n\n\n    <route id=\"get-item\">\n        <from uri=\"platform-http:/item\"/>\n        \n        <unmarshal>\n            <json/>\n        </unmarshal>\n        \n        <!-- Find item for product -->\n        <setHeader name=\"product\">\n            <simple>${body[product]}</simple>\n        </setHeader>\n\n        <to uri=\"direct:load-catalogue\"/>\n\n        <setBody>\n            <jq>.[] | select(.label == header(\"product\")).item</jq>\n        </setBody>\n\n        <setBody>\n            <simple>{\"item\":\"${body}\"}</simple>\n        </setBody>\n    </route>\n\n\n\t<!-- Write your routes here, for example: -->\n    <route id=\"main\">\n        <from uri=\"platform-http:/price\"/>\n\n        <to uri=\"direct:load-catalogue\"/>\n        \n        <setBody>\n            <jsonpath>$[?(@.item == '${header.item}')]</jsonpath>\n        </setBody>\n\n        <log message=\"${body}\"/>\n\n        <setBody>\n            <simple>${body[0]}</simple>\n        </setBody>\n        \n        <choice>\n            <when>\n                <simple>${body[item]} == \"other\"</simple>\n                <log message=\"need to provide list of products\"/>\n                <to uri=\"direct:products\"/>\n                <log message=\"new: ${body}\"/>\n            </when>\n        </choice>\n\n        <marshal>\n            <json/>\n        </marshal>\n\n        <convertBodyTo type=\"String\"/>\n    </route>\n\n\n    <route id=\"test\">\n        <from uri=\"timer:products?repeatCount=1\"/>\n        <to uri=\"direct:load-catalogue\"/>\n        <setBody>\n            <jq>.[] | select(.label!=\"Unknown product\").label</jq>\n        </setBody>\n        <log message=\"${body}\"/>\n    </route>\n\n\n    <route id=\"products\">\n        <from uri=\"direct:products\"/>\n        <setProperty name=\"temp\">\n            <simple>${body}</simple>\n        </setProperty>\n\n        <to uri=\"direct:load-catalogue\"/>\n        <setProperty name=\"products\">\n            <jq>.[].label</jq>\n        </setProperty>\n\n        <setBody>\n            <simple>${exchangeProperty.temp}</simple>\n        </setBody>\n\n        <to uri=\"language:simple:${body.put(products,${exchangeProperty.products})}?transform=false\"/>\n\n        <log message=\"${body}\"/>\n    </route>\n\n\n    <route id=\"load-catalogue\">\n        <from uri=\"direct:load-catalogue\"/>\n        <to uri=\"language:constant:resource:classpath:catalogue.json\"/>\n        <!-- <to uri=\"language:constant:resource:file:/deployments/config/catalogue.json\"/> -->\n    </route>\n\n</routes>\n"
      content: |
        <?xml version="1.0" encoding="UTF-8"?>
        <!-- camel-k: language=xml dependency=camel-language -->

        <routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns="http://camel.apache.org/schema/spring"
                xsi:schemaLocation="
                    http://camel.apache.org/schema/spring
                    https://camel.apache.org/schema/spring/camel-spring.xsd">


            <route id="get-item">
                <from uri="platform-http:/item"/>
                
                <unmarshal>
                    <json/>
                </unmarshal>
                
                <!-- Find item for product -->
                <setHeader name="product">
                    <simple>${body[product]}</simple>
                </setHeader>

                <to uri="direct:load-catalogue"/>

                <setBody>
                    <jq>.[] | select(.label == header("product")).item</jq>
                </setBody>

                <setBody>
                    <simple>{"item":"${body}"}</simple>
                </setBody>
            </route>


          <!-- Write your routes here, for example: -->
            <route id="main">
                <from uri="platform-http:/price"/>

                <to uri="direct:load-catalogue"/>
                
                <setBody>
                    <jsonpath>$[?(@.item == '${header.item}')]</jsonpath>
                </setBody>

                <log message="${body}"/>

                <setBody>
                    <simple>${body[0]}</simple>
                </setBody>
                
                <choice>
                    <when>
                        <simple>${body[item]} == "other"</simple>
                        <log message="need to provide list of products"/>
                        <to uri="direct:products"/>
                        <log message="new: ${body}"/>
                    </when>
                </choice>

                <marshal>
                    <json/>
                </marshal>

                <convertBodyTo type="String"/>
            </route>


            <route id="test">
                <from uri="timer:products?repeatCount=1"/>
                <to uri="direct:load-catalogue"/>
                <setBody>
                    <jq>.[] | select(.label!="Unknown product").label</jq>
                </setBody>
                <log message="${body}"/>
            </route>


            <route id="products">
                <from uri="direct:products"/>
                <setProperty name="temp">
                    <simple>${body}</simple>
                </setProperty>

                <to uri="direct:load-catalogue"/>
                <setProperty name="products">
                    <jq>.[].label</jq>
                </setProperty>

                <setBody>
                    <simple>${exchangeProperty.temp}</simple>
                </setBody>

                <to uri="language:simple:${body.put(products,${exchangeProperty.products})}?transform=false"/>

                <log message="${body}"/>
            </route>


            <route id="load-catalogue">
                <from uri="direct:load-catalogue"/>
                <to uri="language:constant:resource:classpath:catalogue.json"/>
                <!-- <to uri="language:constant:resource:file:/deployments/config/catalogue.json"/> -->
            </route>

        </routes>
