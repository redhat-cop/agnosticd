---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Ensure the namespace exists
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: Namespace
    name: "{{ ocp4_workload_sealed_secrets_namespace }}"

#####################################################################
# Deploy Sealed Secrets Helm Chart
#####################################################################
- name: Install Sealed Secrets Controller via Helm Chart
  when: ocp4_workload_sealed_secrets_deploy_using_helm | bool
  block:
  - name: Download OpenShift Helm
    become: true
    get_url:
      url: "{{ ocp4_workload_sealed_secrets_helm_url }}"
      dest: /usr/bin/helm
      owner: root
      group: root
      mode: 0775

  # From repository
  - name: Add Sealed Secrets Chart repository
    kubernetes.core.helm_repository:
      name: sealed-secrets
      repo_url: https://bitnami-labs.github.io/sealed-secrets

  - name: Deploy latest version of Grafana chart inside monitoring namespace with values
    kubernetes.core.helm:
      name: test
      chart_ref: stable/grafana
      release_namespace: monitoring
      values:
        replicas: 2

  - name: Deploy Sealed Secrets Helm Chart
    kubernetes.core.helm:
      name: "{{ ocp4_workload_sealed_secrets_name }}"
      chart_ref: sealed-secrets/sealed-secrets
      release_namespace: "{{ ocp4_workload_sealed_secrets_namespace }}"
      create_namespace: false
      values:
        version: "{{ ocp4_workload_sealed_secrets_helm_chart_version }}"
        'commandArgs[0]': --update-status
        crd:
          keep: false
        securityContext:
          runAsUser: ""
          fsGroup: ""

  - name: Install Sealed Secrets Helm Chart
    command: >-
      /usr/bin/helm install {{ ocp4_workload_sealed_secrets_name }} bitnami-labs/sealed-secrets
        --version {{ ocp4_workload_sealed_secrets_helm_chart_version }}
        --set namespace={{ ocp4_workload_sealed_secrets_namespace }}
        --set 'commandArgs[0]=--update-status'
        --set crd.keep=false
        --set securityContext.runAsUser=
        --set securityContext.fsGroup=

#####################################################################
# Deploy Sealed Secrets controller YAML
#####################################################################
- name: Install Sealed Secrets Controller via Helm Chart
  when: not ocp4_workload_sealed_secrets_deploy_using_helm | bool
  block:
  - name: Set up sealed-secrets directory
    file:
      state: directory
      path: /tmp/sealed-secrets
      owner: "{{ ansible_user }}"
      mode: 0755

  - name: Copy kustomization.yaml file to bastion
    template:
      src: kustomization.yaml.j2
      dest: /tmp/sealed-secrets/kustomization.yaml
      owner: "{{ ansible_user }}"
      mode: 0664

  - name: Install sealed secrets controller
    command:
      chdir: /tmp/sealed-secrets
      cmd: oc apply -k .

  - name: Remove sealed-secrets directory
    file:
      state: absent
      path: /tmp/sealed-secrets

#####################################################################
# Common post installation configuration
#####################################################################
- name: Deploy Sealed Secrets User ClusterRole
  when: ocp4_workload_sealed_secrets_deploy_admin_role | bool
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'clusterrole-sealed-secrets-user.yaml' ) | from_yaml }}"

- name: Download kubeseal
  when: ocp4_workload_sealed_secrets_kubeseal_install | bool
  become: true
  get_url:
    url: >-
      https://github.com/bitnami-labs/sealed-secrets/releases/download/{{
      ocp4_workload_sealed_secrets_kubeseal_version }}/kubeseal-linux-amd64
    dest: /usr/local/bin/kubeseal
    owner: root
    group: root
    mode: 0775

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
