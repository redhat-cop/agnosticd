# Extra code hanging around to help if we ever need it
# Define API Token to use ACS roxctl in tkn Pipeline
- name: Create API token for access from Pipeline to ACS
  uri:
    url: "https://{{ f_stackrox_central_addr }}/v1/apitokens/generate"
    body: '{"name":"pipelines-ci-token","role":null,"roles":["Continuous Integration"]}'
    method: POST
    user: admin
    password: "{{ ocp4_workload_authentication_admin_password }}"
    body_format: json
    force_basic_auth: true
    validate_certs: no
  register: r_ci_token_json

- name: Get API token from response
  set_fact:
    f_rox_api_token: "{{ r_ci_token_json.json.token }}"

- name: Create ACS API Token secret for use in the pipelines
  k8s:
    state: present
    definition:
      apiVersion: v1
      stringData:
        rox_central_endpoint: "{{ f_stackrox_central_addr }}:443"
        rox_api_token: "{{ f_rox_api_token }}"
      kind: Secret
      metadata:
        name: roxsecrets
        namespace: "{{ ocp4_workload_rhacs_pipeline_example_project }}"
      type: Opaque

# Enable ACS to rw and fetch images from internal registry in scan tasks
- name: Get Service Account objects
  k8s_info:
    kind: ServiceAccount
    api_version: /v1
    name: pipeline
    namespace: "{{ ocp4_workload_rhacs_pipeline_example_project }}"
  register: r_sample_password

- name: Get token in the secret for the sa pipeline and decode
  k8s_info:
    kind: Secret
    api_version: /v1
    name: "{{ token_sa_pipeline_secret[0] | replace(\"'\",'') }}"
    namespace: "{{ ocp4_admin_project }}"
  register: r_token_sa_secret

- name: define the token secret decoded
  set_fact:
    pipeline_token: "{{ r_token_sa_secret.resources[0].data.token | b64decode }}"

- name: Creating ACS Integration with the Openshift Internal Registry
  uri:
    url: "https://{{ f_stackrox_central_addr }}/v1/imageintegrations"
    body: "{{ lookup('template', 'templates/acs-ocp-registry.yml.j2') }}"
    method: POST
    user: admin
    password: "{{ ocp4_dso_acs_password }}"
    body_format: json
    force_basic_auth: true
    validate_certs: no
    # temporarily accept 400s due to ROX-6699
    status_code: 200, 400
