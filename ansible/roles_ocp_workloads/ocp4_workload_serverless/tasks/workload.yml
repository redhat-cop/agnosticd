---
# Implement your Workload deployment tasks here
- name: Setting up workload for user
  ansible.builtin.debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Install Operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: serverless-operator
    install_operator_namespace: openshift-operators
    install_operator_channel: "{{ ocp4_workload_serverless_channel }}"
    install_operator_catalog: redhat-operators
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_serverless_automatic_install_plan_approval | default(true) }}"
    install_operator_starting_csv: "{{ ocp4_workload_serverless_starting_csv }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_serverless_use_catalog_snapshot | default(false) }}"
    install_operator_catalogsource_name: "{{ ocp4_workload_serverless_catalogsource_name | default('') }}"
    install_operator_catalogsource_namespace: openshift-operators
    install_operator_catalogsource_image: "{{ ocp4_workload_serverless_catalog_snapshot_image | default('') }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_serverless_catalog_snapshot_image_tag | default('') }}"

- name: Get API Version for KNativeServing
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: knativeservings.operator.knative.dev
  register: r_knative_serving

- name: Get API Version for KNativeEventing
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: knativeeventings.operator.knative.dev
  register: r_knative_eventing

- name: Set API Version facts
  ansible.builtin.set_fact:
    _ocp4_workload_serverless_knative_serving_api_version: "{{ r_knative_serving.resources[0].status.storedVersions[0] }}"
    _ocp4_workload_serverless_knative_eventing_api_version: "{{ r_knative_eventing.resources[0].status.storedVersions[0] }}"

- name: Install KNative Serving
  when: ocp4_workload_serverless_install_serving | bool
  block:
  - name: Create knative-serving namespace
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('file', 'ns-knative-serving.yaml') | from_yaml }}"
  - name: Create KNative Serving object
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'knative_serving.yaml.j2') | from_yaml }}"

  - name: Wait until KNative Serving installation is complete
    when: ocp4_workload_serverless_wait_for_deploy | bool
    kubernetes.core.k8s_info:
      api_version: "operator.knative.dev/{{ _ocp4_workload_serverless_knative_serving_api_version }}"
      kind: KnativeServing
      name: knative-serving
      namespace: knative-serving
    register: r_kn_serving
    retries: 30
    delay: 10
    until:
    - r_kn_serving.resources[0].status.conditions[0].status is defined
    - r_kn_serving.resources[0].status.conditions[0].status == "True"
    - r_kn_serving.resources[0].status.conditions[1].status is defined
    - r_kn_serving.resources[0].status.conditions[1].status == "True"
    - r_kn_serving.resources[0].status.conditions[2].status is defined
    - r_kn_serving.resources[0].status.conditions[2].status == "True"
    - r_kn_serving.resources[0].status.conditions[3].status is defined
    - r_kn_serving.resources[0].status.conditions[3].status == "True"

- name: Install KNative Eventing
  when: ocp4_workload_serverless_install_eventing | bool
  block:
  - name: Create knative-eventing namespace
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('file', 'ns-knative-eventing.yaml') | from_yaml }}"

  - name: Create knative-eventing namespace and KNative Eventing object
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'knative_eventing.yaml.j2') | from_yaml }}"

  - name: Wait until KNative Eventing installation is complete
    when: ocp4_workload_serverless_wait_for_deploy | bool
    kubernetes.core.k8s_info:
      api_version: "operator.knative.dev/{{ _ocp4_workload_serverless_knative_eventing_api_version }}"
      kind: KnativeEventing
      name: knative-eventing
      namespace: knative-eventing
    register: r_kn_eventing
    retries: 30
    delay: 10
    until:
    - r_kn_eventing.resources[0].status.conditions[0].status is defined
    - r_kn_eventing.resources[0].status.conditions[0].status == "True"
    - r_kn_eventing.resources[0].status.conditions[1].status is defined
    - r_kn_eventing.resources[0].status.conditions[1].status == "True"

- name: Install kn tool (only when serving is configured)
  when: ocp4_workload_serverless_install_serving | default(true) | bool
  block:
  - name: Get kn ConsoleCLIDownload
    kubernetes.core.k8s_info:
      api_version: console.openshift.io/v1
      kind: ConsoleCLIDownload
      name: kn
    register: r_kn_cli_download
    retries: 20
    delay: 5
    ignore_errors: true
    until:
    - r_kn_cli_download.resources is defined
    - r_kn_cli_download.resources | length > 0

  - name: Get kn download URL from ConsoleCLIDownload
    when: r_kn_cli_download.resources | length > 0
    ansible.builtin.set_fact:
      __ocp4_workload_serverless_kn_url: >-
        {{ r_kn_cli_download.resources[0] | to_json | from_json
        | json_query("spec.links[?contains(href,'-linux-amd64')].href") | first }}

  - name: No ConsoleCLIDownload for kn - try Route instead
    when: r_kn_cli_download.resources | length == 0
    block:
    - name: Get kn download route
      kubernetes.core.k8s_info:
        api_version: route.openshift.io/v1
        kind: Route
        name: kn-cli-downloads
        namespace: knative-serving
      register: r_kn_download

    - name: Get kn download URL from Route
      when:
      - r_kn_download.resources is defined
      - r_kn_download.resources | length > 0
      ansible.builtin.set_fact:
        __ocp4_workload_serverless_kn_url: "{{ r_kn_download.resources[0].status.ingress[0].host }}/amd64/linux/kn-linux-amd64.tar.gz"

  - name: Install kn cli tool if a download URL was found
    when: __ocp4_workload_serverless_kn_url is defined
    block:
    - name: Download kn cli tool
      ansible.builtin.get_url:
        url: "{{ __ocp4_workload_serverless_kn_url }}"
        validate_certs: false
        dest: /tmp/kn-linux-amd64.tar.gz
        mode: "o=rw,g=rw"
      register: r_kn
      until: r_kn is success
      retries: 10
      delay: 10

    - name: Install kn CLI on bastion
      become: true
      ansible.builtin.unarchive:
        src: /tmp/kn-linux-amd64.tar.gz
        remote_src: true
        dest: /usr/bin
        mode: "o=rwx,g=rwx,o=rx"
        owner: root
        group: root
      args:
        creates: /usr/bin/kn

    - name: Remove downloaded file
      ansible.builtin.file:
        state: absent
        path: /tmp/kn-linux-amd64.tar.gz

    - name: Create kn bash completion file
      become: true
      ansible.builtin.shell: /usr/bin/kn completion bash >/etc/bash_completion.d/kn
      args:
        creates: /etc/bash_completion.d/kn

# Leave this as the last task in the playbook.
- name: Workload tasks complete
  when: not silent|bool
  ansible.builtin.debug:
    msg: "Workload Tasks completed successfully."
