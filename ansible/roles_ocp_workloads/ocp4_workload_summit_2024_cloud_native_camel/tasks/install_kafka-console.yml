- name: Check Prometheus PodMonitor
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-{{ globex_ns_suffix }}'
    resource_definition: "{{ lookup('file', 'kafka-podmonitor.yaml') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Wait for AMQ Streams cluster to be running
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: '{{ user }}-{{ globex_ns_suffix }}'
    field_selectors:
      - status.phase=Running
    label_selectors:
      - statefulset.kubernetes.io/pod-name=kafka-kafka-1
  register: r_streams_pod
  retries: 40
  delay: 15
  until: r_streams_pod.resources | list | length == 1
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Check Kafka User
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-{{ globex_ns_suffix }}'
    resource_definition: "{{ lookup('file', 'kafka-user.yaml') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

# Install Console
- name: Evaluate Console Operator
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    kind: Subscription
    api_version: operators.coreos.com/v1alpha1
    definition:
      metadata:
        name: amq-streams-console
        namespace: openshift-operators
      spec:
        channel: alpha
        installPlanApproval: Automatic
        name: amq-streams-console
        source: redhat-operators
        sourceNamespace: openshift-marketplace

- name: Wait for AMQ Streams Console operator to be running
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - app.kubernetes.io/instance=amq-streams-console-operator-v2.8.0-13
    field_selectors:
      - status.phase=Running
  register: r_streams_pod
  retries: 10
  delay: 10
  until: r_streams_pod.resources | list | length == 1

- name: Check Console cr
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-{{ globex_ns_suffix }}'
    resource_definition: "{{ lookup('template', 'console.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user