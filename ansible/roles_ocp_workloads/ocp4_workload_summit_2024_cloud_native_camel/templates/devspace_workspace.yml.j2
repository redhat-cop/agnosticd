---
apiVersion: workspace.devfile.io/v1alpha2
kind: DevWorkspaceTemplate
metadata:
  annotations:
    che.eclipse.org/components-update-policy: managed
    che.eclipse.org/plugin-registry-url: 'https://devspaces.{{ route_subdomain }}/plugin-registry/v3/plugins/che-incubator/che-code/insiders/devfile.yaml'
  name: {{ user }}-workshop-camel-workspace
spec:
  commands:
    - apply:
        component: che-code-injector
      id: init-container-command
    - exec:
        commandLine: nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt 2>&1 &
        component: che-code-runtime-description
      id: init-che-code-command
  components:
    - container:
        cpuRequest: 30m
        command:
          - /entrypoint-init-container.sh
        env:
          - name: CHE_DASHBOARD_URL
            value: 'https://devspaces.{{ route_subdomain }}'
          - name: CHE_PLUGIN_REGISTRY_URL
            value: 'https://devspaces.{{ route_subdomain }}/plugin-registry/v3'
          - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
            value: 'http://plugin-registry.openshift-devspaces.svc:8080/v3'
          - name: CLUSTER_CONSOLE_URL
            value: 'https://console-openshift-console.{{ route_subdomain }}'
          - name: CLUSTER_CONSOLE_TITLE
            value: OpenShift console
          - name: OPENVSX_REGISTRY_URL
            value: 'https://open-vsx.org'
        memoryRequest: 32Mi
        sourceMapping: /projects
        cpuLimit: 500m
        volumeMounts:
          - name: checode
            path: /checode
        memoryLimit: 256Mi
        image: 'registry.redhat.io/devspaces/code-rhel8@sha256:73b6504a547f42880d7ee045c276bc1efe771fc90e629719e9f2d15a6a68dc5e'
      name: che-code-injector
    - attributes:
        app.kubernetes.io/component: che-code-runtime
        app.kubernetes.io/part-of: che-code.eclipse.org
        controller.devfile.io/container-contribution: true
      container:
        cpuRequest: 30m
        env:
          - name: CHE_DASHBOARD_URL
            value: 'https://devspaces.{{ route_subdomain }}'
          - name: CHE_PLUGIN_REGISTRY_URL
            value: 'https://devspaces.{{ route_subdomain }}/plugin-registry/v3'
          - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
            value: 'http://plugin-registry.openshift-devspaces.svc:8080/v3'
          - name: CLUSTER_CONSOLE_URL
            value: 'https://console-openshift-console.{{ route_subdomain }}'
          - name: CLUSTER_CONSOLE_TITLE
            value: OpenShift console
          - name: OPENVSX_REGISTRY_URL
            value: 'https://open-vsx.org'
        memoryRequest: 256Mi
        sourceMapping: /projects
        cpuLimit: 500m
        volumeMounts:
          - name: checode
            path: /checode
        memoryLimit: 1024Mi
        image: 'registry.redhat.io/devspaces/udi-rhel8@sha256:720d4bff5924ac76af5b25606ebfb2bcf853212af6c8202f591c4954a88f57f6'
        endpoints:
          - attributes:
              cookiesAuthEnabled: true
              discoverable: false
              type: main
              urlRewriteSupported: true
            exposure: public
            name: che-code
            protocol: https
            secure: true
            targetPort: 3100
          - attributes:
              discoverable: false
              urlRewriteSupported: false
            exposure: public
            name: code-redirect-1
            protocol: https
            targetPort: 13131
          - attributes:
              discoverable: false
              urlRewriteSupported: false
            exposure: public
            name: code-redirect-2
            protocol: https
            targetPort: 13132
          - attributes:
              discoverable: false
              urlRewriteSupported: false
            exposure: public
            name: code-redirect-3
            protocol: https
            targetPort: 13133
      name: che-code-runtime-description
    - name: checode
      volume: {}
  events:
    postStart:
      - init-che-code-command
    preStart:
      - init-container-command
---
apiVersion: workspace.devfile.io/v1alpha2
kind: DevWorkspace
metadata:
  name: {{ user }}-workshop-camel-workspace
spec:
  contributions:
    - kubernetes:
        name: {{ user }}-workshop-camel-workspace
      name: editor
  routingClass: che
  started: true
  template:
    attributes:
      controller.devfile.io/storage-type: per-workspace
    components:
      - container:
          cpuLimit: 1000m
          cpuRequest: 500m
          image: 'quay.io/devfile/universal-developer-image:latest'
          memoryLimit: 3Gi
          memoryRequest: 1Gi
          sourceMapping: /projects
        name: tools
    commands:
      - id: init-setup
        exec:
          label: '01: initial setup'
          component: "tools"
          workingDir: "${PROJECT_SOURCE}"
          commandLine: |
            #if sdkman is present use it
            #[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh" && sdk default java 17.0.7-tem
            #if no sdkaman do it manually
            #[[ -d /usr/lib/jvm/java-17-openjdk ]] && rm -rf ${HOME}/.java/current/* && ln -s /usr/lib/jvm/java-17-openjdk/* ${HOME}/.java/current
            #copy maven settings pointing to in-cluster nexus mirror
            [[ -s "$PROJECT_SOURCE/settings.xml" ]] && cp -v $PROJECT_SOURCE/settings.xml $HOME/.m2/
            #setup git default config
            git config --local credential.helper store
            git config --local pull.rebase true
            git config --local fetch.prune true
            git config --local diff.colorMoved zebra
            git config user.name "{{ user }}"
            git config user.email "{{ user }}@opentlc.com"
            echo "source /usr/share/bash-completion/completions/git" >> /home/user/.bashrc
            oc completion bash > /home/user/.oc_bash_completion
            echo "source /home/user/.oc_bash_completion" >> /home/user/.bashrc
      - id: oc-login
        exec:
          label: '02: OC Login'
          component: "tools"
          commandLine: |
            clear
            echo
            echo "current user: $(oc whoami)"
            echo "current project: $(oc project)"
            echo
            oc login -u {{ user }} -p {{ ocp4_workload_authentication_htpasswd_user_password }} "https://$KUBERNETES_SERVICE_HOST:443" --insecure-skip-tls-verify=true
            oc project {{ user }}-{{ camel_ns_suffix }}    
    events:
      postStart:
        - init-setup # <== Start of the workspace happens after this command is completed
    projects:
      - git:
          remotes:
            origin: 'https://gitea.{{ route_subdomain }}/{{ user }}/workshop_camel_workspace.git'
        name: workshop-camel-workspace