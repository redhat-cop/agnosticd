---

- name: Set internal facts
  set_fact:
    _internal_image_repo: >-
     {{ ocp4_workload_multicluster_devsecops_validated_pattern_docker_registry }}/{{
        ocp4_workload_multicluster_devsecops_validated_pattern_docker_username }}/inventory
    _internal_manifest_repo: "{{ _ocp4_workload_multicluster_devsecops_validated_pattern_gitea_repo_devsecops_url }}"
    _internal_manifest_repo_name: "{{ ocp4_workload_multicluster_devsecops_validated_pattern_gitea_username }}/multicluster-devsecops-pattern"
    _internal_manifest_file_dev: gitops/inventory/overlays/dev/kustomization.yaml
    _internal_manifest_file_prod: gitops/inventory/overlays/prod/kustomization.yaml
    _internal_manifest_file_fail: gitops/inventory/overlays/fail/kustomization.yaml
    _internal_git_repo_host: "{{ _ocp4_workload_multicluster_devsecops_validated_pattern_gitea_hostname }}"
    _internal_sonarqube_host_url: "{{ _ocp4_workload_multicluster_devsecops_validated_pattern_sonarqube_host_url }}"
    _internal_ci_namespace: "{{ ocp4_workload_multicluster_devsecops_validated_pattern_ci_namespace }}"
    _internal_webhook_secret_key: "{{ common_password }}"
    _internal_gitea_token: "{{ _ocp4_workload_multicluster_devsecops_validated_pattern_gitea_token }}"

- name: Base64 encode basic auth
  set_fact:
    _internal_docker_registry: "{{ ocp4_workload_multicluster_devsecops_validated_pattern_docker_registry }}"
    _internal_docker_registry_username: "{{ ocp4_workload_multicluster_devsecops_validated_pattern_docker_username }}"
    _internal_docker_registry_password: "{{ ocp4_workload_multicluster_devsecops_validated_pattern_docker_password }}"
    _internal_docker_registry_auth: "{{ ocp4_workload_multicluster_devsecops_validated_pattern_docker_username }}:{{ ocp4_workload_multicluster_devsecops_validated_pattern_docker_password }}" # yamllint disable-line rule:line-length

- name: Set docker config json
  set_fact:
    _internal_docker_config: "{{ lookup('template', 'templates/docker-config.json.j2') | to_nice_json | b64encode }}"

- name: Base64 encode basic auth
  set_fact:
    _internal_cosign_key: "{{ lookup('file', 'files/cosign.key') | b64encode }}"
    _internal_cosign_password: "{{ ocp4_workload_multicluster_devsecops_validated_pattern_cosign_password | b64encode }}"
    _internal_cosign_pub: "{{ lookup('file', 'files/cosign.pub') | b64encode  }}"

- name: Clone application source code
  block:
  - name: Clone config repository
    ansible.builtin.git:
      accept_hostkey: true
      force: true
      repo: "{{ _ocp4_workload_multicluster_devsecops_validated_pattern_gitea_repo_devsecops_url }}"
      dest: "~/multicluster-devsecops-pattern"
      version: main
    environment:
      GIT_SSL_NO_VERIFY: "true"

- name: Fetch template from remote host
  include_tasks: fetch_and_apply_template.yml
  loop:
  - binding-inventory.yaml
  - binding-inventory-unsigned.yaml
  - secret-webhook-secret-inventory.yaml
  - secret-image-registry-secret.yaml
  - secret-cosign-secret.yaml
  - secret-gitea-token.yaml
  - kustomization.yaml
  vars:
    _folder: /home/ec2-user/multicluster-devsecops-pattern/config/pipeline/inventory

- name: Fetch template from remote host
  include_tasks: fetch_and_apply_template.yml
  loop:
  - image-registry-secret.yaml
  vars:
    _folder: /home/ec2-user/multicluster-devsecops-pattern/gitops/inventory/base

- name: Add new files to the repository
  command:
    chdir: >-
      /home/ec2-user/multicluster-devsecops-pattern
    cmd: "git add ."
  ignore_errors: true

- name: Commit changes to the repository
  command:
    chdir: >-
      /home/ec2-user/multicluster-devsecops-pattern
    cmd: >-
      git commit -a -m 'Updates for starting scenario.'
  ignore_errors: true

- name: Push all changes back to the project repository
  command:
    chdir: >-
      /home/ec2-user/multicluster-devsecops-pattern
    cmd: >-
      git push {{ _ocp4_workload_multicluster_devsecops_validated_pattern_gitea_repo_devsecops_url }}