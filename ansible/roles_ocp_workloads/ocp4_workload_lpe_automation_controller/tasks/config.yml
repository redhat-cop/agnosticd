---
- name: Create automation controller projects
  environment:
    CONTROLLER_HOST: "https://{{ automation_controller_hostname }}"
    CONTROLLER_USERNAME: admin
    CONTROLLER_PASSWORD: "{{ automation_controller_admin_password }}"
  block:
    - name: Upload automationcontroller manfiest
      when: automationcontroller_manifest_url is defined
      block:
        - name: Fetch automation controller manifest
          get_url:
            url: "{{ automationcontroller_manifest_url }}"
            dest: /tmp/automationcontroller_manifest.zip
            username: "{{ automationcontroller_asset_username | default(omit) }}"
            password: "{{ automationcontroller_asset_password | default(omit) }}"

        - name: Set the license using manfiest file
          awx.awx.license:
            manifest: "/tmp/automationcontroller_manifest.zip"
            validate_certs: false

        - name: Remove automation controller manifest from installer host
          file:
            path: /tmp/automationcontroller_manifest.zip
            state: absent

    - name: Create credentials
      when: automation_controller_credentials is defined
      awx.awx.credential:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        organization: "{{ item.organization | default('Default') }}"
        credential_type: "{{ item.credential_type | default('Machine') }}"
        inputs:
          username: "{{ item.username | default(omit) }}"
          password: "{{ item.password | default(omit) }}"
          become_method: "{{ item.become_method | default(omit) }}"
          ssh_key_data: "{{ item.ssh_key_data | default(omit) }}"
          client: "{{ item.client | default(omit) }}"
          tenant: "{{ item.tenant| default(omit) }}"
          subscription: "{{ item.subscription | default(omit) }}"
        validate_certs: false
        state: present
      loop: "{{ automation_controller_credentials }}"

    - name: Create automation controller project
      when: automation_controller_projects is defined
      awx.awx.project:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        organization: "{{ item.organization | default('Default') }}"
        scm_type: "{{ item.scm_type | default('git')}}"
        scm_branch: "{{ item.scm_branch | default(omit) }}"
        scm_url: "{{ item.scm_url }}"
        wait: true
        validate_certs: false
        state: present
      loop: "{{ automation_controller_projects }}"

    - name: Create automation controller inventory
      when: automation_controller_inventories is defined
      awx.awx.inventory:
        controller_host: "https://{{ automation_controller_hostname }}"
        controller_username: admin
        controller_password: "{{ automation_controller_admin_password }}"
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        organization: "{{ item.organization | default('Default') }}"
        validate_certs: false
        state: present
      loop: "{{ automation_controller_inventories }}"

    - name: Add an inventory source
      when: automation_controller_inventory_sources is defined
      block:
        - name: Create inventory sources
          awx.awx.inventory_source:
            name: "{{ item.name }}"
            description: "{{ item.description }}"
            organization: "{{ item.organization | default('Default') }}"
            inventory: "{{ item.inventory }}"
            credential: "{{ item.credential }}"
            source: "{{ item.source |default('ec2') }}"
            host_filter: "{{ item.host_filter |default(omit) }}"
            validate_certs: false
            state: present
          loop: "{{ automation_controller_inventory_sources }}"

        - name: Update a single inventory source
          awx.awx.inventory_source_update:
            name: "{{ item.name }}"
            organization: "{{ item.organization | default('Default') }}"
            inventory: "{{ item.inventory }}"
          loop: "{{ automation_controller_inventory_sources }}"

    - name: Create automationcontroller Job templates
      when: automation_controller_jobtemplates is defined
      awx.awx.job_template:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        organization: "{{ item.organization | default('Default') }}"
        job_type: "{{ item.job_type | default('run') }}"
        inventory: "{{ item.inventory }}"
        project: "{{ item.project }}"
        playbook: "{{ item.playbook }}"
        limit: "{{ item.limit | default(omit)}}"
        extra_vars: "{{ item.extra_vars | default(omit)}}"
        become_enabled: "{{ item.become_enabled | default(omit)}}"
        credentials: "{{ item.credentials }}"
        validate_certs: false
        state: present
      loop: "{{ automation_controller_jobtemplates }}"
