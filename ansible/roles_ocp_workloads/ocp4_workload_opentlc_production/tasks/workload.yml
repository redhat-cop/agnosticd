---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Expose Image Registry Route
  when: ocp4_workload_opentlc_production_expose_registry_route | bool
  k8s:
    state: present
    definition: "{{ lookup('file', './files/image_registry.yaml' ) | from_yaml }}"

- name: Set up Build Defaults
  when: ocp4_workload_opentlc_production_set_build_defaults | bool
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/build_defaults.yaml' ) | from_yaml }}"

- name: Set up Image Pruning
  when: ocp4_workload_opentlc_production_enable_image_pruning | bool
  k8s:
    state: present
    definition: "{{ lookup('template', './files/image_pruner.yaml' ) | from_yaml }}"

- name: Remove self-provisioner role from all users
  when: ocp4_workload_opentlc_production_remove_self_provisioner | bool
  block:
  - name: Set clusterRoleBinding auto-update to false
    command: oc annotate -n default --overwrite clusterrolebinding.rbac self-provisioners rbac.authorization.kubernetes.io/autoupdate=false

  - name: Remove system:authenticated from self-provisioner role
    command: oc adm policy remove-cluster-role-from-group self-provisioner system:authenticated system:authenticated:oauth
    ignore_errors: true

  - name: create our own {{ ocp4_workload_opentlc_production_self_provisioner_group }} group
    command: "oc adm groups new {{ ocp4_workload_opentlc_production_self_provisioner_group }}"
    ignore_errors: true

  - name: allow {{ ocp4_workload_opentlc_production_self_provisioner_group }} group members to provision their own projects
    command: "oc adm policy add-cluster-role-to-group self-provisioner {{ ocp4_workload_opentlc_production_self_provisioner_group }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
