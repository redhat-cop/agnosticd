---
- name: Generate admin user password
  when: ocp4_workload_deploy_hosted_cluster_admin_password | default('') | length == 0
  ansible.builtin.set_fact:
    _ocp4_workload_deploy_hosted_cluster_admin_password: >-
      {{ lookup('password', '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ ocp4_workload_deploy_hosted_cluster_admin_password_length
      ) }}

- name: Use provided admin password
  when: ocp4_workload_deploy_hosted_cluster_admin_password | default('') | length > 0
  ansible.builtin.set_fact:
    _ocp4_workload_deploy_hosted_cluster_admin_password: "{{ ocp4_workload_deploy_hosted_cluster_admin_password }}"

- name: Set up randomized user password array
  when: ocp4_workload_deploy_hosted_cluster_user_password_randomized | bool
  ansible.builtin.set_fact:
    _ocp4_workload_deploy_hosted_cluster_user_passwords: >-
      {{ _ocp4_workload_deploy_hosted_cluster_user_passwords + [ lookup('password',
        '/dev/null chars=ascii_letters,digits '
        ~ 'length=' ~ ocp4_workload_deploy_hosted_cluster_user_password_length ) ] }}
  loop: "{{ range(0, ocp4_workload_deploy_hosted_cluster_user_count, 1) | list }}"

- name: Set up common user password array
  when: not ocp4_workload_deploy_hosted_cluster_user_password_randomized | bool
  block:
  - name: Generate common user passwords
    when: ocp4_workload_deploy_hosted_cluster_user_password | default('') | length == 0
    ansible.builtin.set_fact:
      _ocp4_workload_deploy_hosted_cluster_user_password: >-
        {{ lookup('password', '/dev/null chars=ascii_letters,digits '
            ~ 'length=' ~ ocp4_workload_deploy_hosted_cluster_user_password_length
        ) }}

  - name: Use provided user passwords
    when: ocp4_workload_deploy_hosted_cluster_user_password | default('') | length > 0
    ansible.builtin.set_fact:
      _ocp4_workload_deploy_hosted_cluster_user_password: "{{ ocp4_workload_deploy_hosted_cluster_user_password }}"

  - name: Generate user passwords array for common password
    ansible.builtin.set_fact:
      _ocp4_workload_deploy_hosted_cluster_user_passwords: >-
        {{ _ocp4_workload_deploy_hosted_cluster_user_passwords + [ _ocp4_workload_deploy_hosted_cluster_user_password ] }}
    loop: "{{ range(0, ocp4_workload_deploy_hosted_cluster_user_count, 1) | list }}"

- name: Create temporary htpasswd file
  ansible.builtin.tempfile:
    state: file
    suffix: htpasswd
  register: r_htpasswd

- name: Add admin user to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ ocp4_workload_deploy_hosted_cluster_admin_user }}"
    password: "{{ _ocp4_workload_deploy_hosted_cluster_admin_password }}"

- name: Add users and passwords to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ ocp4_workload_deploy_hosted_cluster_user_base }}{{ item + 1 }}"
    password: "{{ _ocp4_workload_deploy_hosted_cluster_user_passwords[ item ] }}"
  loop: "{{ range(0, ocp4_workload_deploy_hosted_cluster_user_count, 1) | list }}"

- name: Read contents of htpasswd file
  ansible.builtin.slurp:
    src: "{{ r_htpasswd.path }}"
  register: r_htpasswd_file

- name: Remove generated htpasswd file
  ansible.builtin.file:
    path: "{{ r_htpasswd.path }}"
    state: absent

- name: Ensure secret htpasswd-{{ guid }} is absent
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: "htpasswd-{{ guid }}"
    namespace: local-cluster
  register: r_htpasswd_secret_absent
  retries: 5
  delay: 10
  until: r_htpasswd_secret_absent is success

- name: Create secret htpasswd-{{ guid }}
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'secret-htpasswd.yaml.j2' ) | from_yaml }}"
