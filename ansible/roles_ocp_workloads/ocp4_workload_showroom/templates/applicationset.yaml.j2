---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: "{{ ocp4_workload_showroom_namespace }}-multiuser"
  namespace: openshift-gitops
spec:
  goTemplate: true
  generators:
  - list:
      elements:
{% for n in range(1, _user_count | int + 1 ) %}
      - user: user{{ n }}
        userData: |
          {{ _showroom_user_data['users']['user'~n] | to_nice_yaml | indent(10)}}
{% endfor %}
  template:
    metadata:
      name: "{{ ocp4_workload_showroom_namespace }}-{% raw %}{{.user}}{% endraw %}"
      namespace: openshift-gitops
      finalizers:
      - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        name: ''
        namespace: "{{ ocp4_workload_showroom_namespace }}-{% raw %}{{.user}}{% endraw %}"
        server: https://kubernetes.default.svc
      project: default
      syncPolicy:
        syncOptions:
        - CreateNamespace=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: {{ ocp4_workload_showroom_chart_package_url }}
        chart: {{ ocp4_workload_showroom_deployer_chart_name }}
        targetRevision: {{ ocp4_workload_showroom_deployer_chart_version }}
        helm:
          releaseName: {{ ocp4_workload_showroom_name }}
          values: |
            guid: {{ guid }}
            deployer:
              domain: {{ _deployer_domain }}
            terminal:
              setup: "{{ ('true' if ocp4_workload_showroom_terminal_type == 'showroom' else 'false') | string | lower }}"
              image: {{ ocp4_workload_showroom_terminal_image }}
              resources:
                requests:
                  cpu: "{{ ocp4_workload_showroom_terminal_requests_cpu }}"
                  memory: "{{ ocp4_workload_showroom_terminal_requests_memory }}"
                limits:
                  cpu: "{{ ocp4_workload_showroom_terminal_limits_cpu }}"
                  memory: "{{ ocp4_workload_showroom_terminal_limits_memory }}"
            wetty:
              setup: "{{ ('true' if ocp4_workload_showroom_terminal_type == 'wetty' else 'false') | string | lower }}"
              image: {{ ocp4_workload_showroom_wetty_image }}
              resources:
                requests:
                  cpu: "{{ ocp4_workload_showroom_terminal_requests_cpu }}"
                  memory: "{{ ocp4_workload_showroom_terminal_requests_memory }}"
                limits:
                  cpu: "{{ ocp4_workload_showroom_terminal_limits_cpu }}"
                  memory: "{{ ocp4_workload_showroom_terminal_limits_memory }}"
              ssh:
                sshHost: {{ _showroom_user_data.bastion_public_hostname }}
                autoSshToBastion: "{{ ('true' if ocp4_workload_showroom_wetty_ssh_bastion_login | bool else 'false') | string | lower }}"
                sshAuth: password
                sshUser: {{ _showroom_user_data.bastion_ssh_user_name }}
                sshPass: {{ _showroom_user_data.bastion_ssh_password }}
            content:
              repoUrl: {{ ocp4_workload_showroom_content_git_repo }}
              repoRef: {{ ocp4_workload_showroom_content_git_repo_ref }}
              antoraPlaybook: {{ ocp4_workload_showroom_content_antora_playbook }}
              contentOnly: "{{ ocp4_workload_showroom_content_only | string | lower }}"
              user_data: |-
                {{ _showroom_user_data | to_nice_yaml | indent(16) }}
