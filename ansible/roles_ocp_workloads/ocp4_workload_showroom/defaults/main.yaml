---
become_override: false
ocp_username: user-redhat.com
silent: false
tmp_dir: /tmp/{{ guid }}
tmp_kubeconfig: "{{ tmp_dir }}/.kube/config"

ocp4_workload_showroom_name: "showroom"
ocp4_workload_showroom_namespace: "showroom-{{ guid | default('00') }}"
ocp4_workload_showroom_namespace_display: Showroom Guide

# Content repository to be rendered as lab instructions
ocp4_workload_showroom_content_git_repo: https://github.com/rhpds/showroom_template_default.git

# Log into bastion automatically from terminal
ocp4_workload_showroom_auto_ssh_bastion_login_enable: false

# The service name to look for when waiting for the created route
# Usually `showroom-proxy` for multi-pod deployment and `showroom` for single pod deployment
ocp4_workload_showroom_service_name: showroom-proxy

# How to deploy Showroom. Options are `helm` and `argocd`
# For `argocd' ocop4_workload_openshift_gitops must have been deployed first with the following options:
# (OpenShift GitOps 1.10 or newer is preferred but it should work just as well with older versions)
#   ocp4_workload_openshift_gitops_channel: gitops-1.10
#   ocp4_workload_openshift_gitops_setup_cluster_admin: true
#   ocp4_workload_openshift_gitops_update_route_tls: true
#   ocp4_workload_openshift_gitops_rbac_update: true
# Deploying using `argocd` without these options will fail
ocp4_workload_showroom_deployment_type: helm

# Helm Chart to use for Showroom. This needs to be a packaged chart in a registry.
# For the example below the source registry is https://github.com/rhpds/showroom-deployer
ocp4_workload_showroom_chart_package_url: https://rhpds.github.io/showroom-deployer
ocp4_workload_showroom_deployer_chart_name: showroom
ocp4_workload_showroom_deployer_chart_version: "0.4.8"

# URL to download Helm from if it's not already there (for Helm type deployment)
ocp4_workload_showroom_tools_root_url: >-
  https://mirror.openshift.com/pub/openshift-v4/clients

ocp4_workload_showroom_helm_version: latest

# defaults for _showroom_user_data so env destroys don't fail
#
_showroom_user_data:
  bastion_public_hostname: 'test_hostname'
  bastion_ssh_password: 'test_password'
  bastion_ssh_user_name: 'test_user_name'
