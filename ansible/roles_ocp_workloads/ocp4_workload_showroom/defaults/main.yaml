---
become_override: false
ocp_username: user-redhat.com
silent: false

tmp_dir: /tmp/{{ guid }}
tmp_kubeconfig: "{{ tmp_dir }}/.kube/config"

ocp4_workload_showroom_name: "showroom"
ocp4_workload_showroom_namespace: "showroom-{{ guid | default('00000') }}"
ocp4_workload_showroom_namespace_display: Showroom Guide

# Content repository to be rendered as lab instructions
ocp4_workload_showroom_content_git_repo: https://github.com/rhpds/showroom_template_default.git
ocp4_workload_showroom_content_git_repo_ref: main

# Which Antora Playbook to use in the content repo
ocp4_workload_showroom_content_antora_playbook: default-site.yml

# Only display the content pane, no other tabs will be available
ocp4_workload_showroom_content_only: false

# Which terminal to deploy:
# - wetty: deploy the wetty terminal image. You can then set
#          ocp4_workload_showroom_auto_ssh_bastion_login_enable to true
#          to automatically ssh to a bastion
# - showroom: deploy the showroom terminal image
# - "": No terminal deployed
ocp4_workload_showroom_terminal_type: showroom

# Requests and limits for the terminal pod (same vars for either showroom or wetty)
ocp4_workload_showroom_terminal_requests_cpu: 500m
ocp4_workload_showroom_terminal_requests_memory: 256Mi
ocp4_workload_showroom_terminal_limits_cpu: 500m
ocp4_workload_showroom_terminal_limits_memory: 1Gi

# Showroom Terminal Image. Options include:
# - quay.io/rhpds/openshift-showroom-terminal-ocp:latest
# - quay.io/rhpds/openshift-showroom-terminal-rosa:latest
# - quay.io/rhpds/openshift-showroom-terminal-aro:latest
ocp4_workload_showroom_terminal_image: quay.io/rhpds/openshift-showroom-terminal-ocp:latest
# Wetty Image
ocp4_workload_showroom_wetty_image: docker.io/wettyoss/wetty:latest

# Log into bastion automatically from wetty
ocp4_workload_showroom_wetty_ssh_bastion_login: false

# The service name to look for when waiting for the created route
# Usually `showroom-proxy` for multi-pod deployment and `showroom` for single pod deployment
ocp4_workload_showroom_service_name: "{{ ocp4_workload_showroom_name }}"

# How to deploy Showroom. Options are `helm` and `argocd`
# For `argocd' ocop4_workload_openshift_gitops must have been deployed first with the following options:
# (OpenShift GitOps 1.10 or newer is preferred but it should work just as well with older versions)
#   ocp4_workload_openshift_gitops_channel: gitops-1.10
#   ocp4_workload_openshift_gitops_setup_cluster_admin: true
#   ocp4_workload_openshift_gitops_update_route_tls: true
#   ocp4_workload_openshift_gitops_rbac_update: true
# Deploying using `argocd` without these options will fail
ocp4_workload_showroom_deployment_type: helm

# Helm Chart to use for Showroom. This needs to be a packaged chart in a registry.
# For the example below the source registry is https://github.com/rhpds/showroom-deployer
ocp4_workload_showroom_chart_package_url: https://rhpds.github.io/showroom-deployer
ocp4_workload_showroom_deployer_chart_name: showroom-single-pod
# Available versions are at https://github.com/rhpds/showroom-deployer/releases
ocp4_workload_showroom_deployer_chart_version: "1.0.1"

# URL to download Helm from if it's not already there (for Helm type deployment)
ocp4_workload_showroom_tools_root_url: https://mirror.openshift.com/pub/openshift-v4/clients
ocp4_workload_showroom_helm_version: latest

# defaults for _showroom_user_data so env destroys don't fail
_showroom_user_data:
  bastion_public_hostname: 'test_hostname'
  bastion_ssh_password: 'test_password'
  bastion_ssh_user_name: 'test_user_name'
