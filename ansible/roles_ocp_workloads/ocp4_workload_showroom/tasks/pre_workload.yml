---
# Implement your Pre Workload deployment tasks here
# -------------------------------------------------

- name: If deploying to a remote OCP write kubeconfig if requested
  when:
    - ocp4_workload_showroom_openshift_api_ca_cert is defined
    - ocp4_workload_showroom_openshift_api_token is defined
    - ocp4_workload_showroom_openshift_api_url is defined
  block:
    - name: Create temporary file for kubeconfig
      ansible.builtin.tempfile:
        suffix: .kubeconfig
      register: r_kubeconfig_tempfile

    - name: Set _showroom_kubeconfig
      ansible.builtin.set_fact:
        _showroom_kubeconfig: "{{ r_kubeconfig_tempfile.path }}"

    - name: Write content to kubeconfig
      ansible.builtin.copy:
        dest: "{{ _showroom_kubeconfig }}"
        content: |
          apiVersion: v1
          kind: Config
          clusters:
          - name: cluster
            cluster:
              server: {{ ocp4_workload_showroom_openshift_api_url | to_json }}
              certificate-authority-data: {{ ocp4_workload_showroom_openshift_api_ca_cert | b64encode | to_json }}
          contexts:
          - name: context
            context:
              cluster: cluster
              user: user
          current-context: context
          users:
          - name: user
            user:
              token: {{ ocp4_workload_showroom_openshift_api_token | to_json }}

- name: Prepare Generic Variables
  ansible.builtin.include_tasks: prepare-variables.yaml

# stat helm, install if not present
- name: Is helm even here
  block:

    - name: Is helm present
      ansible.builtin.command:
        cmd: helm version
      register: result

  rescue:

    - name: Install Helm
      ansible.builtin.shell: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Wait until helm in path
      ansible.builtin.wait_for:
        path: /usr/local/bin/helm

# Leave these as the last tasks in the playbook
# ---------------------------------------------

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: pre_workload tasks complete
  when:
    - not silent | bool
    - not workload_shared_deployment | default(false) | bool
  ansible.builtin.debug:
    msg: "Pre-Workload tasks completed successfully."

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: pre_workload tasks complete
  when:
    - not silent | bool
    - workload_shared_deployment | default(false) | bool
  ansible.builtin.debug:
    msg: "Pre-Software checks completed successfully"
