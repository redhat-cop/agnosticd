---
# Implement your Pre Workload deployment tasks here
# -------------------------------------------------

- name: If deploying to a remote OCP write kubeconfig if requested
  when:
  - showroom_openshift_api_ca_cert is defined
  - showroom_openshift_api_token is defined
  - showroom_openshift_api_url is defined
  block:
  - name: Create temporary file for kubeconfig
    ansible.builtin.tempfile:
      suffix: .kubeconfig
    register: r_kubeconfig_tempfile

  - name: Set _showroom_kubeconfig
    ansible.builtin.set_fact:
      _showroom_kubeconfig: "{{ r_kubeconfig_tempfile.path }}"

  - name: Write content to kubeconfig
    ansible.builtin.copy:
      dest: "{{ _showroom_kubeconfig }}"
      content: |
        apiVersion: v1
        kind: Config
        clusters:
        - name: cluster
          cluster:
            server: {{ showroom_openshift_api_url | to_json }}
            certificate-authority-data: {{ showroom_openshift_api_ca_cert | b64encode | to_json }}
        contexts:
        - name: context
          context:
            cluster: cluster
            user: user
        current-context: context
        users:
        - name: user
          user:
            token: {{ showroom_openshift_api_token | to_json }}

- name: Prepare Generic Variables
  ansible.builtin.include_tasks: prepare-variables.yaml

- name: Check if Helm should be installed
  when: ocp4_workload_showroom_deployment_type == "helm"
  block:
  - name: Check if helm is in /usr/local/bin
    ansible.builtin.stat:
      path: /usr/local/bin/helm
    register: r_helm_installed_local

  - name: Check if helm is in /usr/bin
    ansible.builtin.stat:
      path: /usr/bin/helm
    register: r_helm_installed

  - name: Install Helm if it's not there
    when: not (r_helm_installed_local.stat.exists or r_helm_installed.stat.exists)
    block:
    - name: Set URL for helm
      ansible.builtin.set_fact:
        helm_url: >-
          {{ ocp4_workload_showroom_tools_root_url }}/helm/{{ ocp4_workload_showroom_helm_version }}/helm-linux-amd64.tar.gz

    - name: Install Helm as root
      become: true
      block:
      - name: Install helm command
        ansible.builtin.unarchive:
          src: "{{ helm_url }}"
          remote_src: true
          dest: /usr/local/bin
          mode: "0775"
          owner: root
          group: root
        retries: 10
        register: r_client
        until: r_client is success
        delay: 30

      - name: Link downloaded helm command to helm
        ansible.builtin.file:
          src: /usr/local/bin/helm-linux-amd64
          dest: /usr/local/bin/helm
          owner: root
          group: root
          state: link

      - name: Create Helm Bash completion file
        ansible.builtin.shell: /usr/local/bin/helm completion bash >/etc/bash_completion.d/helm

# Leave these as the last tasks in the playbook
# ---------------------------------------------

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: Pre_workload tasks complete
  when:
  - not silent | bool
  - not workload_shared_deployment | default(false) | bool
  ansible.builtin.debug:
    msg: "Pre-Workload tasks completed successfully."

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: Pre_workload tasks complete
  when:
  - not silent | bool
  - workload_shared_deployment | default(false) | bool
  ansible.builtin.debug:
    msg: "Pre-Software checks completed successfully"
