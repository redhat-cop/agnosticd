---
# Implement your workload removal tasks here
# ------------------------------------------

# This playbook is called upon deletion of the environment
# OpenShift resources get deleted automatically
#
# Leave this as the last task in the playbook.
# --------------------------------------------

- name: Remove via Argo when present
  when: r_argo_present.resources | length > 0
  block:

    - name: Remove showroom Application (single user)
      when:
        - _showroom_user_data.users is undefined
      kubernetes.core.k8s:
        kubeconfig: "{{ _showroom_kubeconfig | default(omit) }}"
        state: absent
        definition: "{{ lookup('template', 'application.yaml.j2') }}"

    - name: Remove showroom ApplicationSet (multi user)
      when:
        - _showroom_user_data.users is defined
      kubernetes.core.k8s:
        kubeconfig: "{{ _showroom_kubeconfig | default(omit) }}"
        state: absent
        definition: "{{ lookup('template', 'applicationset.yaml.j2') }}"

- name: Remove namespaces for Single User
  ignore_errors: true
  when:
    - _showroom_user_data.users is undefined
  kubernetes.core.k8s:
    kubeconfig: "{{ _showroom_kubeconfig | default(omit) }}"
    state: absent
    api_version: v1
    kind: Namespace
    name: "{{ ocp4_workload_showroom_namespace }}"

- name: Remove namespaces for Multi User
  ignore_errors: true
  when:
    - _showroom_user_data.users is defined
  loop: >-
    {{ _showroom_user_data.users | dict2items }}
  loop_control:
    loop_var: _showroom_users_item
  kubernetes.core.k8s:
    kubeconfig: "{{ _showroom_kubeconfig | default(omit) }}"
    state: absent
    api_version: v1
    kind: Namespace
    name: "{{ _showroom_namespace }}"
  vars:
    _showroom_user: "{{ _showroom_users_item.key }}"
    _showroom_namespace: "{{ ocp4_workload_showroom_namespace }}-{{ _showroom_user }}"

- name: remove_workload tasks complete
  when: not silent | bool
  ansible.builtin.debug:
    msg: "Remove Workload tasks completed successfully."
