---

# First target is OCP with bastion
#
# if we're using the shared cluster
# .. create a kubeconfig file
# .. get the user-data.yaml
# .. create the namespace
# .. run the helm chart
#
# for a shared cluster with a serviceaccount user
# must create namespace here because
# helm chart cannot create the namespace
# because it doesn't respect ProjectRequest
#
# use _showroom_kubeconfig if showroom user was setup
# otherwise use default

# setup namespaces

    #- name: Detect presence of Argo
    #  kubernetes.core.k8s_info:
    #    api_version: argoproj.io/v1alpha1
    #    kind: ArgoCD
    #    name: openshfit-gitops
    #  register: r_argo_present

- name: Deploy via Argo when present
  when: r_argo_present.resources | length > 0
  block:

    - name: Debug showroom_user data
      ansible.builtin.debug:
        var: _showroom_user_data

    - name: Install showroom Application (single user)
      when:
        - _showroom_user_data.users is undefined
      kubernetes.core.k8s:
        kubeconfig: "{{ _showroom_kubeconfig | default(omit) }}"
        state: present
        definition: "{{ lookup('template', 'application.yaml.j2') }}"

    - name: Install showroom ApplicationSet (multi user)
      when:
        - _showroom_user_data.users is defined
      kubernetes.core.k8s:
        kubeconfig: "{{ _showroom_kubeconfig | default(omit) }}"
        state: present
        definition: "{{ lookup('template', 'applicationset.yaml.j2') }}"


- name: Argo NOT present, deploy via Helm
  when: r_argo_present.resources | length == 0
  block:

    - name: Deploy showroom via Helm for single user
      when:
        - _showroom_user_data.users is undefined
      ansible.builtin.include_tasks:
        file: deploy-showroom.yaml
      vars:
        _showroom_namespace: "{{ ocp4_workload_showroom_namespace }}"
        _showroom_vars: "{{ _showroom_user_data | combine({'guid': guid}) }}"

    - name: Deploy showroom via Helm for multi users
      when:
        - _showroom_user_data.users is defined
      loop: >-
        {{ _showroom_user_data.users | dict2items }}
      loop_control:
        loop_var: _showroom_users_item
      ansible.builtin.include_tasks:
        file: deploy-showroom.yaml
      vars:
        _showroom_user: "{{ _showroom_users_item.key }}"
        _showroom_namespace: "{{ ocp4_workload_showroom_namespace }}-{{ _showroom_user }}"
        _showroom_vars: "{{ _showroom_users_item.value | combine({'guid': guid, 'user': _showroom_user}) }}"

- name: Report Single User Variables to user_data
  when:
    - _showroom_user_data.users is undefined
  ansible.builtin.include_tasks:
    file: report-variables.yaml
  vars:
    _showroom_vars: "{{ _showroom_user_data | combine({'guid': guid}) }}"
    _showroom_namespace: "{{ ocp4_workload_showroom_namespace }}"

- name: Report Multi User Variables to user_data
  when:
    - _showroom_user_data.users is defined
  loop: >-
    {{ _showroom_user_data.users | dict2items }}
  loop_control:
    loop_var: _showroom_users_item
  ansible.builtin.include_tasks:
    file: report-variables.yaml
  vars:
    _showroom_user: "{{ _showroom_users_item.key }}"
    _showroom_namespace: "{{ ocp4_workload_showroom_namespace }}-{{ _showroom_user }}"
    _showroom_vars: "{{ _showroom_users_item.value | combine({'guid': guid, 'user': _showroom_user}) }}"
