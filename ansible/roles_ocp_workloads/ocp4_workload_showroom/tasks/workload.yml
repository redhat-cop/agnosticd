---
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

# To Do: Implement your workload deployment tasks here
# -------------------------------------------------------------------------

- name: Read user-data.yaml
  ansible.builtin.slurp:
    src: "{{ hostvars.localhost.output_dir ~ '/user-data.yaml' }}"
  delegate_to: localhost
  register: r_user_data

- name: Read user-info.yaml
  ansible.builtin.slurp:
    src: "{{ hostvars.localhost.output_dir ~ '/user-info.yaml' }}"
  delegate_to: localhost
  register: r_user_info

- name: Set fact for user data and info
  ansible.builtin.set_fact:
    _showroom_user_data: "{{ r_user_data.content | b64decode | from_yaml | default({}, true) }}"
    _showroom_user_info: '{{ r_user_info.content | b64decode | from_yaml | default([], true) | join("\n") }}'

- name: Deploy showroom for single user
  when:
  - _showroom_user_data.users is undefined
  ansible.builtin.include_tasks:
    file: deploy-showroom.yaml
  vars:
    _bookbag_instance_name: "{{ bookbag_name }}"
    _bookbag_user_info_messages: "{{ _bookbag_user_info }}"
    _bookbag_vars: >-
      {{ _bookbag_user_data | combine({'guid': guid}) }}

- name: Deploy bookbag for users
  when:
  - _bookbag_user_data.users is defined
  loop: >-
    {{ _bookbag_user_data.users | dict2items }}
  loop_control:
    loop_var: _bookbag_users_item
  ansible.builtin.include_tasks:
    file: deploy-bookbag.yaml
  vars:
    _bookbag_instance_name: "{{ bookbag_name }}-{{ _bookbag_user }}"
    _bookbag_user: "{{ _bookbag_users_item.key }}"
    _bookbag_user_info_messages: "{{ _bookbag_vars.msg | default('') }}"
    _bookbag_vars: >-
      {{ _bookbag_users_item.value | combine({'guid': guid, 'user': _bookbag_user}) }}

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
