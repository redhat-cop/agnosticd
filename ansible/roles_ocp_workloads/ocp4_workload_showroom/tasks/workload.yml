---

# First target is OCP with bastion
#
# if we're using the shared cluster
# .. create a kubeconfig file
# .. get the user-data.yaml
# .. create the namespace
# .. run the helm chart
#
# for a shared cluster with a serviceaccount user
# must create namespace here because
# helm chart cannot create the namespace
# because it doesn't respect ProjectRequest
#
# use _showroom_kubeconfig if showroom user was setup
# otherwise use default

# setup namespaces

- name: Prepare Generic Variables
  ansible.builtin.include_tasks: prepare-variables.yaml

- name: Detect presence of Argo
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: argocds.argoproj.io
  register: r_argo_present

- name: Deploy via Argo when present
  when: r_argo_present is defined
  block:

    - name: Debug r_argo_present
      ansible.builtin.debug:
        var: r_argo_present

    - name: Install showroom (single user)
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'application.yaml.j2') }}"

    - name: Save code server information
      agnosticd_user_info:
        data:
          codeserver_url: >-
            https://{{ ocp4_workload_codeserver_name }}-{{ ocp4_workload_codeserver_namespace
            }}.{{ _ocp4_workload_codeserver_wildcard_domain }}
          codeserver_password: "{{ ocp4_workload_codeserver_password }}"

    # argo single user app deploy

- name: Deploy showroom for single user
  when:
  - _showroom_user_data.users is undefined
  ansible.builtin.include_tasks:
    file: deploy-showroom.yaml
  vars:
    _showroom_namespace: "{{ ocp4_workload_showroom_namespace }}"
    _showroom_user_info_messages: "{{ _showroom_user_info }}"
    _showroom_vars: "{{ _showroom_user_data | combine({'guid': guid}) }}"

- name: Deploy showroom for users
  when:
  - _showroom_user_data.users is defined
  loop: >-
    {{ _showroom_user_data.users | dict2items }}
  loop_control:
    loop_var: _showroom_users_item
  ansible.builtin.include_tasks:
    file: deploy-showroom.yaml
  vars:
    _showroom_user: "{{ _showroom_users_item.key }}"
    _showroom_namespace: "{{ ocp4_workload_showroom_namespace }}-{{ _showroom_user }}"
    _showroom_user_info_messages: "{{ _showroom_vars.msg | default('') }}"
    _showroom_vars: "{{ _showroom_users_item.value | combine({'guid': guid, 'user': _showroom_user}) }}"
