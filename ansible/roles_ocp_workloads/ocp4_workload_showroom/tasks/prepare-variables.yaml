- name: Check for required variables
  assert:
    that:
    - guid is defined
    - guid != ''
    - ocp4_workload_showroom_git_repo is defined
    - ocp4_workload_showroom_git_repo != ''
    fail_msg: Required variables not defined

- name: Get all user data into r_user_data
  ansible.builtin.slurp:
    src: "{{ hostvars.localhost.output_dir ~ '/user-data.yaml' }}"
  delegate_to: localhost
  register: r_user_data

- name: Set showroom_user_data fact from lookup - single value
  ansible.builtin.set_fact:
    showroom_user_data: "{{ lookup('agnosticd_user_data', 'bastion_ssh_command') }}"
  delegate_to: localhost

- name: Read user-info.yaml
  ansible.builtin.slurp:
    src: "{{ hostvars.localhost.output_dir ~ '/user-info.yaml' }}"
  delegate_to: localhost
  register: r_user_info

- name: Set fact for user info
  ansible.builtin.set_fact:
    _showroom_user_info: '{{ r_user_info.content | b64decode | from_yaml | default([], true) | join("\n") }}'
    _showroom_user_data: "{{ r_user_data.content | b64decode | from_yaml | default({}, true) }}"

- name: Put user-data.yaml on the bastion
  ansible.builtin.copy:
    src: "{{ hostvars.localhost.output_dir ~ '/user-info.yaml' }}"
    dest: /tmp/user-data.yaml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '1777'

- name: Set the _deployer_domain for helm from OpenShift
  when: showroom_openshift_api_url is not defined
  block:

    - name: Retrieve Ingress config
      kubernetes.core.k8s_info:
        kubeconfig: "{{ _showroom_kubeconfig | default(omit) }}"
        api_version: 'config.openshift.io/v1'
        kind: Ingress
        name: cluster
      register: r_ingress_config

    - name: Get OpenShift Apps Domain
      ansible.builtin.set_fact:
        _deployer_domain: "{{ r_ingress_config.resources[0].spec.domain }}"
