---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Check that OpenShift Pipelines are installed
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: openshift-operators
  register: r_csvs

- name: Set Pipelines CSV name
  set_fact:
    __ocp4_workload_openshift_gitops_pipelines_csv_name: "{{ r_csvs.resources | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(metadata.name, 'redhat-openshift-pipelines' )].metadata.name

- name: Assert that a CSV has been found
  assert:
    that:
      __ocp4_workload_openshift_gitops_pipelines_csv_name | length > 0
    success_msg: "Found OpenShift Pipelines operator."
    fail_msg: "OpenShift Pipelines operator needs to be installed before the OpenShift GitOps operator."

- name: Install Operator
  include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: openshift-gitops-operator
    install_operator_namespace: openshift-operators
    install_operator_channel: "{{ ocp4_workload_openshift_gitops_channel }}"
    install_operator_catalog: redhat-operators
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_openshift_gitops_automatic_install_plan_approval | default(true) }}"
    install_operator_starting_csv: "{{ ocp4_workload_openshift_gitops_starting_csv }}"
    install_operator_use_catalog_snapshot: "{{ ocp4_workload_openshift_gitops_use_catalog_snapshot | default(false)}}"
    install_operator_catalogsource_name: "{{ ocp4_workload_openshift_gitops_catalogsource_name | default('') }}"
    install_operator_catalog_snapshot_image: "{{ ocp4_workload_openshift_gitops_catalog_snapshot_image | default('') }}"
    install_operator_catalog_snapshot_image_tag: "{{ ocp4_workload_openshift_gitops_catalog_snapshot_image_tag | default('') }}"

- name: Install GitOps Bug Workaround
  when: ocp4_workload_openshift_gitops_install_workaround
  block:
  - name: Set up ClusterRole
    k8s:
      state: present
      definition: "{{ lookup('file', 'workaround_clusterrole.yaml' ) | from_yaml }}"

  - name: Set up ClusterRoleBindings for all users
    k8s:
      state: present
      definition: "{{ lookup('template', 'workaround_clusterrolebinding.yaml.j2' ) | from_yaml }}"
    loop: "{{ range(1, 1 + ocp4_workload_openshift_gitops_install_workaround_user_count | int) | list }}"
    loop_control:
      loop_var: n

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
