---
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

# To Do: Implement your workload deployment tasks here
# -------------------------------------------------------------------------

- name: create project for user by using a jinja2 template in the role
  k8s:
    state: present
    definition: "{{ lookup('template', role_path ~ '/templates/project.j2' ) | from_yaml }}"

- name: deploy example app using specific manifests
  k8s:
    state: present
    definition: "{{ lookup('file', item ) | from_yaml }}"
    namespace: "{{ ocp4_workload_example_shared_cluster_project_name }}"
  loop:
    - ./files/hello_openshift_deployment.yaml
    - ./files/hello_openshift_service.yaml
    - ./files/hello_openshift_route.yaml

- name: await application availability by querying the OpenShift API
  k8s_info:
    api_version: v1
    kind: Deployment
    namespace: "{{ ocp4_workload_example_shared_cluster_project_name }}"
    name: "hello-openshift"
  register: r_hello_openshift_deployment
  retries: 30
  delay: 10
  until:
    - r_hello_openshift_deployment.resources | length | int > 0
    - r_hello_openshift_deployment.resources[0].status.availableReplicas is defined
    - r_hello_openshift_deployment.resources[0].status.availableReplicas | int == r_hello_openshift_deployment.resources[0].spec.readyReplicas | int

- name: get route by querying the OpenShift API
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: "hello-openshift"
    namespace: "{{ ocp4_workload_example_shared_cluster_project_name }}"
  register: r_app_route

- name: notify user of route with "user.info " in logs.  CloudForms will see this and send email to users
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
    - ""
    - "Use the following route to access your application {{ r_app_route.resources[0].spec.host }}"
    - ""

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool

