apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-kustomize-swagger
  namespace: {{ t_project_name_pipelines }}
  annotations:
    tekton.dev/displayName: "Update Kustomize Swagger URL in Git Repository"
spec:
  params:
  - name: gitRepositoryUrl
    description: URL of the Git repository to update
    type: string
    default: {{ _git_url_repo_gitops }}
  - name: gitRepositoryRevision
    description: Branch or Tag to push the update to
    type: string
    default: kustomize
  - name: restFightsKustomization
    description: Path of the rest fights kustomization file to patch
    type: string
    default: "deploy/kustomize/rest-fights/kustomization.yaml"
  - name: restHeroesKustomization
    description: Path of the rest heroes kustomization file to patch
    type: string
    default: "deploy/kustomize/rest-heroes/kustomization.yaml"
  - name: restVillainsKustomization
    description: Path of the rest villains kustomization file to patch
    type: string
    default: "deploy/kustomize/rest-villains/kustomization.yaml"
  - name: restFightsOpenapiServers
    description: The mp.openapi.servers property to patch
    type: string
  - name: restHeroesOpenapiServers
    description: The mp.openapi.servers property to patch
    type: string
  - name: restVillainsOpenapiServers
    description: The mp.openapi.servers property to patch
    type: string
  - name: verbose
    description: Log the commands used during execution
    type: string
    default: "true"
  volumes:
  - name: repository
    emptyDir: {}
  steps:
  - name: git-checkout
    image: alpine/git:v2.26.2
    workingDir: "/workspace"
    volumeMounts:
    - name: repository
      mountPath: /workspace/repository
    script: |
      #!/usr/bin/env sh
      set -eu -o pipefail

      if [[ "$(params.verbose)" == "true" ]] ; then
        set -x
        echo "**** Cloning $(params.gitRepositoryUrl) into $(pwd)/repository"
      fi

      rm -rf $(pwd)/repo
      git clone "$(params.gitRepositoryUrl)" $(pwd)/repository
      cd repository
      git checkout "$(params.gitRepositoryRevision)"

  - name: update-yaml
    image: alpine/git:v2.26.2
    workingDir: "/workspace/repository"
    volumeMounts:
    - name: repository
      mountPath: /workspace/repository
    script: |
      #!/usr/bin/env sh
      set -e

      if [[ "$(params.verbose)" == "true" ]] ; then
        echo "**** Updating $(params.restFightsOpenapiServers) to $(params.restFightsKustomization)"
        echo "**** Updating $(params.restHeroesOpenapiServers) to $(params.restHeroesKustomization)"
        echo "**** Updating $(params.restVillainsOpenapiServers) to $(params.restVillainsKustomization)"
      fi

      sed -r "s/^(\s*mp.openapi.servers\s*:\s*).*/\1$(params.restFightsOpenapiServers)/" -i ./$(params.restFightsKustomization)
      sed -r "s/^(\s*mp.openapi.servers\s*:\s*).*/\1$(params.restHeroesOpenapiServers)/" -i ./$(params.restHeroesKustomization)
      sed -r "s/^(\s*mp.openapi.servers\s*:\s*).*/\1$(params.restVillainsOpenapiServers)/" -i ./$(params.restVillainsKustomization)

  - name: commit-push-changes
    image: alpine/git:v2.26.2
    workingDir: "/workspace/repository"
    volumeMounts:
    - name: repository
      mountPath: /workspace/repository
    script: |
      #!/usr/bin/env sh
      set -e
      git config --global user.email "agnosticd@redhat.com"
      git config --global user.name "AgnosticD"
      git add .
      git commit --allow-empty -m "Update mp.openapi.servers"
      git push origin "$(params.gitRepositoryRevision)"
