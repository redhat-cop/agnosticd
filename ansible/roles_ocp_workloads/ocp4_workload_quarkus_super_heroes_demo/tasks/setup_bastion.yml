---
- name: Install Software
  become: true
  block:
  - name: Install Java packages to bastion
    ansible.builtin.command:
      cmd: >-
        dnf install -y podman-docker podman-remote
        java-{{ ocp4_workload_quarkus_super_heroes_demo_setup_bastion_java_version }}-openjdk
        java-{{ ocp4_workload_quarkus_super_heroes_demo_setup_bastion_java_version }}-openjdk-devel

  - name: Create /usr/local/maven directory
    file:
      path: /usr/local/maven
      state: directory
      owner: root
      group: root
      mode: 0775

  - name: Download and unarchive Maven Distribution
    unarchive:
      src: "https://gpte-public.s3.amazonaws.com/apache-maven-{{ ocp4_workload_quarkus_super_heroes_demo_setup_bastion_maven_version }}-bin.tar.gz"
      remote_src: true
      dest: /usr/local/maven
      owner: root
      group: root
      extra_opts:
      - --strip=1

  - name: Set up mvn link
    file:
      state: link
      src: "/usr/local/maven/bin/mvn"
      dest: /usr/local/bin/mvn
      owner: root
      group: root

  - name: Copy podman user service setup script to bastion
    ansible.builtin.copy:
      src: setup_podman_user_service
      dest: "/usr/bin/setup_podman_user_service"
      owner: root
      group: root
      mode: 0775

- name: "Set up bastion for user {{ ocp4_workload_quarkus_super_heroes_demo_user_name }}"
  become: true
  become_user: "{{ ocp4_workload_quarkus_super_heroes_demo_user_name }}"
  block:
  # - name: Execute podman user service setup script
  #   ansible.builtin.command:
  #     cmd: "/usr/bin/setup_podman_user_service"
  # - name: Set up Podman socket
  #   systemd:
  #     scope: user
  #     name: podman.socket
  #     enabled: true
  #     force: true
  #     state: started

  - name: Set up Podman docker
    blockinfile:
      dest: "/home/{{ ocp4_workload_quarkus_super_heroes_demo_user_name }}/.bashrc"
      insertafter: EOF
      marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK (podman docker) -->"
      block: |
        loginctl enable-linger $USER
        export XDG_RUNTIME_DIR=/run/user/$(id -u)
        export DBUS_SESSION_BUS_ADDRESS="unix:path=${XDG_RUNTIME_DIR}/bus"
        export DOCKER_HOST=unix:///run/user/${UID}/podman/podman.sock
        export TESTCONTAINERS_RYUK_DISABLED=true
        /usr/bin/setup_podman_user_service

  - name: Clone application source code
    ansible.builtin.git:
      accept_hostkey: true
      force: true
      repo: >-
        https://{{
        ocp4_workload_quarkus_super_heroes_demo_clone_repo_gitea_user | urlencode }}:{{
        ocp4_workload_quarkus_super_heroes_demo_clone_repo_gitea_password | urlencode }}@{{
        ocp4_workload_quarkus_super_heroes_demo_clone_repo_gitea_name }}.{{
        route_subdomain }}/{{
        ocp4_workload_quarkus_super_heroes_demo_clone_repo_gitea_user }}/{{ ocp4_workload_quarkus_super_heroes_demo_clone_repo_gitea_repo_name }}.git
      dest: "{{ ocp4_workload_quarkus_super_heroes_demo_clone_repo_destination }}"
      version: "{{ ocp4_workload_quarkus_super_heroes_demo_clone_repo_tag }}"

  - name: Fix repository ownership
    ansible.builtin.file:
      state: directory
      recurse: true
      path: "{{ ocp4_workload_quarkus_super_heroes_demo_clone_repo_destination }}"
      owner: "{{ ocp4_workload_quarkus_super_heroes_demo_user_name }}"
      group: "{{ ocp4_workload_quarkus_super_heroes_demo_user_group }}"

  - name: Prebuild projects to populate .m2 directory
    when: ocp4_workload_quarkus_super_heroes_demo_build_projects | default([]) | length > 0
    ansible.builtin.shell:
      cmd: "/usr/local/bin/mvn clean package -DskipTests"
      chdir: "{{ ocp4_workload_quarkus_super_heroes_demo_clone_repo_destination }}/{{ item }}"
    loop: "{{ ocp4_workload_quarkus_super_heroes_demo_build_projects | list }}"

- name: Set up git config
  become: true
  become_user: "{{ ocp4_workload_quarkus_super_heroes_demo_user_name }}"
  block:
  - name: Set the git config user name
    community.general.git_config:
      name: user.name
      scope: global
      value: "{{ ocp4_workload_quarkus_super_heroes_demo_clone_repo_gitea_user }}"

  - name: Set the git config email
    community.general.git_config:
      name: user.email
      scope: global
      value: "{{ ocp4_workload_quarkus_super_heroes_demo_clone_repo_gitea_user }}@redhat.dev"
