---
- name: "[{{ t_project_name }}] - set facts"
  set_fact:
    app_version: "{{ t_app_kind }}java{{ t_java_version }}"

- name: "[{{ t_project_name }}] - create project"
  k8s:
    api_version: project.openshift.io/v1
    kind: Project
    state: present
    definition:
      metadata:
        name: "{{ t_project_name }}"
        annotations:
          openshift.io/description: "Quarkus Superheroes for {{ app_version }}"
          openshift.io/display-name: "Quarkus Superheroes for {{ app_version }}"

- name: "[{{ t_project_name }}] - deploy Kafka"
  k8s:
    namespace: "{{ t_project_name }}"
    state: present
    # yamllint disable-line rule:line-length
    definition: "{{ lookup('file', '../files/amqstreams_instance.yaml') | from_yaml_all }}"

# Download and apply manifest
- name: "[{{ t_project_name }}] - Download application manifest"
  get_url:
    # yamllint disable-line rule:line-length
    url: "{{ ocp4_workload_quarkus_super_heroes_demo_github_raw_url }}/{{ app_version }}-openshift.yml"
    # yamllint disable-line rule:line-length
    dest: "{{ ocp4_workload_quarkus_super_heroes_demo_temp_dir }}/{{ app_version }}-openshift.yml"

- name: "[{{ t_project_name }}] - Apply application manifest"
  k8s:
    state: present
    namespace: "{{ t_project_name }}"
    # yamllint disable-line rule:line-length
    src: "{{ ocp4_workload_quarkus_super_heroes_demo_temp_dir }}/{{ app_version }}-openshift.yml"

- name: "[{{ t_project_name }}] - Patch the app configs for Swagger UI"
  k8s:
    api_version: v1
    kind: ConfigMap
    name: "{{ t_app_name }}-config"
    namespace: "{{ t_project_name }}"
    state: patched
    definition:
      data:
        mp.openapi.servers: >-
          "http://{{ t_app_name }}-{{ t_project_name }}.{{ route_subdomain }}"
  loop:
    - rest-fights
    - rest-heroes
    - rest-villains
  loop_control:
    loop_var: t_app_name

- name: "[{{ t_project_name }}] - Patch the app configs for Kafka"
  k8s:
    api_version: v1
    kind: ConfigMap
    name: "{{ t_app_name }}-config"
    namespace: "{{ t_project_name }}"
    state: patched
    definition:
      data:
        kafka.bootstrap.servers: PLAINTEXT://fights-kafka-kafka-bootstrap:9092
  loop:
    - rest-fights
    - event-statistics
  loop_control:
    loop_var: t_app_name

- name: "[{{ t_project_name }}] - Remove single pod Kafka service"
  k8s:
    api_version: v1
    kind: Service
    name: fights-kafka
    namespace: "{{ t_project_name }}"
    state: absent

- name: "[{{ t_project_name }}] - Remove single pod Kafka deployment"
  k8s:
    api_version: apps/v1
    kind: Deployment
    name: fights-kafka
    namespace: "{{ t_project_name }}"
    state: absent

- name: "[{{ t_project_name }}] - Rollout new pods for apps"
  k8s:
    api_version: v1
    kind: Pod
    namespace: "{{ t_project_name }}"
    state: absent
    label_selectors:
      - "app = {{ t_app_name }}"
  loop: "{{ ocp4_workload_quarkus_super_heroes_demo_service_project_names }}"
  loop_control:
    loop_var: t_app_name

- name: "[{{ t_project_name }}] - install Prometheus"
  include_tasks: install_prometheus.yaml
  when: ocp4_workload_quarkus_super_heroes_demo_install_prometheus | bool

- name: "[{{ t_project_name }}] - install Grafana"
  include_tasks: install_grafana.yaml
  when: ocp4_workload_quarkus_super_heroes_demo_install_grafana | bool
