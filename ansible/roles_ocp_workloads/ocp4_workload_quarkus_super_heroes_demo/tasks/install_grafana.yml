---
# Install grafana into each project
- name: "[{{ t_project_name }}] - Look for Grafana subscription"
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: grafana-operator
    namespace: "{{ t_project_name }}"
  register: r_grafana_sub

- name: "[{{ t_project_name }}] - show existing Grafana sub"
  debug:
    msg: "existing Grafana sub: {{ r_grafana_sub }}"

- name: "[{{ t_project_name }}] - Create Grafana subscription"
  kubernetes.core.k8s:
    namespace: "{{ t_project_name }}"
    state: present
    # yamllint disable-line rule:line-length
    definition: "{{ lookup('template', '../templates/grafana_subscription.yaml.j2') | from_yaml_all | list }}"
  when: r_grafana_sub.resources | list | length == 0

# wait for Grafana CRDs
- name: "[{{ t_project_name }}] - Wait for Grafana CRDs"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: grafanas.integreatly.org
    namespace: "{{ t_project_name }}"
  register: r_grafana_crd
  retries: 200
  delay: 10
  until: r_grafana_crd.resources | list | length == 1

- name: "[{{ t_project_name }}] - Wait for Grafana Datasources CRD"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: grafanadatasources.integreatly.org
    namespace: "{{ t_project_name }}"
  register: r_grafana_ds_crd
  retries: 200
  delay: 10
  until: r_grafana_ds_crd.resources | list | length == 1

- name: "[{{ t_project_name }}] - Wait for Grafana Dashboards CRD"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: grafanadashboards.integreatly.org
    namespace: "{{ t_project_name }}"
  register: r_grafana_dash_crd
  retries: 200
  delay: 10
  until: r_grafana_dash_crd.resources | list | length == 1

- name: "[{{ t_project_name }}] - deploy Grafana instance"
  kubernetes.core.k8s:
    namespace: "{{ t_project_name }}"
    state: present
    # yamllint disable-line rule:line-length
    definition: "{{ lookup('file', '../files/grafana_instance.yaml') | from_yaml_all | list }}"

- name: "[{{ t_project_name }}] - deploy Grafana Prometheus datasource"
  kubernetes.core.k8s:
    namespace: "{{ t_project_name }}"
    state: present
    # yamllint disable-line rule:line-length
    definition: "{{ lookup('file', '../files/grafana_datasource_prometheus.yaml') | from_yaml_all | list }}"

- name: "[{{ t_project_name }}] - deploy Grafana dashboards"
  kubernetes.core.k8s:
    namespace: "{{ t_project_name }}"
    state: present
    # yamllint disable-line rule:line-length
    definition: "{{ lookup('file', '../files/grafana_dashboard_' + t_dashboard_name + '.yaml') | from_yaml_all | list }}"
  loop:
    - kafka
    - kafka_exporter
    - zookeeper
    - quarkus_jvm_app
  loop_control:
    loop_var: t_dashboard_name
