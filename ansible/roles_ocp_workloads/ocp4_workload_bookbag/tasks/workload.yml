---
# Implement your Workload deployment tasks here

# - name: Setting up workload for user
#   debug:
#     msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Save current context
  shell: oc config current-context
  register: r_context

- name: Switch context and create project
  shell: |
    oc login -u {{ ocp4_workload_bookbag_username }} -p {{ ocp4_workload_bookbag_password }} {{ ocp4_workload_bookbag_openshift_api_endpoint }} && \
    oc new-project {{ ocp4_workload_bookbag_namespace }} || oc project {{ ocp4_workload_bookbag_namespace }}

- name: Removing bookbag base build template
  kubernetes.core.k8s:
    state: absent
    definition: "{{ lookup('template', item ) | from_yaml }}"
    namespace: "{{ ocp4_workload_bookbag_namespace }}"
  loop:
    - ./templates/bookbag-base-is.yml.j2
    - ./templates/bookbag-base-bc.yml.j2

- name: Create bookbag base build template
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
    namespace: "{{ ocp4_workload_bookbag_namespace }}"
  loop:
    - ./templates/bookbag-base-is.yml.j2
    - ./templates/bookbag-base-bc.yml.j2

- name: Pause for 5 minutes to build app cache
  ansible.builtin.pause:
    seconds: 10

- name: Get {{ ocp4_workload_bookbag_name }}-base build
  shell: |
    oc get build -n {{ ocp4_workload_bookbag_namespace }} | \
    grep {{ ocp4_workload_bookbag_name }}-base | \
    grep -v NAME | \
    grep Running | \
    awk '{print $1}'
  until: r_build.stdout | length == 0
  delay: 5
  retries: 60
  register: r_build

# - name: Recreate ArgoCD TLS
#   when: ocp4_workload_bookbag_recreate_argo_tls | bool
#   block:
#     - name: Recreate ArgoCD TLS to fix bug - fixed in 1.5.0+
#       kubernetes.core.k8s:
#         state: present
#         definition: "{{ lookup('template', './templates/firefox-argocd-fix.yml.j2') | from_yaml }}"
#         namespace: "{{ ocp4_workload_bookbag_argocd_namespace }}"
#         merge_type:
#           - strategic-merge
#           - merge

- name: Create firefox-{{ ocp4_workload_bookbag_name }}
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
    namespace: "{{ ocp4_workload_bookbag_namespace }}"
    merge_type:
      - strategic-merge
      - merge
  loop:
    - ./templates/firefox-bookbag-crb.yml.j2
    - ./templates/firefox-bookbag-deployment.yml.j2
    - ./templates/firefox-bookbag-route.yml.j2
    - ./templates/firefox-bookbag-svc.yml.j2

- name: Get firefox-{{ ocp4_workload_bookbag_name }} url
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: firefox-{{ ocp4_workload_bookbag_name }}
    namespace: "{{ ocp4_workload_bookbag_namespace }}"
  until: r_route.resources | length > 0
  delay: 5
  retries: 60
  register: r_route

- name: Create bookbag template
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', './templates/bookbag-template.yml.j2' ) | from_yaml }}"
    namespace: "{{ ocp4_workload_bookbag_namespace }}"

- name: Build bookbag image
  shell: |
    oc process bookbag-template -n {{ ocp4_workload_bookbag_namespace }} \
    -p WORKSHOP_IMAGE="image-registry.openshift-image-registry.svc:5000/\
    {{ ocp4_workload_bookbag_namespace }}/\
    {{ ocp4_workload_bookbag_name }}-base:latest" \
    -p APPLICATIONS_URL="https://{{ r_route.resources[0].spec.host }}" \
    -p WORKSHOP_NAME={{ ocp4_workload_bookbag_name }} \
    | oc apply -n {{ ocp4_workload_bookbag_namespace }} -f -

# - name: Create other role bindings
#   kubernetes.core.k8s:
#     state: present
#     definition: "{{ lookup('template', './templates/bookbag-rolebinding.yml.j2' ) | from_yaml }}"
#     namespace: "{{ ocp4_workload_bookbag_namespace }}"
#   loop:
#     - gitea

- name: Revert to previous context
  shell: oc config use-context {{ r_context.stdout }}

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent
