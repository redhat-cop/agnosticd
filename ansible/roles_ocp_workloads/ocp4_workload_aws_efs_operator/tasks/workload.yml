---
- name: Install AWS EFS Operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: efs-operator
    install_operator_namespace: "{{ ocp4_workload_aws_efs_operator_namespace }}"
    install_operator_channel: "{{ ocp4_workload_aws_efs_operator_channel }}"
    install_operator_catalog: community-operators
    install_operator_packagemanifest_name: "aws-efs-operator"
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_aws_efs_operator_automatic_install_plan_approval }}"
    install_operator_csv_nameprefix: "aws-efs-operator"
    install_operator_starting_csv: "{{ ocp4_workload_aws_efs_operator_sstarting_csv }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_aws_efs_operator_use_catalog_snapshot }}"

- name: Wait for the StorageClasses to become available
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: "{{ ocp4_workload_aws_efs_operator_default_storage_class }}"
  register: sc_crd
  retries: 200
  delay: 10
  until: sc_crd.resources | list | length == 1

- name: Wait for Storage class to initialize
  ansible.builtin.pause:
    seconds: 300

- name: Set default storage class
  ansible.builtin.shell: |-
    DEFAULT_STORAGE_CLASS=$(oc get storageclass | grep default | awk '{ print $1 }')
    oc annotate storageclass $DEFAULT_STORAGE_CLASS storageclass.kubernetes.io/is-default-class- || echo "No default storage class..."
    oc annotate storageclass {{ ocp4_workload_aws_efs_operator_default_storage_class }} storageclass.kubernetes.io/is-default-class=true

# Leave this as the last task in the playbook.
- name: workload tasks complete
  ansible.builtin.debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
