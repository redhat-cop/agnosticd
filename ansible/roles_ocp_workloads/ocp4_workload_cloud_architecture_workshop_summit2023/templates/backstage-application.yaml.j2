apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ ocp4_workload_cloud_architecture_workshop_backstage_application_name }}
  namespace: {{ ocp4_workload_cloud_architecture_workshop_backstage_application_namespace }}
  finalizers:
  - resources-finalizer.argocd.argoproj.io/foreground
spec:
  destination:
    name: ""
    namespace: {{ ocp4_workload_cloud_architecture_workshop_backstage_namespace }}
    server: 'https://kubernetes.default.svc'
  project: default
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
  source:
    repoURL: https://github.com/rh-cloud-architecture-workshop/globex-backstage-helm
    targetRevision: main
    path: charts/backstage
    helm:
      values: |

        route:
          enabled: true
          tls:
            enabled: true
        upstream:
          backstage:
            image:
              registry: ghcr.io
              repository: janus-idp/redhat-backstage-build
              tag: latest
            extraEnvVars:
              - name: "APP_CONFIG_app_baseUrl"
                value: "https://backstage-backstage.{{ r_openshift_subdomain }}"
              - name: "APP_CONFIG_backend_baseUrl"
                value: "https://backstage-backstage.{{ r_openshift_subdomain }}"
              - name: "APP_CONFIG_backend_cors_origin"
                value: "https://backstage-backstage.{{ r_openshift_subdomain }}"
              - name: "APP_CONFIG_backend_database_client"
                value: pg
              - name: "APP_CONFIG_backend_database_connection_host"
                value: "{% raw %}{{ include \"backstage.postgresql.host\" . }}{% endraw %}"
              - name: "APP_CONFIG_backend_database_connection_port"
                value: '5432'
              - name: "APP_CONFIG_backend_database_connection_user"
                value: "{% raw %}{{ .Values.postgresql.auth.username }}{% endraw %}"
              - name: "APP_CONFIG_backend_database_connection_password"
                valueFrom:
                  secretKeyRef:
                    key: postgres-password
                    name: "{% raw %}{{ include \"backstage.postgresql.fullname\" . }}{% endraw %}"
            installDir: /opt/app-root/src
          
          postgresql:
            enabled: true
            database: backstage
            postgresqlDataDir: /var/lib/pgsql/data/userdata
            auth:
              username: postgres
              database: backstage
            image:
              registry: registry.redhat.io
              repository: rhel9/postgresql-13
              tag: 1-73
            primary:
              securityContext:
                enabled: false
              podSecurityContext:
                enabled: false
              containerSecurityContext:
                enabled: false
              persistence:
                enabled: true
                mountPath: /var/lib/pgsql/data
              extraEnvVars:
              - name: POSTGRESQL_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: postgres-password
                    name: backstage-postgresql
