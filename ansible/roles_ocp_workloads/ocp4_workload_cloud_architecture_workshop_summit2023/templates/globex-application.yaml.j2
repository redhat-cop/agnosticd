{% for __user in r_cloud_architecture_workshop_users %}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ ocp4_workload_cloud_architecture_workshop_globex_application_name }}
  namespace: {{ ocp4_workload_cloud_architecture_workshop_argo_application_namespace | replace("user",__user) }}
  finalizers:
  - resources-finalizer.argocd.argoproj.io/foreground
spec:
  destination:
    name: ""
    namespace: {{ r_cloud_architecture_workshop_globex_namespace | replace("user",__user) }}
    server: 'https://kubernetes.default.svc'
  project: default
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
  source:
    repoURL: {{ ocp4_workload_cloud_architecture_workshop_application_repo }}
    targetRevision: {{ ocp4_workload_cloud_architecture_workshop_application_repo_tag }}
    path: {{ ocp4_workload_cloud_architecture_workshop_application_repo_path_globex }}
    helm:
      values: |

        kafka:
          name: &kafkaName kafka
          namespace: &namespace {{ r_cloud_architecture_workshop_globex_mw_namespace | replace("user",__user)  }}

        kafka-cluster: &kafka
          bootstrapServer: kafka-kafka-bootstrap.{{ r_cloud_architecture_workshop_globex_mw_namespace | replace("user",__user)  }}.svc.cluster.local:9092
          securityProtocol: {{ ocp4_workload_cloud_architecture_workshop_kafka_security_protocol }}
          saslMechanism: {{ ocp4_workload_cloud_architecture_workshop_kafka_sasl_mechanism }}
          clientId: {{ ocp4_workload_cloud_architecture_workshop_kafka_client_id }}
          clientSecret: {{ ocp4_workload_cloud_architecture_workshop_kafka_client_secret }}

        kafka-broker:
          namespace: *namespace
          nameOverride: *kafkaName
          kafka:
            config:
              autoCreateTopics: true

        kafka-topics:
          kafka:
            namespace: *namespace

        kafdrop:
          kafka:
            <<: *kafka
            namespace: *namespace

        activity-tracking:
          kafka: *kafka

        recommendation-engine:
          kafka: *kafka

        globex-db:
          pgsql:
            adminPassword: adminpassword
          image:
            tag: 43e87ee

        globex-web:
          sso:
            url: "https://{{ ocp4_workload_cloud_architecture_workshop_rhbk_host }}.{{ r_openshift_subdomain }}/realms/{{ ocp4_workload_cloud_architecture_workshop_rhbk_realm }}-{{ __user }}"
            client: {{ ocp4_workload_cloud_architecture_workshop_rhbk_web_gateway_client }}
            logoutUri: https://globex-web-{{ r_cloud_architecture_workshop_globex_namespace | replace("user",__user) }}.{{ r_openshift_subdomain }}/home
            logLevel: "2"

        streams-console:
          namespace: *namespace
          subdomain: {{ r_openshift_subdomain }}
          kafka:
            name: *kafkaName
            bootstrapServer: kafka-kafka-bootstrap.{{ r_cloud_architecture_workshop_globex_mw_namespace | replace("user",__user)  }}.svc.cluster.local:9092
            authentication:
              saslMechanism: {{ ocp4_workload_cloud_architecture_workshop_kafka_sasl_mechanism }}
              securityProtocol: {{ ocp4_workload_cloud_architecture_workshop_kafka_security_protocol }}
            authorization: simple
          console:
            nextAuthSecret: rjTg0twbZwDwJZ21bbXlV5UPC5HWIuxt4Xei13hkWoQ=
            sessionSecret: eR7ffk2WqtK4tewh/DF/fj2/4ZMwwL5TmisTDOMUTuQ=
          user: {{ __user }}
          scope:
            namespace: true
{% endfor %}
