---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ postgresql_service_name }}
  namespace: {{ ocp4_workload_app_mod_demo_modern_namespace }}
  labels:
    app.kubernetes.io/name: {{ postgresql_service_name }}
    app.openshift.io/runtime: postgresql
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: {{ postgresql_service_name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ postgresql_service_name }}
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: {{ postgresql_service_name }}
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{ postgresql_service_name }}
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{ postgresql_service_name }}
        image: {{ ocp4_workload_app_mod_demo_image_postgresql }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: {{ postgresql_service_name }}-data
      volumes:
      - name: {{ postgresql_service_name }}-data
        persistentVolumeClaim:
          claimName: {{ postgresql_service_name }}
