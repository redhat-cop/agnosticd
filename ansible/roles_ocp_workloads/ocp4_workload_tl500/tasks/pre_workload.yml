---
# Implement your Pre Workload deployment tasks here
- name: Ensure directory exists
  file:
    path: "/tmp/{{ guid }}"
    state: directory

- name: Install helm
  include_tasks: install-helm.yaml

- name: Install redhat-cop helm repository
  command: helm repo add redhat-cop https://redhat-cop.github.io/helm-charts

- name: Update helm repo
  command: helm repo update

  collections:
    - kubernetes.core

- name: Get API server URL
  k8s_facts:
    api_version: config.openshift.io/v1
    kind: Infrastructure
    name: cluster
  register: r_api_url

- name: Get the openshift console route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: openshift-console
    field_selectors:
      - spec.to.name=console
  register: r_dc
  until:
    - r_dc is defined
    - r_dc.resources is defined
    - r_dc.resources | list | length > 0
  retries: 60
  delay: 15

- name: Get the subdomain using the openshift console url
  set_fact:
    ocp4_workload_tl500_apps_domain: "{{ r_dc.resources[0].spec.host |
      regex_search('(?<=\\.).*') }}"

- name: Setup FreeIPA Authentication
  block:
    - name: Generate ldap admin password
      when: ldap_admin_password | default('') | length == 0
      set_fact:
        tl500_ldap_admin_password: >-
          {{ lookup('password', '/dev/null chars=ascii_letters,digits '
            ~ 'length=' ~ 10
          ) }}

    - name: Use provided admin password
      when: ldap_admin_password | default('') | length > 0
      set_fact:
        tl500_ldap_admin_password: "{{ ldap_admin_password }}"

    - name: Generate FreeIPA user password
      when: user_password | default('') | length == 0
      set_fact:
        tl500_user_password: >-
          {{ lookup('password', '/dev/null chars=ascii_letters,digits '
            ~ 'length=' ~ 10
          ) }}

    - name: Use provided user password
      when: user_password | default('') | length > 0
      set_fact:
        tl500_user_password: "{{ user_password }}"

# Leave this as the last task in the playbook.
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when: not silent | bool
