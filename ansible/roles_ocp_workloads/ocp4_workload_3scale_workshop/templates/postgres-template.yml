---
apiVersion: v1
kind: Secret
metadata:
  name: 'postgresql'
stringData:
  database-name: '{{ POSTGRESQL_DATABASE }}'
  database-password: '{{ POSTGRESQL_PASSWORD }}'
  database-user: '{{ POSTGRESQL_USER }}'
---
apiVersion: v1
kind: Service
metadata:
  name: 'postgresql'
spec:
  ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: 'postgresql'
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  name: 'postgresql'
spec:
  replicas: 1
  selector:
    name: 'postgresql'
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: 'postgresql'
    spec:
      containers:
        -
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: 'postgresql'
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: 'postgresql'
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: 'postgresql'
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: '512Mi'
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: 'postgresql-data'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - emptyDir:
            medium: ''
          name: 'postgresql-data'
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          name: 'postgresql:latest'
          namespace: 'openshift'
        lastTriggeredImage: ''
      type: ImageChange
    - type: ConfigChange
