---
# Implement your Workload deployment tasks here
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Get awscli bundle
  get_url:
    url: https://s3.amazonaws.com/aws-cli/awscli-bundle-1.18.200.zip
    dest: /tmp/awscli-bundle.zip

- name: Unzip awscli-bundle.zip
  unarchive:
    src: /tmp/awscli-bundle.zip
    dest: /tmp/
    remote_src: true

- name: Install awscli block
  become: true
  block:
    - name: Install awscli
      command: /tmp/awscli-bundle/install -i /usr/local/aws -b /bin/aws
      args:
        creates: /usr/local/aws

    - name: cleanup archive and tmp files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/awscli-bundle
        - /tmp/awscli-bundle.zip

- name: Get ROSA CLI
  get_url:
    url: "{{ rosa_installer_url }}"
    dest: /tmp/rosa-linux.tar.gz

- name: Unzip rosa-linux.tar.gz
  unarchive:
    src: /tmp/rosa-linux.tar.gz
    dest: /usr/local/bin/
    remote_src: true
  become: true

- name: cleanup archive file
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/rosa-linux.tar.gz

- name: Run rosa tasks as {{ student_name }}
  become_user: "{{ student_name }}"
  become: true
  block:
    - name: Create .aws directory
      file:
        path: ~/.aws
        state: directory

    - name: Add aws credentials
      no_log: true
      blockinfile:
        path: ~/.aws/credentials
        create: true
        mode: 0600
        marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK (rosa profile) -->"
        insertafter: EOF
        block: |-
          [default]
          aws_access_key_id={{ sandbox_aws_access_key_id }}
          aws_secret_access_key={{ sandbox_aws_secret_access_key }}
          [profile rosa]
          aws_access_key_id={{ sandbox_aws_access_key_id }}
          aws_secret_access_key={{ sandbox_aws_secret_access_key }}

    - name: Add aws config
      blockinfile:
        path: ~/.aws/config
        create: true
        marker: "# <!-- {mark} ANSIBLE MANAGED BLOCK (rosa profile region) -->"
        insertafter: EOF
        mode: 0600
        block: |-
          [default]
          region={{ aws_region }}
          [profile rosa]
          region={{ ocp4_workload_rosa_cli_region }}

    - name: Set up .bashrc
      no_log: true
      lineinfile:
        path: ~/.bashrc
        regexp: 'EOF'
        line: "{{ item }}"
      loop:
        - export ROSA_TOKEN={{ rosa_token }}
        - source <(rosa completion)

    - name: Log into ROSA
      command: "/usr/local/bin/rosa login --token {{ rosa_token }}"

    - name: Init AWS account for ROSA
      command: "/usr/local/bin/rosa init --profile rosa"

    - name: Verify permissions for ROSA
      command: "/usr/local/bin/rosa verify permissions --profile rosa"

    - name: Verify quota for ROSA
      command: "/usr/local/bin/rosa verify quota --profile rosa"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
