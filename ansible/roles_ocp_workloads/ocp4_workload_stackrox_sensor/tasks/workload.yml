# vim: set ft=ansible
---
# requires that you already used the stackrox_central role
- name: Get cluster init bundle
  uri:
    url: "https://{{ f_stackrox_central_addr }}/v1/cluster-init/init-bundles"
    body: "{ \"name\": \"prod-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}\"}"
    method: POST
    user: admin
    password: "{{ ocp4_workload_stackrox_central_admin_password }}"
    body_format: json
    force_basic_auth: true
    validate_certs: false
  register: r_stackrox_cluster_init_response

- name: Deploy cluster package
  kubernetes.core.helm:
    name: stackrox-secured-cluster-services
    chart_ref: stackrox/secured-cluster-services
    release_namespace: stackrox
    values: "{{ lookup('template', 'templates/cluster.yml.j2')| from_yaml }}"
    create_namespace: true

- name: Wait for ready sensor
  kubernetes.core.k8s_info:
    name: sensor
    kind: Deployment
    api_version: apps/v1
    namespace: stackrox
  register: r_stackrox_sensor_deployment
  until:
    - r_stackrox_sensor_deployment.resources[0].status.readyReplicas is defined
    - r_stackrox_sensor_deployment.resources[0].status.readyReplicas | int >= 1
  delay: 20
  retries: 15

- name: Determine number of collectors
  kubernetes.core.k8s_info:
    name: collector
    kind: DaemonSet
    api_version: apps/v1
    namespace: stackrox
  register: r_stackrox_collector_daemonset
  until: r_stackrox_collector_daemonset.resources[0].status.desiredNumberScheduled is defined

- name: Wait for collectors
  kubernetes.core.k8s_info:
    name: collector
    kind: DaemonSet
    api_version: apps/v1
    namespace: stackrox
  register: r_stackrox_collector_daemonset
  until:
    - r_stackrox_collector_daemonset.resources[0].status.numberReady is defined
# yamllint disable-line rule:line-length
    - r_stackrox_collector_daemonset.resources[0].status.numberReady | int == r_stackrox_collector_daemonset.resources[0].status.desiredNumberScheduled | int
  delay: 20
  retries: 15
