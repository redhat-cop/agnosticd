- name: Create Hyperfoil Auth secret for {{ user }}
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: v1
    kind: Secret
    definition:
      metadata:
        name: hyperfoil-auth
        namespace: '{{ user }}-hyperfoil'
      type: Opaque
      data:
        password: "{{ common_user_password | default('openshift') | b64encode }}"

- name: Deploy Hyperfoil Instance for {{ user }}
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: hyperfoil.io/v1alpha2
    kind: Hyperfoil
    definition:
      metadata:
        name: hyperfoil-instance
        namespace: '{{ user }}-hyperfoil'
      spec:
        version: latest
        auth:
          secret: hyperfoil-auth

- name: Wait Hyperfoil Instance for {{ user }}
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: "{{ user }}-hyperfoil"
    label_selectors:
      - role=controller
    field_selectors:
      - status.phase=Running
  register: r_hyperfoil_instance
  retries: 20
  delay: 10
  until: r_hyperfoil_instance.resources | list | length == 1

- name: Patch Hyperfoil Route for {{ user }}
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: patched
    api_version: route.openshift.io/v1
    kind: Route
    namespace: "{{ user }}-hyperfoil"
    name: hyperfoil-instance
    merge_type:
      - strategic-merge
    definition:
      spec:
        host: "{{ user }}-hyperfoil.{{ route_subdomain }}"
        port:
          targetPort: 8090
  register: hf_route
  retries: 60
  delay: 10
  until: (hf_route.result.status.ingress[0].conditions[0].type == 'Admitted' and hf_route.result.status.ingress[0].conditions[0].status == 'True')
