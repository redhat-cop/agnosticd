- name: Install Openshift Serverless Operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: serverless-operator
    install_operator_namespace: openshift-serverless
    # install_operator_manage_namespaces: ["openshift-operators"]
    # install_operator_channel: ""
    # install_operator_starting_csv: ""
    # install_operator_catalog: redhat-operators
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_performance_monitoring_automatic_install_plan_approval }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_performance_monitoring_catalogsource_setup }}"
    install_operator_catalogsource_name: "{{ ocp4_workload_performance_monitoring_redhat_catalogsource_name }}"
    # install_operator_catalogsource_namespace: "{{ ocp4_workload_performance_monitoring_catalogsource_namespace }}"
    install_operator_catalogsource_image: "{{ ocp4_workload_performance_monitoring_redhat_catalogsource_image }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_performance_monitoring_catalogsource_image_tag }}"

- name: Wait Serverless Operator To Be Running
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: openshift-serverless
    label_selectors:
      - name = knative-operator
    field_selectors:
      - status.phase=Running
  register: r_serverless_pod
  retries: 120
  delay: 10
  until: r_serverless_pod.resources | list | length == 1

- name: Evaluate KnativeServing
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: operator.knative.dev/v1beta1
    kind: KnativeServing
    definition:
      metadata:
        name: knative-serving
        namespace: knative-serving
      spec: {}
  register: _serving
  retries: 10
  delay: 10
  until: not _serving.failed

- name: Get KnativeServing config-deployment
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    kind: ConfigMap
    name: config-deployment
    namespace: knative-serving
    api_version: v1
  register: r_config_deployment
  until:
    - r_config_deployment.resources is defined
  retries: 10
  delay: 15

- name: Check KnativeServing configs
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: knative-serving
    resource_definition: "{{ lookup('file', item) }}"
  loop:
    - knative-config-deployment.yml
    - knative-config-gc.yml

- name: Check Workshop Serverless Role
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: knative-serving
    resource_definition: "{{ lookup('file', 'serverless_role.yml') }}"

- name: Check user tekton RoleBinding
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'serverless-rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user
