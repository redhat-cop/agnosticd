- name: Evaluate DevSpaces Subscription
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    definition:
      metadata:
        name: devspaces
        namespace: openshift-operators
      spec:
        channel: stable
        installPlanApproval: Automatic
        name: devspaces
        source: redhat-operators
        sourceNamespace: openshift-marketplace

- name: Wait DevSpaces Operator To Be Running
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - app = devspaces-operator
      - app.kubernetes.io/component = devspaces-operator
    field_selectors:
      - status.phase=Running
  register: r_devspace_pod
  retries: 120
  delay: 10
  until: r_devspace_pod.resources | list | length == 1

- name: Check Devspaces namespace
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Namespace
    name: openshift-devspaces
    state: present
  register: _namespace
  retries: 10
  delay: 5
  until:
    - _namespace is succeeded

- name: Check Che Cluster
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: openshift-devspaces
    resource_definition: "{{ lookup('file', 'che-cluster.yml') }}"
  register: _che
  retries: 10
  delay: 10
  until: not _che.failed

- name: Wait DevSpaces Instance To Be Running
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: openshift-devspaces
    label_selectors:
      - app = devspaces
      - component = che-gateway
    field_selectors:
      - status.phase=Running
  register: r_devspace_pod
  retries: 120
  delay: 10
  until: r_devspace_pod.resources | list | length == 1

- name: Check DevSpaces plugin-registry devfile endpoint readiness
  ansible.builtin.uri:
    url: https://devspaces.{{ route_subdomain }}/plugin-registry/v3/plugins/che-incubator/che-code/insiders/devfile.yaml
    method: GET
    return_content: false
    status_code: 200
    timeout: 3
  register: api_response
  retries: 120
  delay: 10
  until: api_response.status == 200

- name: Check Workspaces for Users
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-devspaces'
    resource_definition: "{{ lookup('template', 'devspace_workspace.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Get DevWorkspace pods in users' namespaces
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: '{{ user }}-devspaces'
    label_selectors:
      - controller.devfile.io/devworkspace_name=workshop-performance-monitoring-apps
    field_selectors:
      - status.phase=Running
  register: running_workspaces
  loop: "{{ users }}"
  loop_control:
    loop_var: user
  retries: 30
  delay: 10
  until: (running_workspaces.resources | list | length) == 1

- name: Number of Running workspaces
  ansible.builtin.debug:
    msg: "{{ running_workspaces.results | length }}"

- name: Extract Pod metadata
  ansible.builtin.set_fact:
    workspaces: "{{ workspaces | default([]) + [{'podName': item.resources[0].metadata.name, 'namespace': item.resources[0].metadata.namespace}] }}"
  with_items: "{{ running_workspaces.results }}"
  no_log: true

- name: Running Workspaces Metadata
  ansible.builtin.debug:
    msg: "{{ workspaces }}"

- name: Check Nexus maven-public endpoint readiness
  ansible.builtin.uri:
    url: http://nexus-shared-maven-mirror.{{ route_subdomain }}/service/rest/repository/browse/maven-public/
    method: GET
    return_content: false
    status_code: 200
    timeout: 3
  register: endpoint_response
  retries: 30
  delay: 10
  until: endpoint_response.status == 200

- name: Attempt to warm up users' devspaces by running 'mvn package -DskipTests'
  kubernetes.core.k8s_exec:
    namespace: "{{ item.namespace }}"
    pod: "{{ item.podName }}"
    container: "tools"
    command: /bin/bash -c 'mvn package -q -f "$PROJECT_SOURCE" -DskipTests'
  register: command_status
  with_items: "{{ workspaces }}"
  ignore_errors: true

# - name: Check last command status
#   debug:
#     msg: "{{ command_status.results }}"
