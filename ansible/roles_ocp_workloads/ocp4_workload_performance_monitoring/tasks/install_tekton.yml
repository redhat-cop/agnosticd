- name: Check Pipelines Subscription
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    kind: Subscription
    api_version: operators.coreos.com/v1alpha1
    definition:
      metadata:
        name: openshift-pipelines-operator
        namespace: openshift-operators
      spec:
        installPlanApproval: Automatic
        channel: pipelines-1.9
        name: openshift-pipelines-operator-rh
        source: redhat-operators
        sourceNamespace: openshift-marketplace

- name: Check if Pipeline CRD exists
  kubernetes.core.k8s_info:
    kind: CustomResourceDefinition
    api_version: apiextensions.k8s.io/v1
    name: pipelines.tekton.dev
  register: crd_result
  retries: 40
  delay: 10
  until: crd_result.resources | length > 0

- name: Wait Tekton Operator to be Up&Running
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - app = tekton-operator
    field_selectors:
      - status.phase=Running
  register: r_tekton_pod
  retries: 20
  delay: 10
  until: r_tekton_pod.resources | list | length == 1

- name: Check if Pipeline CRD exists
  kubernetes.core.k8s_info:
    kind: CustomResourceDefinition
    api_version: apiextensions.k8s.io/v1
    name: pipelines.tekton.dev
  register: crd_result
  retries: 30
  delay: 10
  until: crd_result.resources | length > 0

- name: Patch TektonConfig to enable detailed metrics
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: patched
    api_version: operator.tekton.dev/v1alpha1
    kind: TektonConfig
    name: config
    merge_type:
      - merge
    definition:
      spec:
        pipeline:
          metrics.taskrun.duration-type: lastvalue
          metrics.pipelinerun.duration-type: lastvalue
          metrics.taskrun.level: taskrun
          metrics.pipelinerun.level: pipelinerun

- name: Wait Tekton Operator to be Up&Running
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - app = tekton-operator
    field_selectors:
      - status.phase=Running
  register: r_tekton_pod
  retries: 20
  delay: 10
  until: r_tekton_pod.resources | list | length == 1

- name: Check Pipelines for each User
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-cicd'
    resource_definition: "{{ lookup('template', 'pipeline.yml.j2') }}"
  register: pipeline_creation_result
  loop: "{{ users }}"
  loop_control:
    loop_var: user
  retries: 30
  delay: 5
  until: pipeline_creation_result.failed == false

- name: Grant staging deployment rights to the 'pipeline' ServiceAccount
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-cicd'
    resource_definition: "{{ lookup('template', 'pipeline-sa-rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Check PVCs for each User
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ item }}-cicd'
    resource_definition: "{{ lookup('template', 'tekton_pvcs.yml.j2') }}"
  loop: "{{ users }}"

- name: Check Tekton ClusterRole
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('file', 'tekton_role.yml') }}"

- name: Check user tekton RoleBinding
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'tekton-rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Check Registry Pull ClusterRole
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('file', 'registry-pull-role.yml') }}"

- name: Check Registry Pull RoleBinding
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'registry-pull-rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user
