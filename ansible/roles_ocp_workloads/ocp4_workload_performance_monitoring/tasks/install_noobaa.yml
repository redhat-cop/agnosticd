- name: Evaluate ODF Namespace
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    kind: Namespace
    api_version: v1
    definition:
      metadata:
        name: openshift-storage
        annotations:
          openshift.io/node-selector: ""
        labels:
          openshift.io/cluster-monitoring: "true"

- name: Evaluate openshift-storage OperatorGroup
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    kind: OperatorGroup
    api_version: operators.coreos.com/v1
    definition:
      metadata:
        name: openshift-storage
        namespace: openshift-storage
      spec:
        targetNamespaces:
          - openshift-storage

- name: Evaluate ODF Subscription
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    kind: Subscription
    api_version: operators.coreos.com/v1alpha1
    definition:
      metadata:
        name: "odf-operator"
        namespace: "openshift-storage"
      spec:
        channel: stable-4.12
        installPlanApproval: Automatic
        name: odf-operator
        source: redhat-operators
        sourceNamespace: openshift-marketplace

- name: Evaluate ODF Operator is ready
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: apps/v1
    kind: Deployment
    name: noobaa-operator
    namespace: openshift-storage
  register: r_odf_deploy
  retries: 50
  delay: 10
  until:
    - r_odf_deploy.resources[0].status.readyReplicas is defined
    - r_odf_deploy.resources[0].status.readyReplicas == 1

- name: Evaluate NooBaa Instance
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('file', 'noobaa.yml') }}"

- name: Evaluate NooBaa instance is ready
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: apps/v1
    kind: Deployment
    name: noobaa-endpoint
    namespace: openshift-storage
  register: r_noobaa_deploy
  retries: 50
  delay: 10
  until:
    - r_noobaa_deploy.resources[0].status.readyReplicas is defined
    - r_noobaa_deploy.resources[0].status.readyReplicas > 0

- name: Evaluate NooBaa BackingStore Instance
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'noobaa_backingstore.yml.j2') }}"

- name: Evaluate NooBaa BucketClass Instance
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('file', 'noobaa_bucketclass.yml') }}"

- name: Check Workshop Noobaa Role
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('file', 'noobaa_role.yml') }}"

- name: Check User Noobaa RoleBinding
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'noobaa_rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Evaluate BackingStore is ready
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: noobaa.io/v1alpha1
    kind: BackingStore
    name: noobaa-pv-backing-store
    namespace: openshift-storage
  register: r_backingstore
  retries: 100
  delay: 2
  until:
    - r_backingstore.resources is defined
    - r_backingstore.resources | length | int > 0
    - r_backingstore.resources[0].status is defined
    - r_backingstore.resources[0].status.conditions is defined
    - ( r_backingstore.resources[0].status | to_json | from_json |
      json_query('conditions[?type == `Available`].status') | join ) == "True"

- name: Evaluate BucketClass is ready
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: noobaa.io/v1alpha1
    kind: BucketClass
    name: noobaa-default-bucket-class
    namespace: openshift-storage
  register: r_bucketclass
  retries: 100
  delay: 2
  until:
    - r_bucketclass.resources is defined
    - r_bucketclass.resources | length | int > 0
    - r_bucketclass.resources[0].status is defined
    - r_bucketclass.resources[0].status.conditions is defined
    - ( r_bucketclass.resources[0].status | to_json | from_json |
      json_query('conditions[?type == `Available`].status') | join ) == "True"
