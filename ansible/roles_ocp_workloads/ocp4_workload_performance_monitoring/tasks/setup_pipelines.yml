- name: Check Pipelines for each User
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-cicd'
    resource_definition: "{{ lookup('template', 'pipeline.yml.j2') }}"
  register: pipeline_creation_result
  loop: "{{ users }}"
  loop_control:
    loop_var: user
  retries: 30
  delay: 5
  until: pipeline_creation_result.failed == false

- name: Grant staging deployment rights to the 'pipeline' ServiceAccount
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ user }}-cicd'
    resource_definition: "{{ lookup('template', 'pipeline-sa-rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Check PVCs for each User
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ item }}-cicd'
    resource_definition: "{{ lookup('template', 'tekton_pvcs.yml.j2') }}"
  loop: "{{ users }}"

- name: Check Tekton ClusterRole
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('file', 'tekton_role.yml') }}"

- name: Check user tekton RoleBinding
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'tekton-rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Check Registry Pull ClusterRole
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('file', 'registry-pull-role.yml') }}"

- name: Check Registry Pull RoleBinding
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    resource_definition: "{{ lookup('template', 'registry-pull-rolebinding.yml.j2') }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user
