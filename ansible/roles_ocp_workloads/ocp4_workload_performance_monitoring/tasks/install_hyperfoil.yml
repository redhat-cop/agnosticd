- name: Check Hyperfoil Subscription
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    kind: Subscription
    api_version: operators.coreos.com/v1alpha1
    definition:
      metadata:
        name: hyperfoil-bundle
        namespace: openshift-operators
      spec:
        channel: alpha
        installPlanApproval: Automatic
        name: hyperfoil-bundle
        source: community-operators
        sourceNamespace: openshift-marketplace

- name: Wait Hyperfoil Operator
  kubernetes.core.k8s_info:
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: openshift-operators
    label_selectors:
      - control-plane=controller-manager
    field_selectors:
      - status.phase=Running
  register: r_hyperfoil_pod
  retries: 20
  delay: 10
  until: r_hyperfoil_pod.resources | list | length == 1

- name: Create Hyperfoil Auth secret for Users
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: v1
    kind: Secret
    definition:
      metadata:
        name: hyperfoil-auth
        namespace: '{{ user }}-hyperfoil'
      type: Opaque
      data:
        password: "{{ ocp4_workload_authentication_htpasswd_user_password | default('openshift') | b64encode }}"
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Deploy Hyperfoil Instance for Users
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: hyperfoil.io/v1alpha2
    kind: Hyperfoil
    definition:
      metadata:
        name: hyperfoil-instance
        namespace: '{{ user }}-hyperfoil'
      spec:
        version: latest
        auth:
          secret: hyperfoil-auth
  loop: "{{ users }}"
  loop_control:
    loop_var: user

- name: Patch Hyperfoil Routes to include User Namespace
  kubernetes.core.k8s:
    validate_certs: '{{ verify_tls }}'
    state: patched
    api_version: route.openshift.io/v1
    kind: Route
    namespace: "{{ user }}-hyperfoil"
    name: hyperfoil-instance
    merge_type:
      - strategic-merge
    definition:
      spec:
        host: "hyperfoil-instance-{{ user }}-hyperfoil.{{ route_subdomain }}"
  register: hf_route
  loop: "{{ users }}"
  loop_control:
    loop_var: user
  retries: 10
  delay: 6
  until: (hf_route.result.status.ingress[0].conditions[0].type == 'Admitted' and hf_route.result.status.ingress[0].conditions[0].status == 'True')
