apiVersion: workspace.devfile.io/v1alpha2
kind: DevWorkspace
metadata:
  annotations:
    che.eclipse.org/devfile-source: |
      scm:
        repo: >-
          {{ workshop_app_git }}
        fileName: devfile.yaml
      factory:
        params: >-
          url={{ workshop_app_git }}
  finalizers:
  - storage.controller.devfile.io
  - rbac.controller.devfile.io
  name: workshop-performance-monitoring-apps
  #namespace: userX-devspaces #will be replaced by a template engine processor
spec:
  contributions:
  - name: ide
    uri: "http://che-gateway.openshift-devspaces.svc.cluster.local:8080/plugin-registry/v3/plugins/che-incubator/che-code/insiders/devfile.yaml"
  #  uri: "https://devspaces.{{ route_subdomain }}/plugin-registry/v3/plugins/che-incubator/che-code/insiders/devfile.yaml"
  # - kubernetes:
  #     name: che-code
  #   name: che-code
  routingClass: che
  started: true
  template:
    attributes:
      controller.devfile.io/devworkspace-config:
        name: devworkspace-config
        namespace: openshift-devspaces
      controller.devfile.io/scc: container-build
      controller.devfile.io/storage-type: per-workspace
      dw.metadata.annotations:
        che.eclipse.org/devfile-source: |
          scm:
            repo: >-
              {{ workshop_app_git }}
            fileName: devfile.yaml
          factory:
            params: >-
              url={{ workshop_app_git }}
    commands:
    ### Quarkus inner-loop commands
    - id: quarkus-package-jvm
      exec:
        label: '01: Quarkus - JVM Package'
        commandLine: './mvnw clean package -DskipTests -Dquarkus.container-image.build=false -Dquarkus.container-image.builder=openshift'
        component: tools
        group:
          isDefault: true
          kind: build
        workingDir: '${PROJECT_SOURCE}/quarkus-app/'
    - id: quarkus-test
      exec:
        label: '02: Quarkus - Test'
        commandLine: './mvnw test'
        component: tools
        group:
          isDefault: true
          kind: build
        workingDir: '${PROJECT_SOURCE}/quarkus-app/'
    - id: quarkus-start-dev
      exec:
        label: '03: Quarkus - Start in dev mode (Hot reload + debug)'
        commandLine: './mvnw compile quarkus:dev -DskipTests -Dquarkus.container-image.build=false -Dquarkus.container-image.builder=openshift'
        component: tools
        group:
          isDefault: true
          kind: run
        workingDir: '${PROJECT_SOURCE}/quarkus-app/'
    ### Micronaut inner-loop commands
    - id: mn-package-jvm
      exec:
        label: '04: Micronaut - JVM Package'
        commandLine: './mvnw clean package -DskipTests'
        component: tools
        group:
          isDefault: true
          kind: build
        workingDir: '${PROJECT_SOURCE}/micronaut-app/'
    - id: mn-start-dev
      exec:
        label: '05: Micronaut - Start in dev mode'
        commandLine: './mvnw compile -Dmicronaut.environments=dev mn:run'
        component: tools
        group:
          isDefault: true
          kind: run
        workingDir: '${PROJECT_SOURCE}/micronaut-app/'
    - id: mn-test
      exec:
        label: '06: Micronaut - Test'
        commandLine: './mvnw test'
        component: tools
        group:
          isDefault: true
          kind: run
        workingDir: '${PROJECT_SOURCE}/micronaut-app/'
    ### SpringBoot inner-loop commands
    - id: sb-package-jvm
      exec:
        label: '07: SpringBoot - JVM Package'
        commandLine: './mvnw clean package -DskipTests'
        component: tools
        group:
          isDefault: true
          kind: build
        workingDir: '${PROJECT_SOURCE}/springboot-app/'
    - id: sb-start-dev
      exec:
        label: '08: SpringBoot - Start in dev mode'
        commandLine: './mvnw compile spring-boot:run -Dspring.profiles.active=development'
        component: tools
        group:
          isDefault: true
          kind: run
        workingDir: '${PROJECT_SOURCE}/springboot-app/'
    - id: sb-test
      exec:
        label: '09: SpringBoot - Test'
        commandLine: './mvnw test'
        component: tools
        group:
          isDefault: true
          kind: run
        workingDir: '${PROJECT_SOURCE}/springboot-app/'
    ### Common commands
    - id: show-app-routes
      exec:
        label: '10: Show Hyperfoil and Apps Routes'
        component: "tools"
        commandLine: |
          clear
          echo
          oc get route hyperfoil-instance --ignore-not-found=true -n "$(oc whoami)-hyperfoil" \
          -o jsonpath="{'\n\nHYPERFOIL_CONTROLLER_URL: '}{'https://'}{.status.ingress[0].host}{'\n'}"
          oc get rt quarkus-app --ignore-not-found=true -n "$(oc whoami)-staging" \
          -o jsonpath="{'\nQUARKUS_APP_URL: '}{.status.address.url}{'\n'}{'APP_CONTEXT_PATH: /quarkus \n\n'}"
          oc get rt micronaut-app --ignore-not-found=true -n "$(oc whoami)-staging" \
          -o jsonpath="{'\nMICRONAUT_APP_URL: '}{.status.address.url}{'\n'}{'APP_CONTEXT_PATH: /micronaut \n\n'}"
          oc get rt springboot-app --ignore-not-found=true -n "$(oc whoami)-staging" \
          -o jsonpath="{'\nSPRINGBOOT_APP_URL: '}{.status.address.url}{'\n'}{'APP_CONTEXT_PATH: /springboot \n\n'}"

    - id: enable-cpu-auto-scaling
      exec:
        label: '11: Enable CPU based auto-scaling'
        component: "tools"
        commandLine: |
          ${PROJECT_SOURCE}/scripts/enable-auto-scaling.sh cpu 20

    - id: enable-memory-auto-scaling
      exec:
        label: '12: Enable Memory based auto-scaling'
        component: "tools"
        commandLine: |
          ${PROJECT_SOURCE}/scripts/enable-auto-scaling.sh memory 400

    - id: create-registry-push-secret
      exec:
        label: '13: Link Secret to Pipeline SA'
        component: "tools"
        commandLine: |
            clear
            oc secrets link pipeline quay-secret --for=pull,mount -n "$(oc whoami)-cicd"

    - id: oc-login
      exec:
        label: '98: OC Login'
        component: "tools"
        commandLine: |
          clear
          echo
          echo "current user: $(oc whoami)"
          echo "current project: $(oc project)"
          echo
          oc login -u $(echo $DEVWORKSPACE_NAMESPACE | cut -d'-' -f 1) "https://$KUBERNETES_SERVICE_HOST:443" --insecure-skip-tls-verify=true
          oc project $DEVWORKSPACE_NAMESPACE

    ### Pre-hooks
    - id: switch-to-java-17
      exec:
        label: '99: Switch to Java 17'
        component: "tools"
        # workingDir: '${PROJECT_SOURCE}'
        commandLine: |
          [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk default java 17.0.7-tem
          #copy maven settings pointing to in-cluster nexus mirror
          [[ -s "$PROJECT_SOURCE/settings.xml" ]] && cp -v $PROJECT_SOURCE/settings.xml $HOME/.m2/
          # setup git credentials store
          git config --global credential.helper store
    components:
    - attributes:
        che-code.eclipse.org/contribute-cpuLimit: true
        che-code.eclipse.org/contribute-cpuRequest: true
        che-code.eclipse.org/contribute-endpoint/che-code: 3100
        che-code.eclipse.org/contribute-endpoint/code-redirect-1: 13131
        che-code.eclipse.org/contribute-endpoint/code-redirect-2: 13132
        che-code.eclipse.org/contribute-endpoint/code-redirect-3: 13133
        che-code.eclipse.org/contribute-entry-point: true
        che-code.eclipse.org/contribute-memoryLimit: true
        che-code.eclipse.org/contribute-memoryRequest: true
        che-code.eclipse.org/contribute-volume-mount/checode: /checode
        che-code.eclipse.org/contributed-container: tools
      container:
        command:
        - /checode/entrypoint-volume.sh
        endpoints:
        - exposure: public
          name: quarkus-app
          protocol: https
          targetPort: 8701
          path: /quarkus
        - exposure: public
          name: micronaut-app
          protocol: https
          targetPort: 8702
          path: /micronaut
        - exposure: public
          name: springboot-app
          protocol: https
          targetPort: 8703
          path: /springboot
        - attributes:
            contributed-by: che-code.eclipse.org
            cookiesAuthEnabled: true
            discoverable: false
            type: main
            urlRewriteSupported: true
          exposure: public
          name: che-code
          protocol: https
          secure: false
          targetPort: 3100
        - attributes:
            contributed-by: che-code.eclipse.org
            discoverable: false
            urlRewriteSupported: false
          exposure: public
          name: code-redirect-1
          protocol: http
          targetPort: 13131
        - attributes:
            contributed-by: che-code.eclipse.org
            discoverable: false
            urlRewriteSupported: false
          exposure: public
          name: code-redirect-2
          protocol: http
          targetPort: 13132
        - attributes:
            contributed-by: che-code.eclipse.org
            discoverable: false
            urlRewriteSupported: false
          exposure: public
          name: code-redirect-3
          protocol: http
          targetPort: 13133
        env:
        - name: QUARKUS_HTTP_HOST
          value: 0.0.0.0
        - name: CHE_DASHBOARD_URL
          value: https://devspaces.{{ route_subdomain }}
        - name: CHE_PLUGIN_REGISTRY_URL
          value: https://devspaces.{{ route_subdomain }}/plugin-registry/v3
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: http://plugin-registry.openshift-devspaces.svc:8080/v3
        - name: OPENVSX_REGISTRY_URL
          value: https://open-vsx.org
        image: "{{ devspaces_tools_image }}"
        memoryLimit: '{{ devtools_memory_limit }}'
        memoryRequest: '{{ devtools_memory_request }}'
        cpuLimit: '{{ devtools_cpu_limit }}'
        cpuRequest: '{{ devtools_cpu_request }}'
        mountSources: true
        sourceMapping: /projects
        volumeMounts:
        - name: m2
          path: /home/user/.m2
        - name: checode
          path: /checode
      name: tools
    - name: m2
      volume:
        size: 3G
    events:
      postStart:
      - switch-to-java-17
    projects:
    - git:
        checkoutFrom:
          revision: main
        remotes:
          origin: https://github.com/redhat-na-ssa/workshop_performance-monitoring-apps.git
      name: workshop-performance-monitoring-apps