---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Set managed cluster variables
  set_fact:
    ocp4_workload_managed_cluster_name: "{{ item.managed_cluster_name }}"
    ocp4_workload_managed_cluster_kconf_path: "{{ item.managed_cluster_kconf_path | default('/home/ec2-user/.kube') }}"
  loop: "{{ acm_aws_clusters }}"

- name: Install managed cluster roles
  environment:
      KUBECONFIG: "{{ ocp4_workload_managed_cluster_kconf_path }}/{{ ocp4_workload_managed_cluster_name }}/kubeconfig"
  block:
    - name: Use context #we need to figure out how to do this in each role
      shell: oc config use-context "{{ ocp4_workload_managed_cluster_name }}"

    - name: Install Gitea Operator
      ansible.builtin.include_role:
        name: ocp4_workload_gitea_operator

    - name: Install Pipelines
      ansible.builtin.include_role:
        name: ocp4_workload_pipelines

    - name: Install GitOps
      ansible.builtin.include_role:
        name: ocp4_workload_openshift_gitops

    - name: Install MTA
      ansible.builtin.include_role:
        name: ocp4_workload_mta

    - name: Install MTA Tackle
      ansible.builtin.include_role:
        name: ocp4_workload_mta_tackle

    - name: Install RHODS OLM
      ansible.builtin.include_role:
        name: ocp4_workload_rhods_olm

    - name: Install Big Demo
      ansible.builtin.include_role:
        name: ocp4_workload_big_demo

    - name: Install Object Detection AI ML Setup
      ansible.builtin.include_role:
        name: ocp4_workload_object_detection_ai_ml_setup

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent
