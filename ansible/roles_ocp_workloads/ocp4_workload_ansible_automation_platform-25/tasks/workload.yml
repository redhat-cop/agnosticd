---

- name: Setup environment vars
  environment:
    KUBECONFIG: "{{ ocp4_workload_ansible_automation_platform_tmp_kubeconfig }}"
  block:

    - name: Extend OCP Bearer Token life for AAP cred use
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'ocp_bearer_token_lifecycle.j2') }}"
      register: r_extend_token_lifecycle
      until: r_extend_token_lifecycle is succeeded
      retries: 5

    - name: Install Red Hat Ansible Automation Platform
      ansible.builtin.include_role:
        name: install_operator
      vars:
        install_operator_action: install
        install_operator_namespace: "{{ ocp4_workload_ansible_automation_platform_project }}"
        install_operator_name: "{{ ocp4_workload_ansible_automation_platform_operator_name }}"
        install_operator_csv_nameprefix: "{{ ocp4_workload_ansible_automation_platform_operator_csv_nameprefix }}"
        install_operator_manage_namespaces:
          - "{{ ocp4_workload_ansible_automation_platform_project }}"
        install_operator_channel: "{{ ocp4_workload_ansible_automation_platform_operator_channel }}"
        install_operator_catalog: "{{ ocp4_workload_ansible_automation_platform_operator_catalog }}"
        install_operator_automatic_install_plan_approval: "{{ ocp4_workload_ansible_automation_platform_automatic_install_plan_approval }}"
        install_operator_starting_csv: "{{ ocp4_workload_ansible_automation_platform_starting_csv }}"
        install_operator_catalogsource_setup: "{{ ocp4_workload_ansible_automation_platform_use_catalog_snapshot }}"
        install_operator_catalogsource_name: "{{ ocp4_workload_ansible_automation_platform_catalogsource_name }}"
        install_operator_catalogsource_namespace: "{{ ocp4_workload_ansible_automation_platform_project }}"
        install_operator_catalogsource_image: "{{ ocp4_workload_ansible_automation_platform_catalog_snapshot_image }}"
        install_operator_catalogsource_image_tag: "{{ ocp4_workload_ansible_automation_platform_catalog_snapshot_image_tag }}"


- name: Wait until all AAP2 Operators are running
  block:

    - name: Wait until the Automation Controller Manager operator is running
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Deployment
        name: automation-controller-operator-controller-manager
        namespace: "{{ ocp4_workload_ansible_automation_platform_project }}"
      register: r_aap_controller_manager_operator
      until:
        - r_aap_controller_manager_operator.resources[0].status.readyReplicas is defined
        - "r_aap_controller_manager_operator.resources[0].status.replicas == \
            r_aap_controller_manager_operator.resources[0].status.readyReplicas"
      retries: 30
      delay: 10

    - name: Wait until the Automation Hub Manager operator is running
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Deployment
        name: automation-hub-operator-controller-manager
        namespace: "{{ ocp4_workload_ansible_automation_platform_project }}"
      register: r_aap_hub_manager_operator
      until:
        - r_aap_hub_manager_operator.resources[0].status.readyReplicas is defined
        - "r_aap_hub_manager_operator.resources[0].status.replicas == \
            r_aap_hub_manager_operator.resources[0].status.readyReplicas"
      retries: 30
      delay: 10

    - name: Wait until the Automation Resource Manager operator is running
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Deployment
        name: resource-operator-controller-manager
        namespace: "{{ ocp4_workload_ansible_automation_platform_project }}"
      register: r_aap_resource_manager_operator
      until:
        - r_aap_resource_manager_operator.resources[0].status.readyReplicas is defined
        - "r_aap_resource_manager_operator.resources[0].status.replicas == \
            r_aap_resource_manager_operator.resources[0].status.readyReplicas"
      retries: 30
      delay: 10

    - name: Create Operator group, secret and Install operator
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', __definition) }}"
      loop:
        - admin_secret.j2
      loop_control:
        loop_var: __definition

    - name: Include AAP 2.x configuration tasks
      ansible.builtin.include_tasks:
        file: aap/aap-{{ ocp4_workload_ansible_automation_platform_version }}.yml

- name: Display Version and credentials
  when: not silent | bool
  ansible.builtin.debug:
    msg:
      - "{{ r_result.json.version }}"
      - "Automation Controller URL: https://{{ automation_controller_hostname }}"
      - "Automation Controller Admin Login: admin"
      - "Automation Controller Admin Password: {{ ocp4_workload_ansible_automation_platform_admin_password }}"

- name: Print Access information
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
    - "Automation Controller URL: https://{{ automation_controller_hostname }}"
    - "Automation Controller Admin Login: admin"
    - "Automation Controller Admin Password: {{ ocp4_workload_ansible_automation_platform_admin_password }}"

- name: Print Access information
  agnosticd_user_info:
    data:
      aap_controller_web_url: "https://{{ automation_controller_hostname }}"
      aap_controller_admin_user: "{{ ocp4_workload_ansible_automation_platform_admin_username | default('admin') }}"
      aap_controller_admin_password: "{{ ocp4_workload_ansible_automation_platform_admin_password }}"

- name: Set facts for Access information
  ansible.builtin.set_fact:
    aap_controller_web_url: "https://{{ automation_controller_hostname }}"
    aap_controller_admin_user: "{{ ocp4_workload_ansible_automation_platform_admin_username | default('admin') }}"
    aap_controller_admin_password: "{{ ocp4_workload_ansible_automation_platform_admin_password }}"

# Leave this as the last task in the playbook.

- name: workload tasks complete
  when: not silent | bool
  ansible.builtin.debug:
    msg: "Workload Tasks completed successfully."
