# Get the {{ ocp4_workload_lpe_3scale_org_name}} Tenant Secret
---

- name: Get the {{ ocp4_workload_lpe_3scale_org_name}} tenant secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ ocp4_workload_lpe_3scale_namespace }}"
    name: "{{ ocp4_workload_lpe_3scale_org_name }}-tenant-secret"
  register: r_dc
  until:
    - r_dc is defined
    - r_dc.resources is defined
    - r_dc.resources | list | length > 0
  retries: 60
  delay: 15

- name: Get the tenant admin url and access token
  set_fact:
    ocp4_workload_lpe_3scale_tenant_admin_url: "{{ r_dc.resources[0].data.adminURL | b64decode }}"
    ocp4_workload_lpe_3scale_tenant_access_token: "{{ r_dc.resources[0].data.token | b64decode }}"

- name: output tenant info
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
    - "3scale Tenant API Manager - details"
    - "{{ ocp4_workload_lpe_3scale_org_name}} Admin Console : {{ ocp4_workload_lpe_3scale_tenant_admin_url }}"
    - "Admin login with credentials {{ ocp4_workload_lpe_3scale_tenant_admin_id }} / {{ ocp4_workload_lpe_3scale_tenant_admin_password }} "
    - "{{ ocp4_workload_lpe_3scale_org_name}} Admin Access URL : {{ ocp4_workload_lpe_3scale_tenant_admin_access_endpoint }}"
  when: not silent|bool

- name: Determine if tenant creation was required
  when: ocp4_workload_lpe_3scale_create_gws_with_each_tenant|bool
  block:
    - name: output gateway project info
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - "Tenant's Gateway Project: {{ ocp4_workload_lpe_3scale_tenant_gw_project }}"
        - "Tenant's OpenShift User: {{ ocp_username }}"
        - "APICast Endpoint: https://{{ ocp4_workload_lpe_3scale_apicast_services[0] }}.{{ ocp4_workload_lpe_3scale_tenant_admin_base_url }}:443"
        - "APICast Endpoint: https://{{ ocp4_workload_lpe_3scale_apicast_services[1] }}.{{ ocp4_workload_lpe_3scale_tenant_admin_base_url }}:443"
        - "Default API (Echo API) proxy updated and deployed to stage"
      when: not silent|bool
