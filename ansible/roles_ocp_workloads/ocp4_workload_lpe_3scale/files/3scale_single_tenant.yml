# The following is only appropriate when create generic tenants whose names are sequential
# The following is skipped when creating a "named" tenant, ie; openbanking-dev  

# Name of 3scale API administrator of the tenant
- set_fact:
    ocp4_workload_lpe_3scale_tenant_admin_id: "{{ ocp4_workload_lpe_3scale_tenant_admin_name_base }}"

# Name of 3scale tenant organisation
- set_fact:
    ocp4_workload_lpe_3scale_org_name: "{{ocp4_workload_lpe_3scale_tenant_user_name_base}}-tenant"

# Name of 3scale tenant namespace
- set_fact:
    ocp4_workload_lpe_3scale_tenant_gw_project: "{{ ocp4_workload_lpe_3scale_tenant_user_name_base }}-gw"

# Name of 3scale tenant namespace display name
- set_fact:
    ocp4_workload_lpe_3scale_tenant_gw_projectDisplay: "{{ ocp4_workload_lpe_3scale_tenant_user_name_base }} APICast Gateways Project"

# Set the tenant admin email
- name: "{{ocp4_workload_lpe_3scale_org_name}}      1)  **********   TENANT CREATION  **********"
  set_fact: 
    ocp4_workload_lpe_3scale_tenant_admin_email: "{{ocp4_workload_lpe_3scale_admin_email_user}}@{{ocp4_workload_lpe_3scale_admin_email_domain}}"

# Display the tenant admin email address
- name: Tenant admin email address
  debug: 
    msg: "{{ocp4_workload_lpe_3scale_org_name}} ocp4_workload_lpe_3scale_tenant_admin_email = {{ocp4_workload_lpe_3scale_tenant_admin_email}}"

# Wait for 3scale tenant to be created
- name: "Create the {{ocp4_workload_lpe_3scale_org_name}} CRDs"
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/tenant-admin-secret.yml.j2
  - ./templates/tenant.yml.j2

- name: "Get the {{ ocp4_workload_lpe_3scale_org_name}} tenant secret"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ ocp4_workload_lpe_3scale_namespace }}"
    name: "{{ ocp4_workload_lpe_3scale_org_name }}-tenant-secret"
  register: r_dc
  until:
    - r_dc is defined
    - r_dc.resources is defined
    - r_dc.resources | list | length > 0
  retries: 60
  delay: 15

- name: Get the tenant admin url and access token
  set_fact:
    ocp4_workload_lpe_3scale_tenant_admin_url: "{{ r_dc.resources[0].data.adminURL | b64decode }}"
    ocp4_workload_lpe_3scale_tenant_access_token: "{{ r_dc.resources[0].data.token | b64decode }}"
  
# create the tenant Gateway
- name: Determine if tenant creation was required
  when: ocp4_workload_lpe_3scale_create_gws_with_each_tenant|bool
  block:
    - name: Set up a namespace for the tenant
      kubernetes.core.k8s:
        state: present
        api_version: v1
        kind: Namespace
        name: "{{ ocp4_workload_lpe_3scale_tenant_gw_project }}"

    - name: "Add {{ ocp_username }} to the {{ ocp4_workload_lpe_3scale_tenant_gw_project }} namepaces"
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', './../templates/role-binding.yml.j2' ) | from_yaml }}"
      loop:
      - "{{ ocp4_workload_lpe_3scale_tenant_gw_project }}"

    - name: Set the 3scale tenant admin portal endpoint
      set_fact:
        ocp4_workload_lpe_3scale_portal_endpoint: "https://{{ ocp4_workload_lpe_3scale_tenant_access_token }}@{{ocp4_workload_lpe_3scale_tenant_admin_url | regex_search('(?<=https:\\/\\/).*') }}"

    - name: "Create threescale-portal-endpoint-stage secret in {{ ocp4_workload_lpe_3scale_tenant_gw_project }}"
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', './../templates/apicast-url-secret.yml.j2' ) | from_yaml }}" 
      loop:
      - apicast-configuration-url-secret-stage
      - apicast-configuration-url-secret-prod

# Install 3scale API Cast operator in the tenant
    - name: Try to install the 3scale APICast operator.  On failure, patch memory on deployment config.
      block:
      - name: Install Operator
        include_role:
          name: install_operator
        vars:
          install_operator_action: install
          install_operator_name: "{{ ocp4_workload_lpe_3scale_apicast_operator_package_name }}"
          install_operator_namespace: "{{ ocp4_workload_lpe_3scale_tenant_gw_project }}"
          install_operator_channel: "{{ ocp4_workload_lpe_3scale_apicast_current_channel | default('')}}"
          install_operator_csv_nameprefix: "{{ ocp4_workload_lpe_3scale_apicast_operator_package_name }}"
          install_operator_catalog: redhat-operators
          install_operator_automatic_install_plan_approval: "true"
          install_operator_starting_csv: "{{ ocp4_workload_lpe_3scale_apicast_current_csv | default('')}}"
          install_operator_catalogsource_setup: "false"
          install_operator_manage_namespaces: 
          - "{{ ocp4_workload_lpe_3scale_tenant_gw_project }}"
      rescue:
        - name: Patch deployment config for apicast operator
          kubernetes.core.k8s:
            state: present
            merge_type:
            - strategic-merge
            - merge
            definition: "{{ lookup('template', './../templates/apicast-operator-deployment.yml.j2' ) | from_yaml }}"

          

# Create API cast gateway for the tenant
    - name: "Create Stage & Prod APICast"  
      kubernetes.core.k8s:
        state: present
        merge_type:
        - strategic-merge
        - merge
        definition: "{{ lookup('template', item ) | from_yaml }}"
        namespace: '{{ ocp4_workload_lpe_3scale_tenant_gw_project }}'
      loop:
      - ./templates/apicast-stage.yml.j2
      - ./templates/apicast-prod.yml.j2  

    - name: "Check if the APICast services are created"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        namespace: "{{ ocp4_workload_lpe_3scale_tenant_gw_project }}"
        label_selectors:
        - threescale_component = apicast
      register: r_dc
      until:
        - r_dc is defined
        - r_dc.resources is defined
        - r_dc.resources | list | length > 0
      retries: 60
      delay: 15

    - name: "Create APICast Routes"  
      community.okd.openshift_route:
        state: present
        hostname: "{{ item }}-{{ ocp4_workload_lpe_3scale_tenant_gw_project }}.{{ ocp4_workload_lpe_3scale_ocp_apps_domain }}"
        namespace: '{{ ocp4_workload_lpe_3scale_tenant_gw_project }}'
        termination: edge
        port: proxy
        service: "{{ item }}"
      loop: "{{ ocp4_workload_lpe_3scale_apicast_services }}"