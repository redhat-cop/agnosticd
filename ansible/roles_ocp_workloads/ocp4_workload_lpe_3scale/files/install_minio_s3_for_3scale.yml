# Minio
# ---
# Expect the Minio operator to already be setup
# Provision the Minio instance
---

- name: Include role 'ocp4-workload-minio'
  include_role:
    name: ocp4-workload-minio
  vars:
    _minio_project: "{{ ocp4_workload_lpe_3scale_minio_namespace }}"
    _minio_storage_size: "{{ ocp4_workload_lpe_3scale_minio_pvc_size }}"
    _minio_access_key: "{{ ocp4_workload_lpe_3scale_minio_access_key }}"
    _minio_secret_key: "{{ ocp4_workload_lpe_3scale_minio_secret_key }}"

# Add ocp user to created projects
- name: "Add {{ ocp_username }} to the Minio namepaces"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', './../templates/role-binding.yml.j2' ) | from_yaml }}"
  loop:
    - "{{ ocp4_workload_lpe_3scale_minio_namespace }}"

- name: Get external Minio instance route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ ocp4_workload_lpe_3scale_minio_route_name }}"
    namespace: "{{ ocp4_workload_lpe_3scale_minio_namespace }}"
  register: _minio_route
  retries: 3
  delay: 5
  until: _minio_route.resources[0].spec.host != ''

- name: Get the minio host name
  set_fact:
    _minio_hostname: http://{{ _minio_route.resources[0].spec.host }}

- name: Create the AWS bucket
  environment:
    AWS_ACCESS_KEY_ID: "{{ ocp4_workload_lpe_3scale_minio_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ ocp4_workload_lpe_3scale_minio_secret_key }}"
  # yamllint disable-line rule:line-length
  shell: >-
    aws s3api
    --no-verify-ssl
    --endpoint-url {{ _minio_hostname }}
    --region {{ ocp4_workload_lpe_3scale_minio_bucket_region }}
    create-bucket
    --bucket {{ ocp4_workload_lpe_3scale_minio_bucket_name }}
  register: _create_bucket
  retries: 20
  delay: 60
  failed_when: _create_bucket.rc != 0 and 'BucketAlreadyOwnedByYou' not in _create_bucket.stderr
  until: _create_bucket.rc == 0 or 'BucketAlreadyOwnedByYou' in _create_bucket.stderr

- name: Create 3scale object storage configuration ref
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "aws-auth"
        namespace: "{{ ocp4_workload_lpe_3scale_namespace }}"
      data:
        AWS_BUCKET: "{{ ocp4_workload_lpe_3scale_minio_bucket_name | b64encode }}"
        AWS_REGION: "{{ ocp4_workload_lpe_3scale_minio_bucket_region | b64encode }}"
        AWS_ACCESS_KEY_ID: "{{ ocp4_workload_lpe_3scale_minio_access_key | b64encode }}"
        AWS_SECRET_ACCESS_KEY: "{{ ocp4_workload_lpe_3scale_minio_secret_key | b64encode }}"
        AWS_HOSTNAME: "{{ _minio_route.resources[0].spec.host | b64encode }}"
        AWS_PATH_STYLE: "{{ true | b64encode }}"
        AWS_PROTOCOL: "{{ _minio_hostname | urlsplit('scheme') | b64encode }}"
  register: _create_minio_blobstorage_override
  until: _create_minio_blobstorage_override is succeeded
  retries: 3
  delay: 5
