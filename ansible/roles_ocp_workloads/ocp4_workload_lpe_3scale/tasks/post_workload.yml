---

# Implement your Post Workload deployment tasks here
- name: Notify requestor of route.  CloudForms will see this and send email
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
    - "user.info: "
    - "user.info: 3scale Multitenant API Manager - details"
    - "user.info: "
    - "user.info: OpenShift Console: https://console-openshift-console.{{ ocp4_workload_lpe_3scale_ocp_apps_domain }}"
    - "user.info: "
    - "user.info: 3scale MASTER Console : https://master.{{ ocp4_workload_lpe_3scale_ocp_apps_domain }}"
    - "user.info: Master login with credentials master / {{ ocp4_workload_lpe_3scale_master_password }} "
    - "user.info: "
    - "user.info: 3scale PROVIDER Admin Console : https://3scale-admin.{{ ocp4_workload_lpe_3scale_ocp_apps_domain }}"
    - "user.info: Admin login with credentials admin / {{ ocp4_workload_lpe_3scale_admin_password }} "
    - "user.info: "
    - "user.info: 3scale MASTER API Host : {{ ocp4_workload_lpe_3scale_master_api_host }}"
    - "user.info: "
    - "user.info: 3scale MASTER Create Tenant URL : {{ ocp4_workload_lpe_3scale_create_tenant_url }}"
    - "user.info: "

- name: "Add {{ ocp_user}} to the API Manager and Minio namepaces"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', './../templates/role-binding.yml.j2' ) | from_yaml }}"
  loop:
  - "{{ ocp4_workload_lpe_3scale_namespace }}"
  - "{{ ocp4_workload_lpe_3scale_minio_namespace }}"

- name: Deploy 3scale API Manager (with Minio S3)
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/smtp.yml.j2
  - ./templates/apimanager-s3.yml.j2

- name: Determine if tenant creation was required
  when: ocp4_workload_lpe_3scale_create_tenant|bool
  block:
  - name: "Tenant prep"
    include_tasks: 
      file: ./files/3scale_single_tenant_user.yml
  
# this as the last task in the playbook.

- name: post_workload tasks complete
  debug:
    msg: "Post-Workload Tasks completed successfully."
  when: not silent|bool  

