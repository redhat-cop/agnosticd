---

- name: BLOCK - Recreate existing k8s virtualenv on bastion
  block:
    - name: Set Ansible Python interpreter to /usr/bin/python
      set_fact:
        ansible_python_interpreter: "/usr/bin/python"

    - name: remove existing k8s virtualenv
      file:
        path: /opt/virtualenvs/k8s
        state: absent
      become: true
      when: rebuild_k8s_venv == true

    - name: manually create the initial k8s virtualenv
      command:
        cmd: python3 -m venv /opt/virtualenvs/k8s
        creates: "/opt/virtualenvs/k8s/bin/python"
      become: true

    - name: Download requirements file ansible2.11-python3.8-2021-09-27.txt
      get_url:
        url: https://raw.githubusercontent.com/redhat-cop/agnosticd/development/tools/virtualenvs/ansible2.11-python3.8-2021-09-27.txt
        dest: /tmp/ansible2.11-python3.8-2021-09-27.txt

    - name: install requirements in k8s virtualenv
      pip:
        requirements: /tmp/ansible2.11-python3.8-2021-09-27.txt
        virtualenv: /opt/virtualenvs/k8s
      become: true

    - name: Set Ansible Python interpreter to k8s virtualenv
      set_fact:
        ansible_python_interpreter: "/opt/virtualenvs/k8s/bin/python"
  when: rebuild_k8s_venv == true

# Leave these as the last tasks in the playbook
# ---------------------------------------------

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when:
    - not silent|bool
    - not workload_shared_deployment|default(False)

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Software checks completed successfully"
  when:
    - not silent|bool
    - workload_shared_deployment|default(False)