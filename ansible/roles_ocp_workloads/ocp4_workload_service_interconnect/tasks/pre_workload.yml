---
# Implement your Pre Workload deployment tasks here
- name: Ensure directory exists
  file:
    path: "{{ tmp_dir }}"
    state: directory

- name: Copy .kube/config and set env var
  copy:
    src: ~/.kube
    dest: "{{ tmp_dir }}"
    remote_src: true

- name: Figure out paths
  block:
    - name: Retrieve Ingress config
      k8s_info:
        api_version: config.openshift.io/v1
        kind: Ingress
        name: cluster
      register: r_ingress_config
    - name: Get OpenShift Apps Domain
      set_fact:
        route_subdomain: "{{ r_ingress_config.resources | json_query('[0].spec.appsDomain') }}"
    - name: Get OpenShift Domain
      set_fact:
        route_subdomain: "{{ r_ingress_config.resources | json_query('[0].spec.domain') }}"
      when:
        - route_subdomain | length == 0
    - name: Retrieve Console config
      k8s_info:
        api_version: config.openshift.io/v1
        kind: Console
        name: cluster
      register: r_console_config
    - name: Get OpenShift Console
      set_fact:
        console_url: "{{ r_console_config.resources | json_query('[0].status.consoleURL')  }}"
    - name: Retrieve Infrastructure config
      k8s_info:
        api_version: config.openshift.io/v1
        kind: Infrastructure
        name: cluster
      register: r_infrastructure_config
    - name: Get OpenShift API
      set_fact:
        api_url: "{{ r_infrastructure_config.resources | json_query('[0].status.apiServerURL')  }}"
    - name: debug
      debug:
        msg:
          - "Console URL: {{ console_url }}"
          - "API URL: {{ api_url }}"
          - "Route Subdomain: {{ route_subdomain }}"
          - "Admin username: {{ ocp_username }}"
    - name: Retrieve OpenShift Version
      k8s_info:
        api_version: config.openshift.io/v1
        kind: ClusterVersion
        name: version
      register: r_version_config
    - name: Fetch OpenShift cluster version
      set_fact:
        openshift_version: "{{ r_version_config.resources | json_query('[0].status.desired.version') | regex_findall('^(?:(\\d+\\.\\d+))') | first }}"
      when: (ocp_version is not defined) or (ocp_version | length == 0)
    - name: debug
      debug:
        msg: "Setting up for OpenShift version: {{ openshift_version }}"
  when:
    - service_interconnect_application is defined

# Leave these as the last tasks in the playbook

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when:
    - not silent | bool
    - not workload_shared_deployment | default(false) | bool

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Software checks completed successfully"
  when:
    - not silent | bool
    - workload_shared_deployment | default(false) | bool
