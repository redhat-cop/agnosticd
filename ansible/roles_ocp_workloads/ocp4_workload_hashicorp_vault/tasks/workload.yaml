---
- name: Install helm
  shell: >-
    curl -L https://mirror.openshift.com/pub/openshift-v4/clients/helm/latest/helm-linux-amd64 -o /usr/local/bin/helm &&
    chmod +x /usr/local/bin/helm
  become: true

- name: Set up namespace
  k8s:
    state: present
    definition: "{{ lookup('template',  'namespace.yaml.j2' ) | from_yaml }}"

- name: Switch to namespace
  shell: oc project {{ ocp4_workload_hashicorp_vault_namespace }}

- name: Add the Hashicorp Helm Repository
  shell: helm repo add hashicorp {{ ocp4_workload_hashicorp_vault_repo }}

- name: Update the repo
  shell: helm repo update

- name: Install the vault
  shell: >-
    helm install vault {{ ocp4_workload_hashicorp_vault_server }} \
    --namespace {{ ocp4_workload_hashicorp_vault_namespace }} \
    --set "server.extraEnvironmentVars.VAULT_CLI_NO_COLOR=1" \
    --set "global.openshift=true" \
    --set "server.dev.enabled=true"
  ignore_errors: true

- name: Wait for vault pod
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    name: vault-0
    namespace: "{{ ocp4_workload_hashicorp_vault_namespace }}"
  register: r_pods
  until: r_pods | json_query('resources[*].status.phase') | unique == ["Running"]

- name: Get token
  shell: >-
    oc exec -it vault-0 -- vault token create -field=token
  register: r_token

- name: Set token fact
  set_fact:
    ocp4_workload_hashicorp_vault_token: "{{ r_token.stdout }}"

- name: Create token secret
  k8s:
    state: present
    definition: "{{ lookup('template',  'token-secret.yaml.j2' ) | from_yaml }}"

- name: Create route
  k8s:
    state: present
    definition: "{{ lookup('template',  'route.yaml.j2' ) | from_yaml }}"

- name: Retrieve route
  kubernetes.core.k8s_info:
    kind: Route
    name: vault
    namespace: "{{ ocp4_workload_hashicorp_vault_namespace }}"
  register: r_vault
  retries: 60
  delay: 5
  until: r_vault.resources | length > 0

- name: Print Access information
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
  - ""
  - "Hashicorp Vault url: https://{{ r_vault.resources[0].spec.host }}"
  - "Hashicorp Vault token: {{ ocp4_workload_hashicorp_vault_token }}"
  - "Hashicorp Vault namespace: {{ ocp4_workload_hashicorp_vault_namespace }}"

- name: Print Access information
  agnosticd_user_info:
    data:
      hashicorp_vault_url: "https://{{ r_vault.resources[0].spec.host }}"
      hashicorp_vault_token: "{{ ocp4_workload_hashicorp_vault_token }}"
      hashicop_vault_namespace: "{{ ocp4_workload_hashicorp_vault_namespace }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
