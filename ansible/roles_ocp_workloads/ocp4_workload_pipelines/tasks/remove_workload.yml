---
# Implement your Workload removal tasks here

# Old Pipelines operator
- name: Remove TektonConfig (old)
  k8s:
    state: absent
    api_version: operator.tekton.dev/v1alpha1
    kind: config
    name: cluster
  ignore_errors: true

# New Pipelines operator
- name: Remove TektonConfig (new)
  k8s:
    state: absent
    api_version: operator.tekton.dev/v1alpha1
    kind: TektonConfig
    name: config
  ignore_errors: true

- name: Wait until all OpenShift pipelines pods have been removed
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: openshift-pipelines
  register: r_pipelines_pods
  retries: 20
  delay: 5
  until: r_pipelines_pods.resources | length == 0
  ignore_errors: true

- name: Remove Pipelines operator
  include_role:
    name: install_operator
  vars:
    install_operator_action: remove
    install_operator_name: openshift-pipelines-operator
    install_operator_namespace: openshift-operators
    install_operator_channel: "{{ ocp4_workload_pipelines_channel }}"
    install_operator_catalog: redhat-operators
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_pipelines_automatic_install_plan_approval }}"
    install_operator_csv_nameprefix: "redhat-openshift-pipelines"
    install_operator_starting_csv: "{{ ocp4_workload_pipelines_starting_csv }}"
    install_operator_use_catalog_snapshot: "{{ ocp4_workload_pipelines_use_catalog_snapshot }}"
    install_operator_catalogsource_name: "{{ ocp4_workload_pipelines_catalogsource_name }}"
    install_operator_catalog_snapshot_image: "{{ ocp4_workload_pipelines_catalog_snapshot_image | default('') }}"
    install_operator_catalog_snapshot_image_tag: "{{ ocp4_workload_pipelines_catalog_snapshot_image_tag }}"

- name: Remove openshift-pipelines project
  k8s:
    state: absent
    api_version: project.openshift.io/v1
    kind: Project
    name: openshift-pipelines

- name: Remove tkn and tkn bash completion
  become: true
  file:
    state: absent
    path: "{{ item }}"
  loop:
  - /usr/local/bin/tkn
  - /etc/bash_completion.d/tkn

- name: Remove Tekton CRDs
  k8s:
    state: absent
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ item }}.operator.tekton.dev"
  loop:
  - config
  - tektonconfigs
  - tektonpipelines
  - tektontriggers
  - tektonaddons

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
