---

- name: Install Observability Hub
  when: ocp4_workload_app_connectivity_workshop_monitoring_hub | bool
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'observability_hub_application.yaml.j2') | from_yaml }}"
  retries: 10
  delay: 30
  ignore_errors: true
  register: observability_hub_application_result
  until: observability_hub_application_result is not failed

- name: Print observability_hub_application_result from the previous task
  ansible.builtin.debug:
    var: observability_hub_application_result


- name: Install Observability Worker
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'observability_worker_application.yaml.j2') | from_yaml }}"
  retries: 10
  delay: 30
  ignore_errors: true
  register: observability_worker_application_result
  until: observability_worker_application_result is not failed

- name: Print observability_worker_application_result from the previous task
  ansible.builtin.debug:
    var: observability_worker_application_result

- name: Setup thanos-receive-router-monitoring _receiver
  ansible.builtin.set_fact:
    _receiver: "thanos-receive-router-monitoring.{{r_openshift_subdomain}}" 

- name: Setup openshift-user-workload-monitoring
  ansible.builtin.shell:
    cmd: oc patch cm user-workload-monitoring-config -n openshift-user-workload-monitoring --type json --patch '[{ "op"{{':'}} "replace", "path"{{':'}} "/data/config.yaml", "value"{{':'}} "prometheus:\n    remoteWrite:\n    - url{{':'}} \"https://{{ _receiver }}/api/v1/receive\"\n      basicAuth{{':'}}\n        username{{':'}}\n          name{{':'}} basic-auth-prom\n          key{{':'}} username\n        password{{':'}}\n          name{{':'}} basic-auth-prom\n          key{{':'}} password\n"}]'
  