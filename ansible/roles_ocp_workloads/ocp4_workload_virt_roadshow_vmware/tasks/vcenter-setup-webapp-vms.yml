- name: Create folder and VMs
  block:

  - name: Get list of datastores
    ansible.builtin.uri:
      validate_certs: false
      url: "https://{{ vcenter_hostname }}/rest/vcenter/datastore"
      method: GET
      headers:
        Content-Type: "application/json"
        vmware-api-session-id: "{{ r_login_response.json.value }}"
    register: datastore_response

  - name: Filter datastores starting with prefix 'workload_share'
    ansible.builtin.set_fact:
      filtered_datastores: "{{ datastore_response.json.value | json_query(query) }}"
    vars:
      query: "[?starts_with(name, 'workload_share')].{name: name, free_space: free_space}"

  - name: Choose the least used datastore
    ansible.builtin.set_fact:
      vcenter_datastore: "{{ (filtered_datastores | sort(attribute='free_space') | last).name }}"

  - name: Debug datastore
    ansible.builtin.debug:
      msg: "vcenter_datastore: {{ vcenter_datastore }}"

# TODO: No async capability in vcenter_folder module
  - name: Create folder for the project
    vars:
      # create a suffix if there are more than one user
      _vcenter_folder_name_suffix: >-
        {{ ( ocp4_workload_virt_roadshow_vmware_vcenter_num_users > 1 ) |
          ternary( ocp4_workload_virt_roadshow_vmware_vcenter_user_format | format(item),'') }}
    community.vmware.vcenter_folder:
      validate_certs: false
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ vcenter_datacenter }}"
      folder_name: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_folder + _vcenter_folder_name_suffix }}"
      parent_folder: Workloads
      folder_type: vm
      state: present
    register: r_vcenter_folder
    until: r_vcenter_folder is success
    loop: "{{ range(1, ocp4_workload_virt_roadshow_vmware_vcenter_num_users | int + 1) | list }}"
    retries: 10
    delay: 15

# TODO: first multi-user then async
  - name: Create VMware VM instance(s)
    register: r_vmc_instance
    community.vmware.vmware_guest:
      validate_certs: false
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ vcenter_datacenter }}"
      cluster: "{{ vcenter_cluster }}"
      state: poweredoff
      folder: "/Workloads/{{ ocp4_workload_virt_roadshow_vmware_vcenter_folder }}"
      template: "{{ item.template }}"
      name: "{{ item.name }}"
      wait_for_ip_address: false
      disk:
        - datastore: "{{ vcenter_datastore }}"
          size_gb: "{{ item.rootfs_size }}"
          type: thin
      networks:
        - name: segment-migrating-to-ocpvirt
    loop:
      - name: haproxy
        template: rhel9-tpl
        rootfs_size: 5
      - name: database
        template: roadshow-tpl-database
        rootfs_size: 7
      - name: winweb01
        template: roadshow-tpl-winweb01
        rootfs_size: 21
      - name: winweb02
        template: roadshow-tpl-winweb02
        rootfs_size: 21
    until: r_vmc_instance is success
