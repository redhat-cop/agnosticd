---
- name: Get list of datastores
  ansible.builtin.uri:
    validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation | bool }}"
    url: "https://{{ vcenter_hostname }}/api/vcenter/datastore"
    method: GET
    headers:
      Content-Type: "application/json"
      vmware-api-session-id: "{{ _ocp4_workload_virt_roadshow_vmware_token }}"
  register: r_datastores

- name: Filter datastores starting with prefix 'workload_share'
  ansible.builtin.set_fact:
    filtered_datastores: "{{ r_datastores.json | json_query(query) }}"
  vars:
    query: "[?starts_with(name, 'workload_share')].{name: name, free_space: free_space}"

- name: Choose the least used datastore
  ansible.builtin.set_fact:
    _ocp4_workload_virt_roadshow_vmware_datastore: "{{ (filtered_datastores | sort(attribute='free_space') | last).name }}"

- name: Debug datastore
  ansible.builtin.debug:
    msg: "Least used datastore: {{ _ocp4_workload_virt_roadshow_vmware_datastore }}"

- name: Create folder for the VMs
  community.vmware.vcenter_folder:
    validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation | bool }}"
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ vcenter_datacenter }}"
    folder_name: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_folder }}"
    parent_folder: Workloads
    folder_type: vm
    state: present
  register: r_vcenter_folder
  until: r_vcenter_folder is success
  retries: 10
  delay: 15

- name: Create VM instance(s)
  community.vmware.vmware_guest:
    validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation | bool }}"
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ vcenter_datacenter }}"
    cluster: "{{ vcenter_cluster }}"
    state: poweredoff
    folder: "/Workloads/{{ ocp4_workload_virt_roadshow_vmware_vcenter_folder }}"
    name: "{{ vm.name }}"
    template: "{{ vm.template }}"
    wait_for_ip_address: false
    disk:
    - datastore: "{{ _ocp4_workload_virt_roadshow_vmware_datastore }}"
      size_gb: "{{ vm.rootfs_size }}"
      type: thin
    networks:
    - name: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_network }}"
  loop: "{{ ocp4_workload_virt_roadshow_vmware_vms }}"
  loop_control:
    loop_var: vm
    label: "{{ vm.name }}"
  register: r_vmc_instance
  until: r_vmc_instance is success
  retries: 10
  delay: 15
