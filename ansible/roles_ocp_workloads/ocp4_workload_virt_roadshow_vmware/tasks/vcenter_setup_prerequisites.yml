---
- name: Write private key for AD jumphost
  delegate_to: localhost
  ansible.builtin.copy:
    dest: "{{ output_dir }}/jumphost_ad.pem"
    content: "{{ vmware_ibm_ldap_jumphost_privatekey }}"
    mode: "0600"

- name: Add AD jumphost host to the temporary inventory
  ansible.builtin.add_host:
    groupname: network
    name: jumphost_ad
    ansible_connection: ssh
    ansible_ssh_host: "{{ vmware_ibm_ldap_jumphost }}"
    ansible_ssh_user: "{{ vmware_ibm_ldap_jumphost_user }}"
    ansible_ssh_private_key_file: "{{ output_dir }}/jumphost_ad.pem"
    private_ip_address: "{{ vmware_ibm_ldap_jumphost }}"
    public_ip_address: "{{ vmware_ibm_ldap_jumphost }}"
  register: r_add_host

- name: Get vSphere login session
  ansible.builtin.uri:
    url: "https://{{ vcenter_hostname }}/api/session"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    force_basic_auth: true
    url_username: "{{ vcenter_username }}"
    url_password: "{{ vcenter_password }}"
    validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation | bool }}"
    status_code: 201
  register: r_session_id

- name: Set vSphere login token fact
  ansible.builtin.set_fact:
    _ocp4_workload_virt_roadshow_vmware_token: "{{ r_session_id.vmware_api_session_id }}"

- name: Set up provisioning facts
  when: ACTION == "create" or ACTION == "provision"
  block:
  - name: Ensure that k8s virtualenv contains vSphere Automation SDK
    when: ocp4_workload_virt_roadshow_vsphere_ignore_pip_check | bool != true
    become: true
    ansible.builtin.pip:
      name: "{{ ocp4_workload_virt_roadshow_vsphere_automation_sdk }}"
      virtualenv: "{{ ocp4_workload_virt_roadshow_virtualenv_location }}"
    retries: 10
    delay: 30

  - name: Set vCenter user password
    ansible.builtin.set_fact:
      _ocp4_workload_virt_roadshow_vmware_vcenter_user_password: >-
        {{- lookup('password', '/dev/null length=1 chars=letters') -}}
        {{- lookup('password', '/dev/null length={{ ocp4_workload_virt_roadshow_vmware_vcenter_user_password_length }}') -}}
        {{- lookup('password', '/dev/null length=1 chars=digits') -}}

  - name: Debug vCenter user password
    ansible.builtin.debug:
      msg: "vCenter user password: '{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user_password }}'"

  - name: Get list of datastores
    ansible.builtin.uri:
      validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation | bool }}"
      url: "https://{{ vcenter_hostname }}/api/vcenter/datastore"
      method: GET
      headers:
        Content-Type: "application/json"
        vmware-api-session-id: "{{ _ocp4_workload_virt_roadshow_vmware_token }}"
    register: r_datastores

  - name: Filter datastores starting with prefix 'workload_share'
    ansible.builtin.set_fact:
      filtered_datastores: "{{ r_datastores.json | json_query(query) }}"
    vars:
      query: "[?starts_with(name, 'workload_share')].{name: name, free_space: free_space}"

  - name: Choose the least used datastore
    ansible.builtin.set_fact:
      _ocp4_workload_virt_roadshow_vmware_datastore: "{{ (filtered_datastores | sort(attribute='free_space') | last).name }}"

  - name: Print least used datastore
    ansible.builtin.debug:
      msg: "Least used datastore: {{ _ocp4_workload_virt_roadshow_vmware_datastore }}"

  - name: Set connection info for lookup plugins
    ansible.builtin.set_fact:
      _ocp4_workload_virt_roadshow_vmware_connection_args:
        vcenter_hostname: "{{ vcenter_hostname }}"
        vcenter_username: "{{ vcenter_username }}"
        vcenter_password: "{{ vcenter_password }}"
        vcenter_validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation }}"

  - name: Set cluster and datastore ID facts
    ansible.builtin.set_fact:
      _ocp4_workload_virt_roadshow_vmware_vcenter_cluster_id: >-
        {{ lookup('vmware.vmware_rest.cluster_moid', '/' +
           vcenter_datacenter +
           '/host/' +
           vcenter_cluster,
           **_ocp4_workload_virt_roadshow_vmware_connection_args) }}
      _ocp4_workload_virt_roadshow_vmware_datastore_id: >-
        {{ lookup('vmware.vmware_rest.datastore_moid',
        '/' + vcenter_datacenter + '/datastore/' + _ocp4_workload_virt_roadshow_vmware_datastore,
        **_ocp4_workload_virt_roadshow_vmware_connection_args) }}

  - name: Get VM templates
    environment:
      VMWARE_HOST: "{{ vcenter_hostname }}"
      VMWARE_USER: "{{ vcenter_username }}"
      VMWARE_PASSWORD: "{{ vcenter_password }}"
      VMWARE_VALIDATE_CERTS: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation }}"
    block:
    - name: Get all local content libraries
      vmware.vmware_rest.content_locallibrary_info:
      register: r_all_content_libraries

    - name: Set template library ID fact
      ansible.builtin.set_fact:
        _ocp4_workload_virt_roadshow_vmware_template_library_id: >-
          {{ (r_all_content_libraries.value |
              selectattr('name', 'equalto', ocp4_workload_virt_roadshow_vmware_template_content_library) |
              first).id }}

    - name: List all the items in the template library
      vmware.vmware_rest.content_library_item_info:
        library_id: "{{ _ocp4_workload_virt_roadshow_vmware_template_library_id }}"
      register: r_templates

    - name: Set fact for list of templates
      ansible.builtin.set_fact:
        _ocp4_workload_virt_roadshow_vmware_templates: "{{ r_templates.value }}"
