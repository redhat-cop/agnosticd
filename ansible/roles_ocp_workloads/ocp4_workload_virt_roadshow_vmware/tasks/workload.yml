---
- name: Set up prerequisites
  ansible.builtin.include_tasks: vcenter_setup_prerequisites.yml

- name: Create Folder and VMs in vCenter
  ansible.builtin.include_tasks: vcenter_setup_vms.yml

- name: Create user(s) in AD and assign permissions on vSphere
  ansible.builtin.include_tasks: vcenter_setup_users.yml

- name: If desired, add vddk support and configure MTV
  when: ocp4_workload_virt_roadshow_vmware_enable_mtv | bool
  block:
  - name: Set up VDDK
    ansible.builtin.include_tasks: vcenter_setup_vddk.yml

  - name: Set up MTV Provider(s) for VMware
    ansible.builtin.include_tasks: vcenter_setup_mtv_providers.yml

- name: Set single-user agnosticd user info data for vCenter
  when: ocp4_workload_virt_roadshow_vmware_num_users | int == 1
  agnosticd_user_info:
    data:
      vcenter_user: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_user }}"
      vcenter_password: "{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user_password }}"
      vcenter_full_user: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_user }}@{{ vcenter_domain }}"
      vcenter_console: "{{ vcenter_hostname }}"
      vcenter_domain: "{{ vcenter_domain }}"
      vcenter_datastore: "{{ _ocp4_workload_virt_roadshow_vmware_datastore }}"

- name: Set multi-user agnosticd user info data for vCenter
  when: ocp4_workload_virt_roadshow_vmware_num_users | int > 1
  agnosticd_user_info:
    user: "{{ ocp4_workload_virt_roadshow_auth_user_base }}{{ user_number }}"
    data:
      vcenter_user: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_user_base }}{{ user_number }}"
      vcenter_password: "{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user_password }}"
      vcenter_full_user: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_user_base }}{{ user_number }}@{{ vcenter_domain }}"
      vcenter_console: "{{ vcenter_hostname }}"
      vcenter_domain: "{{ vcenter_domain }}"
      vcenter_datastore: "{{ _ocp4_workload_virt_roadshow_vmware_datastore }}"
  loop: "{{ range(1, ocp4_workload_virt_roadshow_vmware_num_users | int + 1) | list }}"
  loop_control:
    loop_var: user_number

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: Workload tasks complete
  when: not silent|bool
  ansible.builtin.debug:
    msg: "Workload Tasks completed successfully."
