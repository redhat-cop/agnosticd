---
# yamllint disable rule:line-length
- name: Run playbook on the AD jumphost to create a single user
  delegate_to: jumphost_ad
  ansible.builtin.command: |
    ansible-playbook
    /home/{{ vmware_ibm_ldap_jumphost_user }}/sandbox_ad_user.yaml
    -e '{"vmware_add_create_user":{"name":"{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user }}","firstname":"{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user }}","surname":"{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user }}","password":"{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user_password }}","group":"{{ ocp4_workload_virt_roadshow_vmware_vcenter_group }}"}}'
  register: r_create_user
# yamllint enable rule:line-length

- name: Grant permissions for pool mode
  block:
    - name: Grant permissions to newly created user to existing VMs
      community.vmware.vmware_object_role_permission:
        validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation | bool }}"
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        role: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_pool_role }}"
        principal: "{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user }}@{{ vcenter_domain }}"
        recursive: False
        object_name: "{{ vm.name }}-{{ _ocp4_workload_virt_roadshow_vmware_vm_user }}"
        object_type: "VirtualMachine"
      until: r_vmware_object_role_permission is success
      retries: 5
      delay: 30
      loop: "{{ ocp4_workload_virt_roadshow_vmware_vms }}"
      loop_control:
        loop_var: vm
        label: "{{ vm.name }}"
      register: r_vmware_object_role_permission

  rescue: # If it fails, then create the VM and assign permissions

    - name: Create Pool VMs
      environment:
        VMWARE_HOST: "{{ vcenter_hostname }}"
        VMWARE_USER: "{{ vcenter_username }}"
        VMWARE_PASSWORD: "{{ vcenter_password }}"
        VMWARE_VALIDATE_CERTS: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation }}"
      vmware.vmware_rest.vcenter_vmtemplate_libraryitems:
        name: "{{ vm.name }}-{{ _ocp4_workload_virt_roadshow_vmware_vm_user }}"
        library: '{{ _ocp4_workload_virt_roadshow_vmware_template_library_id }}'
        template_library_item: "{{ (_ocp4_workload_virt_roadshow_vmware_templates | selectattr('name', 'equalto', vm.template + '-l') | first).id }}"
        placement:
          cluster: "{{ _ocp4_workload_virt_roadshow_vmware_vcenter_cluster_id }}"
          folder: "{{ _ocp4_workload_virt_roadshow_vmware_vcenter_pool_folder_id }}"
        disk_storage:
          datastore: "{{ _ocp4_workload_virt_roadshow_vmware_datastore_id }}"
        state: deploy
        powered_on: false
      retries: 5
      delay: 10
      until: r_vmc_instance is success
      loop: "{{ ocp4_workload_virt_roadshow_vmware_vms }}"
      loop_control:
        loop_var: vm
        label: "{{ vm.name }}"
      register: r_vmc_instance

    - name: Try again granting permissions to newly created user to existing VMs
      community.vmware.vmware_object_role_permission:
        validate_certs: "{{ ocp4_workload_virt_roadshow_vmware_enable_cert_validation | bool }}"
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        role: "{{ ocp4_workload_virt_roadshow_vmware_vcenter_pool_role }}"
        principal: "{{ _ocp4_workload_virt_roadshow_vmware_vcenter_user }}@{{ vcenter_domain }}"
        recursive: False
        object_name: "{{ vm.name }}-{{ _ocp4_workload_virt_roadshow_vmware_vm_user }}"
        object_type: "VirtualMachine"
      register: r_vmware_object_role_permission
      until: r_vmware_object_role_permission is success
      retries: 5
      delay: 5
      loop: "{{ ocp4_workload_virt_roadshow_vmware_vms }}"
      loop_control:
        loop_var: vm
        label: "{{ vm.name }}"
