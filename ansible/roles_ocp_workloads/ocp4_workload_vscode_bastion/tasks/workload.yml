---
- name: Generate VSCode server password if no password specified
  when: ocp4_workload_vscode_bastion_vscode_password | default('') | length == 0
  ansible.builtin.set_fact:
    ocp4_workload_vscode_bastion_vscode_password: >-
      {{ lookup('password', '/dev/null length={{ ocp4_workload_vscode_bastion_vscode_password_length }} chars=ascii_letters,digits') }}

- name: Validate that certbot virtualenv directory exists
  ansible.builtin.stat:
    path: "{{ ocp4_workload_vscode_bastion_vscode_certbot_virtualenv }}/bin/activate"
  register: r_certbot_virtualenv

- name: Fail if certbot virtualenv directoroy does not exist
  when: not r_certbot_virtualenv.stat.exists
  ansible.builtin.fail:
    msg: "Virtualenv for Certbot does not exist in {{ ocp4_workload_vscode_bastion_vscode_certbot_virtualenv }}"

- name: Ensure the VS Code certs directory exists
  ansible.builtin.file:
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    path: "{{ ocp4_workload_vscode_bastion_vscode_cert_directory }}"
    mode: 0770

- name: Download VScode server RPM
  get_url:
    url: >-
      {{ ocp4_workload_vscode_bastion_vscode_package_url }}
    dest: "{{ ocp4_workload_vscode_bastion_home_directory }}/code-server.rpm"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0664

- name: Ensure VSCode config directories exist
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0770
  loop:
  - "{{ ocp4_workload_vscode_bastion_home_directory }}/.config"
  - "{{ ocp4_workload_vscode_bastion_home_directory }}/.config/code-server"
  - "{{ ocp4_workload_vscode_bastion_home_directory }}/.local"
  - "{{ ocp4_workload_vscode_bastion_home_directory }}/.local/share"
  - "{{ ocp4_workload_vscode_bastion_home_directory }}/.local/share/code-server"

- name: Copy VSCode configuration file
  ansible.builtin.template:
    src: code-server-config.yaml.j2
    dest: "{{ ocp4_workload_vscode_bastion_home_directory }}/.config/code-server/config.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0664

- name: Copy VSCode coder file
  ansible.builtin.template:
    src: code-server-coder.json.j2
    dest: "{{ ocp4_workload_vscode_bastion_home_directory }}/.local/share/code-server/coder.json"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0664

- name: Run code-server configuration actions as root
  become: true
  block:
  - name: Copy run_vscode_certbot shell script
    ansible.builtin.template:
      src: run_vscode_certbot.j2
      dest: /usr/bin/run_vscode_certbot
      owner: root
      group: root
      mode: 0775

  - name: Run certbot to get a certificate
    ansible.builtin.command: /usr/bin/run_vscode_certbot

  - name: Change Ownership of generated certs to {{ ansible_user }}
    file:
      state: directory
      recurse: true
      path: "{{ ocp4_workload_vscode_bastion_vscode_cert_directory }}"
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"

  - name: Install VSCode server RPM
    ansible.builtin.command:
      cmd: "dnf -y install {{ ocp4_workload_vscode_bastion_home_directory }}/code-server.rpm"

  - name: "Enable and start code-server@{{ ansible_user }} system service"
    ansible.builtin.service:
      name: "code-server@{{ ansible_user }}"
      enabled: true
      state: started
      daemon_reload: true

- name: Remove rpm file
  ansible.builtin.file:
    state: absent
    path: "{{ ocp4_workload_vscode_bastion_home_directory }}/code-server.rpm"

- name: Print User Info
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
  - ""
  - "Visual Studio Code Server is available on the Bastion VM."
  - "  URL:      https://bastion.{{ guid }}{{ subdomain_base_suffix }}:8443"
  - "  Password: {{ ocp4_workload_vscode_bastion_vscode_password }}"
  - ""
