---
- name: Deploy MTA Manifests
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - "namespace.yaml.j2"
  - "pvc_postgresql.yaml.j2"
  - "pvc_mta.yaml.j2"
  - "service_postgresql.yaml.j2"
  - "service_amq.yaml.j2"
  - "service_mta.yaml.j2"
  - "deployment_postgresql.yaml.j2"
  - "deployment_mta.yaml.j2"
  - "route_insecure.yaml.j2"
  - "route_secure.yaml.j2"

- name: Wait for deployments to be ready
  when: ocp4_workload_mta_manifest_wait_for_deploy | bool
  block:
  - name: Wait until PostgreSQL deployment is ready
    kubernetes.core.k8s_info:
      api_version: apps/v1
      kind: Deployment
      name: mta-web-console-postgresql
      namespace: "{{ ocp4_workload_mta_namespace }}"
    register: r_postgresql
    retries: 30
    delay: 5
    until:
    - r_postgresql.resources | length > 0
    - r_postgresql.resources[0].status.readyReplicas is defined
    - r_postgresql.resources[0].status.readyReplicas == r_postgresql.resources[0].spec.replicas

  - name: Wait until MTA deployment is ready
    kubernetes.core.k8s_info:
      api_version: apps/v1
      kind: Deployment
      name: mta-web-console
      namespace: "{{ ocp4_workload_mta_namespace }}"
    register: r_mta
    retries: 30
    delay: 5
    until:
    - r_mta.resources | length > 0
    - r_mta.resources[0].status.readyReplicas is defined
    - r_mta.resources[0].status.readyReplicas == r_mta.resources[0].spec.replicas

- name: Get MTA secure route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: secure-mta-web-console
    namespace: "{{ ocp4_workload_mta_namespace }}"
  register: r_mta_route

- name: Set MTA host variable
  set_fact:
    _ocp4_workload_mta_host: "{{ r_mta_route.resources[0].spec.host }}"
