apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: "pipeline-{{ _name_ }}"
spec:
  workspaces:
  - name: ee-repo
  params:
  # Fetch Task
  - description: url of the git repo for the code of deployment
    name: GIT_URL
    type: string
  - description: revision to be used from repo of the code for deployment (Commit id)
    name: GIT_REVISION
    type: string
  # ansible-builder task
  - description: The location of the ansible-builder image.
    name: ANSIBLE_BUILDER_IMAGE
    type: string
  - description: Name of the container image to be built
    name: NAME
    type: string
  - description: Tag of the container image to be built
    name: TAG
    type: string
    default: "latest"
  # Buildah task
  - description: Path to the directory to use as context for buildah.
    name: CONTEXT
    type: string
    default: "./"
  - description: The path to the Dockerfile to execute.
    name: DOCKERFILE
    type: string
    default: "Containerfile"
  - description: buildah build Args
    name: BUILD_ARGS
    type: string
    default: ""
  - description: buildah push Args
    name: PUSH_ARGS
    type: string
    default: ""
  - description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
    name: TLSVERIFY
    type: string
    default: "false"   
  tasks:
    - name: clone-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
      - name: output
        workspace: ee-repo
      params:
      - name: url
        value: $(params.GIT_URL)
      - name: deleteExisting
        value: "true"
      - name: revision
        value: $(params.GIT_REVISION)

    - name: create-build-file
      taskRef:
        name: task-image-build-file-{{ _name_ }}
        kind: Task
      params:
      - name: BUILDER_IMAGE
        value: $(params.ANSIBLE_BUILDER_IMAGE)
      - name: BUILD_CONTEXT
        value: $(params.CONTEXT)
      workspaces:
      - name: source
        workspace: ee-repo
      runAfter:
      - clone-repository
        
    - name: image-build
      taskRef:
        kind: Task
        name: task-image-builder-{{ _name_ }}
      params:
      - name: TLSVERIFY
        value: "false"
      - name: IMAGE
        value: $(params.NAME):$(params.TAG)
      - name: CONTEXT
        value: "$(params.CONTEXT)"
      - name: DOCKERFILE
        value: "$(params.DOCKERFILE)"
      - name: BUILD_EXTRA_ARGS
        value: "$(params.BUILD_ARGS)"
      workspaces:
      - name: source
        workspace: ee-repo
      runAfter:
      - create-build-file
  
    - name: acs-image-check
      taskRef:
        kind: Task
        name: acs-image-check-{{ _name_ }}      
      params:
      - name: rox_central_endpoint
        value: stackrox-endpoint
      - name: rox_api_token
        value: stackrox-secret
      - name: image
        value: $(params.NAME):$(params.TAG)
      - name: insecure-skip-tls-verify
        value: 'true'
      runAfter:
        - image-build

    - name: acs-image-scan
      taskRef:
        kind: Task
        name: acs-image-scan-{{ _name_ }}   
      params:
      - name: rox_central_endpoint
        value: stackrox-endpoint
      - name: rox_api_token
        value: stackrox-secret
      - name: image
        value: $(params.NAME):$(params.TAG)
      - name: insecure-skip-tls-verify
        value: 'true'
      runAfter:
        - image-build

    - name: image-push
      taskRef:
        kind: Task
        name: task-image-push-{{ _name_ }}
      params:
      - name: TLSVERIFY
        value: "false"
      - name: IMAGE
        value: $(params.NAME):$(params.TAG)
      - name: PUSH_EXTRA_ARGS
        value: "$(params.PUSH_ARGS)"
      workspaces:
      - name: source
        workspace: ee-repo
      runAfter:
      - acs-image-scan
      - acs-image-check
