apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: "pipeline-{{ _name_ }}"
spec:
  workspaces:
  - name: ee-repo
  params:
  # Fetch Task
  - description: url of the git repo for the code of deployment
    name: GIT_URL
    type: string
  - description: revision to be used from repo of the code for deployment (Commit id)
    name: GIT_REVISION
    type: string
  # ansible-builder task
  - description: The location of the ansible-builder image.
    name: ANSIBLE_BUILDER_IMAGE
    type: string
  - description: Name of the container image to be built
    name: NAME
    type: string
  - description: Tag of the container image to be built
    name: TAG
    type: string
    default: "latest"
  # Buildah task
  - description: Path to the directory to use as context for buildah.
    name: CONTEXT
    type: string
    default: "./"
  - description: The path to the Dockerfile to execute.
    name: DOCKERFILE
    type: string
    default: "Containerfile"
  - description: buildah build Args
    name: BUILD_ARGS
    type: string
    default: ""
  - description: buildah push Args
    name: PUSH_ARGS
    type: string
    default: ""
  - description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
    name: TLSVERIFY
    type: string
    default: "false"
  tasks:
    - name: clone-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
      - name: output
        workspace: ee-repo
      params:
      - name: url
        value: $(params.GIT_URL)
      - name: deleteExisting
        value: "true"
      - name: revision
        value: $(params.GIT_REVISION)

    - name: create-build
      taskRef:
        name: task1-{{ _name_ }}
        kind: Task
      params:
      - name: BUILDER_IMAGE
        value: $(params.ANSIBLE_BUILDER_IMAGE)
      - name: BUILD_CONTEXT
        value: $(params.CONTEXT)
      workspaces:
      - name: source
        workspace: ee-repo
      runAfter:
      - clone-repository
        
    - name: build
      taskRef:
        kind: ClusterTask
        name: openshift-client
      params:
      - name: SCRIPT
        value: |
          oc start-build web-ui --follow=true --wait=true
      runAfter:
      - create-build
  
    - name: acs-image-check
      taskRef:
        kind: Task
        name: acs-image-check      
      params:
      - name: rox_central_endpoint
        value: stackrox-endpoint
      - name: rox_api_token
        value: stackrox-secret
      - name: image
        value: $(params.STACKROX_IMAGE)
      - name: insecure-skip-tls-verify
        value: 'true'
      runAfter:
        - build

    - name: acs-image-scan
      taskRef:
        kind: Task
        name: acs-image-scan
      params:
      - name: rox_central_endpoint
        value: stackrox-endpoint
      - name: rox_api_token
        value: stackrox-secret
      - name: image
        value: >-
          $(params.STACKROX_IMAGE)
      - name: insecure-skip-tls-verify
        value: 'true'
      runAfter:
        - build

    - name: generate-tag
      taskRef:
        kind: Task
        name: generate-tag
      runAfter:
      - acs-image-check
      - acs-image-scan

    - name: tag
      taskRef:
        kind: ClusterTask
        name: openshift-client
      params:
      - name: SCRIPT
        value: >
          oc tag coolstore/web-ui:latest
          coolstore/web-ui:$(tasks.generate-tag.results.image-tag)
      runAfter:
        - generate-tag
