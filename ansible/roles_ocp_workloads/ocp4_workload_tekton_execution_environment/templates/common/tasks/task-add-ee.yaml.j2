apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: "add-ee"
spec:   
  description: >-
    Add execution environment to automation controller
  workspaces:
    - name: source
  params:
    - description: execution environment image pull policy
      name: POLICY
      default: missing
      type: string
    - description: execution environment credentials
      name: CREDENTIAL
      default: "null"
      type: string
    - description: execution environment organization
      name: ORGANIZATION
      default: "null"
      type: string
    - description: description of execution environment
      name: DESCRIPTION
      default: ""
      type: string
    - description: automation controller api host url
      name: API_URL
      type: string
    - description: name of the execution environment
      name: NAME
      type: string
    - description: automation controller username
      name: USER
      type: string
    - description: automation controller password 
      name: PASSWORD
      type: string
    - description: execution environment image url with tag
      name: IMAGE
      type: string
  results:
    - name: data
      description: ID to be passed to next task
  steps:
    - name: add-ee
      image: >-
        docker.io/centos@sha256:a1801b843b1bfaf77c501e7a6d3f709401a1e0c83863037fa3aab063a7fdb9dc
      workingDir: $(workspaces.source.path)
      resources: {}
      script: |
        #!/usr/bin/env bash
        curl_output=$(curl -s -w "%{http_code}" -X POST \
          https://$(params.API_URL)/api/v2/execution_environments/ \
          -H 'Content-Type: application/json' \
          -u '$(params.USER):$(params.PASSWORD)' \
          -d '{ 
              "name": "$(params.NAME)", 
              "description": "$(params.DESCRIPTION)", 
              "organization": $(params.ORGANIZATION),
              "image": "$(params.IMAGE)",
              "credential": $(params.CREDENTIAL),
              "pull": "$(params.POLICY)"
              }')
        
        data="${curl_output:: -3}"
        response_status="${curl_output: -3}"
        if [ "${response_status}" -ne "201" ]; then
            printf "%s \n" "${data}"
            printf "%s \n" "Error: HTTP repsonse is ${response_status}"
            exit 1
        fi
         
        printf "%s \n" "${data}" > ee_data.json
        printf "%s \n" '$(params.NAME) - execution environment has been added'