---
- name: Create pipeline
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
  loop:
  - ./templates/{{ _name_ }}/pipelines/pvc-ansible-builder.yaml.j2
  - ./templates/{{ _name_ }}/pipelines/task-ansible-builder.yaml.j2
  - ./templates/{{ _name_ }}/pipelines/task-image-check.yaml.j2
  - ./templates/{{ _name_ }}/pipelines/task-image-scan.yaml.j2
  - ./templates/{{ _name_ }}/pipelines/pipeline-ee-builder.yaml.j2

- name: Run pipeline
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', 'templates/{{ _name_ }}/pipelines/pipeline-run.yaml.j2' ) | from_yaml }}"
    state: present
  when: item.pipeline == _name_
  loop: "{{ ocp4_workload_tekton_ansible_execution_environments }}"

- name: Create triggers
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', item ) | from_yaml }}"
    state: present
  loop:
  - ./templates/{{ _name_ }}/triggers/trigger-secret.yaml.j2
  - ./templates/{{ _name_ }}/triggers/trigger-binding.yaml.j2
  - ./templates/{{ _name_ }}/triggers/trigger-template.yaml.j2
  - ./templates/{{ _name_ }}/triggers/trigger.yaml.j2
  - ./templates/{{ _name_ }}/triggers/event-listener.yaml.j2
  - ./templates/{{ _name_ }}/triggers/event-listener-route.yaml.j2

- name: Retrieve created event listener route
  k8s_facts:
    api_version: "route.openshift.io/v1"
    kind: Route
    name: event-listener-{{ _name_ }}
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
  register: r_el_route
  until: r_el_route.resources[0].spec.host is defined
  retries: 300
  delay: 30

- name: Set event listener route variable
  set_fact:
    _event_listener_route: http://{{ r_el_route.resources[0].spec.host }}

- name: Create webhooks
  include_tasks: "{{ item.type }}-webhooks.yml"
  when: item.pipeline == _name_
  loop: "{{ ocp4_workload_tekton_ansible_execution_environments }}"