---
- name: Find secret templates
  find:
    path: "./templates/{{ _name_ }}/secrets"
    recurse: true
    patterns: "*.yaml.j2"
  register: r_secret_templates

- name: Create secrets for {{ _name_ }} pipeline from templates
  when: r_secret_templates.files | length > 0
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', item.path ) | from_yaml }}"
    state: present
  loop: "{{ r_secret_templates.files }}"

- name: Find pvc templates
  find:
    path: "./templates/{{ _name_ }}/pvcs"
    recurse: true
    patterns: "*.yaml.j2"
  register: r_pvc_templates

- name: Create pvcs for {{ _name_ }} pipeline from templates
  when: r_pvc_templates.files | length > 0
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', item.path ) | from_yaml }}"
    state: present
  loop: "{{ r_pvc_templates.files }}"

- name: Find pipeline tasks templates
  find:
    path: "./templates/{{ _name_ }}/tasks"
    recurse: true
    patterns: "*.yaml.j2"
  register: r_task_templates

- name: Create tasks for {{ _name_ }} pipeline from templates
  when: r_task_templates.files | length > 0
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', item.path ) | from_yaml }}"
    state: present
  loop: "{{ r_task_templates.files }}"

- name: Create pipeline for { _name_ }} from templates
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', './templates/{{ _name_ }}/pipelines/pipeline.yaml.j2') | from_yaml }}"
    state: present

- name: Run pipeline for { _name_ }} from templates
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', 'templates/{{ _name_ }}/pipelines/pipeline-run.yaml.j2' ) | from_yaml }}"
    state: present
  when: item.pipeline == _name_
  loop: "{{ ocp4_workload_tekton_ansible_execution_environments }}"

- name: Find triggers templates
  find:
    path: "./templates/{{ _name_ }}/triggers"
    recurse: true
    patterns: "*.yaml.j2"
  register: r_trigger_templates

- name: Create triggers for { _name_ }} pipeline from templates
  when: r_trigger_templates.files | length > 0
  kubernetes.core.k8s:
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
    definition: "{{ lookup('template', item.path ) | from_yaml }}"
    state: present
  loop: "{{ r_trigger_templates.files }}"

- name: Retrieve created event listener route
  k8s_facts:
    api_version: "route.openshift.io/v1"
    kind: Route
    name: "{{ _name_ }}-event-listener"
    namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
  register: r_el_route
  until: r_el_route.resources[0].spec.host is defined
  retries: 300
  delay: 30

- name: Set event listener route variable
  set_fact:
    _event_listener_route: http://{{ r_el_route.resources[0].spec.host }}

- name: Create webhooks
  include_tasks: "{{ item.type }}-webhooks.yml"
  when: 
    - item.pipeline == _name_
    - item.webhook | bool
  loop: "{{ ocp4_workload_tekton_ansible_execution_environments }}"