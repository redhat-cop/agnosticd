---
# Implement your Workload deployment tasks here
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Retrieve Automation controller hub info
  when:
  - ocp4_workload_tekton_ee_registry_host is not defined
  - ocp4_workload_tekton_ee_registry_password is not defined
  block:
  - name: Retrieve created hub route
    k8s_facts:
      api_version: "route.openshift.io/v1"
      kind: Route
      name: hub
      namespace: "{{ ocp4_workload_tekton_ee_hub_namespace }}"
    register: r_hub_route
    until: r_hub_route.resources[0].spec.host is defined
    retries: 300
    delay: 30

  - name: Retrieve hub secret
    k8s_facts:
      api_version: "v1"
      kind: Secret
      name: "{{ ocp4_workload_tekton_ee_hub_admin_secret }}"
      namespace: "{{ ocp4_workload_tekton_ee_hub_namespace }}"
    register: r_hub_secret
    until:
    - r_hub_secret.resources is defined
    - r_hub_secret.resources | length > 0
    - r_hub_secret.resources[0].data.password
    retries: 300
    delay: 30

  - name: Set base64 encode basic auth vars
    set_fact:
      ocp4_workload_tekton_ee_registry_host: "{{ r_hub_route.resources[0].spec.host }}"
      ocp4_workload_tekton_ee_registry_password: "{{ r_hub_secret.resources[0].data.password | b64decode }}"

- name: Set docker auth config
  set_fact:
    _auth_config: "{{ lookup('template', 'templates/auth-config.json.j2') | to_nice_json | b64encode }}"

- environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
  block:
  - name: Set up a namespace for the execution environment
    kubernetes.core.k8s:
      state: present
      api_version: v1
      kind: Namespace
      name: "{{ ocp4_workload_tekton_ee_namespace }}"

  - name: configure stackrox secrets
    include_tasks: create-stackrox-secrets.yml

  - name: Create secrets and link service account
    kubernetes.core.k8s:
      namespace: "{{ ocp4_workload_tekton_ee_namespace }}"
      definition: "{{ lookup('template', item ) | from_yaml }}"
      merge_type: strategic-merge
      state: present
    loop:
    - ./templates/secrets/hub-push-secret.yaml.j2
    - ./templates/secrets/registry-pull-secret.yaml.j2
    - ./templates/secrets/link-secret-sa.yaml.j2 
    - ./templates/secrets/ocp-registry-secret.yaml.j2 

  - name: Include pipelines and triggers
    vars:
      sections:
        # - section1
        - section2
    include_tasks: "{{ _name_ }}-pipeline-and-trigger.yml"
    loop: "{{ sections }}"
    loop_control:
      loop_var: _name_

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool