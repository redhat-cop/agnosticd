---
- name: Clone the Lab repo
  git:
    repo: "{{ ocp4_workload_oai_lab_insurance_claim_repo_url }}"
    dest: "/tmp/ocp4_workload_oai_lab_insurance_claim_repo"
    version: "{{ ocp4_workload_oai_lab_insurance_claim_branch }}"
  register: git_clone

- name: Apply the ApplicationSet YAML file
  command: "oc apply -f /tmp/ocp4_workload_oai_lab_insurance_claim_repo/{{ ocp4_workload_oai_lab_insurance_claim_yaml_file_path }}"
  when: git_clone.changed

- name: Install AWS CSI Operator and Resources
  when: ocp4_workload_oai_lab_insurance_claim_install_csi_operator
  block:
  - name: Install AWS CSI Operator
    ansible.builtin.include_role:
      name: install_operator
    vars:
      install_operator_action: install
      install_operator_name: aws-efs-csi-driver-operator
      install_operator_namespace: openshift-cluster-csi-drivers
      install_operator_channel: "{{ ocp4_workload_oai_lab_insurance_claim_channel }}"
      install_operator_catalog: redhat-operators
      install_operator_automatic_install_plan_approval: "{{ ocp4_workload_oai_lab_insurance_claim_automatic_install_plan_approval | default(true) }}"
      install_operator_starting_csv: "{{ ocp4_workload_oai_lab_insurance_claim_starting_csv }}"
      install_operator_catalogsource_setup: "{{ ocp4_workload_oai_lab_insurance_claim_use_catalog_snapshot | default(false) }}"
      install_operator_catalogsource_name: "{{ ocp4_workload_oai_lab_insurance_claim_catalogsource_name | default('') }}"
      install_operator_catalogsource_namespace: openshift-cluster-csi-drivers
      install_operator_catalogsource_image: "{{ ocp4_workload_oai_lab_insurance_claim_catalog_snapshot_image | default('') }}"
      install_operator_catalogsource_image_tag: "{{ ocp4_workload_oai_lab_insurance_claim_catalog_snapshot_image_tag | default('') }}"

  - name: Create EFS Storage Class
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('file', 'files/aws-efs-storage-class.yaml') | from_yaml }}"

  - name: Enable TechPreview No Upgrade
    shell: |
      oc patch featuregate cluster --type=json --patch '[{"op": "add", "path": "/spec", "value": {"featureSet": "TechPreviewNoUpgrade"}}]'

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
