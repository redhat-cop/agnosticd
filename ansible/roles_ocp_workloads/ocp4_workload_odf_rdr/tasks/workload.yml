---
# Implement your Workload deployment tasks here
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
  block:
    - name: Wait until ODF is ready
      k8s_info:
        api_key: CCvFPyHWu1g-s0KgOcsw_jLPlA_KWL8aqJM6spVEzF8
        host: https://api.cluster-kh7zh-1.sandbox1086.opentlc.com:6443
        api_version: ocs.openshift.io/v1
        kind: StorageCluster
        name: ocs-storagecluster
        namespace: openshift-storage
      register: r_storagecluster
      # until:
      #  - r_storagecluster.resources.0.status.phase == "Ready"
      # retries: 5
      # delay: 5
- name: Setting up workload for user
  debug:
    msg: {{ "r_storagecluster" }}

    # - name: Wait until NooBaa is ready
    #   k8s_info:
    #     api_version: noobaa.io/v1alpha1
    #     api_key: CCvFPyHWu1g-s0KgOcsw_jLPlA_KWL8aqJM6spVEzF8
    #     host: https://api.cluster-kh7zh-1.sandbox1086.opentlc.com:6443
    #     kind: NooBaa
    #     name: noobaa
    #     namespace: openshift-storage
    #   register: r_noobaa
    #   until:
    #    - r_noobaa.resources.0.status.phase == "Ready"
    #   retries: 5
    #   delay: 5

    # - name: ODF Multicluster Orchestrator Operator
    #   k8s:
    #     state: present
    #     definition: "{{ lookup('template','./templates/subscription-odf-multi-orch.yaml.j2') | from_yaml }}"
    #
    # - name: Wait until odf-multicluster-orchestrator is created
    #   k8s_info:
    #     api_version: operators.coreos.com/v1alpha1
    #     kind: InstallPlan
    #     namespace: openshift-operators
    #   register: r_odfmoo
    #   vars:
    #     _query: >-
    #       [?starts_with(spec.clusterServiceVersionNames[0], 'odf-multicluster-orchestrator')]
    #   retries: 30
    #   delay: 10
    #   until:
    #     - r_odfmoo.resources | length > 0
    #     - r_odfmoo.resources | to_json | from_json | json_query(_query)
    #
    # - name: Wait until odr-hub-operator is created
    #   k8s_info:
    #     api_version: operators.coreos.com/v1alpha1
    #     kind: InstallPlan
    #     namespace: openshift-operators
    #   register: r_odfhubop
    #   vars:
    #     _query: >-
    #       [?starts_with(spec.clusterServiceVersionNames[0], 'odr-hub-operator')]
    #   retries: 30
    #   delay: 10
    #   until:
    #     - r_odfhubop.resources | length > 0
    #     - r_odfhubop.resources | to_json | from_json | json_query(_query)

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
