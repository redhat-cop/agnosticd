---

- name: deploy sonarqube from template (persistent)
  shell: |
    {{ ocp4_dso_openshift_cli }} new-app -f https://raw.githubusercontent.com/siamaksade/sonarqube/master/sonarqube-persistent-template.yml \
        --param=SONARQUBE_MEMORY_LIMIT=2Gi \
        -n {{ ocp4_admin_project }}
  when: not ocp4_dso_ephemeral|bool

- name: deploy sonarqube from template (ephemeral)
  shell: |
    {{ ocp4_dso_openshift_cli }} new-app -f https://raw.githubusercontent.com/siamaksade/sonarqube/master/sonarqube-template.yml \
        --param=SONARQUBE_MEMORY_LIMIT=2Gi \
        -n {{ ocp4_admin_project }}
  when: ocp4_dso_ephemeral|bool

- name: get sonarqube route
  shell: "{{ ocp4_dso_openshift_cli }} get route {{ ocp4_dso_sonarqube_service_name }} -o jsonpath='{ .spec.host }' -n {{ ocp4_dso_sonarqube_project_name }}"
  register: sonarqube_route_output
  changed_when: false

- set_fact:
    sonarqube_route: "{{ sonarqube_route_output.stdout }}"

- name: set sonardb cpu and mem
  shell: "{{ ocp4_dso_openshift_cli }} set resources dc/sonardb --limits=cpu=400m,memory=1Gi --requests=cpu=100m,memory=512Mi -n {{ ocp4_admin_project }}"

- name: set sonarqube cpu and mem
  shell: "{{ ocp4_dso_openshift_cli }} set resources dc/sonarqube --limits=cpu=1,memory=2Gi --requests=cpu=100m,memory=128Mi -n {{ ocp4_admin_project }}"

- name: create sonarqube readiness probe
  command: "{{ ocp4_dso_openshift_cli }} set probe dc/sonarqube --readiness --failure-threshold=3 --initial-delay-seconds=3  --period-seconds=5 --timeout-seconds=10  --get-url=http://:9000 -n {{ ocp4_admin_project }}"

- name: create sonarqube liveness probe
  command: "{{ ocp4_dso_openshift_cli }} set probe dc/sonarqube --liveness --failure-threshold=3 --initial-delay-seconds=30  --period-seconds=5 --timeout-seconds=10  --get-url=http://:9000 -n {{ ocp4_admin_project }}"

- name: waiting for sonarqube pod to be available
  command: "{{ ocp4_dso_openshift_cli }} rollout status dc/sonarqube -n {{ ocp4_admin_project }}"
  async: 300

- name: wait for sonarqube to be running
  uri:
    url: https://{{ ocp4_dso_sonarqube_urlprefix }}.{{ route_subdomain }}
    status_code: 200
    validate_certs: false
  register: result
  until: result.status == 200
  retries: 30
  delay: 30
