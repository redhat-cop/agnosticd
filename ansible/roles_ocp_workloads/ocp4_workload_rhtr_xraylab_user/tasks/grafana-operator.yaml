---
- name: Create Grafana operator Subscription
  k8s:
    state: present
    definition: "{{ lookup('template', 'grafana-operator/subscription.yaml.j2' ) }}"
  vars:
    namespace: "xraylab-{{ guid }}"

- name: Wait for the operator to be available - 1/2
  k8s_info:
    api_version: "operators.coreos.com/v1alpha1"
    kind: ClusterServiceVersion
    name: grafana-operator.v3.5.0
    namespace: "xraylab-{{ guid }}"
  register: grafana_operator_status
  retries: 30
  delay: 5
  until: grafana_operator_status.resources|length > 0
  ignore_errors: false

- name: Wait for the operator to be available - 2/2
  k8s_info:
    api_version: "operators.coreos.com/v1alpha1"
    kind: ClusterServiceVersion
    name: grafana-operator.v3.5.0
    namespace: "xraylab-{{ guid }}"
  register: grafana_operator_status
  retries: 30
  delay: 5
  until: grafana_operator_status.resources[0].status.phase | default('') == 'Succeeded'
  ignore_errors: false

- name: Patch Grafana operator
  k8s:
    definition: "{{ lookup('template', 'grafana-operator/patch.yaml.j2') }}"
  vars:
    namespace: "xraylab-{{ guid }}"

- name: Get Grafana Prometheus info
  k8s_info:
    api_version: "v1"
    kind: Secret
    name: grafana-datasources
    namespace: openshift-monitoring
  register: grafana_prometheus_base

- name: Extract info
  set_fact:
    prometheus_password: |
      {{ (grafana_prometheus_base.resources[0].data['prometheus.yaml'] | b64decode
      | from_json).datasources[0].basicAuthPassword }}

- name: Create Grafana Prometheus datasource
  k8s:
    state: present
    definition: "{{ lookup('template', 'grafana-operator/prometheus-datasource.yaml.j2' ) }}"
  vars:
    namespace: "xraylab-{{ guid }}"
    password: "{{ prometheus_password }}"
