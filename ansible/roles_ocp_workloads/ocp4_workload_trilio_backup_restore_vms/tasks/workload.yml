---
- name: Install Trilio Operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: k8s-triliovault
    install_operator_namespace: "{{ ocp4_workload_trilio_backup_restore_vms_namespace }}"
    install_operator_channel: "{{ ocp4_workload_trilio_backup_restore_vms_operator_channel }}"
    install_operator_catalog: certified-operators
    install_operator_automatic_install_plan_approval: true
    install_operator_csv_nameprefix: k8s-triliovault-stable

- name: Retrieve Ingress config
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
    name: cluster
  register: r_ingress_config

- name: Get OpenShift Apps Domain
  ansible.builtin.set_fact:
    ocp4_workload_trilio_backup_restore_vms_apps_domain: "{{ r_ingress_config.resources[0].spec.domain }}"

- name: Create Role Bindings for Trilio user
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
    namespace: "{{ ocp4_workload_trilio_backup_restore_vms_namespace }}"
  loop:
  - templates/tvk-list-namespaces-role.yaml.j2
  - templates/tvk-list-namespaces-role-binding.yaml.j2
  - templates/tvk-edit-trilio-system-role-binding.yaml.j2
  - templates/tvk-edit-vmimported-role-binding.yaml.j2
  - templates/tvk-triliovault-demo-platform-user-role.yaml.j2
  - templates/tvk-triliovault-demo-platform-user-role-binding.yaml.j2

- name: Create Trilio Vault Manager
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/tvk-trilio-vault-manager.yaml.j2') | from_yaml }}"
    namespace: "{{ ocp4_workload_trilio_backup_restore_vms_namespace }}"

- name: Wait for CRD's to be created
  k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ item }}"
  register: r_trilio_crds
  retries: 120
  delay: 5
  until:
  - r_trilio_crds.resources | length > 0
  loop:
  - licenses.triliovault.trilio.io

- name: Create Trilio License
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/tvk-license-file.yaml.j2') | from_yaml }}"
    namespace: "{{ ocp4_workload_trilio_backup_restore_vms_namespace }}"

- name: Setup OAuth for Trilio
  ansible.builtin.include_tasks:
    file: ./setup_oauth.yml

- name: Create Trilio Console Plugin Resources
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
    namespace: "{{ ocp4_workload_trilio_backup_restore_vms_namespace }}"
  loop:
  - templates/tvk-console-plugin-config-map.yaml.j2
  - templates/tvk-console-plugin-service.yaml.j2
  - templates/tvk-console-plugin-deployment.yaml.j2
  - templates/tvk-console-plugin.yaml.j2

- name: Create Trilio Console Plugin Entry
  ansible.builtin.shell: |
    existingPlugins=$(oc get consoles.operator.openshift.io cluster -o json | jq -c '.spec.plugins // []')
    mergedPlugins=$(jq --argjson existingPlugins "${existingPlugins}" --argjson consolePlugin '["tvk-console-plugin"]' \
    -c  -n '$existingPlugins + $consolePlugin | unique')
    patchedPlugins=$(jq --argjson mergedPlugins $mergedPlugins -n -c  '{ "spec": { "plugins": $mergedPlugins } }')
    oc patch consoles.operator.openshift.io cluster --patch $patchedPlugins  --type=merge

- name: Create Trilio Console Plugin Entry
  become: true
  ansible.builtin.shell: |
    rm -rf /home/rosa/.aws/credentials

- name: Save user data
  agnosticd_user_info:
    data:
      openshift_console_url: https://console-openshift-console.{{ ocp4_workload_trilio_backup_restore_vms_apps_domain }}
      trilio_user: "{{ ocp4_workload_trilio_backup_restore_vms_dr_user }}"
      trilio_password: "{{ ocp4_workload_trilio_backup_restore_vms_dr_user_password }}"
      showroom_url: https://showroom-showroom-{{ guid }}-{{ ocp4_workload_trilio_backup_restore_vms_dr_user }}.{{
        ocp4_workload_trilio_backup_restore_vms_apps_domain }}