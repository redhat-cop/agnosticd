---
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Create Project  
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ ocp4_workload_rhte19_shadowman_ocp_project }}'
      spec: {}

- name: Get Console Route
  k8s_info:
    kind: Route
    namespace: 'openshift-console'
    name: console
  register: console_route

- set_fact:
    route_subdomain: "{{ console_route|json_query('resources[0].spec.host') | regex_replace('console-openshift-console.', '') }}"

# Kafka
- name: Subscribe to AMQ Streams
  k8s:
    definition: '{{ lookup("template", "amq-streams.yml.j2")|from_yaml }}'

- name: Create Kafka CR
  k8s:
    definition: '{{ lookup("template", "kafka-cluster.yml.j2")|from_yaml }}'
  register: kafka_deployment
  until: not kafka_deployment.failed
  retries: 10
  delay: 10

# Data Grid
- name: Subscribe to Data Grid
  k8s:
    definition: '{{ lookup("template", "datagrid.yml.j2")|from_yaml }}'

- name: Create Infinispan CR
  k8s:
    definition: '{{ lookup("template", "infinispan-cluster.yml.j2")|from_yaml }}'
  register: infinispan_deployment
  until: not infinispan_deployment.failed
  retries: 10
  delay: 10

# Directive Producer
- name: Create Directive Producer
  k8s:
    definition: '{{ lookup("template", "directive-producer.yml.j2")|from_yaml }}'

# Slack Producer
- name: Create Slack Producer
  k8s:
    definition: '{{ lookup("template", "slack-producer.yml.j2")|from_yaml }}'

# Landing Page
- name: Create Landing Page
  k8s:
    definition: '{{ lookup("template", "landing-page.yml.j2")|from_yaml }}'


# Directive Consumer

- name: Get DataGrid Creds
  k8s_info:
    kind: Secret
    namespace: '{{ ocp4_workload_rhte19_shadowman_ocp_project }}'
    name: infinispan-generated-secret
  register: infinispan_creds
  until: infinispan_creds.resources
  retries: 10
  delay: 10

- set_fact:
    datagrid_developer_password: "{{ infinispan_creds.resources[0].data['identities.yaml'] | b64decode | from_yaml | json_query(\"credentials[?(@.username=='developer')].password\") | join }}"

- name: Create Directive Consumer
  k8s:
    definition: '{{ lookup("template", "directive-consumer.yml.j2")|from_yaml }}'


- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
