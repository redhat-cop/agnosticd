---
# Implement your Workload removal tasks here

- name: Remove Kubernetes Image Puller Installation
  k8s:
    state: absent
    api_version: che.eclipse.org/v1alpha1
    kind: KubernetesImagePuller
    name: image-puller
    namespace: "{{ ocp4_workload_image_puller_operator_namespace }}"

- name: Remove Kubernetes Image Puller DaemonSet
  k8s:
    state: absent
    api_version: apps/v1
    kind: DaemonSet
    name: k8s-image-puller
    namespace: "{{ ocp4_workload_image_puller_operator_namespace }}"

- name: Wait until all Kubernetes Image Puller pods have been removed
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ ocp4_workload_image_puller_operator_namespace }}"
  register: r_kip_pods
  retries: 20
  delay: 5
  until: r_kip_pods.resources | length <= 2
  # The Operator pod will remain the only running pod
  # For catalog snapshots there will be the catalog pod as well

- name: Get Installed CSV
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: kubernetes-imagepuller-operator
    namespace: "{{ ocp4_workload_image_puller_operator_namespace }}"
  register: r_subscription

- name: Remove CSV
  when:
  - r_subscription.resources | length > 0
  - r_subscription.resources[0].status.currentCSV is defined
  - r_subscription.resources[0].status.currentCSV | length > 0
  k8s:
    state: absent
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ r_subscription.resources[0].status.currentCSV }}"
    namespace: "{{ ocp4_workload_image_puller_operator_namespace }}"

- name: Remove Subscription
  k8s:
    state: absent
    definition: "{{ lookup('template', './templates/subscription.yaml.j2' ) | from_yaml }}"

- name: Remove Kubernetes Image Puller project
  k8s:
    state: absent
    api_version: project.openshift.io/v1
    kind: Project
    name: "{{ ocp4_workload_image_puller_operator_namespace }}"

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent | bool
