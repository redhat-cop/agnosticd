- name: Generate cluster admin password
  when: ocp4_workload_authentication_htpasswd_admin_password | default('') | length == 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_admin_password: >-
      {{ lookup('password', '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ ocp4_workload_authentication_htpasswd_admin_password_length
      ) }}

- name: Use provided admin password
  when: ocp4_workload_authentication_htpasswd_admin_password | default('') | length > 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_admin_password: >-
      {{ ocp4_workload_authentication_htpasswd_admin_password }}

- name: Set up randomized user password array
  when: ocp4_workload_authentication_htpasswd_user_password_randomized | bool
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_htpasswd_user_passwords: >-
      {{ _ocp4_workload_authentication_htpasswd_user_passwords + [ lookup('password',
        '/dev/null chars=ascii_letters,digits '
        ~ 'length=' ~ ocp4_workload_authentication_htpasswd_user_password_length ) ] }}
  loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int, 1) | list }}"

- name: Set up common user password array
  when: not ocp4_workload_authentication_htpasswd_user_password_randomized | bool
  block:
  - name: Generate common user password
    when: ocp4_workload_authentication_htpasswd_user_password | default('') | length == 0
    ansible.builtin.set_fact:
      _ocp4_workload_authentication_htpasswd_user_password: >-
        {{ lookup('password', '/dev/null chars=ascii_letters,digits '
            ~ 'length=' ~ ocp4_workload_authentication_htpasswd_user_password_length
        ) }}

  - name: Use provided user password
    when: ocp4_workload_authentication_htpasswd_user_password | default('') | length > 0
    ansible.builtin.set_fact:
      _ocp4_workload_authentication_htpasswd_user_password: >-
        {{ ocp4_workload_authentication_htpasswd_user_password }}

  - name: Generate user passwords array for common password
    ansible.builtin.set_fact:
      _ocp4_workload_authentication_htpasswd_user_passwords: >-
        {{ _ocp4_workload_authentication_htpasswd_user_passwords + [ _ocp4_workload_authentication_htpasswd_user_password ] }}
    loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int, 1) | list }}"

- name: Create temporary htpasswd file
  ansible.builtin.tempfile:
    state: file
    suffix: htpasswd
  register: r_htpasswd

- name: Add admin user to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ ocp4_workload_authentication_admin_user }}"
    password: "{{ _ocp4_workload_authentication_admin_password }}"

- name: Add users and passwords to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ ocp4_workload_authentication_htpasswd_user_base }}{{ item + 1 }}"
    password: "{{ _ocp4_workload_authentication_htpasswd_user_passwords[ item ] }}"
  loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int, 1) | list }}"

- name: Read contents of htpasswd file
  ansible.builtin.slurp:
    src: "{{ r_htpasswd.path }}"
  register: r_htpasswd_file

- name: Remove generated htpasswd file
  ansible.builtin.file:
    path: "{{ r_htpasswd.path }}"
    state: absent

- name: Ensure htpasswd Secret is absent
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: htpasswd
    namespace: openshift-config
  register: r_htpasswd_secret_absent
  retries: 5
  delay: 10
  until: r_htpasswd_secret_absent is success

- name: Create htpasswd Secret
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'secret-htpasswd.yaml.j2' ) | from_yaml }}"

- name: Update OAuth configuration
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'oauth-htpasswd.yaml' ) | from_yaml }}"

- name: Print user information messages
  when: ocp4_workload_authentication_enable_user_info_messages | bool
  block:
  - name: Print common user information messages
    agnosticd_user_info:
      msg: "{{ item }}"
    loop:
    - ""
    - "Authentication via htpasswd is enabled on this cluster."
    - ""
    - >-
      User `{{ ocp4_workload_authentication_admin_user }}`
      with password `{{ _ocp4_workload_authentication_admin_password }}`
      is cluster admin.
    - ""
    - "The following users have been created:"
    - ""

  - name: Print user information for common password
    when: not ocp4_workload_authentication_htpasswd_user_password_randomized | bool
    agnosticd_user_info:
      msg: "{{ item }}"
    loop:
    - >-
      Users `{{ ocp4_workload_authentication_htpasswd_user_base }}1` ..
      `{{ ocp4_workload_authentication_htpasswd_user_base ~ ocp4_workload_authentication_htpasswd_user_count }}`
      with password `{{ _ocp4_workload_authentication_htpasswd_user_password }}`

  - name: Print user information for randomized password
    when: ocp4_workload_authentication_htpasswd_user_password_randomized | bool
    agnosticd_user_info:
      msg: >-
        User `{{ ocp4_workload_authentication_htpasswd_user_base }}{{ n + 1 }}`,
        Password: `{{ _ocp4_workload_authentication_htpasswd_user_passwords[ n ] }}`
    loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int) | list }}"
    loop_control:
      loop_var: n

- name: Save user information
  when: ocp4_workload_authentication_enable_user_info_data | bool
  block:
  - name: Save common user and cluster admin information
    agnosticd_user_info:
      data:
        openshift_cluster_user_base: "{{ ocp4_workload_authentication_htpasswd_user_base }}"
        openshift_cluster_num_users: "{{ ocp4_workload_authentication_htpasswd_user_count }}"
        openshift_cluster_admin_username: "{{ ocp4_workload_authentication_admin_user }}"
        openshift_cluster_admin_password: "{{ _ocp4_workload_authentication_admin_password }}"
        openshift_cluster_console_url: "{{ _ocp4_workload_authentication_console_route }}"
        openshift_api_server_url: "{{ _ocp4_workload_authentication_api_server }}"

  - name: Save common user password if not randomized
    when: not ocp4_workload_authentication_htpasswd_user_password_randomized | bool
    agnosticd_user_info:
      data:
        openshift_cluster_user_password: "{{ _ocp4_workload_authentication_htpasswd_user_password }}"

  - name: Save user information for user access
    agnosticd_user_info:
      user: "{{ ocp4_workload_authentication_htpasswd_user_base }}{{ n +1 }}"
      data:
        user: "{{ ocp4_workload_authentication_htpasswd_user_base }}{{ n +1 }}"
        password: "{{ _ocp4_workload_authentication_htpasswd_user_passwords[ n ] }}"
        console_url: "{{ _ocp4_workload_authentication_console_route }}"
        openshift_cluster_ingress_domain: "{{ _ocp4_workload_authentication_cluster_ingress_domain }}"
        login_command: >-
          oc login --insecure-skip-tls-verify=false
          -u {{ ocp4_workload_authentication_htpasswd_user_base }}{{ n +1 }}
          -p {{ _ocp4_workload_authentication_htpasswd_user_passwords[ n ] }}
          {{ _ocp4_workload_authentication_api_server }}
    loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int) | list }}"
    loop_control:
      loop_var: n
