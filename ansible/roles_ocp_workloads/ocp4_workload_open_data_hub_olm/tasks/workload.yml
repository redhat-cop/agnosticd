---
# vim: set ft=ansible
# Implement your Workload deployment tasks here
- name: Create Catalogsource for use with catalog snapshot
  when: ocp4_workload_open_data_hub_olm_use_catalog_snapshot | bool
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/catalogsource.j2' ) | from_yaml }}"

- name: Create Open Data Hub Operator Subscription
  k8s:
    state: present
    namespace: "{{ ocp4_workload_open_data_hub_olm_operator_namespace }}"
    definition: "{{ lookup('template', 'subscription.yaml.j2' ) }}"

- name: Wait until InstallPlan is created
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: openshift-operators
  register: r_install_plans
  vars:
    _query: >-
      [?contains(spec.clusterServiceVersionNames[0], 'opendatahub-operator')]
  retries: 30
  delay: 5
  until:
  - r_install_plans.resources | length > 0
  - r_install_plans.resources | to_json | from_json | json_query(_query)

- name: Set InstallPlan Name
  set_fact:
    ocp4_workload_open_data_hub_olm_install_plan_name: "{{ r_install_plans.resources | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?contains(spec.clusterServiceVersionNames[0], 'opendatahub-operator')].metadata.name|[0]

- name: Get InstallPlan
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    name: "{{ ocp4_workload_open_data_hub_olm_install_plan_name }}"
    namespace: openshift-operators
  register: r_install_plan

- name: Approve InstallPlan if necessary
  when: r_install_plan.resources[0].status.phase is match("RequiresApproval")
  k8s:
    state: present
    definition: "{{ lookup( 'template', './templates/installplan.j2' ) }}"

- name: Wait for the CRD to be available
  k8s_facts:
    api_version: "apiextensions.k8s.io/v1beta1"
    kind: CustomResourceDefinition
    name: "{{ item }}"
  loop:
    - kfdefs.kfdef.apps.kubeflow.org
  register: r_crds
  until: r_crds.resources|length > 0
  retries: 30
  delay: 10

- name: Get Installed CSV
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: opendatahub-operator
    namespace: "{{ ocp4_workload_open_data_hub_olm_operator_namespace }}"
  register: r_subscription
  retries: 30
  delay: 5
  until:
    - r_subscription.resources[0].status.currentCSV is defined
    - r_subscription.resources[0].status.currentCSV | length > 0

- name: Wait until CSV is Installed
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ r_subscription.resources[0].status.currentCSV }}"
    namespace: "{{ ocp4_workload_open_data_hub_olm_operator_namespace }}"
  register: r_csv
  retries: 15
  delay: 5
  until:
    - r_csv.resources[0].status.phase is defined
    - r_csv.resources[0].status.phase | length > 0
    - r_csv.resources[0].status.phase == "Succeeded"

- name: Create Namespace to deploy Open Data Hub into
  k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yaml.j2') }}"
  when: ocp4_workload_open_data_hub_olm_deploy_odh_instance | bool

- name: Deploy Open Data Hub
  k8s:
    state: present
    namespace: "{{ ocp4_workload_open_data_hub_olm_odh_namespace }}"
    definition: "{{ lookup('template', 'opendatahub-cr.yaml.j2') }}"
  when: ocp4_workload_open_data_hub_olm_deploy_odh_instance | bool