# vim: set ft=ansible
---

# Implement your Workload deployment tasks here
- name: Create Open Data Hub Operator Subscription
  k8s:
    state: present
    namespace: "{{ ocp4_workload_open_data_hub_olm_operator_namespace }}"
    definition: "{{ lookup('template', 'subscription.yaml.j2' ) }}"

- name: Wait for the CRD to be available
  k8s_facts:
    api_version: "apiextensions.k8s.io/v1beta1"
    kind: CustomResourceDefinition
    name: "{{ item }}"
  loop:
    - kfdefs.kfdef.apps.kubeflow.org
  register: r_crds
  until: r_crds.resources|length > 0
  retries: 30
  delay: 10

- name: Create Namespace to deploy Open Data Hub into
  k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yaml.j2') }}"

- name: Deploy Open Data Hub
  k8s:
    state: present
    namespace: "{{ ocp4_workload_open_data_hub_olm_odh_namespace }}"
    definition: "{{ lookup('template', 'opendatahub-cr.yaml.j2') }}"

- name: Get Installed CSV
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: opendatahub-operator
    namespace: "{{ ocp4_workload_open_data_hub_olm_operator_namespace }}"
  register: r_subscription
  retries: 30
  delay: 5
  until:
  - r_subscription.resources[0].status.currentCSV is defined
  - r_subscription.resources[0].status.currentCSV | length > 0

- name: Wait until CSV is Installed
  k8s_facts:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ r_subscription.resources[0].status.currentCSV }}"
    namespace: "{{ ocp4_workload_open_data_hub_olm_odh_namespace }}"
  register: r_csv
  retries: 15
  delay: 5
  until:
  - r_csv.resources[0].status.phase is defined
  - r_csv.resources[0].status.phase | length > 0
  - r_csv.resources[0].status.phase == "Succeeded"
