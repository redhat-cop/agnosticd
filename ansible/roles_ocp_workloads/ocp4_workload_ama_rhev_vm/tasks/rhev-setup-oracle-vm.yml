---
- name: Create and start Oracle VM (DHPC)
  when: ocp4_workload_ama_rhev_vm_oracle_vm_ip_address | default('') | length == 0
  ovirt.ovirt.ovirt_vm:
    auth:
      insecure: true
    state: running
    name: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_name }}"
    template: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_template }}"
    cluster: "{{ ocp4_workload_ama_rhev_vm_vm_cluster }}"
    cloud_init:
      host_name: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_name }}"
      user_name: "{{ ocp4_workload_ama_rhev_vm_vm_user_name }}"
      root_password: "{{ ocp4_workload_ama_rhev_vm_vm_user_password }}"
      nic_boot_protocol: dhcp
      nic_name: eth0
    cloud_init_persist: true
  register: r_vm

- name: Create and start Oracle VM (Static IP)
  when: ocp4_workload_ama_rhev_vm_oracle_vm_ip_address | default('') | length > 0
  ovirt.ovirt.ovirt_vm:
    auth:
      insecure: true
    state: running
    name: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_name }}"
    template: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_template }}"
    cluster: "{{ ocp4_workload_ama_rhev_vm_vm_cluster }}"
    cloud_init:
      host_name: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_name }}"
      user_name: "{{ ocp4_workload_ama_rhev_vm_vm_user_name }}"
      root_password: "{{ ocp4_workload_ama_rhev_vm_vm_user_password }}"
      nic_boot_protocol: static
      nic_boot_protocol_v6: none
      nic_name: eth0
      nic_ip_address: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_ip_address }}"
      nic_gateway: "{{ ocp4_workload_ama_rhev_vm_nic_gateway }}"
      nic_netmask: "{{ ocp4_workload_ama_rhev_vm_nic_netmask }}"
    cloud_init_persist: true
  register: r_vm

- name: Get Oracle VM NIC
  ovirt.ovirt.ovirt_nic_info:
    auth:
      insecure: true
    vm: "{{ ocp4_workload_ama_rhev_vm_oracle_vm_name }}"
  register: r_nic
  retries: 50
  delay: 10
  until:
  - r_nic.ovirt_nics | length > 0
  - r_nic.ovirt_nics[0].reported_devices | length > 0
  - r_nic.ovirt_nics[0].reported_devices[0].ips | length > 0
  - r_nic.ovirt_nics[0].reported_devices[0].ips[0].address is defined

- name: Save Oracle VM IP Address
  set_fact:
    _ocp4_workload_ama_rhev_vm_oracle_ip: >-
      {{ r_nic | json_query("ovirt_nics[0].reported_devices[0].ips[?version=='v4'].address") | first }}

- name: Print Oracle VM properties
  debug:
    msg: "{{ item }}"
  loop:
  - "Oracle VM IP Address: {{ _ocp4_workload_ama_rhev_vm_oracle_ip }}"
  - "Oracle VM user name: {{ ocp4_workload_ama_rhev_vm_vm_user_name }}"
  - "Oracle VM user password: {{ ocp4_workload_ama_rhev_vm_vm_user_password }}"

- name: Add Oracle VM to inventory
  ansible.builtin.add_host:
    groupname: database
    name: "{{ _ocp4_workload_ama_rhev_vm_oracle_ip }}"
    ansible_user: "{{ ocp4_workload_ama_rhev_vm_vm_user_name }}"
    ansible_ssh_private_key_file: /tmp/rhev.pem

# Next two tasks add the ssh key to ~/.ssh/known_hosts to prevent
# connection warnings
- name: Check SSH known_hosts for {{ _ocp4_workload_ama_rhev_vm_oracle_ip }}
  local_action: shell ssh-keygen -l -F {{ _ocp4_workload_ama_rhev_vm_oracle_ip }}
  register: checkForKnownHostsEntry
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Add {{ _ocp4_workload_ama_rhev_vm_oracle_ip }} to SSH known hosts automatically
  when: checkForKnownHostsEntry.rc == 1
  changed_when: checkForKnownHostsEntry.rc == 1
  local_action:
    module: shell
    args: ssh-keyscan -H "{{ _ocp4_workload_ama_rhev_vm_oracle_ip }}" >> $HOME/.ssh/known_hosts
