---
- name: Set ACM cluster variables
  set_fact:
    kconf_cluster_name: >-
      {{ item.managed_cluster_name }}
    cluster_kconf_path: "~/.kube/"
    # {{ _ocp4_workload_rhacm_clusters_aws_clusters_item.managed_cluster_name }}
    # TODO: enable reading of
    # {{ _ocp4_workload_rhacm_clusters_aws_clusters_item.managed_cluster_kconf_path | default('~/.kube') }}

- name: Create directory
  file:
    path: "{{ cluster_kconf_path }}/{{ kconf_cluster_name }}"
    state: directory

- name: Wait until subscription is created
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ kconf_cluster_name }}"
    label_selectors:
      - hive.openshift.io/secret-type=kubeconfig
  register: r_secret_kconf
  retries: 30
  delay: 10
  until:
    - r_secret_kconf.resources | length > 0
    - r_secret_kconf.resources.0.metadata.resourceVersion | length > 0

- name: Extract kubeconfig
  copy:
    content: "{{ r_secret_kconf.resources.0.data.kubeconfig | b64decode }}"
    dest: "{{ cluster_kconf_path }}/{{ kconf_cluster_name }}/kubeconfig"

- name: Proccess to modify
  slurp:
    path: "{{ cluster_kconf_path }}/{{ kconf_cluster_name }}/kubeconfig"
  register: r_kconf

- name: Decode kubeconfig
  set_fact:
    mycontext: "{{ r_kconf.content | b64decode | from_yaml }}"

- name: Decode kubeconfig
  set_fact:
    mycontext: "{{ r_kconf.content | b64decode | from_yaml }}"

- name: Change context name
  set_fact:
    mycontext: "{{ mycontext | combine(newcontext, recursive=True) }}"
  vars:
    newcontext:
      contexts:
        - name: "{{ kconf_cluster_name }}"
          context:
            cluster: "{{ mycontext.contexts.0.context.cluster }}"
            user: "{{ kconf_cluster_name }}-admin"
      users:
        - name: "{{ kconf_cluster_name }}-admin"
          user: "{{ mycontext.users.0.user }}"

- name: Store kubeconfig
  copy:
    content: "{{ mycontext | to_nice_yaml }}"
    dest: "{{ cluster_kconf_path }}/{{ kconf_cluster_name }}/kubeconfig"

- name: set bashrc variable
  set_fact:
    bash_managed_cluster_kconf: >-
      {{ bash_managed_cluster_kconf +':'+ cluster_kconf_path+kconf_cluster_name+'/'+'kubeconfig'}}

- name: Copy .kube to user
  become: true
  copy:
    src: "/home/ec2-user/.kube/{{ kconf_cluster_name }}"
    dest: "/home/{{ student_name }}/.kube/"
    remote_src: true
    owner: "{{ student_name }}"
