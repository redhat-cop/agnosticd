---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: set default kubeconfig
  set_fact:
    bash_managed_cluster_kconf: ~/.kube/config

- name: Do AWS Deploy via RHACM with known creds
  when: ocp4_workload_rhacm_clusters_deploy_aws is true   # set from credentials workload
  environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
  block:
    - name: Include aws cluster object tasks
      include: cluster_aws.yml
      loop_control:
        loop_var: _ocp4_workload_rhacm_clusters_aws_clusters_item
      loop: "{{ ocp4_workload_rhacm_clusters_aws_clusters }}"

    - name: Include cluster kconf tasks
      include: cluster_kconf.yml
      # loop_control:
      #   loop_var: _ocp4_workload_rhacm_clusters_aws_clusters_item
      loop: "{{ ocp4_workload_rhacm_clusters_aws_clusters }}"

- name: Do Azure Deploy via RHACM with known creds
  when: ocp4_workload_rhacm_clusters_deploy_azure is true
  environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
  block:
    - name: Create Azure Cluster creation manifests in RHACM
      include: cluster_azure.yaml
      loop_control:
        loop_var: _ocp4_workload_rhacm_clusters_azure_clusters_item
      loop: "{{ ocp4_workload_rhacm_clusters_azure_clusters }}"

    - name: Include cluster kconf tasks
      include: cluster_kconf.yml
      # loop_control:
      #   loop_var: _ocp4_workload_rhacm_clusters_azure_clusters_item
      loop: "{{ ocp4_workload_rhacm_clusters_azure_clusters }}"

# finish the kubeconfig setup
# by adding all the kubeconfigs to both users bashrc

- name: Insert KUBECONFIG variable in .bashrc
  lineinfile:
    path: "~/.bashrc"
    regexp: 'export KUBECONFIG.*'
    line: export KUBECONFIG={{ bash_managed_cluster_kconf }}

- name: Insert variable in .bashrc
  become: true
  lineinfile:
    path: "/home/{{ student_name }}/.bashrc"
    regexp: 'export KUBECONFIG.*'
    line: export KUBECONFIG={{ bash_managed_cluster_kconf }}

- name: Print Access information
  agnosticd_user_info:
    msg: "{{ item }}"
  loop:
    - ""
    - "=============================================================="
    - ""
    - "To get list of clusters: oc config get-contexts"
    - "To switch between clusters: oc config use-context [NAME]"
    - ""
    - "=============================================================="
    - ""

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
