---
# Implement your Post Workload deployment tasks here
# --------------------------------------------------

# yamllint disable rule:line-length
- name: project information
  when: openshift_console_url is defined
  block:
  - name: output project information
    agnosticd_user_info:
      msg: "{{ item }}"
    loop:
    - "MicroShift Demo: http://ingress-{{ ocp4_workload_microshift_vm_namespace }}.{{ _ocp4_workload_microshift_wildcard_domain }}"
    - "MicroShift API access from Bastion: KUBECONFIG={{ ocp4_workload_microshift_vm_kubeconfig }} oc get pods --all-namespaces --insecure-skip-tls-verify"
    - "MicroShift SSH access from Bastion: virtctl ssh cloud-user@{{ ocp4_workload_microshift_name }}.{{ ocp4_workload_microshift_vm_namespace }} --identity-file={{ ocp4_workload_microshift_vm_ssh_key }}"
  - name: save project information
    agnosticd_user_info:
      data:
        microshift_demo: "http://ingress-{{ ocp4_workload_microshift_vm_namespace }}.{{ _ocp4_workload_microshift_wildcard_domain }}"
# yamllint enable rule:line-length

# Leave these as the last tasks in the playbook
# ---------------------------------------------

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: post_workload tasks complete
  ansible.builtin.debug:
    msg: "Post-Workload tasks completed successfully."
  when:
  - not silent | bool
  - not workload_shared_deployment | default(false) | bool

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: post_workload tasks complete
  ansible.builtin.debug:
    msg: "Post-Software checks completed successfully"
  when:
  - not silent | bool
  - workload_shared_deployment | default(false) | bool
