apiVersion: v1
kind: Deployment
metadata:
  name: "{{ ocp4_workload_jenkins_name }}"
  namespace: "{{ ocp4_workload_jenkins_project }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: "{{ ocp4_workload_jenkins_name }}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deployment: "{{ ocp4_workload_jenkins_name }}"
    spec:
      containers:
      - env:
        - name: OPENSHIFT_ENABLE_OAUTH
          value: "{{ ocp4_workload_jenkins_oauth }}"
        - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
          value: "true"
        - name: DISABLE_ADMINISTRATIVE_MONITORS
          value: "{{ ocp4_workload_jenkins_disable_admin_monitors }}"
        - name: KUBERNETES_MASTER
          value: https://kubernetes.default:443
        - name: KUBERNETES_TRUST_CERTIFICATES
          value: "true"
        - name: JENKINS_SERVICE_NAME
          value: "{{ ocp4_workload_jenkins_name }}"
        - name: JNLP_SERVICE_NAME
          value: "{{ ocp4_workload_jenkins_name }}-jnlp"
        - name: ENABLE_FATAL_ERROR_LOG_FILE
          value: "false"
        - name: JENKINS_UC_INSECURE
          value: "false"
        image: "{{ ocp4_workload_jenkins_image }}:{{ ocp4_workload_jenkins_tag }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 420
          periodSeconds: 360
          timeoutSeconds: 240
        name: jenkins
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 3
          timeoutSeconds: 240
        resources:
          limits:
            memory: "{{ ocp4_workload_jenkins_limits_memory }}"
            cpu: "{{ ocp4_workload_jenkins_limits_cpu }}"
          requests:
            memory: "{{ ocp4_workload_jenkins_request_memory }}"
            cpu: "{{ ocp4_workload_jenkins_request_cpu }}"
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: "{{ ocp4_workload_jenkins_name }}-data"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: "{{ ocp4_workload_jenkins_name }}"
      volumes:
      - name: "{{ ocp4_workload_jenkins_name }}-data"
        persistentVolumeClaim:
          claimName: "{{ ocp4_workload_jenkins_name }}"
