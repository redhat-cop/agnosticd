---
# Account roles should already exist from the primary ROSA cluster
# yamllint disable rule:line-length
- name: Create secondary ROSA Classic (STS) Cluster
  ansible.builtin.command: >-
    {{ ocp4_workload_lb2739_second_rosa_binary_path }}/rosa create cluster
    --cluster-name {{ ocp4_workload_lb2739_second_rosa_name }}
    --region {{ aws_region }}
    --sts
    --mode auto
    --yes
    --version {{ ocp4_workload_lb2739_second_rosa_version }}
    {% if ocp4_workload_lb2739_second_rosa_compute_replicas is defined %}--replicas {{ ocp4_workload_lb2739_second_rosa_compute_replicas | int }}{% endif %}
    {% if ocp4_workload_lb2739_second_rosa_cidr | default("") | length > 0 %}--machine-cidr {{ ocp4_workload_lb2739_second_rosa_cidr }}{% endif %}
  register: r_rosa2_create_status
  until: r_rosa2_create_status.rc == 0
  retries: 5
  delay: 10
# yamllint enable rule:line-length

- name: Wait for ROSA installer completion
  ansible.builtin.command: >-
    {{ ocp4_workload_lb2739_second_rosa_binary_path }}/rosa describe cluster
    --cluster {{ ocp4_workload_lb2739_second_rosa_name }}
    --output json
  register: r_rosa2_installer_status
  until:
  - (r_rosa2_installer_status.stdout | from_json).status is defined
  - (r_rosa2_installer_status.stdout | from_json).status.state is defined
  - (r_rosa2_installer_status.stdout | from_json).status.state == "ready"
  - (r_rosa2_installer_status.stdout | from_json).api is defined
  - (r_rosa2_installer_status.stdout | from_json).api.url is defined
  - (r_rosa2_installer_status.stdout | from_json).console is defined
  - (r_rosa2_installer_status.stdout | from_json).console.url is defined
  ignore_errors: true
  retries: 120
  delay: 60

- name: Get ROSA API URL
  ansible.builtin.set_fact:
    rosa2_openshift_api_url: "{{ (r_rosa2_installer_status.stdout | from_json).api.url }}"

- name: Get ROSA console URL
  ansible.builtin.set_fact:
    rosa2_openshift_console_url: "{{ (r_rosa2_installer_status.stdout | from_json).console.url }}"

# yamllint disable rule:line-length
- name: Create ROSA admin user
  ansible.builtin.shell: "{{ ocp4_workload_lb2739_second_rosa_binary_path }}/rosa create admin --cluster {{ ocp4_workload_lb2739_second_rosa_name }} | grep 'oc login' | awk '{print $7}'"
  register: r_rosa2_admin_result
# yamllint enable rule:line-length

- name: Save ROSA admin user password
  ansible.builtin.set_fact:
    _rosa2_cluster_admin_password: "{{ r_rosa2_admin_result.stdout }}"

- name: Print cluster-admin password
  ansible.builtin.debug:
    msg: "Password for ROSA 2 cluster-admin is '{{ _rosa2_cluster_admin_password }}'"

- name: Save AgnosticD ROSA user data
  agnosticd_user_info:
    data:
      rosa2_cluster_name: "{{ ocp4_workload_lb2739_second_rosa_name }}"
      rosa2_openshift_console_url: "{{ rosa2_openshift_console_url }}"
      rosa2_openshift_api_url: "{{ rosa2_openshift_api_url }}"
      rosa2_openshift_admin_user: "cluster-admin"
      rosa2_openshift_admin_password: "{{ _rosa2_cluster_admin_password }}"
