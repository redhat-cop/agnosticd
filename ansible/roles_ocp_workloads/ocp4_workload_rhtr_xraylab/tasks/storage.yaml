---
- name: Discovering worker nodes
  k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
    - node-role.kubernetes.io/worker
  register: worker_nodes

- fail:
    msg: "Less than 3 worker nodes detected. Cannot install Ceph..."
  when: worker_nodes.resources | length < 3

- set_fact:
    ceph_worker_nodes: "{{ worker_nodes | json_query('resources[*].metadata.name') }}"

- name: "Adding Ceph labels to worker nodes"
  shell: "oc label nodes --overwrite {{ item }} cluster.ocs.openshift.io/openshift-storage=''"
  loop: "{{ ceph_worker_nodes }}"

- name: Set state
  set_fact:
    state: present
  when: not ocp4_workload_rhtr_xraylab_ocs_operator_workload_destroy|bool

- name: Set state
  set_fact:
    state: absent
  when: ocp4_workload_rhtr_xraylab_ocs_operator_workload_destroy|bool

- name: "Create Namespace"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'general/namespace.yaml.j2') }}"
  vars:
    namespace: "{{ ocp4_workload_rhtr_xraylab_ocs_namespace }}"

- name: "Create OperatorGroup"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'general/operator_group.yaml.j2') }}"
  vars:
    namespace: "{{ ocp4_workload_rhtr_xraylab_ocs_namespace }}"

- name: "Create Subscription"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'storage/subscription.yaml.j2') }}"
  vars:
    namespace: "{{ ocp4_workload_rhtr_xraylab_ocs_namespace }}"
    channel: "{{ ocp4_workload_rhtr_xraylab_ocs_channel }}"

- name: Wait until InstallPlan is created
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: "{{ ocp4_workload_rhtr_xraylab_ocs_namespace }}"
  register: r_install_plans
  vars:
    _query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'ocs-operator')]
  retries: 30
  delay: 5
  until:
  - r_install_plans.resources | length > 0
  - r_install_plans.resources | to_json | from_json | json_query(_query)

- name: Set InstallPlan Name
  set_fact:
    ocp4_workload_rhtr_xraylab_ocs_install_plan_name: >-
      {{ r_install_plans.resources | to_json | from_json | json_query(query) }}
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'ocs-operator')].metadata.name|[0]

- name: Get InstallPlan
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    name: "{{ ocp4_workload_rhtr_xraylab_ocs_install_plan_name }}"
    namespace: "{{ ocp4_workload_rhtr_xraylab_ocs_namespace }}"
  register: r_install_plan

- name: Approve InstallPlan if necessary
  when: r_install_plan.resources[0].status.phase is match("RequiresApproval")
  k8s:
    state: present
    definition: "{{ lookup( 'template', './templates/general/installplan.yaml.j2' ) }}"
  vars:
    name: "{{ ocp4_workload_rhtr_xraylab_ocs_install_plan_name }}"
    namespace: "{{ ocp4_workload_rhtr_xraylab_ocs_namespace }}"

- name: "Wait for Storage CRD's to exist"
  when: not ocp4_workload_rhtr_xraylab_ocs_operator_workload_destroy|bool
  k8s_info:
    api_version: "apiextensions.k8s.io/v1beta1"
    kind: CustomResourceDefinition
    name: "{{ item }}"
  loop: "{{ ocp4_workload_rhtr_xraylab_ocs_expected_crds }}"
  register: crds
  until: crds.resources|length > 0
  retries: 30
  delay: 10

- name: "Create OCS Storage cluster"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'storage/storagecluster.yaml.j2') }}"

- name: "Create ObjectStore"
  when: ocp4_workload_rhtr_xraylab_ocs_install_rgw
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'storage/rgw_objectstore.yaml.j2') }}"

- name: "Deploy Ceph Toolbox"
  when: ocp4_workload_rhtr_xraylab_ocs_install_rgw
  k8s:
    definition: "{{ lookup('template', 'storage/toolbox.yaml.j2') }}"

# Leave this as the last task in the playbook.
- name: Storage tasks complete
  debug:
    msg: "Storage load Tasks completed successfully."
  when: not silent|bool
