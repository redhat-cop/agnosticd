---
- name: Create and start Tomcat VM
  ovirt.ovirt.ovirt_vm:
    auth:
      insecure: true
    state: running
    name: "{{ ocp4_workload_mad_roadshow_tomcat_vm_name }}"
    template: "{{ ocp4_workload_mad_roadshow_tomcat_vm_template }}"
    cluster: "{{ ocp4_workload_mad_roadshow_vm_cluster }}"
    storage_domain: "{{ ocp4_workload_mad_roadshow_rhv_storage }}"
    cloud_init:
      host_name: "{{ ocp4_workload_mad_roadshow_tomcat_vm_name }}"
      user_name: "{{ ocp4_workload_mad_roadshow_vm_user_name }}"
      root_password: "{{ ocp4_workload_mad_roadshow_vm_user_password }}"
      nic_boot_protocol: dhcp
      nic_name: eth0
    cloud_init_persist: true

- name: Get Tomcat VM NIC
  ovirt.ovirt.ovirt_nic_info:
    auth:
      insecure: true
    vm: "{{ ocp4_workload_mad_roadshow_tomcat_vm_name }}"
    follow:
    - reported_devices
  register: r_nic_tomcat
  retries: 50
  delay: 10
  failed_when: >-
    r_nic_tomcat | json_query("ovirt_nics[0].reported_devices[0].ips[?version=='v4'].address") | default([], true) | length < 1
  until: r_nic_tomcat is successful

- name: Save Tomcat VM IP Address
  ansible.builtin.set_fact:
    _ocp4_workload_mad_roadshow_tomcat_ip: >-
      {{ r_nic_tomcat | json_query("ovirt_nics[0].reported_devices[0].ips[?version=='v4'].address") | first }}

- name: Print VM properties
  ansible.builtin.debug:
    msg: "{{ item }}"
  loop:
  - "Tomcat VM IP Address:    {{ _ocp4_workload_mad_roadshow_tomcat_ip }}"
  - "Tomcat VM user name:     {{ ocp4_workload_mad_roadshow_vm_user_name }}"
  - "Tomcat VM user password: {{ ocp4_workload_mad_roadshow_vm_user_password }}"

- name: Add Tomcat VM to inventory
  ansible.builtin.add_host:
    groupname: webserver
    name: "{{ _ocp4_workload_mad_roadshow_tomcat_ip }}"
    ansible_user: "{{ ocp4_workload_mad_roadshow_vm_user_name }}"
    ansible_ssh_private_key_file: /tmp/rhv.pem

# Next two tasks add the ssh key to ~/.ssh/known_hosts to prevent
# connection warnings
- name: Check SSH known_hosts for {{ _ocp4_workload_mad_roadshow_tomcat_ip }}
  local_action: shell ssh-keygen -l -F {{ _ocp4_workload_mad_roadshow_tomcat_ip }}
  register: checkForKnownHostsEntry
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Add {{ _ocp4_workload_mad_roadshow_tomcat_ip }} to SSH known hosts automatically
  when: checkForKnownHostsEntry.rc == 1
  changed_when: checkForKnownHostsEntry.rc == 1
  local_action:
    module: shell
    args: ssh-keyscan -H "{{ _ocp4_workload_mad_roadshow_tomcat_ip }}" >> $HOME/.ssh/known_hosts
