---
- name: Determine cluster wildcard domain
  kubernetes.core.k8s_info:
    api_version: operator.openshift.io/v1
    kind: IngressController
    name: default
    namespace: openshift-ingress-operator
  register: r_ingress_controller

- name: Save cluster apps domain variable
  ansible.builtin.set_fact:
    _ocp4_workload_mad_roadshow_apps_domain: "{{ r_ingress_controller.resources[0].status.domain }}"

- name: Get Gitea instance
  kubernetes.core.k8s_info:
    api_version: pfe.rhpds.com/v1
    kind: Gitea
    name: "{{ ocp4_workload_mad_roadshow_gitea_instance }}"
    namespace: "{{ ocp4_workload_mad_roadshow_gitea_project }}"
  register: r_gitea

- name: Set up GitOps environment
  when: ocp4_workload_mad_roadshow_gitops_setup | bool
  block:
  - name: Create demo namespaces for all users
    vars:
      _ocp4_workload_mad_roadshow_namespace: >-
        {{ ocp4_workload_mad_roadshow_demo_namespace_prefix }}{{
           ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'apps/namespace.yaml.j2' ) | from_yaml }}"
    loop: "{{ range(1, ocp4_workload_mad_roadshow_gitea_user_count | int + 1) | list }}"
    loop_control:
      loop_var: n
      label: "{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"

  - name: Create cicd namespaces for all users
    vars:
      _ocp4_workload_mad_roadshow_namespace: >-
        {{ ocp4_workload_mad_roadshow_pipeline_namespace_prefix }}{{
           ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'apps/namespace.yaml.j2' ) | from_yaml }}"
    loop: "{{ range(1, ocp4_workload_mad_roadshow_gitea_user_count | int + 1) | list }}"
    loop_control:
      loop_var: n
      label: "{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"

  - name: Create ArgoCD and Tekton environment for all users
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'cicd/applicationset.yaml.j2' ) | from_yaml }}"

  - name: Create PostgreSQL database 'orders' for all users
    vars:
      _ocp4_workload_mad_roadshow_db_app_name: "{{ ocp4_workload_mad_roadshow_orders_db_app_name }}"
      _ocp4_workload_mad_roadshow_db_name: "{{ ocp4_workload_mad_roadshow_orders_db_name }}"
      _ocp4_workload_mad_roadshow_db_user: "{{ ocp4_workload_mad_roadshow_orders_db_user }}"
      _ocp4_workload_mad_roadshow_db_password: "{{ ocp4_workload_mad_roadshow_orders_db_password }}"
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'postgresql/applicationset.yaml.j2' ) | from_yaml }}"

  - name: Create PostgreSQL database 'inventory' for all users
    vars:
      _ocp4_workload_mad_roadshow_db_app_name: "{{ ocp4_workload_mad_roadshow_inventory_db_app_name }}"
      _ocp4_workload_mad_roadshow_db_name: "{{ ocp4_workload_mad_roadshow_inventory_db_name }}"
      _ocp4_workload_mad_roadshow_db_user: "{{ ocp4_workload_mad_roadshow_inventory_db_user }}"
      _ocp4_workload_mad_roadshow_db_password: "{{ ocp4_workload_mad_roadshow_inventory_db_password }}"
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'postgresql/applicationset.yaml.j2' ) | from_yaml }}"

  - name: Create PostgreSQL database 'customer' for all users
    vars:
      _ocp4_workload_mad_roadshow_db_app_name: "{{ ocp4_workload_mad_roadshow_customer_db_app_name }}"
      _ocp4_workload_mad_roadshow_db_name: "{{ ocp4_workload_mad_roadshow_customer_db_name }}"
      _ocp4_workload_mad_roadshow_db_user: "{{ ocp4_workload_mad_roadshow_customer_db_user }}"
      _ocp4_workload_mad_roadshow_db_password: "{{ ocp4_workload_mad_roadshow_customer_db_password }}"
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'postgresql/applicationset.yaml.j2' ) | from_yaml }}"

  # Don't use ApplicationSet -> users can change their applications
  - name: Create ArgoCD Applications for all users
    vars:
      _ocp4_workload_mad_roadshow_namespace: >-
        {{ ocp4_workload_mad_roadshow_demo_namespace_prefix }}{{
           ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}
      _ocp4_workload_mad_roadshow_user: "{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'apps/application.yaml.j2' ) | from_yaml }}"
    loop: "{{ range(1, ocp4_workload_mad_roadshow_gitea_user_count | int + 1) | list }}"
    loop_control:
      loop_var: n
      label: "{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"

- name: Deploy RedHat OpenShift AI
  when: ocp4_workload_mad_roadshow_rhods_setup | bool
  include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: "{{ ocp4_workload_mad_roadshow_rhods_operator_name }}"
    install_operator_namespace: redhat-ods-operator
    install_operator_channel: "{{ ocp4_workload_mad_roadshow_rhods_channel }}"
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_mad_roadshow_rhods_automatic_install_plan_approval }}"
    install_operator_starting_csv: "{{ ocp4_workload_mad_roadshow_rhods_install_operator_starting_csv }}"
    install_operator_manage_namespaces: []
    install_operator_catalogsource_setup: "{{ ocp4_workload_mad_roadshow_rhods_use_catalogsource_setup }}"
    install_operator_catalogsource_name: "{{ ocp4_workload_mad_roadshow_rhods_catalogsource_name }}"
    install_operator_catalogsource_image: "{{ ocp4_workload_mad_roadshow_rhods_catalogsource_image }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_mad_roadshow_rhods_catalogsource_image_tag }}"

- name: Create Data Science Cluster
  when: ocp4_workload_mad_roadshow_rhods_setup | bool
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'rhoai/odh-cluster.yaml.j2' ) | from_yaml }}"

- name: Wait for DSC to come up
  when: ocp4_workload_mad_roadshow_rhods_setup | bool
  kubernetes.core.k8s_info:
    api_version: datasciencecluster.opendatahub.io/v1
    kind: DataScienceCluster
    name: default-dsc
  register: r_dsc
  until: r_dsc.resources[0].status.phase == 'Ready'
  retries: 60
  delay: 10

- name: Adjust RHODS configuration
  when: ocp4_workload_mad_roadshow_rhods_setup | bool
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'rhoai/odh-dashboard-config.yaml.j2' ) | from_yaml }}"

- name: Setup Module 7 - RHDH
  when: ocp4_workload_mad_roadshow_rhdh_on | bool
  include_tasks:
    file: ./rhdh-main.yml

# --------------------------------------------------------
# Deploy Module Guides and User Distribution for Dev Track
# --------------------------------------------------------
- name: Deploy module guides and user distribution tool
  when: ocp4_workload_mad_roadshow_guides_deploy | bool
  block:
  - name: Retrieve OpenShift Console URL
    kubernetes.core.k8s_info:
      api_version: config.openshift.io/v1
      kind: Console
      name: cluster
    register: r_console

  - name: Set console variable
    ansible.builtin.set_fact:
      _ocp4_workload_mad_roadshow_console_url: "{{ r_console.resources[0].status.consoleURL }}"

  - name: Create prerequisites for guides
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', item ) | from_yaml }}"
    loop:
    - guides/namespace.yaml.j2
    - guides/imagestream_httpd.yaml.j2

  - name: Setting up module_type for workshop
    debug:
      msg: "Setting up module_type for workshop module_type = {{ ocp4_workload_mad_roadshow_guides_module_type }}"

  - name: Create module list
    ansible.builtin.set_fact:
      _ocp4_workload_mad_roadshow_guides_modules: "{{ ocp4_workload_mad_roadshow_guides_module_type.split(';') | map('trim') | list }}"

  - name: Print selected modules
    debug:
      msg: "Selected list of modules: {{ _ocp4_workload_mad_roadshow_guides_modules }}"

  - name: Deploy guides
    ansible.builtin.include_tasks: dev-module-guides-install.yml
    vars:
      guide: "{{ module }}"
    loop: "{{ _ocp4_workload_mad_roadshow_guides_modules }}"
    loop_control:
      loop_var: module

  - name: Install username distribution tool
    include_tasks: dev-username-distribution-install.yml

# -------------------
# AgnosticD User Info
# -------------------
- name: Save AgnosticD information for all users
  when: ocp4_workload_mad_roadshow_gitops_setup | bool
  agnosticd_user_info:
    user: "{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"
    data:
      user: "{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"
      gitea_url: >-
        {{ r_gitea.resources[0].spec.giteaSsl | bool | ternary( 'https', 'http' ) }}://{{
           r_gitea.resources[0].status.giteaHostname }}/{{
           ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}/{{
           ocp4_workload_mad_roadshow_gitea_repo }}
      retail_namespace: "{{ ocp4_workload_mad_roadshow_demo_namespace_prefix }}{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"
      cicd_namespace: "{{ ocp4_workload_mad_roadshow_pipeline_namespace_prefix }}{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"
  loop: "{{ range(1, ocp4_workload_mad_roadshow_gitea_user_count | int + 1) | list }}"
  loop_control:
    loop_var: n
    label: "{{ ocp4_workload_mad_roadshow_gitea_user_prefix }}{{ n }}"

- name: Create JBoss Web Server 5.6 ImageStream
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'imagestream-jboss-webserver56.yaml' ) | from_yaml }}"

# Cleanup Private Key
- name: Remove private key
  delegate_to: localhost
  ansible.builtin.file:
    state: absent
    path: /tmp/rhv.pem
