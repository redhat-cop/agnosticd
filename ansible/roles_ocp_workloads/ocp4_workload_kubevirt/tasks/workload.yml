---
# Implement your Workload deployment tasks here
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Install OpenShift Virtualization Operator
  include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: kubevirt-hyperconverged
    install_operator_namespace: openshift-cnv
    install_operator_manage_namespaces:
    - openshift-cnv
    install_operator_channel: "{{ ocp4_workload_kubevirt_channel }}"
    install_operator_catalog: redhat-operators
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_kubevirt_automatic_install_plan_approval | default(true) }}"
    install_operator_starting_csv: "{{ ocp4_workload_kubevirt_starting_csv }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_kubevirt_use_catalog_snapshot | default(false)}}"
    install_operator_catalogsource_name: "{{ ocp4_workload_kubevirt_catalogsource_name | default('') }}"
    install_operator_catalogsource_namespace: openshift-cnv
    install_operator_catalogsource_image: "{{ ocp4_workload_kubevirt_catalog_snapshot_image | default('') }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_kubevirt_catalog_snapshot_image_tag | default('') }}"

- name: Create the HyperConverged instance
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'hyperconverged.yaml') }}"

- name: Wait until HyperConverged is installed
  kubernetes.core.k8s_info:
    api_version: hco.kubevirt.io/v1beta1
    kind: HyperConverged
    name: kubevirt-hyperconverged
    namespace: openshift-cnv
  register: r_hyperconverged
  retries: 120
  delay: 10
  until:
  - r_hyperconverged.resources | length > 0
  - r_hyperconverged.resources[0].status is defined
  - r_hyperconverged.resources[0].status.conditions | length > 0
  - r_hyperconverged.resources[0].status.conditions | json_query( hyperconverged_query ) | bool
  vars:
    hyperconverged_query: >-
      [?type=='Available'].status[] | [0]

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
