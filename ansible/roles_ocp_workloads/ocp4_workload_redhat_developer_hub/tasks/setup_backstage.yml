---
- name: Retrieve ArgoCD credentials
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: argocd-cluster
    namespace: janus-argocd
  register: r_argo_creds
  until:
  - r_argo_creds is defined
  - r_argo_creds.resources is defined
  - r_argo_creds.resources | length > 0

- name: Decode argo credentials
  set_fact:
    ocp4_workload_redhat_developer_hub_argocd_password: "{{ r_argo_creds.resources[0].data['admin.password'] | b64decode }}"

- name: Retrieve openshift gitops route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: argocd-server
    namespace: janus-argocd
  register: r_argocd_route
  until:
  - r_argocd_route is defined
  - r_argocd_route.resources is defined
  - r_argocd_route.resources | length > 0

- name: Retrieve openshift gitops hostname
  set_fact:
    ocp4_workload_redhat_developer_hub_argocd_host: "{{ r_argocd_route.resources[0].spec.host }}"

- name: Create default service account cluster admin role
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'cluster-role-binding-default-sa-admin.yml.j2' ) | from_yaml }}"

- name: Get default token
  shell: oc get secret $(oc get secret -n default | grep default-token | awk '{print $1}') -n default -o json | jq -r '.data.token'
  register: r_default_token

- name: Get Openshift REST API
  shell: oc config view -o jsonpath='{.clusters[*].cluster.server}'
  register: r_ocp_api

- name: Decode default token
  set_fact:
    ocp4_workload_redhat_developer_hub_ocp_default_sa_token: "{{ r_default_token.stdout | b64decode }}"
    ocp4_workload_redhat_developer_hub_ocp_api: "{{ r_ocp_api.stdout }}"

- name: Retrieve quay admin token
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: quay-admin-token
    namespace: quay-enterprise
  register: r_quay_token
  retries: 120
  delay: 10
  until:
  - r_quay_token is defined
  - r_quay_token.resources is defined
  - r_quay_token.resources | length > 0
  - r_quay_token.resources[0] is defined

- name: Decode quay admin token
  set_fact:
    ocp4_workload_redhat_developer_hub_quay_admin_token: "{{ r_quay_token.resources[0].data.token | b64decode }}"

- name: Retrieve s3 bucket route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: s3
    namespace: openshift-storage
  register: r_s3_route
  until:
  - r_s3_route is defined
  - r_s3_route.resources is defined
  - r_s3_route.resources | length > 0

- name: Decode quay admin token
  set_fact:
    ocp4_workload_redhat_developer_hub_s3_bucket_url: "https://{{ r_s3_route.resources[0].spec.host }}"

- name: Create Backstage application
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'application-backstage.yml.j2' ) | from_yaml }}"