---
- name: Install GitLab Runner Operator
  block:
  - name: Install GitLab Runner Operator
    ansible.builtin.include_role:
      name: install_operator
    vars:
      install_operator_action: install
      install_operator_name: gitlab-runner-operator
      install_operator_namespace: openshift-operators
      install_operator_channel: stable
      install_operator_catalog: certified-operators
      install_operator_packagemanifest_name: gitlab-runner-operator
      install_operator_automatic_install_plan_approval: true
      install_operator_csv_nameprefix: gitlab-runner-operator
      install_operator_catalogsource_setup: "{{
        ocp4_workload_redhat_developer_hub_gitlab_runner_catalog_setup }}"
      install_operator_catalogsource_image: "{{
        ocp4_workload_redhat_developer_hub_gitlab_runner_catalog_image }}"
      install_operator_catalogsource_image_tag: "{{
        ocp4_workload_redhat_developer_hub_gitlab_runner_catalog_image_tag }}"

- name: Create GitLab runner Registration Token
  ansible.builtin.uri:
    url: https://{{ ocp4_workload_redhat_developer_hub_gitlab_host }}/api/v4/runners/reset_registration_token
    method: POST
    return_content: true
    body_format: json
    headers:
      PRIVATE-TOKEN: " {{ ocp4_workload_redhat_developer_hub_gitlab_root_token }} "
    validate_certs: false
    status_code: [201]
  register: r_gitlab_runner_token

- name: Create registration token secret
  ansible.builtin.set_fact:
    ocp4_workload_redhat_developer_hub_gitlab_runner_token: "{{ r_gitlab_runner_token.json.token }}"

- name: Create GitLab Runner instance
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
  - secret-gitlab-runner-secret.yml.j2
  - gitlab-runner-techdocs.yml.j2

- name: Create CI/CD Variables
  ansible.builtin.uri:
    url: https://{{ ocp4_workload_redhat_developer_hub_gitlab_host }}/api/v4/admin/ci/variables
    method: POST
    body_format: json
    body:
      "key": "{{ item.name }}"
      "variable_type": "env_var"
      "value": "{{ item.value }}"
      "protected": false
      "masked": false
      "raw": false
      "environment_scope": "*"
    headers:
      PRIVATE-TOKEN: "{{ ocp4_workload_redhat_developer_hub_gitlab_root_token }}"
    validate_certs: false
    status_code: [201]
  loop:
  - name: TECHDOCS_S3_BUCKET_NAME
    value: "{{ ocp4_workload_redhat_developer_hub_minio_bucket_name }}"
  - name: AWS_ACCESS_KEY_ID
    value: "{{ ocp4_workload_redhat_developer_hub_minio_username }}"
  - name: AWS_SECRET_ACCESS_KEY
    value: "{{ ocp4_workload_redhat_developer_hub_minio_password }}"
  - name: AWS_REGION
    value: us-east-2
  - name: AWS_ENDPOINT
    value: "https://minio-{{
      ocp4_workload_redhat_developer_hub_minio_namespace }}.{{
      ocp4_workload_redhat_developer_hub_apps_domain }}"
