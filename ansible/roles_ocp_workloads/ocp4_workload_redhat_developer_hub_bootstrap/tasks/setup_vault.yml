---
- name: Create Vault application
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'application-vault.yml.j2' ) | from_yaml }}"

- name: Retrieve Vault Pod
  kubernetes.core.k8s_info:
    kind: Pod
    name: vault-0
    namespace: "{{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace }}"
  register: r_vault
  retries: 60
  delay: 5
  until:
  - r_vault.resources is defined
  - r_vault.resources | length > 0
  - r_vault.resources[0].status is defined
  - r_vault.resources[0].status.phase is defined
  - r_vault.resources[0].status.phase == 'Running'

- name: Copy unsealing key
  shell: |
    oc exec vault-0 --namespace={{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} --stdin --tty -- cat /vault/data/vault-auto-unseal-keys.txt > /tmp/vault-auto-unseal-keys.txt
  retries: 60
  delay: 5
  register: r_copy
  until: r_copy is not failed

- name: Get login token
  shell: >-
    grep -A 0 root_token /tmp/vault-auto-unseal-keys.txt | sed 's/root_token: //g'
  register: r_token

- name: Set vault token fact
  set_fact:
    ocp4_workload_redhat_developer_hub_bootstrap_vault_token: "{{ r_token.stdout }}"

- name: Create token secret
  k8s:
    state: present
    definition: "{{ lookup('template',  'secret-vault-token.yml.j2' ) | from_yaml }}"

- name: Login to vault
  shell: |
    oc exec vault-0 --namespace={{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} --stdin --tty --  vault login {{ ocp4_workload_redhat_developer_hub_bootstrap_vault_token }}

- name: Create vault policy
  shell: |
    oc exec vault-0 --namespace={{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- bash -c 'rm -rf /tmp/rhdh-policy.hcl'
    oc exec vault-0 --namespace={{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- bash -c 'echo path \"*\" >> /tmp/rhdh-policy.hcl'
    oc exec vault-0 --namespace={{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- bash -c 'echo {  capabilities = [\"read\"] >> /tmp/rhdh-policy.hcl'
    oc exec vault-0 --namespace={{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- bash -c 'echo } >> /tmp/rhdh-policy.hcl'
    oc exec vault-0 --namespace={{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- bash -c 'vault policy write rhdh-policy /tmp/rhdh-policy.hcl'

- name: Enable kubernetes auth
  shell: |
    oc exec vault-0 -n {{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- vault auth enable kubernetes
    k8s_host=$(oc exec vault-0 -n {{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- printenv | grep KUBERNETES_PORT_443_TCP_ADDR | cut -f 2- -d "=" | tr -d " ")
    k8s_port=443
    k8s_cacert=$(oc config view --raw --minify --flatten -o jsonpath='{.clusters[].cluster.certificate-authority-data}' \
    | base64 --decode)
    tr_account_token=$(oc get secret $(oc get secret -n default | grep default-token- | awk '{print $1}') -n default \
    -o json | jq -r '.data.token' | base64 --decode)
    oc exec vault-0 -n {{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- vault write auth/kubernetes/config token_reviewer_jwt="${tr_account_token}" \
    kubernetes_host="https://${k8s_host}:${k8s_port}" kubernetes_ca_cert="${k8s_cacert}" disable_issuer_verification=true

- name: Create role and service account authentication
  shell: |
    oc exec vault-0 -n {{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- vault write auth/kubernetes/role/rhdh-role bound_service_account_names=default \
    bound_service_account_namespaces=default policies=rhdh-policy ttl=160h
    tr_account_token=$(oc get secret $(oc get secret -n default | grep default-token- | \
    awk '{print $1}') -n default -o json | jq -r '.data.token' | base64 --decode)
    oc exec vault-0 -n {{ ocp4_workload_redhat_developer_hub_bootstrap_vault_namespace
    }} -- vault write auth/kubernetes/login role=rhdh-role jwt=${tr_account_token}

- name: Enable kv version 2
  shell: |
    oc exec vault-0 -n vault -- vault secrets enable -version=2 kv