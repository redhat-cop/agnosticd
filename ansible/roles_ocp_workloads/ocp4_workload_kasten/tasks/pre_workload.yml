---
# Implement your Pre Workload deployment tasks here
# -------------------------------------------------

- name: Install the minio from remote repo
  ansible.builtin.dnf:
    name: https://dl.min.io/server/minio/release/linux-amd64/minio-20230816201730.0.0.x86_64.rpm
    state: present
  become: true

- name: Create a system group for minio-user
  group:
    name: minio-user
    state: present
    system: yes
  become: true

- name: Create MinIO user
  user:
    name: minio-user
    comment: MinIO User
    shell: /sbin/nologin
    system: yes
    group: minio-user
    append: yes
    state: present
  become: true

- name: Create loopback device file
  shell: "dd if=/dev/zero of=/home/{{ ansible_user}}/minio.img bs=1M count=2048"
  args:
    creates: "/home/{{ ansible_user}}/minio.img"
  become: true

- name: Update loopback file ownership
  file:
    path: "/home/{{ ansible_user}}/minio.img"
    owner: minio-user
    group: minio-user
  become: true

- name: Create loopback device
  shell: losetup /dev/loop0 /home/{{ ansible_user }}/minio.img
  ignore_errors: true
  become: true

- name: Format the loopback device
  shell: "mkfs.ext4 /dev/loop0"
  ignore_errors: true
  become: true

- name: Create mount directory
  file:
    path: /mnt/minio_loopback
    state: directory
  become: true

- name: Update loopback file ownership
  file:
    path: /mnt/minio_loopback
    owner: minio-user
    group: minio-user
  become: true

- name: Mount loopback device
  mount:
    path: /mnt/minio_loopback
    src: /dev/loop0
    fstype: ext4
    state: mounted
  become: true

- name: Create /etc/default/minio from template
  template:
    src: minio.j2
    dest: /etc/default/minio
  become: true

- name: Remove ProtectProc line from minio.service
  lineinfile:
    path: /usr/lib/systemd/system/minio.service
    state: absent
    regexp: '^ProtectProc=invisibl$'

- name: Restart MinIO service
  service:
    name: minio
    state: restarted
    daemon_reload: true
  become: true


# Leave these as the last tasks in the playbook
# ---------------------------------------------

# For deployment onto a dedicated cluster (as part of the
# cluster deployment) set workload_shared_deployment to False
# This is the default so it does not have to be set explicitely
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when:
  - not silent|bool
  - not workload_shared_deployment|default(False)

# For RHPDS deployment (onto a shared cluster) set
# workload_shared_deployment to True
# (in the deploy script or AgnosticV configuration)
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Software checks completed successfully"
  when:
  - not silent|bool
  - workload_shared_deployment|default(False)
