apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ojbect-detection-app-git-ci-pipeline
  namespace: "{{ ocp4_workload_aiml_namespace }}"
spec:
  params:
    - default: 'image-registry.openshift-image-registry.svc:5000/cicd/object-detection-app-git'
      name: IMAGE
      type: string
    - default: 'default-route-openshift-image-registry.apps.cluster-j47pp-1.sandbox1983.opentlc.com/cicd/object-detection-app-git'
      name: STACKROX_IMAGE
      type: string
    - default: 'https://dev-user:openshift@gitea.apps.cluster-tpn6s.sandbox2653.opentlc.com/dev-user/object-detection-app-argocd'
      name: GIT_REPO_URL
      type: string
    - default: 'https://dev-user:openshift@gitea.apps.cluster-tpn6s.sandbox2653.opentlc.com/dev-user/arc-frontend'
      name: GIT_MICROSERVICES_REPO_URL
      type: string
    - default: 'main'
      name: GIT_REPO_REVISION
      type: string
    - default: 'https://sonarqube-.<CHANGE_ME>'
      name: SONARQUBE_HOST_URL
      type: string
  tasks:
    - name: build
      params:
        - name: SCRIPT
          value: |
            oc start-build object-detection-app-git --follow=true --wait=true
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: generate-tag
      runAfter:
        - build
      taskRef:
        kind: Task
        name: object-detection-app-git-generate-tag
    - name: tag
      params:
        - name: SCRIPT
          value: >
            oc tag cicd/object-detection-app-git:latest
            cicd/object-detection-app-git:$(tasks.generate-tag.results.image-tag)
      runAfter:
        - generate-tag
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: update-repo
      params:
        - name: gitRepositoryUrl
          value: $(params.GIT_REPO_URL)
        - name: gitRepositoryRevision
          value: $(params.GIT_REPO_REVISION)
        - name: image
          value: $(params.IMAGE)
        - name: imageTag
          value: $(tasks.generate-tag.results.image-tag)
        - name: verbose
          value: 'true'
      runAfter:
        - tag
      taskRef:
        kind: Task
        name: object-detection-app-git-update-repo
    # - name: acs-image-check
    #   params:
    #     - name: rox_central_endpoint
    #       value: stackrox-endpoint
    #     - name: rox_api_token
    #       value: stackrox-secret
    #     - name: image
    #       value: >-
    #         $(params.STACKROX_IMAGE)
    #     - name: insecure-skip-tls-verify
    #       value: 'true'
    #   runAfter:
    #     - build
    #   taskRef:
    #     kind: Task
    #     name: acs-image-check
    # - name: acs-image-scan
    #   params:
    #     - name: rox_central_endpoint
    #       value: stackrox-endpoint
    #     - name: rox_api_token
    #       value: stackrox-secret
    #     - name: image
    #       value: >-
    #         $(params.STACKROX_IMAGE)
    #     - name: insecure-skip-tls-verify
    #       value: 'true'
    #   runAfter:
    #     - build
    #   taskRef:
    #     kind: Task
    #     name: acs-image-scan
    # - name: scan-code
    #   params:
    #     - name: gitRepositoryUrl
    #       value: $(params.GIT_MICROSERVICES_REPO_URL)
    #     - name: gitRepositoryRevision
    #       value: $(params.GIT_REPO_REVISION)
    #     - name: sonarqubeHostUrl
    #       value: $(params.SONARQUBE_HOST_URL)
    #   taskRef:
    #     kind: Task
    #     name: scan-code
    # - name: unit-tests
    #   params:
    #     - name: gitRepositoryUrl
    #       value: $(params.GIT_MICROSERVICES_REPO_URL)
    #     - name: gitRepositoryRevision
    #       value: $(params.GIT_REPO_REVISION)
    #   taskRef:
    #     kind: Task
    #     name: unit-tests
  workspaces:
    - name: app-workspace

