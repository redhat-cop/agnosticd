- name: Create service account
  k8s:
    api_version: v1
    kind: ServiceAccount
    name: "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_service_account }}"
    namespace: "{{ ocp4_workload_object_detection_ai_ml_ohc_namespace }}"

- name: Add role
  command: oc adm policy add-role-to-user registry-admin system:serviceaccount:{{ ocp4_workload_object_detection_ai_ml_ohc_namespace }}:{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_service_account }} # yamllint disable-line rule:line-length

- name: Get service account token
  shell: oc sa get-token {{ _ocp4_workload_object_detection_ai_ml_ohc_internal_service_account }} -n {{ ocp4_workload_object_detection_ai_ml_ohc_namespace }} # yamllint disable-line rule:line-length
  register: r_token

- name: Set SA token
  set_fact:
    _ocp4_workload_object_detection_ai_ml_ohc_internal_service_account_token: "{{ r_token.stdout }}"

# Registry
- name: Expose registry
  command: oc patch configs.imageregistry.operator.openshift.io/cluster --type=merge --patch '{"spec":{"defaultRoute":true}}'

- name: Get route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: openshift-image-registry
  register: r_route

- name: Set image registry route
  set_fact:
    _ocp4_workload_object_detection_ai_ml_ohc_internal_image_registry_route: "{{ r_route.resources.0.spec.host }}"

# - name: Get central stackrox route
#   k8s_info:
#     api_version: route.openshift.io/v1
#     kind: Route
#     namespace: stackrox
#     name: central
#   register: r_route
#   ignore_errors: true

# - name: Set stackrox central host (to me replaced with AgV value)
#   set_fact:
#     ocp4_workload_object_detection_ai_ml_ohc_central_stackrox_host: "{{ r_route.resources.0.spec.host }}"

- name: Set image registry route
  set_fact:
    _ocp4_workload_object_detection_ai_ml_ohc_internal_central_stackrox_endpoint: "{{ ocp4_workload_object_detection_ai_ml_ohc_central_stackrox_host }}:443" # yamllint disable-line rule:line-length
    _ocp4_workload_object_detection_ai_ml_ohc_internal_centeral_stackrox_url: https://{{ ocp4_workload_object_detection_ai_ml_ohc_central_stackrox_host }} # yamllint disable-line rule:line-length

- name: Stackrox token
  uri:
    url: "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_centeral_stackrox_url }}/v1/apitokens/generate"
    user: admin
    password: "{{ common_password }}"
    method: POST
    force_basic_auth: true
    validate_certs: false
    body_format: json
    headers:
      Content-Type: application/json
    body: {"name":"admin", "role":"Admin"}
  register: r_uri

- name: Set stackrox token
  set_fact:
    _ocp4_workload_object_detection_ai_ml_ohc_internal_central_stackrox_token: "{{ r_uri.json.token }}"

- debug: var=_ocp4_workload_object_detection_ai_ml_ohc_internal_service_account_token
- debug: var=_ocp4_workload_object_detection_ai_ml_ohc_internal_image_registry_route
- debug: var=_ocp4_workload_object_detection_ai_ml_ohc_internal_central_stackrox_token
- debug: var=_ocp4_workload_object_detection_ai_ml_ohc_internal_centeral_stackrox_url

# - name: Create secret (token)
#   k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: stackrox-secret
#         namespace: "{{ ocp4_workload_object_detection_ai_ml_ohc_namespace }}"
#       type: Opaque
#       data:
#         rox_api_token: "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_central_stackrox_token | string | b64encode }}"

# - name: Create secret (endpoint)
#   k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: stackrox-endpoint
#         namespace: "{{ ocp4_workload_object_detection_ai_ml_ohc_namespace }}"
#       type: Opaque
#       data:
#         rox_central_endpoint: "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_central_stackrox_endpoint | string | b64encode }}"

# - name: Stackrox imagestream integration
#   uri:
#     url: "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_centeral_stackrox_url }}/v1/imageintegrations"
#     user: admin
#     password: "{{ common_password }}"
#     method: POST
#     force_basic_auth: true
#     validate_certs: false
#     body_format: json
#     headers:
#       Content-Type: application/json
#     body: >-
#       {
#       "name": "registry-admin-{{ guid }}",
#       "type": "docker",
#       "categories": ["REGISTRY"],
#       "docker": {
#       "endpoint": "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_image_registry_route }}",
#       "username": "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_service_account }}",
#       "password": "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_service_account_token }}",
#       "insecure": true
#       },
#       "skipTestIntegration": false
#       }
#   ignore_errors: true


- name: Get Stackrox policies
  uri:
    url: "{{ _ocp4_workload_object_detection_ai_ml_ohc_internal_centeral_stackrox_url }}/v1/policies"
    user: admin
    password: "{{ common_password }}"
    method: GET
    force_basic_auth: true
    validate_certs: false
    body_format: json
    headers:
      Content-Type: application/json
  register: r_policies

- name: Inform only policies
  include_tasks: inform_only_policy_tasks.yml
  loop: "{{ ocp4_workload_object_detection_ai_ml_ohc_inform_only_policies }}"
