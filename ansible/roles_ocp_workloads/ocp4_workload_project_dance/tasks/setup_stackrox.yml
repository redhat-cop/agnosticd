---
- name: Retrieve Quay instance
  kubernetes.core.k8s_info:
    kind: Route
    name: quay-quay
    namespace: "{{ ocp4_workload_project_dance_quay_namespace }}"
  register: r_quay
  retries: 120
  delay: 10
  until: r_quay.resources | length > 0

- name: Set Quay docker registry
  set_fact:
    ocp4_workload_project_dance_docker_registry: "{{ r_quay.resources[0].spec.host }}"

- name: Get stackrox route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: "{{ ocp4_workload_project_dance_stackrox_namespace }}"
    name: central
  register: r_route

- name: Set stackrox endpoint and url
  set_fact:
    _ocp4_workload_project_dance_central_stackrox_endpoint: "{{ r_route.resources[0].spec.host }}:443" # yamllint disable-line rule:line-length
    _ocp4_workload_project_dance_centeral_stackrox_url: https://{{ r_route.resources[0].spec.host }} # yamllint disable-line rule:line-length

- name: Create stackrox token
  uri:
    url: "{{ _ocp4_workload_project_dance_centeral_stackrox_url }}/v1/apitokens/generate"
    user: admin
    password: "{{ common_password }}"
    method: POST
    force_basic_auth: true
    validate_certs: false
    body_format: json
    headers:
      Content-Type: application/json
    body: {"name":"admin", "role":"Admin"}
  register: r_uri

- name: Create vault secret for stackrox token
  shell: |
    oc exec vault-0 -n {{ ocp4_workload_project_dance_vault_namespace
    }} -- vault kv put kv/secrets/janusidp/stackrox token={{ r_uri.json.token }}

- name: Stackrox imagestream integration - add registry integration
  uri:
    url: "{{ _ocp4_workload_project_dance_centeral_stackrox_url }}/v1/imageintegrations"
    user: admin
    password: "{{ common_password }}"
    method: POST
    force_basic_auth: true
    validate_certs: false
    body_format: json
    headers:
      Content-Type: application/json
    body: >-
      {
      "name": "registry-admin-quay",
      "type": "docker",
      "categories": ["REGISTRY"],
      "docker": {
      "endpoint": "{{ ocp4_workload_project_dance_docker_registry }}",
      "username": "{{ ocp4_workload_project_dance_docker_username }}",
      "password": "{{ ocp4_workload_project_dance_docker_password }}",
      "insecure": true
      },
      "skipTestIntegration": false
      }

- name: Expose registry
  command: oc patch configs.imageregistry.operator.openshift.io/cluster --type=merge --patch '{"spec":{"defaultRoute":true}}'

- name: Read cosign public key
  set_fact:
    _ocp4_workload_project_dance_cosign_pub: "{{ lookup('file', '/tmp/cosign.pub') | replace('\n', '\\n') }}"

- name: Stackrox imagestream integration - add signature integration
  uri:
    url: "{{ _ocp4_workload_project_dance_centeral_stackrox_url }}/v1/signatureintegrations"
    user: admin
    password: "{{ common_password }}"
    method: POST
    force_basic_auth: true
    validate_certs: false
    body_format: json
    headers:
      Content-Type: application/json
    body: >-
      {
        "name": "cosign",
        "cosign": {
          "publicKeys": [
            {
              "name": "cosign.pub",
              "publicKeyPemEnc": "{{ _ocp4_workload_project_dance_cosign_pub }}"
            }
          ]
        }
      }
  register: r_integration_response

- name: Inform only policies
  include_tasks: inform_only_policy_tasks.yml
  loop: "{{ ocp4_workload_project_dance_inform_only_policies }}"