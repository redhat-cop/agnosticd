---
# Implement your Workload deployment tasks here
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = admin"


- name: Install Red Hat Developer Hub Operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: rhdh
    install_operator_namespace: "{{ ocp4_workload_rhdh_namespace }}"
    install_operator_channel: "{{ ocp4_workload_rhdh_channel }}"
    install_operator_catalog: redhat-operators
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_openshift_rhdh_automatic_install_plan_approval | default(true) }}"
    install_operator_starting_csv: "{{ ocp4_workload_rhdh_starting_csv }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_rhdh_use_catalog_snapshot | default(false)}}"
    install_operator_catalogsource_name: "{{ ocp4_workload_rhdh_catalogsource_name | default('') }}"
    install_operator_catalogsource_namespace: openshift-marketplace
    install_operator_catalogsource_image: "{{ ocp4_workload_rhdh_catalog_snapshot_image | default('') }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_rhdh_catalog_snapshot_image_tag | default('') }}"

- name: Check if secrets-rhdh already exists
  command: oc get secret secrets-rhdh
  ignore_errors: true
  register: secrets_check

- name: Generate backend secret if it doesn't exist
  command: oc create secret generic secrets-rhdh --from-literal=BACKEND_SECRET=$(openssl rand -base64 32)
  when: secrets_check.rc != 0

- name: Get Ingress Domain
  command: "{{ ingress_domain_command }}"
  register: ingress_domain
  changed_when: false

- name: Create app-config-rhdh ConfigMap
  k8s:
    state: present
    namespace: "{{ ocp4_workload_rhdh_namespace }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: app-config-rhdh
      data:
        app-config-rhdh.yaml: |
          app:
            title: Red Hat Developer Hub
            baseUrl: "https://backstage-developer-hub-{{ ocp4_workload_rhdh_namespace }}.{{ ingress_domain.stdout }}"

- name: Create dynamic-plugins-rhdh ConfigMap
  k8s:
    state: present
    namespace: "{{ ocp4_workload_rhdh_namespace }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: dynamic-plugins-rhdh
      data:
        dynamic-plugins.yaml: |
          includes:
            - dynamic-plugins.default.yaml
          plugins:
            - package: './dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-dynamic'
              disabled: false
              pluginConfig:
                auth:
                  github:
                    clientId: "{{ github_client_id }}"
                    clientSecret: "{{ github_client_secret }}"

- name: Update Backstage CR with dynamicPluginsConfigMapName
  k8s:
    state: present
    namespace: "{{ ocp4_workload_rhdh_namespace }}"
    definition:
      apiVersion: rhdh.redhat.com/v1alpha1
      kind: Backstage
      metadata:
        name: developer-hub
    apply: yes
    resource_definition: |
      spec:
        application:
          dynamicPluginsConfigMapName: dynamic-plugins-rhdh

- name: Create Red Hat Developer Hub Instance
  k8s:
    state: present
    namespace: "{{ ocp4_workload_rhdh_namespace }}"
    definition:
      apiVersion: rhdh.redhat.com/v1alpha1
      kind: Backstage
      metadata:
        name: developer-hub
      spec:
        application:
          appConfig:
            mountPath: /opt/app-root/src  # Example mount path for app configuration
          extraFiles:
            mountPath: /opt/app-root/src  # Example mount path for extra files
          replicas: 1
          route:
            enabled: true
        database:
          enableLocalDb: true

- name: Wait for configuration to stabilize
  k8s_info:
    kind: ConfigMap
    label_selectors:
      app: developer-hub
  register: config_maps_info
  until: config_maps_info.resources | default([]) | length > 0
  retries: 30
  delay: 10

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
