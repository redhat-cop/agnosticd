---

- name: Install OpenShift GitOps operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_name }}"
    install_operator_namespace: "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_namespace }}"
    install_operator_channel: "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_channel }}"
    install_operator_catalog: "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_catalog }}"
    install_operator_automatic_install_plan_approval:
      "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_automatic_install_plan_approval | default(true) }}"
    install_operator_starting_csv: "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_starting_csv }}"
    install_operator_catalogsource_setup:
      "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_use_catalog_snapshot | default(false) }}"
    install_operator_catalogsource_name:
      "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_catalogsource_name | default('') }}"
    install_operator_catalogsource_namespace:
      "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_catalogsource_namespace | default('') }}"
    install_operator_catalogsource_image:
      "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_catalog_snapshot_image | default('') }}"
    install_operator_catalogsource_image_tag:
      "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_catalog_snapshot_image_tag | default('') }}"
    install_operator_subscription_config:
      "{{ ocp4_workload_platform_engineering_workshop_openshift_gitops_operator_config }}"

- name: Grant cluster-admin permissions to Gitops Service account
  when: ocp4_workload_platform_engineering_workshop_openshift_gitops_setup_cluster_admin | bool
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'openshift_gitops_clusterrolebinding.yaml') | from_yaml }}"
  retries: 10
  delay: 30
  ignore_errors: true
  register: git_sa_result
  until: git_sa_result is not failed

- name: Print git_sa_result from the previous task
  ansible.builtin.debug:
    var: git_sa_result

- name: Wait until openshift-gitops ArgoCD instance has been created
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1beta1
    kind: ArgoCD
    name: openshift-gitops
    namespace: openshift-gitops
  register: r_openshift_gitops
  until:
    - r_openshift_gitops is defined
    - r_openshift_gitops.resources is defined
    - r_openshift_gitops.resources | length == 1
  ignore_errors: true
  retries: 10
  delay: 30

- name: Print r_openshift_gitops from the previous task
  ansible.builtin.debug:
    var: r_openshift_gitops

- name: Update resources for openshift-gitops ArgoCD instance
  when: ocp4_workload_platform_engineering_workshop_openshift_gitops_update_resources | bool
  kubernetes.core.k8s:
    state: patched
    definition: "{{ lookup('template', 'openshift-gitops/openshift-gitops.yaml.j2') | from_yaml }}"
  retries: 10
  delay: 30
  ignore_errors: true
  register: openshift_gitops_result
  until: openshift_gitops_result is not failed

- name: Print openshift_gitops_result from the previous task
  ansible.builtin.debug:
    var: openshift_gitops_result

- name: Remove memory limit for ArgoCD controller
  when: ocp4_workload_platform_engineering_workshop_openshift_gitops_controller_remove_memory_limits | bool
  kubernetes.core.k8s_json_patch:
    api_version: argoproj.io/v1beta1
    kind: ArgoCD
    name: openshift-gitops
    namespace: openshift-gitops
    patch:
      - op: remove
        path: /spec/controller/resources/limits/memory
  retries: 10
  delay: 30
  ignore_errors: true
  register: openshift_gitops_rm_mem_result
  until: openshift_gitops_rm_mem_result is not failed


- name: Retrieve openshift-gitops-cluster secret
  kubernetes.core.k8s_info:
    api_version: "v1"
    kind: Secret
    name: openshift-gitops-cluster
    namespace: openshift-gitops
  register: r_secret
  until:
    - r_secret is defined
    - r_openshift_gitops.resources is defined
    - r_openshift_gitops.resources | length == 1
  retries: 10
  delay: 30

- name: Get openshift_gitops_admin_password
  ansible.builtin.set_fact:
    openshift_gitops_admin_password: "{{ r_secret.resources[0]['data']['admin.password'] |string |b64decode }}"

- name: Print Access information
  agnosticd_user_info:
    data:
      openshift_gitops_user: "admin"
      openshift_gitops_password: "{{ openshift_gitops_admin_password }}"