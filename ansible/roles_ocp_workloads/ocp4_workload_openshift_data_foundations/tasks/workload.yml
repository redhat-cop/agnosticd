---
- name: Setting up workload
  debug:
    msg: "Setting up OpenShift Data Foundation"

- name: Discovering worker nodes
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
    - node-role.kubernetes.io/worker
  register: r_worker_nodes

- name: Fail for less than 3 worker nodes
  when: r_worker_nodes.resources | length < 3
  fail:
    msg: "Less than 3 worker nodes detected. Cannot install Ceph..."

- name: Set variables
  set_fact:
    _ceph_worker_nodes: "{{ r_worker_nodes | json_query('resources[*].metadata.name') }}"

- name: Adding Ceph labels to worker nodes
  shell: "oc label nodes --overwrite {{ item }} cluster.ocs.openshift.io/openshift-storage=''"
  loop: "{{ _ceph_worker_nodes }}"

- name: Install Operator
  include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: "{{ ocp4_workload_openshift_data_foundations_operator_name }}"
    install_operator_namespace: "{{ ocp4_workload_openshift_data_foundations_namespace }}"
    install_operator_catalog: redhat-operators
    install_operator_csv_nameprefix: "{{ ocp4_workload_openshift_data_foundations_operator_csv_prefix }}"
    install_operator_channel: "{{ ocp4_workload_openshift_data_foundations_channel }}"
    install_operator_automatic_install_plan_approval: "{{ ocp4_workload_openshift_data_foundations_automatic_install_plan_approval | default(true) }}"
    install_operator_manage_namespaces:
    - "{{ ocp4_workload_openshift_data_foundations_namespace }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_openshift_data_foundations_catalogsource_setup | default(false)}}"
    install_operator_catalogsource_name: "{{ ocp4_workload_openshift_data_foundations_catalogsource_name | default('') }}"
    install_operator_catalogsource_image: "{{ ocp4_workload_openshift_data_foundations_catalogsource_image | default('') }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_openshift_data_foundations_catalogsource_image_tag | default('') }}"

- name: Wait for Storage CRD's to exist
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ item }}"
    wait: true
    wait_condition:
      reason: InitialNamesAccepted
      status: 'True'
      type: Established
    wait_sleep: 5
    wait_timeout: 120
  loop: "{{ ocp4_workload_openshift_data_foundations_expected_crds }}"

- name: Create ODF Storage System
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'storagesystem.yaml.j2') }}"

- name: Create ODF Storage Cluster
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'storagecluster.yaml.j2') }}"

- name: Wait for ODF Storage System to finish deploying
  kubernetes.core.k8s_info:
    api_version: odf.openshift.io/v1alpha1
    kind: StorageSystem
    name: ocs-storagecluster-storagesystem
    namespace: "{{ ocp4_workload_openshift_data_foundations_namespace }}"
    wait: true
    wait_condition:
      reason: ReconcileCompleted
      status: 'True'
      type: Available
    wait_sleep: 10
    wait_timeout: 360

- name: Wait for ODF Storage Cluster to finish deploying
  kubernetes.core.k8s_info:
    api_version: ocs.openshift.io/v1
    kind: StorageCluster
    name: ocs-storagecluster
    namespace: "{{ ocp4_workload_openshift_data_foundations_namespace }}"
    wait: true
    wait_condition:
      reason: ReconcileCompleted
      status: "True"
      type: ReconcileComplete
    wait_sleep: 10
    wait_timeout: 360

- name: Update default storage class
  when: ocp4_workload_openshift_data_foundations_update_default_storage_class | bool
  block:
  - name: Remove annotation from current default storage class
    command:
      cmd: >-
        oc annotate sc {{ ocp4_workload_openshift_data_foundations_old_default_storage_class_name }}
        storageclass.kubernetes.io/is-default-class-
    ignore_errors: true

  - name: Set new default storage class
    command:
      cmd: >-
        oc annotate sc {{ ocp4_workload_openshift_data_foundations_new_default_storage_class_name }}
        storageclass.kubernetes.io/is-default-class="true"
    ignore_errors: true

- name: Deploy Ceph toolbox
  when: ocp4_workload_openshift_data_foundations_install_toolbox | bool
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'toolbox.yaml.j2') }}"

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
