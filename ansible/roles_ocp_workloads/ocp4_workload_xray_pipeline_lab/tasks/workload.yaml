---
- name: Installing OpenDataHub operator
  import_tasks: ./odh-operator.yaml
  become: false
  when: (ACTION == "create" or ACTION == "provision") and ocp4_workload_xray_pipeline_lab_install_odh_operator  # yamllint disable-line rule:line-length

# Patch for bug https://bugzilla.redhat.com/show_bug.cgi?id=1981832
- name: Installing AMQ Streams operator
  import_tasks: ./amqstreams-operator.yaml
  become: false
  when: (ACTION == "create" or ACTION == "provision")

- name: Install Minimal OpenDataHub
  import_tasks: ./odh.yaml
  become: false
  when: (ACTION == "create" or ACTION == "provision") and ocp4_workload_xray_pipeline_lab_install_odh  # yamllint disable-line rule:line-length

- name: "Create JupyterHub ConfigMap in ODH user project"
  k8s:
    state: present
    definition: "{{ lookup('template', 'odh/odh_base_nb_cm.yaml.j2') }}"
  vars:
    namespace: opendatahub
  when: (ACTION == "create" or ACTION == "provision") and ocp4_workload_xray_pipeline_lab_install_odh  # yamllint disable-line rule:line-length

- name: Installing KNative KafkaSource
  import_tasks: ./knative-kafkasource.yaml
  become: false
  when: (ACTION == "create" or ACTION == "provision") and ocp4_workload_xray_pipeline_lab_install_kafkasource  # yamllint disable-line rule:line-length

- name: Setting up workload for users
  debug:
    msg: "Setting up workload for {{ ocp4_workload_xray_pipeline_lab_user_count }} users"  # yamllint disable-line rule:line-length

- include_tasks: per_user_workload.yaml
  loop: "{{ range(1, 1 + (ocp4_workload_xray_pipeline_lab_user_count | int)) | list }}"  # yamllint disable-line rule:line-length
  loop_control:
    loop_var: t_user_num
  vars:
    t_user: "{{ocp4_workload_xray_pipeline_lab_user_base}}{{ t_user_num }}"
    t_user_project: "{{ocp4_workload_xray_pipeline_lab_user_base}}{{ t_user_num }}"  # yamllint disable-line rule:line-length

- include_tasks: demo_user_workload.yaml
  vars:
    t_user: "{{ocp4_workload_xray_pipeline_lab_user_base}}1"
    t_user_project: "{{ocp4_workload_xray_pipeline_lab_user_base}}1"

- name: Get RGW route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: openshift-storage
    name: s3-rgw
  register: r_rgw_url_external

- name: Get Web Console route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: openshift-console
    name: console
  register: r_console_route

- name: Get Demo bookbag route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: "bookbag-{{ocp4_workload_xray_pipeline_lab_user_base}}1"
    name: bookbag
  register: r_rdemo_bookbag_url

- name: Set agnosticd_user_info
  agnosticd_user_info:
    msg: >
      "OCP Web Console Route is: {{ web_console_url }}"
      "RGW External Route is: {{ rgw_route }}"
      "A demo project has fully been deployed for the user: {{ demo_project }}"
      "Demo bookbag is accessible at: {{ demo_bookbag_url }}"
  vars:
    web_console_url: "https://{{ r_console_route.resources[0].spec.host }}"
    rgw_route: "https://{{ r_rgw_url_external.resources[0].spec.host }}"
    demo_project: "{{ocp4_workload_xray_pipeline_lab_user_base}}1"
    demo_bookbag_url: "https://{{ r_rdemo_bookbag_url.resources[0].spec.host }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
