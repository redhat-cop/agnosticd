---
- name: Setting up full demo workload for first user
  debug:
    msg: "Setting up full demo workload for user {{ t_user }}"

- name: Get RGW route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: openshift-storage
    name: s3-rgw
  register: rgw_url_external

- name: Set up buckets
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/01_demo_user_init.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"
    aws_access_key_id: "{{ aws_access_key_id }}"
    aws_secret_access_key: "{{ aws_secret_access_key }}"

- name: Set up CM
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/02_config-maps.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"
    url: "http://rook-ceph-rgw-ocs-storagecluster-cephobjectstore.openshift-storage.svc.cluster.local"
    url_external: "https://{{ rgw_url_external.resources[0].spec.host }}"
    bucket_base_name: "{{ t_user_project }}"

- name: Set up Secrets
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/03_secrets.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"
    database_user: xraylab
    database_password: xraylab
    database_root_password: xraylab

- name: Set up Database
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/04_dc-xraydb.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Image Streams
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/05_image-streams.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Kafka Cluster
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/06_kafka-cluster.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Kafdrop
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/07_kafdrop.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Kafka Topic
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/08_topics.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Image Server
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/09_dc-image-server.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Risk Assessment Service
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/10_service-risk-assessment.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Wait for Risk Assessment Service to be ready
  kubernetes.core.k8s_info:
    api_version: serving.knative.dev/v1
    kind: Service
    name: risk-assessment
    namespace: "{{ t_user_project }}"
    wait: true
    wait_condition:
      status: 'True'
      type: Ready
    wait_sleep: 5
    wait_timeout: 360

- name: Set up KafkaSource
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/11_kafkasource-risk-assessment.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Image Generator
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/12_dc-image-generator.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Set up Grafana MySQL DataSource
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/15_grafana-mysql-datasource.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Get Image Server route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    namespace: "{{ t_user_project }}"
    name: image-server
  register: image_server_route
  retries: 30
  delay: 10
  until: image_server_route|length > 0
  ignore_errors: false

- name: Set up Grafana Images Dashboard
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/16_grafana-xraylab-images-dashboard-template.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"
    image_server_url: "https://{{ image_server_route.resources[0].spec.host }}"
    bucket_base_name: "{{ t_user_project }}"

- name: Set up Grafana Main Dashboard
  k8s:
    state: present
    definition: "{{ lookup('template', 'demo/17_grafana-xraylab-dashboard-template.yaml.j2') | from_yaml_all | list }}"
  vars:
    namespace: "{{ t_user_project }}"
    image_server_url: "https://{{ image_server_route.resources[0].spec.host }}"
    bucket_base_name: "{{ t_user_project }}"


# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
