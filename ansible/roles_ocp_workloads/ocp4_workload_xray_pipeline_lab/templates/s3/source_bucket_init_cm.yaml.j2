---
kind: ConfigMap
apiVersion: v1
metadata:
  name: bucket-init
  namespace: '{{ namespace }}'
data:
  bucket-init.py: |
    import os
    import boto3
    import json
    import botocore
    import argparse

    namespace = '{{ namespace }}'
    bucket_base_name = '{{ BUCKET_SOURCE }}'
    aws_access_key_id = '{{ AWS_ACCESS_KEY_ID }}'
    aws_secret_access_key = '{{ AWS_SECRET_ACCESS_KEY }}'
    endpoint_url = '{{ SERVICE_POINT }}'

    s3 = boto3.client('s3',
                    endpoint_url = endpoint_url,
                    aws_access_key_id = aws_access_key_id,
                    aws_secret_access_key = aws_secret_access_key,
                    region_name = 'default',
                    config=botocore.client.Config(signature_version = 's3'))

    def create_bucket(bucket_name):
        result = s3.create_bucket(Bucket=bucket_name)
        return result

    create_bucket(bucket_base_name)

    for bucket in s3.list_buckets()['Buckets']:
        bucket_policy = {
                        "Version":"2012-10-17",
                        "Statement":[
                            {
                            "Sid":"AddPerm",
                            "Effect":"Allow",
                            "Principal": "*",
                            "Action":["s3:GetObject"],
                            "Resource":["arn:aws:s3:::{0}/*".format(bucket['Name'])]
                            },
                            {
                            "Sid":"AddPerm",
                            "Effect":"Allow",
                            "Principal": "*",
                            "Action":["s3:ListBucket"],
                            "Resource":["arn:aws:s3:::{0}".format(bucket['Name'])]
                            }
                        ]
                        }
        bucket_policy = json.dumps(bucket_policy)
        s3.put_bucket_policy(Bucket=bucket['Name'], Policy=bucket_policy)
