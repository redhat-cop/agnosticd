---
- name: Print debug statement
  ansible.builtin.debug:
    msg: "Creating cluster {{ _ocp4_workload_rhacm_hypershift_cluster_name }}."

- name: Wait for HostedCluster CRD to be registered
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: hostedclusters.hypershift.openshift.io
  register: r_crd
  retries: 60
  delay: 30
  until: r_crd.resources | length | int > 0

- name: Include AWS Role Prep for OCP >= 4.17
  when:
    - ocp4_installer_version is version('4.17', '>=')
  include_tasks: prep_aws_roles.yaml

- name: Ensure hosted cluster doesn't already exist
  kubernetes.core.k8s_info:
    api_version: hypershift.openshift.io/v1beta1
    kind: HostedCluster
    name: "{{ _ocp4_workload_rhacm_hypershift_cluster_name }}"
    namespace: local-cluster
  register: r_hosted_cluster

- name: Deploy hosted cluster (OCP >= 4.17) {{ _ocp4_workload_rhacm_hypershift_cluster_name }}
  when:
    - r_hosted_cluster.resources | length == 0
    - ocp4_installer_version is version('4.17', '>=')
  block:
    - name: Run hcp CLI to deploy hosted cluster (OCP >= 4.17)
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
        AWS_REGION: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
      ansible.builtin.command: >-
        /usr/bin/hcp create cluster aws
          --auto-repair
          --control-plane-availability-policy {{ _ocp4_workload_rhacm_hypershift_cluster_control_plane_availability }}
          --etcd-storage-class {{ _ocp4_workload_rhacm_hypershift_cluster_etc_storage_class }}
          --infra-availability-policy {{ _ocp4_workload_rhacm_hypershift_cluster_infra_availability }}
          --infra-id {{ _ocp4_workload_rhacm_hypershift_cluster_infra_id }}
          --instance-type {{ _ocp4_workload_rhacm_hypershift_cluster_worker_instance_type }}
          --name {{ _ocp4_workload_rhacm_hypershift_cluster_name }}
          --namespace local-cluster
          --network-type {{ _ocp4_workload_rhacm_hypershift_cluster_network_type }}
          --node-pool-replicas {{ _ocp4_workload_rhacm_hypershift_cluster_nodepool_replicas }}
          --region {{ _ocp4_workload_rhacm_hypershift_cluster_region }}
          --release-image quay.io/openshift-release-dev/ocp-release:{{ _ocp4_workload_rhacm_hypershift_cluster_ocp_release }}-multi
          --root-volume-size {{ _ocp4_workload_rhacm_hypershift_cluster_root_volume_size }}
          --root-volume-type {{ _ocp4_workload_rhacm_hypershift_cluster_root_volume_type }}
          --zones {{ _ocp4_workload_rhacm_hypershift_cluster_zones | join(',') }}
          --role-arn "{{ r_role_arn.stdout }}"
          --sts-creds /tmp/sts-creds.json
          --pull-secret /tmp/pull_secret.json
          --base-domain "{{ subdomain_base_suffix | regex_replace('^\.', '') }}"
          --endpoint-access=Public
          --generate-ssh
      register: r_hcp_create_cluster
      ignore_errors: true

    - name: Print hcp command output
      ansible.builtin.debug:
        msg: "{{ r_hcp_create_cluster.stdout }}"

    - name: Abort
      when: r_hcp_create_cluster.rc > 0
      ansible.builtin.fail:
        msg: "Cluster creation failed. Aborting."

- name: Deploy hosted cluster (OCP <= 4.16) {{ _ocp4_workload_rhacm_hypershift_cluster_name }}
  when:
    - r_hosted_cluster.resources | length == 0
    - ocp4_installer_version is version('4.17', '<')
  block:
    - name: Run hcp CLI to deploy hosted cluster (OCP <= 4.16)
      ansible.builtin.command: >-
        /usr/bin/hcp create cluster aws
          --name {{ _ocp4_workload_rhacm_hypershift_cluster_name }}
          --infra-id {{ _ocp4_workload_rhacm_hypershift_cluster_infra_id }}
          --region {{ _ocp4_workload_rhacm_hypershift_cluster_region }}
          --zones {{ _ocp4_workload_rhacm_hypershift_cluster_zones | join(',') }}
          --instance-type {{ _ocp4_workload_rhacm_hypershift_cluster_worker_instance_type }}
          --root-volume-type {{ _ocp4_workload_rhacm_hypershift_cluster_root_volume_type }}
          --root-volume-size {{ _ocp4_workload_rhacm_hypershift_cluster_root_volume_size }}
          --etcd-storage-class {{ _ocp4_workload_rhacm_hypershift_cluster_etc_storage_class }}
          --control-plane-availability-policy {{ _ocp4_workload_rhacm_hypershift_cluster_control_plane_availability }}
          --infra-availability-policy {{ _ocp4_workload_rhacm_hypershift_cluster_infra_availability }}
          --network-type {{ _ocp4_workload_rhacm_hypershift_cluster_network_type }}
          --release-image quay.io/openshift-release-dev/ocp-release:{{ _ocp4_workload_rhacm_hypershift_cluster_ocp_release }}-x86_64
          --node-pool-replicas {{ _ocp4_workload_rhacm_hypershift_cluster_nodepool_replicas }}
          --namespace local-cluster
          --secret-creds aws-credentials
          --auto-repair
      register: r_hcp_create_cluster
      ignore_errors: true

    - name: Print hcp command output
      ansible.builtin.debug:
        msg: "{{ r_hcp_create_cluster.stdout }}"

    - name: Abort
      when: r_hcp_create_cluster.rc > 0
      ansible.builtin.fail:
        msg: "Cluster creation failed. Aborting."

- name: Create managed cluster to add cluster to ACM
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'managed-cluster.yaml.j2') | from_yaml }}"

- name: Create klusterlet-addon-config to allow policy deployment
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'klusterlet-addon-config.yaml.j2') | from_yaml }}"
