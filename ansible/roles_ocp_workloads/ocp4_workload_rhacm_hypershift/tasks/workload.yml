---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  ansible.builtin.debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

#############################################################################
# Prerequisite Checks
#############################################################################

- name: Ensure RHACM MultiClusterHub is deployed
  kubernetes.core.k8s_info:
    api_version: operator.open-cluster-management.io/v1
    kind: MultiClusterHub
    name: multiclusterhub
    namespace: open-cluster-management
  register: r_rhacm_multiclusterhub

- name: Assert that MultiClusterHub is available
  ansible.builtin.assert:
    that:
    - r_rhacm_multiclusterhub.resources | length == 1
    - r_rhacm_multiclusterhub.resources[0].status.phase is defined
    - r_rhacm_multiclusterhub.resources[0].status is defined
    - r_rhacm_multiclusterhub.resources[0].status.phase == "Running"
    fail_msg: "MultiClusterHub not found on cluster. Can not continue."
    success_msg: "MultiClusterHub found on cluster. Ready to set up Hypershift."

#############################################################################
# AWS S3 bucket setup
#############################################################################

# WK Note: amazon.aws.s3_bucket does not work because of k8s virtualenv
#          depencies unmet.
- name: Create AWS S3 bucket
  # amazon.aws.s3_bucket:
  s3_bucket:
    name: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_name }}"
    region: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
    state: present
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    # public_access:
    #   block_public_acls: false
    #   block_public_policy: false
    #   ignore_public_acls: true
    #   restrict_public_buckets: false

#############################################################################
# Enable HyperShift Tech Preview
#############################################################################
- name: Enable HyperShift Tech Preview
  kubernetes.core.k8s:
    state: patched
    api_version: multicluster.openshift.io/v1
    kind: MultiClusterEngine
    name: multiclusterengine
    definition:
      spec:
        overrides:
          components:
          - name: hypershift-preview
            enabled: true

- name: Update ManagedCluster properties and add ManagedClusterAddon
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', item) }}"
  loop:
  - managedcluster.yaml
  - managedclusteraddon.yaml

#############################################################################
# Configure HyperShift
#############################################################################

- name: Create hypershift namespace and s3 credentials secret
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
  loop:
  - namespace-hypershift.yaml.j2
  - secret-s3-credentials.yaml.j2

- name: Generate an OpenSSH keypair for HyperShift
  community.crypto.openssh_keypair:
    path: "~{{ ansible_user }}/.ssh/{{ ocp4_workload_rhacm_key_pair_name }}"
  register: r_hypershift_key

- name: Read private key from filesystem
  ansible.builtin.slurp:
    src: "~{{ ansible_user }}/.ssh/{{ ocp4_workload_rhacm_key_pair_name }}"
  register: r_hypershift_private_key

- name: Read public key from filesystem
  ansible.builtin.slurp:
    src: "~{{ ansible_user }}/.ssh/{{ ocp4_workload_rhacm_key_pair_name }}.pub"
  register: r_hypershift_public_key

- name: Create hypershift aws credentials secret
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'secret-aws-credentials.yaml.j2') }}"

#############################################################################
# Deploy managed HyperShift clusters
#############################################################################

- name: Deploy Hypershift clusters
  when: ocp4_workload_rhacm_hypershift_deploy_clusters | length > 0
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'hypershift-deployment.yaml.j2') }}"
  vars:
    _ocp4_workload_rhacm_hypershift_cluster_name: "{{ item.name }}"
    _ocp4_workload_rhacm_hypershift_cluster_ocp_release: "{{ item.ocp_release }}"
    _ocp4_workload_rhacm_hypershift_cluster_worker_count: "{{ item.worker_count }}"
    _ocp4_workload_rhacm_hypershift_cluster_worker_instance_type: "{{ item.worker_instance_type }}"
    _ocp4_workload_rhacm_hypershift_cluster_network_type: "{{ item.network_type | default('OVNKubernetes') }}"
    _ocp4_workload_rhacm_hypershift_cluster_machine_cidr: "{{ item.machine_cidr | default('10.0.0.0/16') }}"
    _ocp4_workload_rhacm_hypershift_cluster_pod_cidr: "{{ item.pod_cidr | default('10.132.0.0/14') }}"
    _ocp4_workload_rhacm_hypershift_cluster_service_cidr: "{{ item.service_cidr | default('172.31.0.0/16') }}"
    _ocp4_workload_rhacm_hypershift_cluster_region: "{{ item.region }}"
    _ocp4_workload_rhacm_hypershift_cluster_zones: "{{ item.zones | default([]) }}"
  loop: "{{ ocp4_workload_rhacm_hypershift_deploy_clusters }}"
  loop_control:
    label: "{{ item.name }}"

#############################################################################
# AgnosticD User Data
#############################################################################

- name: Save access information for all deployed clusters
  when: ocp4_workload_rhacm_hypershift_deploy_clusters | length > 0
  ansible.builtin.include_tasks:
    file: get_cluster_credentials.yml
  vars:
    _ocp4_workload_rhacm_hypershift_cluster_name: "{{ item.name }}"
  loop: "{{ ocp4_workload_rhacm_hypershift_deploy_clusters }}"
  loop_control:
    label: "{{ item.name }}"

- name: Save user data for S3 bucket
  agnosticd_user_info:
    data:
      hypershift_s3_bucket_name: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_name }}"
      hypershift_s3_region: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
      hypershift_s3_access_key_id: "{{ aws_access_key_id }}"
      hypershift_s3_secret_access_key: "{{ aws_secret_access_key }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
