- name: Get ARN for hosted cluster user
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_REGION: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
  ansible.builtin.command:
    cmd: >-
      aws sts get-caller-identity --query "Arn"
  register: r_arn

- name: Debug r_arn
  ansible.builtin.debug:
    msg: "{{ r_arn.stdout }}"

- name: Create trust-relationship.json
  ansible.builtin.template:
    src: trust-relationship.json.j2
    dest: /tmp/trust-relationship.json
    mode: "0664"

- name: Apply trust-relationship.json
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_REGION: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
  ansible.builtin.command:
    chdir: /tmp
    cmd: >-
      aws iam create-role
        --role-name hcp-cli-role
        --assume-role-policy-document file://trust-relationship.json
        --query "Role.Arn"
  ignore_errors: true

- name: Get trust-relationship.json Arn
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_REGION: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
  ansible.builtin.command:
    chdir: /tmp
    cmd: >-
      aws iam get-role
        --role-name hcp-cli-role
        --query "Role.Arn"
  register: r_role_arn
  ignore_errors: true

- name: Debug r_role_arn
  ansible.builtin.debug:
    msg: "{{ r_role_arn.stdout }}"

- name: Create awspolicy-hcp-cli-role.json
  ansible.builtin.template:
    src: awspolicy-hcp-cli-role.json.j2
    dest: /tmp/awspolicy-hcp-cli-role.json
    mode: "0664"

- name: Apply awspolicy-hcp-cli-role.json
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_REGION: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
  ansible.builtin.command:
    chdir: /tmp
    cmd: >-
      aws iam put-role-policy
       --role-name hcp-cli-role
       --policy-name trust-relationship.json
       --policy-document file://awspolicy-hcp-cli-role.json
  ignore_errors: true

- name: Get STS credentials
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_REGION: "{{ ocp4_workload_rhacm_hypershift_s3_bucket_region }}"
  ansible.builtin.shell:
    chdir: /tmp
    cmd: >-
      aws sts get-session-token --output json > sts-creds.json
  register: r_sts

- name: Write pull secret to a file
  ansible.builtin.copy:
    content: "{{ ocp4_pull_secret }}"
    dest: /tmp/pull_secret.json
