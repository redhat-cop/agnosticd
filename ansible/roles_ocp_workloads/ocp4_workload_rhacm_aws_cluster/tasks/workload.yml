---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- when: set_aws_acm_secret is defined
  environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
  block:
    - name: Include aws cluster object tasks
      include: cluster.yml
      loop: "{{ acm_aws_clusters }}"

    - name: set default kubeconfig
      set_fact:
        bash_managed_cluster_kconf: ~/.kube/config

    - name: Include cluster kconf tasks
      include: cluster_kconf.yml
      loop: "{{ acm_aws_clusters }}"

    - name: Inset variable in .bashrc
      lineinfile:
        path: "~/.bashrc"
        regexp: 'export KUBECONFIG.*'
        line: export KUBECONFIG={{ bash_managed_cluster_kconf }}

    - name: Inset variable in .bashrc
      become: true
      lineinfile:
        path: "/home/{{ student_name }}/.bashrc"
        regexp: 'export KUBECONFIG.*'
        line: export KUBECONFIG={{ bash_managed_cluster_kconf }}

    - name: Print Access information
      agnosticd_user_info:
        msg: "{{ item }}"
      loop:
        - ""
        - "=============================================================="
        - ""
        - "To get list of clusters: oc config get-contexts"
        - "To switch between clusters: oc config use-context [NAME]"
        - ""
        - "=============================================================="
        - ""

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
