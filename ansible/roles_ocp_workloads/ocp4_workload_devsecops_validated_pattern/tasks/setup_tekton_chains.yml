---
- name: Create signing secret
  shell: |
    cd /tmp
    wget "https://github.com/sigstore/cosign/releases/download/v2.0.0/cosign-linux-amd64"
    sudo mv cosign-linux-amd64 /usr/local/bin/cosign
    sudo chmod +x /usr/local/bin/cosign
    cosign login -u {{ ocp4_workload_devsecops_validated_pattern_docker_username }} -p {{
     ocp4_workload_devsecops_validated_pattern_docker_password }} {{
      ocp4_workload_devsecops_validated_pattern_docker_registry }}
    COSIGN_PASSWORD={{ ocp4_workload_devsecops_validated_pattern_cosign_password }} \
    cosign generate-key-pair k8s://openshift-pipelines/signing-secrets

- name: Retrieve cosign public key
  run_once: true
  fetch:
    src: /tmp/cosign.pub
    dest: /tmp/cosign.pub
    flat: yes
    fail_on_missing: yes

- name: Create Tekton Chains CRD
  k8s:
    state: present
    definition: "{{ lookup('file',  'tekton-chains.yaml' ) | from_yaml }}"

- name: Check if Tekton Chains is ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: tekton-chains-controller
    namespace: openshift-pipelines
  register: r_chains_controller
  retries: 120
  delay: 10
  until:
  - r_chains_controller.resources | length > 0
  - r_chains_controller.resources[0].status is defined
  - r_chains_controller.resources[0].status.readyReplicas is defined
  - r_chains_controller.resources[0].status.readyReplicas > 0