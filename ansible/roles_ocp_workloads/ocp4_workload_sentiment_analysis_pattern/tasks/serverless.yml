---

- name: Install Operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: "{{ serverless_operator_name }}"
    install_operator_namespace: "{{ serverless_operator_namespace }}"
    install_operator_channel: "{{ serverless_operator_channel }}"
    install_operator_csv_nameprefix: "{{ serverless_operator_csv_prefix }}"
    install_operator_catalog: "{{ serverless_operator_catalog }}"
    install_operator_automatic_install_plan_approval:
      "{{ serverless_operator_automatic_install_plan_approval | default(true) }}"
    install_operator_starting_csv: "{{ serverless_operator_starting_csv }}"
    install_operator_catalogsource_setup: "{{ serverless_operator_use_catalog_snapshot | default(false) }}"
    install_operator_catalogsource_name: "{{ serverless_operator_catalogsource_name | default('') }}"
    install_operator_catalogsource_namespace: openshift-operators
    install_operator_catalogsource_image: "{{ serverless_operator_catalog_snapshot_image | default('') }}"
    install_operator_catalogsource_image_tag:
      "{{ serverless_operator_catalog_snapshot_image_tag | default('') }}"

- name: Create namespaces for knative-serving and knative-eventing
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'namespace.yaml.j2') }}"
  vars:
    r_namespaces:
      - name: "{{ serverless_serving_namespace }}"
      - name: "{{ serverless_eventing_namespace }}"
  retries: 10
  delay: 30

- name: Create Serverless CRs
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
    - knative-serving.yaml.j2
    - knative-eventing.yaml.j2

- name: Wait until KNative Serving installation is complete
  when: serverless_serving_wait_for_deploy | bool
  kubernetes.core.k8s_info:
    api_version: operator.knative.dev/v1beta1
    kind: KnativeServing
    name: "{{ serverless_serving_name }}"
    namespace: "{{ serverless_serving_namespace }}"
  register: r_kn_serving
  retries: 30
  delay: 10
  until:
    - r_kn_serving.resources[0].status.conditions[0].status is defined
    - r_kn_serving.resources[0].status.conditions[0].status == "True"
    - r_kn_serving.resources[0].status.conditions[1].status is defined
    - r_kn_serving.resources[0].status.conditions[1].status == "True"
    - r_kn_serving.resources[0].status.conditions[2].status is defined
    - r_kn_serving.resources[0].status.conditions[2].status == "True"
    - r_kn_serving.resources[0].status.conditions[3].status is defined
    - r_kn_serving.resources[0].status.conditions[3].status == "True"
    - r_kn_serving.resources[0].status.conditions[4].status is defined
    - r_kn_serving.resources[0].status.conditions[4].status == "True"

- name: Wait until KNative Eventing installation is complete
  when: serverless_eventing_wait_for_deploy | bool
  kubernetes.core.k8s_info:
    api_version: operator.knative.dev/v1beta1
    kind: KnativeEventing
    name: "{{ serverless_eventing_name }}"
    namespace: "{{ serverless_eventing_namespace }}"
  register: r_kn_eventing
  retries: 30
  delay: 10
  until:
    - r_kn_eventing.resources[0].status.conditions[0].status is defined
    - r_kn_eventing.resources[0].status.conditions[0].status == "True"
    - r_kn_eventing.resources[0].status.conditions[1].status is defined
    - r_kn_eventing.resources[0].status.conditions[1].status == "True"
    - r_kn_eventing.resources[0].status.conditions[2].status is defined
    - r_kn_eventing.resources[0].status.conditions[2].status == "True"
    - r_kn_eventing.resources[0].status.conditions[3].status is defined
    - r_kn_eventing.resources[0].status.conditions[3].status == "True"
    - r_kn_eventing.resources[0].status.conditions[4].status is defined
    - r_kn_eventing.resources[0].status.conditions[4].status == "True"
