---
# Implement your Workload removal tasks here

# Get the OpenShift cluster ID
- name: Get the OpenShift cluster ID
  shell: oc get -o jsonpath='{.status.infrastructureName}' infrastructure cluster
  register: cluster_id

# Get the region for the cluster
- name: Get the region for the cluster
  shell: oc get machineset -n openshift-machine-api -o jsonpath='{.items[0].spec.template.spec.providerSpec.value.placement.region}'
  register: cluster_region

# Get the first availability zone for the cluster
- name: Get the first availability zone for the cluster
  shell: oc get machineset -n openshift-machine-api -o jsonpath='{.items[0].spec.template.spec.providerSpec.value.placement.availabilityZone}'
  register: cluster_az

# Get the latest Windows Server 2019 with Containers AMI
- name: Get the latest Windows Server 2019 with Containers AMI
  shell: >
    aws ec2 describe-images --region={{ cluster_region.stdout }} --filters 'Name=name,Values=Windows_Server-2019*English*Full*Containers*' 'Name=is-public,Values=true' --query 'reverse(sort_by(Images, &CreationDate))[*].{name: Name, id: ImageId}' | jq -r '.[0].id'
  register: windows_ami

# Remove the Windows Node MachineSet
- name: Remove the Windows Node MachineSet
  k8s:
    state: absent 
    definition: "{{ lookup('template', 'windows-ms.j2' ) }}"

# Delete the Namespace for the Operator
- name: Delete the Namespace for the Operator
  k8s:
    state: absent
    definition: "{{ lookup('template', 'namespace.j2' ) }}"

# Remove catalog source
- name: Remove catalog source
  k8s:
    state: absent
    definition: "{{ lookup('template', 'catalogsource.j2' ) }}"

# Remove the Operator group
- name: Remove the Operator group
  k8s:
    state: absent
    definition: "{{ lookup('template', 'operatorgroup.j2' ) }}"

# Remove the Subscription
- name: Remove the Subscription
  k8s:
    state: absent
    definition: "{{ lookup('template', 'subscription.j2' ) }}"

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
