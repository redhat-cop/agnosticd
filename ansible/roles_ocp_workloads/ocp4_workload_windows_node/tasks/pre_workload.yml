---
# Implement your Pre Workload deployment tasks here

# Create various needed directories
- name: Create various needed directories
  file:
    path: "{{ item }}"
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0775'
  loop:
    - /tmp/windows_node_workload_backups

# Make backup copy of AWS Credentials file
- name: Make backup copy of AWS Credentials file
  copy:
    src: /home/ec2-user/.aws/credentials
    dest: /tmp/windows_node_workload_backups/aws_credentials
    owner: ec2-user
    group: ec2-user
    mode: '0664'
    remote_src: yes

# Extract the AWS access key from OpenShift
- name: Extract the AWS access key from OpenShift
  shell: oc get secret -n openshift-machine-api aws-cloud-credentials -o jsonpath='{.data.aws_access_key_id}' | base64 -d
  register: ocp_access_key

# Extract the AWS secret key from OpenShift
- name: Extract the AWS secret key from OpenShift
  shell: oc get secret -n openshift-machine-api aws-cloud-credentials -o jsonpath='{.data.aws_secret_access_key}' | base64 -d
  register: ocp_secret_key

# Configure the AWS access key from OpenShift into the credentials file
- name: Configure the AWS access key from OpenShift into the credentials file
  shell: aws configure set aws_access_key_id "{{ ocp_access_key.stdout }}"

# Configure the AWS secret key from OpenShift into the credentials file
- name: Configure the AWS secret key from OpenShift into the credentials file
  shell: aws configure set aws_secret_access_key "{{ ocp_secret_key.stdout }}"

# Leave this as the last task in the playbook.
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when: not silent|bool

##
##
