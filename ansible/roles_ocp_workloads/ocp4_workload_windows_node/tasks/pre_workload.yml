---
# Implement your Pre Workload deployment tasks here

# Create various needed directories
- name: Create various needed directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0775'
  loop:
    - /tmp/windows_node_workload_backups
    - "/home/{{ ansible_user }}/windows_node_scripts"

# Make backup copy of AWS Credentials file
- name: Make backup copy of AWS Credentials file
  copy:
    src: "/home/{{ ansible_user }}/.aws/credentials"
    dest: /tmp/windows_node_workload_backups/aws_credentials
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0664'
    remote_src: yes

# Extract the AWS access key from OpenShift
- name: Extract the AWS access key from OpenShift
  k8s_info:
    api_version: v1
    kind: Secret
    name: aws-cloud-credentials
    namespace: openshift-machine-api
  register: ocp_access_key_fact
  retries: 25
  delay: 5
  until:
    - ocp_access_key_fact.resources[0].data.aws_access_key_id is defined

# Convert extraced AWS access key into a decoded fact for later use
- name: Convert extraced AWS access key into a decoded fact for later use
  set_fact:
    ocp_access_key: "{{ ocp_access_key_fact.resources[0].data.aws_access_key_id | b64decode }}"

# Extract the AWS secret key from OpenShift
- name: Extract the AWS secret key from OpenShift
  k8s_info:
    api_version: v1
    kind: Secret
    name: aws-cloud-credentials
    namespace: openshift-machine-api
  register: ocp_secret_key_fact
  retries: 25
  delay: 5
  until:
    - ocp_secret_key_fact.resources[0].data.aws_secret_access_key is defined

# Convert extraced AWS secret key into a decoded fact for later use
- name: Convert extraced AWS secret key into a decoded fact for later use
  set_fact:
    ocp_secret_key: "{{ ocp_secret_key_fact.resources[0].data.aws_secret_access_key | b64decode }}"

# Remove existing AWS credentials file
- name: Remove existing AWS credentials file
  file:
    path: "/home/{{ ansible_user }}/.aws/credentials"
    state: absent

# Configure the AWS credentials file with the access key and secret key from OpenShift
- name: Configure the AWS credentials file with the access key and secret key from OpenShift
  when:
  - ocp_access_key | default("") | length > 0
  - ocp_secret_key | default("") | length > 0
  blockinfile:
    state: present
    path: "/home/{{ ansible_user }}/.aws/credentials"
    create: true
    insertbefore: BOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK AMI Search Credentials"
    block: |-
      [default]
      aws_access_key_id = {{ ocp_access_key }}
      aws_secret_access_key = {{ ocp_secret_key }}

# Leave this as the last task in the playbook.
- name: pre_workload tasks complete
  debug:
    msg: "Pre-Workload tasks completed successfully."
  when: not silent|bool

##
##
