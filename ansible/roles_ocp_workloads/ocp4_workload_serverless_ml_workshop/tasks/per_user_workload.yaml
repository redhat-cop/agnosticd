---
# Implement your Workload deployment tasks here

- name: Make sure project "{{ t_user_project }}" is there
  k8s:
    state: present
    name: "{{ t_user_project }}"
    kind: Project
    api_version: project.openshift.io/v1

- name: Make sure project {{ t_user_project }}-codeready is there
  k8s:
    state: present
    name: "{{ t_user_project }}-codeready"
    kind: Project
    api_version: project.openshift.io/v1

- name: Assign rbac roles to "{{ t_user }}"
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/rbac.j2' ) }}"
  vars:
    name: "{{ t_user }}"
    namespace: "{{ t_user_project }}"

- name: Create object volume claim for {{ t_user }}
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/objectbucketclaim.j2' ) }}"
  vars:
    namespace: "{{ t_user_project }}"

- name: Get workshop secret
  k8s_info:
    api_version: v1
    kind: Secret
    name: serverless-workshop-ml
    namespace: "{{ t_user_project }}"
  register: t_user_workshop_secret

- name: Get bucket name
  k8s_info:
    api_version: v1
    kind: ConfigMap
    name: serverless-workshop-ml
    namespace: "{{ t_user_project }}"
  register: t_user_workshop_cm

- name: Get ocs route
  k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: s3
    namespace: openshift-storage
  register: ocs_route

- name: Copy model to host
  get_url:
    url: https://github.com/RedHatGov/serverless-workshop-code/raw/main/model/model.pkl
    dest: /tmp/model.pkl

- name: Upload model for {{ t_user }}
  aws_s3:
    aws_access_key: "{{ t_user_workshop_secret.resources[0].data.AWS_ACCESS_KEY_ID | b64decode }}"
    aws_secret_key: "{{ t_user_workshop_secret.resources[0].data.AWS_SECRET_ACCESS_KEY | b64decode }}"
    bucket: "{{ t_user_workshop_cm.resources[0].data.BUCKET_NAME }}"
    mode: put
    object: model.pkl
    src: /tmp/model.pkl
    s3_url: "https://{{ ocs_route.resources[0].spec.host }}"
    rgw: true
  retries: 20
  delay: 20

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
