---
- name: Make sure openshift-storage project exists
  k8s:
    state: present
    name: openshift-storage
    kind: Project
    api_version: project.openshift.io/v1

- name: Create Catalog Source for use with catalog snapshot
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/catalogsource.j2' ) | from_yaml }}"
  vars:
    catalog_namespace: openshift-storage

- name: Create OCS subscription
  k8s:
    state: present
    definition: "{{ lookup('template', './templates/ocs_subscription.j2' ) }}"

- name: Wait until InstallPlan is created
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: openshift-storage
  register: r_install_plans
  vars:
    _query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'ocs')]
  retries: 30
  delay: 5
  until:
  - r_install_plans.resources | length > 0
  - r_install_plans.resources | to_json | from_json | json_query(_query)

- name: Set InstallPlan Name
  set_fact:
    ocp4_workload_serverless_ml_workshop_ocs_install_plan_name: "{{ r_install_plans.resources | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?starts_with(spec.clusterServiceVersionNames[0], 'ocs')].metadata.name|[0]

- name: Get InstallPlan
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan
    name: "{{ ocp4_workload_serverless_ml_workshop_ocs_install_plan_name }}"
    namespace: openshift-storage
  register: r_install_plan

- name: Approve InstallPlan if necessary
  when: r_install_plan.resources[0].status.phase is match("RequiresApproval")
  k8s:
    state: present
    definition: "{{ lookup( 'template', './templates/ocs_installplan.j2' ) }}"

- name: Get Installed CSV
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: ocs-operator
    namespace: openshift-storage
  register: r_subscription
  retries: 30
  delay: 5
  until:
  - r_subscription.resources[0].status.currentCSV is defined
  - r_subscription.resources[0].status.currentCSV | length > 0

- name: Wait until CSV is Installed
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ r_subscription.resources[0].status.currentCSV }}"
    namespace: openshift-storage
  register: r_csv
  retries: 60
  delay: 5
  until:
  - r_csv.resources[0].status.phase is defined
  - r_csv.resources[0].status.phase | length > 0
  - r_csv.resources[0].status.phase == "Succeeded"

- name: Get worker nodes
  k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
    - node-role.kubernetes.io/worker =
  register: r_nodes

- name: Label worker nodes for OCS
  command: oc label nodes {{ item.metadata.name }} cluster.ocs.openshift.io/openshift-storage='' --overwrite=true
  loop: "{{ r_nodes.resources }}"

- name: Get OCS nodes
  k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
    - cluster.ocs.openshift.io/openshift-storage =
  register: r_ocs_nodes

- name: Ensure at least 3 nodes are labeled for OCS
  fail:
    msg: Less than 3 nodes labeled for OCS
  when: r_ocs_nodes.resources | length < 3
