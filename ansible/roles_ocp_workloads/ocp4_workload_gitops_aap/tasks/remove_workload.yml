---
# Implement your Workload removal tasks here
- name: Ensure directory exists
  file:
    path: "{{ tmp_dir }}"
    state: directory

- name: Copy .kube/config and set env var
  copy:
    src: ~/.kube
    dest: "{{ tmp_dir }}"
    remote_src: true

- environment:
    KUBECONFIG: "{{ tmp_kubeconfig }}"
  block:
  - name: Remove argocd applications for workload
    k8s:
      state: absent
      api_version: "argoproj.io/v1alpha1"
      kind: Application
      name: "{{ item }}"
      namespace: openshift-gitops
    loop:
    - aap-controller
    - ansible-automation-platform

  - name: Remove OpenShift namespace for workload
    k8s:
      state: absent
      api_version: v1
      kind: Namespace
      name: ansible-automation-platform

- name: Remove temp kube config
  file:
    path: "{{ tmp_dir }}"
    state: absent

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent | bool
