---
- name: Set up automation controller - argocd
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template',  'aap-controller.yaml.j2' ) | from_yaml }}"

- name: Retrieve created controller route
  k8s_facts:
    api_version: "route.openshift.io/v1"
    kind: Route
    name: controller
    namespace: ansible-automation-platform
  register: r_ac_route
  until: r_ac_route.resources[0].spec.host is defined
  retries: 300
  delay: 30

- name: Retrieve aap secret
  k8s_facts:
    api_version: "v1"
    kind: Secret
    name: controller-admin-password
    namespace: ansible-automation-platform
  register: r_ac_secret
  until:
  - r_ac_secret.resources is defined
  - r_ac_secret.resources | length > 0
  - r_ac_secret.resources[0].data.password
  retries: 300
  delay: 30

- name: Get automation_controller route hostname
  set_fact:
    automation_controller_hostname: "{{ r_ac_route.resources[0].spec.host }}"
    automation_controller_admin_password: "{{ r_ac_secret.resources[0].data.password |string |b64decode }}"

- name: wait for automation_controller to be running
  uri:
    url: http://{{ automation_controller_hostname }}/api/v2/ping/
    status_code: 200
  register: result
  until: result.json.version is defined
  retries: 300
  delay: 30

- name: Pause for 5 minutes for AC to be ready
  pause:
    minutes: 5

- name: Display version
  debug:
    msg: "{{ result.json.version }}"
  when: not silent | bool

- name: Store Controller Access information
  agnosticd_user_info:
    user: admin
    data:
      ac_web_url: "https://{{ automation_controller_hostname }}"
      ac_user: "admin"
      ac_password: "{{ automation_controller_admin_password }}"
