---
# Implement your Workload deployment tasks here

- name: Install web terminal operator
  include_role:
    name: install_operator
  vars:
    install_operator_action: install
    install_operator_name: web-terminal
    install_operator_channel: "fast"
    install_operator_catalog: redhat-operators
    install_operator_use_catalog_snapshot: false

# modify the custom web terminal operator image
# only needed until the image with kustomize goes GA
- name: Modify the web terminal DevWorkspaceTemplate
  kubernetes.core.k8s:
    definition: "{{ lookup('file', 'devworkspacetemplate.yaml' ) | from_yaml }}"
    state: present

# deploy individual argo instances for users
- name: Deploy ArgoCD instances for users
  vars:
    _ocp4_workload_gitops_workshop_namespacename: >-
      user{{ item }}-argocd
    _ocp4_workload_gitops_workshop_argo_instance_name: >-
      user{{ item }}-argo
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'argocd_cr.yaml.j2' ) | from_yaml }}"
  loop: "{{ range(1, num_users | int + 1) | list }}"

- name: Wait for ArgoCD instances to successfully deploy
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: ArgoCD
    name: "user{{ item }}-argo"
    namespace: "user{{ item }}-argocd"
  loop: "{{ range(1, num_users | int + 1) | list }}"
  register: r_argo_cr
  retries: 10
  delay: 30
  until: r_argo_cr.resources[0].status.phase == "Available"

# label the workshop namespaces for argo
- name: Label user namespaces with argo ownership
  vars:
    _ocp4_workload_gitops_workshop_namespacename: >-
      user{{ item }}-argocd
    _ocp4_workload_gitops_workshop_argo_instance_name: >-
      user{{ item }}-argo
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yaml.j2' ) | from_yaml }}"
  loop: "{{ range(1, num_users | int + 1) | list }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
