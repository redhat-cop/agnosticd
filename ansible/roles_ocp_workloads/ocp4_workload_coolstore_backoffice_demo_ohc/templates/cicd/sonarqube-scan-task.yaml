apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: scan-code
spec:
  params:
    - default: 'docker.io/sonarsource/sonar-scanner-cli:latest'
      name: scanImage
      type: string
    - default: >-
        https://gitea.apps.cluster-tpn6s.sandbox2653.opentlc.com/dev-user/arc-model
      name: gitRepositoryUrl
      type: string
    - default: main
      name: gitRepositoryRevision
      type: string
    - default: https://sonarqube-sonarqube.apps.cluster-tpn6s.sandbox2653.opentlc.com/
      name: sonarqubeHostUrl
      type: string
    - default: object-detection-rest
      name: sonarqubeProjectKey
      type: string
    - default: object-detection-rest-sonarqube-secret
      name: sonarqubeProjectSecret
      type: string
    - default: 'true'
      name: verbose
      type: string
  steps:
    - image: 'alpine/git:v2.26.2'
      name: git-checkout
      resources: {}
      script: |
        #!/usr/bin/env sh

        set -eu -o pipefail

        if [[ "$(params.verbose)" == "true" ]] ; then
          set -x
          echo "**** Cloning $(params.gitRepositoryUrl) into $(pwd)/repository"
        fi

        git clone "$(params.gitRepositoryUrl)" $(pwd)/repository
        cd repository
        git checkout "$(params.gitRepositoryRevision)"
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
      workingDir: /workspace
    - args:
        - clean
        - compile
      command:
        - /usr/bin/mvn
      image: gcr.io/cloud-builders/mvn
      name: compile-maven
      resources: {}
      workingDir: /workspace/repository
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
    - env:
        - name: SONAR_TOKEN_WEB_UI
          valueFrom:
            secretKeyRef:
              key: token
              name: $(params.sonarqubeProjectSecret)
      image: $(params.scanImage)
      name: scan-code
      resources: {}
      script: >
        set -x

        echo $(ls -a)

        sonar-scanner -X -Dsonar.projectKey=$(params.sonarqubeProjectKey)
        -Dsonar.sources=./
        -Dsonar.host.url=$(params.sonarqubeHostUrl)
        -Dsonar.login=$SONAR_TOKEN_WEB_UI
        -Dsonar.java.binaries=./target/classes
      volumeMounts:
        - mountPath: /workspace/repository
          name: repository
      workingDir: /workspace/repository
  volumes:
    - emptyDir: {}
      name: repository