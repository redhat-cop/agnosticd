---
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

# To Do: Implement your workload deployment tasks here
# -------------------------------------------------------------------------

- set_fact:
    ocp4_workload_nginxplus_imagestream: "{{ ocp4_workload_nginxplus_image_name }}"

- name: create {{ ocp4_workload_nginxplus_namespace }} namespace/project
  kubernetes.core.k8s:
    name: "{{ ocp4_workload_nginxplus_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create secret for {{ ocp4_workload_nginxplus_base_url }}
  kubernetes.core.k8s:
    state: present
    template: nginx-registry-secret.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create imagestream
  kubernetes.core.k8s:
    state: present
    template: nginx-imagestream.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: get imageregistry url
  kubernetes.core.k8s_info:
    kind: ImageStream
    name: "{{ ocp4_workload_nginxplus_imagestream }}"
    namespace: "{{ ocp4_workload_nginxplus_namespace }}"
  register: ocp4_workload_nginxplus_imagestream_url

- name: set imageregistry url
  set_fact:
    # yamllint disable-line rule:line-length
    ocp4_workload_nginxplus_registry_url: "{{ ocp4_workload_nginxplus_imagestream_url.resources[0].status.dockerImageRepository }}"

- name: Create operatorgroup
  kubernetes.core.k8s:
    state: present
    template: nginx-operatorgroup.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create subscription
  kubernetes.core.k8s:
    state: present
    template: nginx-subscription.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create cluster role
  kubernetes.core.k8s:
    state: present
    template: nginx-cluster-role.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create cluster role binding
  kubernetes.core.k8s:
    state: present
    template: nginx-cluster-role-binding.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create tls secret
  kubernetes.core.k8s:
    state: present
    template: nginx-tls-secret.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

- name: Create SecurityContextConstraints
  kubernetes.core.k8s:
    state: present
    template: nginx-scc.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

# Resolves an issue with the image not being pulled down quickly from
# quay in some clusters when the incgress controller pod initialy starts
#
# Start
- name: Sleep for a bit before continuing to not hit quay all at once when many labs are deployed
  ansible.builtin.wait_for:
    timeout: "{{ 61 | random(10) }}"

- name: Create ingress controller
  kubernetes.core.k8s:
    state: present
    template: nginx-controller.j2
  register: result
  until: result is not failed
  retries: 10
  delay: 6

# This is probably too long for most pods but six minutes was still getting about 25%
# not coming up and causing an ImgPull error in the cluster
- name: Sleep for 10 minutes before continuing so ingress controller pod has time to start
  ansible.builtin.wait_for:
    timeout: 600

- name: Recreate {{ ocp4_workload_nginxplus_ic_instance_name }} pod to make sure it restarts
  kubernetes.core.k8s:
    kind: Pod
    namespace: "{{ ocp4_workload_nginxplus_namespace }}"
    label_selectors:
      - "app = {{ ocp4_workload_nginxplus_ic_instance_name }}-{{ ocp4_workload_nginxplus_namespace }}"
    state: absent
  retries: 30
  delay: 6
  ignore_errors: true

- name: Make sure {{ ocp4_workload_nginxplus_ic_instance_name }} pod is in running
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ ocp4_workload_nginxplus_namespace }}"
    label_selectors:
      - "app = {{ ocp4_workload_nginxplus_ic_instance_name }}-{{ ocp4_workload_nginxplus_namespace }}"
  register: ocp4_workload_nginxplus_pod_list
  until: ocp4_workload_nginxplus_pod_list.resources[0].status.phase == "Running"
  retries: 30
  delay: 6
  ignore_errors: true
# END
# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool